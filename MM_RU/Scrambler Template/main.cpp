/**********************************************
 * This code was generated by ksolve++ v1.0.0 *
 **********************************************/

#include <iostream>
#include <ctime>
#include <chrono>
#include <random>

uint64_t seed = std::chrono::system_clock::now().time_since_epoch().count();
std::mt19937 mt(seed);
std::uniform_int_distribution<> dist(0, 7);

#include "pruning.h"
#include "puzzle.h"
#include "scramblereader.h"
#include "solver.h"

int main(int argc, char *argv[]){
    if(argc != 2) return 0;
    loadPruningTables();
    while(true){
        std::cin.get();
        std::cin.clear();

        Puzzle *p = new Puzzle();
        p->scramble();

        Scramble* scramble = readScrambleFile(argv[1])[0];
        delete scramble->state;
        scramble->state = p;
        scramble->slack = 0;
        scramble->maxSolutions = 1;

        Solver s(scramble);
        s.solve();
    }
    return 0;
}
