{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal.mjs","../node_modules/ramda/es/F.js","../node_modules/ramda/es/T.js","../node_modules/ramda/es/__.js","../node_modules/ramda/es/internal/_isPlaceholder.js","../node_modules/ramda/es/internal/_curry1.js","../node_modules/ramda/es/internal/_curry2.js","../node_modules/ramda/es/add.js","../node_modules/ramda/es/internal/_concat.js","../node_modules/ramda/es/internal/_arity.js","../node_modules/ramda/es/internal/_curryN.js","../node_modules/ramda/es/curryN.js","../node_modules/ramda/es/addIndex.js","../node_modules/ramda/es/internal/_curry3.js","../node_modules/ramda/es/adjust.js","../node_modules/ramda/es/internal/_isArray.js","../node_modules/ramda/es/internal/_isTransformer.js","../node_modules/ramda/es/internal/_dispatchable.js","../node_modules/ramda/es/internal/_reduced.js","../node_modules/ramda/es/internal/_xfBase.js","../node_modules/ramda/es/internal/_xall.js","../node_modules/ramda/es/all.js","../node_modules/ramda/es/max.js","../node_modules/ramda/es/internal/_map.js","../node_modules/ramda/es/internal/_isString.js","../node_modules/ramda/es/internal/_isArrayLike.js","../node_modules/ramda/es/internal/_xwrap.js","../node_modules/ramda/es/bind.js","../node_modules/ramda/es/internal/_reduce.js","../node_modules/ramda/es/internal/_xmap.js","../node_modules/ramda/es/internal/_has.js","../node_modules/ramda/es/internal/_isArguments.js","../node_modules/ramda/es/keys.js","../node_modules/ramda/es/map.js","../node_modules/ramda/es/path.js","../node_modules/ramda/es/prop.js","../node_modules/ramda/es/pluck.js","../node_modules/ramda/es/reduce.js","../node_modules/ramda/es/allPass.js","../node_modules/ramda/es/always.js","../node_modules/ramda/es/and.js","../node_modules/ramda/es/internal/_xany.js","../node_modules/ramda/es/any.js","../node_modules/ramda/es/anyPass.js","../node_modules/ramda/es/ap.js","../node_modules/ramda/es/internal/_aperture.js","../node_modules/ramda/es/internal/_xaperture.js","../node_modules/ramda/es/aperture.js","../node_modules/ramda/es/append.js","../node_modules/ramda/es/apply.js","../node_modules/ramda/es/values.js","../node_modules/ramda/es/applySpec.js","../node_modules/ramda/es/applyTo.js","../node_modules/ramda/es/ascend.js","../node_modules/ramda/es/assoc.js","../node_modules/ramda/es/internal/_isInteger.js","../node_modules/ramda/es/isNil.js","../node_modules/ramda/es/assocPath.js","../node_modules/ramda/es/nAry.js","../node_modules/ramda/es/binary.js","../node_modules/ramda/es/internal/_isFunction.js","../node_modules/ramda/es/liftN.js","../node_modules/ramda/es/lift.js","../node_modules/ramda/es/both.js","../node_modules/ramda/es/curry.js","../node_modules/ramda/es/call.js","../node_modules/ramda/es/internal/_makeFlat.js","../node_modules/ramda/es/internal/_forceReduced.js","../node_modules/ramda/es/internal/_flatCat.js","../node_modules/ramda/es/internal/_xchain.js","../node_modules/ramda/es/chain.js","../node_modules/ramda/es/clamp.js","../node_modules/ramda/es/internal/_cloneRegExp.js","../node_modules/ramda/es/type.js","../node_modules/ramda/es/internal/_clone.js","../node_modules/ramda/es/clone.js","../node_modules/ramda/es/comparator.js","../node_modules/ramda/es/not.js","../node_modules/ramda/es/complement.js","../node_modules/ramda/es/internal/_pipe.js","../node_modules/ramda/es/internal/_checkForMethod.js","../node_modules/ramda/es/slice.js","../node_modules/ramda/es/tail.js","../node_modules/ramda/es/pipe.js","../node_modules/ramda/es/reverse.js","../node_modules/ramda/es/compose.js","../node_modules/ramda/es/composeK.js","../node_modules/ramda/es/internal/_pipeP.js","../node_modules/ramda/es/pipeP.js","../node_modules/ramda/es/composeP.js","../node_modules/ramda/es/nth.js","../node_modules/ramda/es/head.js","../node_modules/ramda/es/internal/_identity.js","../node_modules/ramda/es/identity.js","../node_modules/ramda/es/pipeWith.js","../node_modules/ramda/es/composeWith.js","../node_modules/ramda/es/internal/_arrayFromIterator.js","../node_modules/ramda/es/internal/_includesWith.js","../node_modules/ramda/es/internal/_functionName.js","../node_modules/ramda/es/internal/_objectIs.js","../node_modules/ramda/es/internal/_equals.js","../node_modules/ramda/es/equals.js","../node_modules/ramda/es/internal/_indexOf.js","../node_modules/ramda/es/internal/_includes.js","../node_modules/ramda/es/internal/_quote.js","../node_modules/ramda/es/internal/_toISOString.js","../node_modules/ramda/es/internal/_complement.js","../node_modules/ramda/es/internal/_filter.js","../node_modules/ramda/es/internal/_isObject.js","../node_modules/ramda/es/internal/_xfilter.js","../node_modules/ramda/es/filter.js","../node_modules/ramda/es/reject.js","../node_modules/ramda/es/internal/_toString.js","../node_modules/ramda/es/toString.js","../node_modules/ramda/es/concat.js","../node_modules/ramda/es/cond.js","../node_modules/ramda/es/constructN.js","../node_modules/ramda/es/construct.js","../node_modules/ramda/es/contains.js","../node_modules/ramda/es/converge.js","../node_modules/ramda/es/internal/_xreduceBy.js","../node_modules/ramda/es/reduceBy.js","../node_modules/ramda/es/countBy.js","../node_modules/ramda/es/dec.js","../node_modules/ramda/es/defaultTo.js","../node_modules/ramda/es/descend.js","../node_modules/ramda/es/internal/_Set.js","../node_modules/ramda/es/difference.js","../node_modules/ramda/es/differenceWith.js","../node_modules/ramda/es/dissoc.js","../node_modules/ramda/es/remove.js","../node_modules/ramda/es/update.js","../node_modules/ramda/es/dissocPath.js","../node_modules/ramda/es/divide.js","../node_modules/ramda/es/internal/_xdrop.js","../node_modules/ramda/es/drop.js","../node_modules/ramda/es/internal/_xtake.js","../node_modules/ramda/es/take.js","../node_modules/ramda/es/internal/_dropLast.js","../node_modules/ramda/es/internal/_xdropLast.js","../node_modules/ramda/es/dropLast.js","../node_modules/ramda/es/internal/_dropLastWhile.js","../node_modules/ramda/es/internal/_xdropLastWhile.js","../node_modules/ramda/es/dropLastWhile.js","../node_modules/ramda/es/internal/_xdropRepeatsWith.js","../node_modules/ramda/es/last.js","../node_modules/ramda/es/dropRepeatsWith.js","../node_modules/ramda/es/dropRepeats.js","../node_modules/ramda/es/internal/_xdropWhile.js","../node_modules/ramda/es/dropWhile.js","../node_modules/ramda/es/or.js","../node_modules/ramda/es/either.js","../node_modules/ramda/es/empty.js","../node_modules/ramda/es/takeLast.js","../node_modules/ramda/es/endsWith.js","../node_modules/ramda/es/eqBy.js","../node_modules/ramda/es/eqProps.js","../node_modules/ramda/es/evolve.js","../node_modules/ramda/es/internal/_xfind.js","../node_modules/ramda/es/find.js","../node_modules/ramda/es/internal/_xfindIndex.js","../node_modules/ramda/es/findIndex.js","../node_modules/ramda/es/internal/_xfindLast.js","../node_modules/ramda/es/findLast.js","../node_modules/ramda/es/internal/_xfindLastIndex.js","../node_modules/ramda/es/findLastIndex.js","../node_modules/ramda/es/flatten.js","../node_modules/ramda/es/flip.js","../node_modules/ramda/es/forEach.js","../node_modules/ramda/es/forEachObjIndexed.js","../node_modules/ramda/es/fromPairs.js","../node_modules/ramda/es/groupBy.js","../node_modules/ramda/es/groupWith.js","../node_modules/ramda/es/gt.js","../node_modules/ramda/es/gte.js","../node_modules/ramda/es/hasPath.js","../node_modules/ramda/es/has.js","../node_modules/ramda/es/hasIn.js","../node_modules/ramda/es/identical.js","../node_modules/ramda/es/ifElse.js","../node_modules/ramda/es/inc.js","../node_modules/ramda/es/includes.js","../node_modules/ramda/es/indexBy.js","../node_modules/ramda/es/indexOf.js","../node_modules/ramda/es/init.js","../node_modules/ramda/es/innerJoin.js","../node_modules/ramda/es/insert.js","../node_modules/ramda/es/insertAll.js","../node_modules/ramda/es/uniqBy.js","../node_modules/ramda/es/uniq.js","../node_modules/ramda/es/intersection.js","../node_modules/ramda/es/intersperse.js","../node_modules/ramda/es/internal/_objectAssign.js","../node_modules/ramda/es/objOf.js","../node_modules/ramda/es/internal/_stepCat.js","../node_modules/ramda/es/into.js","../node_modules/ramda/es/invert.js","../node_modules/ramda/es/invertObj.js","../node_modules/ramda/es/invoker.js","../node_modules/ramda/es/is.js","../node_modules/ramda/es/isEmpty.js","../node_modules/ramda/es/join.js","../node_modules/ramda/es/juxt.js","../node_modules/ramda/es/keysIn.js","../node_modules/ramda/es/lastIndexOf.js","../node_modules/ramda/es/internal/_isNumber.js","../node_modules/ramda/es/length.js","../node_modules/ramda/es/lens.js","../node_modules/ramda/es/lensIndex.js","../node_modules/ramda/es/lensPath.js","../node_modules/ramda/es/lensProp.js","../node_modules/ramda/es/lt.js","../node_modules/ramda/es/lte.js","../node_modules/ramda/es/mapAccum.js","../node_modules/ramda/es/mapAccumRight.js","../node_modules/ramda/es/mapObjIndexed.js","../node_modules/ramda/es/match.js","../node_modules/ramda/es/mathMod.js","../node_modules/ramda/es/maxBy.js","../node_modules/ramda/es/sum.js","../node_modules/ramda/es/mean.js","../node_modules/ramda/es/median.js","../node_modules/ramda/es/memoizeWith.js","../node_modules/ramda/es/merge.js","../node_modules/ramda/es/mergeAll.js","../node_modules/ramda/es/mergeWithKey.js","../node_modules/ramda/es/mergeDeepWithKey.js","../node_modules/ramda/es/mergeDeepLeft.js","../node_modules/ramda/es/mergeDeepRight.js","../node_modules/ramda/es/mergeDeepWith.js","../node_modules/ramda/es/mergeLeft.js","../node_modules/ramda/es/mergeRight.js","../node_modules/ramda/es/mergeWith.js","../node_modules/ramda/es/min.js","../node_modules/ramda/es/minBy.js","../node_modules/ramda/es/modulo.js","../node_modules/ramda/es/move.js","../node_modules/ramda/es/multiply.js","../node_modules/ramda/es/negate.js","../node_modules/ramda/es/none.js","../node_modules/ramda/es/nthArg.js","../node_modules/ramda/es/o.js","../node_modules/ramda/es/internal/_of.js","../node_modules/ramda/es/of.js","../node_modules/ramda/es/omit.js","../node_modules/ramda/es/once.js","../node_modules/ramda/es/internal/_assertPromise.js","../node_modules/ramda/es/otherwise.js","../node_modules/ramda/es/over.js","../node_modules/ramda/es/pair.js","../node_modules/ramda/es/internal/_createPartialApplicator.js","../node_modules/ramda/es/partial.js","../node_modules/ramda/es/partialRight.js","../node_modules/ramda/es/partition.js","../node_modules/ramda/es/pathEq.js","../node_modules/ramda/es/pathOr.js","../node_modules/ramda/es/pathSatisfies.js","../node_modules/ramda/es/pick.js","../node_modules/ramda/es/pickAll.js","../node_modules/ramda/es/pickBy.js","../node_modules/ramda/es/pipeK.js","../node_modules/ramda/es/prepend.js","../node_modules/ramda/es/product.js","../node_modules/ramda/es/useWith.js","../node_modules/ramda/es/project.js","../node_modules/ramda/es/propEq.js","../node_modules/ramda/es/propIs.js","../node_modules/ramda/es/propOr.js","../node_modules/ramda/es/propSatisfies.js","../node_modules/ramda/es/props.js","../node_modules/ramda/es/range.js","../node_modules/ramda/es/reduceRight.js","../node_modules/ramda/es/reduceWhile.js","../node_modules/ramda/es/reduced.js","../node_modules/ramda/es/times.js","../node_modules/ramda/es/repeat.js","../node_modules/ramda/es/replace.js","../node_modules/ramda/es/scan.js","../node_modules/ramda/es/sequence.js","../node_modules/ramda/es/set.js","../node_modules/ramda/es/sort.js","../node_modules/ramda/es/sortBy.js","../node_modules/ramda/es/sortWith.js","../node_modules/ramda/es/split.js","../node_modules/ramda/es/splitAt.js","../node_modules/ramda/es/splitEvery.js","../node_modules/ramda/es/splitWhen.js","../node_modules/ramda/es/startsWith.js","../node_modules/ramda/es/subtract.js","../node_modules/ramda/es/symmetricDifference.js","../node_modules/ramda/es/symmetricDifferenceWith.js","../node_modules/ramda/es/takeLastWhile.js","../node_modules/ramda/es/internal/_xtakeWhile.js","../node_modules/ramda/es/takeWhile.js","../node_modules/ramda/es/internal/_xtap.js","../node_modules/ramda/es/tap.js","../node_modules/ramda/es/internal/_isRegExp.js","../node_modules/ramda/es/test.js","../node_modules/ramda/es/then.js","../node_modules/ramda/es/toLower.js","../node_modules/ramda/es/toPairs.js","../node_modules/ramda/es/toPairsIn.js","../node_modules/ramda/es/toUpper.js","../node_modules/ramda/es/transduce.js","../node_modules/ramda/es/transpose.js","../node_modules/ramda/es/traverse.js","../node_modules/ramda/es/trim.js","../node_modules/ramda/es/tryCatch.js","../node_modules/ramda/es/unapply.js","../node_modules/ramda/es/unary.js","../node_modules/ramda/es/uncurryN.js","../node_modules/ramda/es/unfold.js","../node_modules/ramda/es/union.js","../node_modules/ramda/es/uniqWith.js","../node_modules/ramda/es/unionWith.js","../node_modules/ramda/es/unless.js","../node_modules/ramda/es/unnest.js","../node_modules/ramda/es/until.js","../node_modules/ramda/es/valuesIn.js","../node_modules/ramda/es/view.js","../node_modules/ramda/es/when.js","../node_modules/ramda/es/where.js","../node_modules/ramda/es/whereEq.js","../node_modules/ramda/es/without.js","../node_modules/ramda/es/xprod.js","../node_modules/ramda/es/zip.js","../node_modules/ramda/es/zipObj.js","../node_modules/ramda/es/zipWith.js","../node_modules/ramda/es/thunkify.js","../src/Components/Settings.svelte","../src/Components/Header.svelte","../node_modules/dayjs/dayjs.min.js","../src/Components/Timer.svelte","../src/scripts/algsinfo.js","../src/scripts/algsmap.js","../src/Components/Train.svelte","../src/scripts/minx-ll.js","../src/Components/Selection.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(component, store, callback) {\n    const unsub = store.subscribe(callback);\n    component.$$.on_destroy.push(unsub.unsubscribe\n        ? () => unsub.unsubscribe()\n        : unsub);\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? requestAnimationFrame : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction detach_between(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction detach_before(after) {\n    while (after.previousSibling) {\n        after.parentNode.removeChild(after.previousSibling);\n    }\n}\nfunction detach_after(before) {\n    while (before.nextSibling) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value) {\n    node.style.setProperty(key, value);\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, start: start_time = now() + delay, end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now$$1 => {\n        if (!started && now$$1 >= start_time) {\n            started = true;\n        }\n        if (started && now$$1 >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now$$1 - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        const b = node.getBoundingClientRect();\n        if (a.left !== b.left || a.top !== b.top) {\n            const style = getComputedStyle(node);\n            const transform = style.transform === 'none' ? '' : style.transform;\n            node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n        }\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_render.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_render.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_binding_callback(fn) {\n    binding_callbacks.push(fn);\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.shift()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        while (render_callbacks.length) {\n            const callback = render_callbacks.pop();\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_render);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_render.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nlet outros;\nfunction group_outros() {\n    outros = {\n        remaining: 0,\n        callbacks: []\n    };\n}\nfunction check_outros() {\n    if (!outros.remaining) {\n        run_all(outros.callbacks);\n    }\n}\nfunction on_outro(callback) {\n    outros.callbacks.push(callback);\n}\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick: tick$$1 = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick$$1(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        task = loop(now$$1 => {\n            if (running) {\n                if (now$$1 >= end_time) {\n                    tick$$1(1, 0);\n                    cleanup();\n                    return running = false;\n                }\n                if (now$$1 >= start_time) {\n                    const t = easing((now$$1 - start_time) / duration);\n                    tick$$1(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (typeof config === 'function') {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.remaining += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick: tick$$1 = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        loop(now$$1 => {\n            if (running) {\n                if (now$$1 >= end_time) {\n                    tick$$1(0, 1);\n                    if (!--group.remaining) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.callbacks);\n                    }\n                    return false;\n                }\n                if (now$$1 >= start_time) {\n                    const t = easing((now$$1 - start_time) / duration);\n                    tick$$1(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (typeof config === 'function') {\n        wait().then(() => {\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick: tick$$1 = noop, css } = config;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.remaining += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick$$1(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now$$1 => {\n                if (pending_program && now$$1 > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now$$1 >= running_program.end) {\n                        tick$$1(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.remaining)\n                                    run_all(running_program.group.callbacks);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now$$1 >= running_program.start) {\n                        const p = now$$1 - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick$$1(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (typeof config === 'function') {\n                wait().then(() => {\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        on_outro(() => {\n                            block.d(1);\n                            info.blocks[i] = null;\n                        });\n                        block.o(1);\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            if (block.i)\n                block.i(1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        promise.then(value => {\n            update(info.then, 1, info.value, value);\n        }, error => {\n            update(info.catch, 2, info.error, error);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    on_outro(() => {\n        destroy_block(block, lookup);\n    });\n    block.o(1);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        if (block.i)\n            block.i(1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_render: [],\n            after_render: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction get_store_value(store) {\n    let value;\n    store.subscribe(_ => value = _)();\n    return value;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_render } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens after the initial afterUpdate. Because\n    // afterUpdate callbacks happen in reverse order (inner first)\n    // we schedule onMount callbacks before afterUpdate callbacks\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_render.forEach(add_render_callback);\n}\nfunction destroy(component, detaching) {\n    if (component.$$) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal$$1, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal: not_equal$$1,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_render: [],\n        after_render: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal$$1($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_render);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            $$.fragment.c();\n        }\n        if (options.intro && component.$$.fragment.i)\n            component.$$.fragment.i();\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr$$1, oldValue, newValue) {\n            this[attr$$1] = newValue;\n        }\n        $destroy() {\n            destroy(this, true);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy(this, true);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { create_animation, fix_position, handle_promise, append, insert, detach, detach_between, detach_before, detach_after, destroy_each, element, object_without_properties, svg_element, text, space, empty, listen, prevent_default, stop_propagation, attr, set_attributes, set_custom_element_data, xlink_attr, get_binding_group_value, to_number, time_ranges_to_array, children, claim_element, claim_text, set_data, set_input_type, set_style, select_option, select_options, select_value, select_multiple_value, add_resize_listener, toggle_class, custom_event, destroy_block, outro_and_destroy_block, fix_and_outro_and_destroy_block, update_keyed_each, measure, current_component, set_current_component, beforeUpdate, onMount, afterUpdate, onDestroy, createEventDispatcher, setContext, getContext, bubble, clear_loops, loop, dirty_components, intros, schedule_update, tick, add_binding_callback, add_render_callback, add_flush_callback, flush, get_spread_update, invalid_attribute_name_character, spread, escaped, escape, each, missing_component, validate_component, debug, create_ssr_component, get_store_value, group_outros, check_outros, on_outro, create_in_transition, create_out_transition, create_bidirectional_transition, noop, identity, assign, is_promise, add_location, run, blank_object, run_all, is_function, safe_not_equal, not_equal, validate_store, subscribe, create_slot, get_slot_context, get_slot_changes, exclude_internal_props, now, raf, set_now, set_raf, bind, mount_component, init, SvelteElement, SvelteComponent, SvelteComponentDev };\n","\n\n/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.T\n * @example\n *\n *      R.F(); //=> false\n */\nvar F = function () {\n  return false;\n};\nexport default F;","\n\n/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.F\n * @example\n *\n *      R.T(); //=> true\n */\nvar T = function () {\n  return true;\n};\nexport default T;","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @name __\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      const greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nexport default { '@@functional/placeholder': true };","export default function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from './_isPlaceholder.js';\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from './_curry1.js';\nimport _isPlaceholder from './_isPlaceholder.js';\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","import _curry2 from './internal/_curry2.js';\n\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\nvar add = /*#__PURE__*/_curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\nexport default add;","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nexport default function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n\n  idx = 0;\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n  idx = 0;\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n  return result;\n}","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","import _arity from './_arity.js';\nimport _isPlaceholder from './_isPlaceholder.js';\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","import _arity from './internal/_arity.js';\nimport _curry1 from './internal/_curry1.js';\nimport _curry2 from './internal/_curry2.js';\nimport _curryN from './internal/_curryN.js';\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nexport default curryN;","import _concat from './internal/_concat.js';\nimport _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\n\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> ((a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      const mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\nvar addIndex = /*#__PURE__*/_curry1(function addIndex(fn) {\n  return curryN(fn.length, function () {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = function () {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n    return fn.apply(this, args);\n  });\n});\nexport default addIndex;","import _curry1 from './_curry1.js';\nimport _curry2 from './_curry2.js';\nimport _isPlaceholder from './_isPlaceholder.js';\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","import _concat from './internal/_concat.js';\nimport _curry3 from './internal/_curry3.js';\n\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> (a -> a) -> [a] -> [a]\n * @param {Number} idx The index.\n * @param {Function} fn The function to apply.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(1, R.toUpper, ['a', 'b', 'c', 'd']);      //=> ['a', 'B', 'c', 'd']\n *      R.adjust(-1, R.toUpper, ['a', 'b', 'c', 'd']);     //=> ['a', 'b', 'c', 'D']\n * @symb R.adjust(-1, f, [a, b]) = [a, f(b)]\n * @symb R.adjust(0, f, [a, b]) = [f(a), b]\n */\nvar adjust = /*#__PURE__*/_curry3(function adjust(idx, fn, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n  var start = idx < 0 ? list.length : 0;\n  var _idx = start + idx;\n  var _list = _concat(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\nexport default adjust;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","export default function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}","import _isArray from './_isArray.js';\nimport _isTransformer from './_isTransformer.js';\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\nexport default function _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n}","export default function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","export default {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XAll = /*#__PURE__*/function () {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n  XAll.prototype['@@transducer/result'] = function (result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAll.prototype['@@transducer/step'] = function (result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n    return result;\n  };\n\n  return XAll;\n}();\n\nvar _xall = /*#__PURE__*/_curry2(function _xall(f, xf) {\n  return new XAll(f, xf);\n});\nexport default _xall;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xall from './internal/_xall.js';\n\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      const equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\nvar all = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n    idx += 1;\n  }\n  return true;\n}));\nexport default all;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\nvar max = /*#__PURE__*/_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\nexport default max;","export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n}","export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","import _curry1 from './_curry1.js';\nimport _isArray from './_isArray.js';\nimport _isString from './_isString.js';\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nvar _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n  if (!x) {\n    return false;\n  }\n  if (typeof x !== 'object') {\n    return false;\n  }\n  if (_isString(x)) {\n    return false;\n  }\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n  if (x.length === 0) {\n    return true;\n  }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\nexport default _isArrayLike;","var XWrap = /*#__PURE__*/function () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import _arity from './internal/_arity.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nexport default bind;","import _isArrayLike from './_isArrayLike.js';\nimport _xwrap from './_xwrap.js';\nimport bind from '../bind.js';\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XMap = /*#__PURE__*/function () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap = /*#__PURE__*/_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\nexport default _xmap;","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","import _has from './_has.js';\n\nvar toString = Object.prototype.toString;\nvar _isArguments = /*#__PURE__*/function () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nexport default _isArguments;","import _curry1 from './internal/_curry1.js';\nimport _has from './internal/_has.js';\nimport _isArguments from './internal/_isArguments.js';\n\n// cover IE < 9 keys issues\nvar hasEnumBug = ! /*#__PURE__*/{ toString: null }.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n// Safari bug\nvar hasArgsEnumBug = /*#__PURE__*/function () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? /*#__PURE__*/_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) : /*#__PURE__*/_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n  var prop, nIdx;\n  var ks = [];\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n      nIdx -= 1;\n    }\n  }\n  return ks;\n});\nexport default keys;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _map from './internal/_map.js';\nimport _reduce from './internal/_reduce.js';\nimport _xmap from './internal/_xmap.js';\nimport curryN from './curryN.js';\nimport keys from './keys.js';\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\nvar map = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\nexport default map;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\nvar path = /*#__PURE__*/_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n    val = val[paths[idx]];\n    idx += 1;\n  }\n  return val;\n});\nexport default path;","import _curry2 from './internal/_curry2.js';\nimport path from './path.js';\n\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\nvar prop = /*#__PURE__*/_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\nexport default prop;","import _curry2 from './internal/_curry2.js';\nimport map from './map.js';\nimport prop from './prop.js';\n\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      var getAges = R.pluck('age');\n *      getAges([{name: 'fred', age: 29}, {name: 'wilma', age: 27}]); //=> [29, 27]\n *\n *      R.pluck(0, [[1, 2], [3, 4]]);               //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\nvar pluck = /*#__PURE__*/_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\nexport default pluck;","import _curry3 from './internal/_curry3.js';\nimport _reduce from './internal/_reduce.js';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nvar reduce = /*#__PURE__*/_curry3(_reduce);\nexport default reduce;","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\nimport max from './max.js';\nimport pluck from './pluck.js';\nimport reduce from './reduce.js';\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass\n * @example\n *\n *      const isQueen = R.propEq('rank', 'Q');\n *      const isSpade = R.propEq('suit', '♠︎');\n *      const isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n */\nvar allPass = /*#__PURE__*/_curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n      idx += 1;\n    }\n    return true;\n  });\n});\nexport default allPass;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      const t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\nvar always = /*#__PURE__*/_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\nexport default always;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if both arguments are `true`; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if it is falsy, otherwise the second argument.\n * @see R.both\n * @example\n *\n *      R.and(true, true); //=> true\n *      R.and(true, false); //=> false\n *      R.and(false, true); //=> false\n *      R.and(false, false); //=> false\n */\nvar and = /*#__PURE__*/_curry2(function and(a, b) {\n  return a && b;\n});\nexport default and;","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XAny = /*#__PURE__*/function () {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n  XAny.prototype['@@transducer/result'] = function (result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAny.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n    return result;\n  };\n\n  return XAny;\n}();\n\nvar _xany = /*#__PURE__*/_curry2(function _xany(f, xf) {\n  return new XAny(f, xf);\n});\nexport default _xany;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xany from './internal/_xany.js';\n\n/**\n * Returns `true` if at least one of the elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      const lessThan0 = R.flip(R.lt)(0);\n *      const lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\nvar any = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}));\nexport default any;","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\nimport max from './max.js';\nimport pluck from './pluck.js';\nimport reduce from './reduce.js';\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass\n * @example\n *\n *      const isClub = R.propEq('suit', '♣');\n *      const isSpade = R.propEq('suit', '♠');\n *      const isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '♣'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false\n */\nvar anyPass = /*#__PURE__*/_curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n      idx += 1;\n    }\n    return false;\n  });\n});\nexport default anyPass;","import _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\nimport _reduce from './internal/_reduce.js';\nimport map from './map.js';\n\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (r -> a -> b) -> (r -> a) -> (r -> b)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\nvar ap = /*#__PURE__*/_curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } : _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});\nexport default ap;","export default function _aperture(n, list) {\n  var idx = 0;\n  var limit = list.length - (n - 1);\n  var acc = new Array(limit >= 0 ? limit : 0);\n  while (idx < limit) {\n    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n    idx += 1;\n  }\n  return acc;\n}","import _concat from './_concat.js';\nimport _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XAperture = /*#__PURE__*/function () {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n  XAperture.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XAperture.prototype['@@transducer/step'] = function (result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n  XAperture.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n  XAperture.prototype.getCopy = function () {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return XAperture;\n}();\n\nvar _xaperture = /*#__PURE__*/_curry2(function _xaperture(n, xf) {\n  return new XAperture(n, xf);\n});\nexport default _xaperture;","import _aperture from './internal/_aperture.js';\nimport _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xaperture from './internal/_xaperture.js';\n\n/**\n * Returns a new list, composed of n-tuples of consecutive elements. If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\nvar aperture = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xaperture, _aperture));\nexport default aperture;","import _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\nvar append = /*#__PURE__*/_curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\nexport default append;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      const nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\nvar apply = /*#__PURE__*/_curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\nexport default apply;","import _curry1 from './internal/_curry1.js';\nimport keys from './keys.js';\n\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\nvar values = /*#__PURE__*/_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n  return vals;\n});\nexport default values;","import _curry1 from './internal/_curry1.js';\nimport apply from './apply.js';\nimport curryN from './curryN.js';\nimport max from './max.js';\nimport pluck from './pluck.js';\nimport reduce from './reduce.js';\nimport keys from './keys.js';\nimport values from './values.js';\n\n// Use custom mapValues function to avoid issues with specs that include a \"map\" key and R.map\n// delegating calls to .map\nfunction mapValues(fn, obj) {\n  return keys(obj).reduce(function (acc, key) {\n    acc[key] = fn(obj[key]);\n    return acc;\n  }, {});\n}\n\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      const getMetrics = R.applySpec({\n *        sum: R.add,\n *        nested: { mul: R.multiply }\n *      });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\nvar applySpec = /*#__PURE__*/_curry1(function applySpec(spec) {\n  spec = mapValues(function (v) {\n    return typeof v == 'function' ? v : applySpec(v);\n  }, spec);\n\n  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n    var args = arguments;\n    return mapValues(function (f) {\n      return apply(f, args);\n    }, spec);\n  });\n});\nexport default applySpec;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Takes a value and applies a function to it.\n *\n * This function is also known as the `thrush` combinator.\n *\n * @func\n * @memberOf R\n * @since v0.25.0\n * @category Function\n * @sig a -> (a -> b) -> b\n * @param {*} x The value\n * @param {Function} f The function to apply\n * @return {*} The result of applying `f` to `x`\n * @example\n *\n *      const t42 = R.applyTo(42);\n *      t42(R.identity); //=> 42\n *      t42(R.add(1)); //=> 43\n */\nvar applyTo = /*#__PURE__*/_curry2(function applyTo(x, f) {\n  return f(x);\n});\nexport default applyTo;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      const byAge = R.ascend(R.prop('age'));\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByYoungestFirst = R.sort(byAge, people);\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\n */\nvar ascend = /*#__PURE__*/_curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\nexport default ascend;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc, R.pick\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\nvar assoc = /*#__PURE__*/_curry3(function assoc(prop, val, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = val;\n  return result;\n});\nexport default assoc;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","import _curry1 from './internal/_curry1.js';\n\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\nvar isNil = /*#__PURE__*/_curry1(function isNil(x) {\n  return x == null;\n});\nexport default isNil;","import _curry3 from './internal/_curry3.js';\nimport _has from './internal/_has.js';\nimport _isArray from './internal/_isArray.js';\nimport _isInteger from './internal/_isInteger.js';\nimport assoc from './assoc.js';\nimport isNil from './isNil.js';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\nvar assocPath = /*#__PURE__*/_curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n  var idx = path[0];\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});\nexport default assocPath;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly `n` parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity `n`.\n * @see R.binary, R.unary\n * @example\n *\n *      const takesTwoArgs = (a, b) => [a, b];\n *\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.nAry(1, takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only `n` arguments are passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.nAry(0, f)(a, b) = f()\n * @symb R.nAry(1, f)(a, b) = f(a)\n * @symb R.nAry(2, f)(a, b) = f(a, b)\n */\nvar nAry = /*#__PURE__*/_curry2(function nAry(n, fn) {\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.call(this);\n      };\n    case 1:\n      return function (a0) {\n        return fn.call(this, a0);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.call(this, a0, a1);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.call(this, a0, a1, a2);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.call(this, a0, a1, a2, a3);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.call(this, a0, a1, a2, a3, a4);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      };\n    default:\n      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n  }\n});\nexport default nAry;","import _curry1 from './internal/_curry1.js';\nimport nAry from './nAry.js';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 2 parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> c) -> (a, b -> c)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 2.\n * @see R.nAry, R.unary\n * @example\n *\n *      const takesThreeArgs = function(a, b, c) {\n *        return [a, b, c];\n *      };\n *      takesThreeArgs.length; //=> 3\n *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n *\n *      const takesTwoArgs = R.binary(takesThreeArgs);\n *      takesTwoArgs.length; //=> 2\n *      // Only 2 arguments are passed to the wrapped function\n *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n * @symb R.binary(f)(a, b, c) = f(a, b)\n */\nvar binary = /*#__PURE__*/_curry1(function binary(fn) {\n  return nAry(2, fn);\n});\nexport default binary;","export default function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n}","import _curry2 from './internal/_curry2.js';\nimport _reduce from './internal/_reduce.js';\nimport ap from './ap.js';\nimport curryN from './curryN.js';\nimport map from './map.js';\n\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      const madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\nvar liftN = /*#__PURE__*/_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\nexport default liftN;","import _curry1 from './internal/_curry1.js';\nimport liftN from './liftN.js';\n\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      const madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      const madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\nvar lift = /*#__PURE__*/_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\nexport default lift;","import _curry2 from './internal/_curry2.js';\nimport _isFunction from './internal/_isFunction.js';\nimport and from './and.js';\nimport lift from './lift.js';\n\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.and\n * @example\n *\n *      const gt10 = R.gt(R.__, 10)\n *      const lt20 = R.lt(R.__, 20)\n *      const f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n *\n *      R.both(Maybe.Just(false), Maybe.Just(55)); // => Maybe.Just(false)\n *      R.both([false, false, 'a'], [11]); //=> [false, false, 11]\n */\nvar both = /*#__PURE__*/_curry2(function both(f, g) {\n  return _isFunction(f) ? function _both() {\n    return f.apply(this, arguments) && g.apply(this, arguments);\n  } : lift(and)(f, g);\n});\nexport default both;","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\nvar curry = /*#__PURE__*/_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\nexport default curry;","import curry from './curry.js';\n\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      const indentN = R.pipe(R.repeat(' '),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      const format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\nvar call = /*#__PURE__*/curry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\nexport default call;","import _isArrayLike from './_isArrayLike.js';\n\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\nexport default function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n    return result;\n  };\n}","export default function _forceReduced(x) {\n  return {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","import _forceReduced from './_forceReduced.js';\nimport _isArrayLike from './_isArrayLike.js';\nimport _reduce from './_reduce.js';\nimport _xfBase from './_xfBase.js';\n\nvar preservingReduced = function (xf) {\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return xf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      var ret = xf['@@transducer/step'](result, input);\n      return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n    }\n  };\n};\n\nvar _flatCat = function _xcat(xf) {\n  var rxf = preservingReduced(xf);\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return rxf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n    }\n  };\n};\n\nexport default _flatCat;","import _curry2 from './_curry2.js';\nimport _flatCat from './_flatCat.js';\nimport map from '../map.js';\n\nvar _xchain = /*#__PURE__*/_curry2(function _xchain(f, xf) {\n  return map(f, _flatCat(xf));\n});\nexport default _xchain;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _makeFlat from './internal/_makeFlat.js';\nimport _xchain from './internal/_xchain.js';\nimport map from './map.js';\n\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries.\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * If second argument is a function, `chain(f, g)(x)` is equivalent to `f(g(x), x)`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      const duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\nvar chain = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function (x) {\n      return fn(monad(x))(x);\n    };\n  }\n  return _makeFlat(false)(map(fn, monad));\n}));\nexport default chain;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\nvar clamp = /*#__PURE__*/_curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n  return value < min ? min : value > max ? max : value;\n});\nexport default clamp;","export default function _cloneRegExp(pattern) {\n                                  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}","import _curry1 from './internal/_curry1.js';\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\nvar type = /*#__PURE__*/_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nexport default type;","import _cloneRegExp from './_cloneRegExp.js';\nimport type from '../type.js';\n\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n      idx += 1;\n    }\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n    return copiedValue;\n  };\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n    case 'Array':\n      return copy([]);\n    case 'Date':\n      return new Date(value.valueOf());\n    case 'RegExp':\n      return _cloneRegExp(value);\n    default:\n      return value;\n  }\n}","import _clone from './internal/_clone.js';\nimport _curry1 from './internal/_curry1.js';\n\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      const objects = [{}, {}, {}];\n *      const objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\nvar clone = /*#__PURE__*/_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n});\nexport default clone;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b) -> Boolean) -> ((a, b) -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      const byAge = R.comparator((a, b) => a.age < b.age);\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByIncreasingAge = R.sort(byAge, people);\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\n */\nvar comparator = /*#__PURE__*/_curry1(function comparator(pred) {\n  return function (a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});\nexport default comparator;","import _curry1 from './internal/_curry1.js';\n\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\nvar not = /*#__PURE__*/_curry1(function not(a) {\n  return !a;\n});\nexport default not;","import lift from './lift.js';\nimport not from './not.js';\n\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      const isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\nvar complement = /*#__PURE__*/lift(not);\nexport default complement;","export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}","import _isArray from './_isArray.js';\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry3 from './internal/_curry3.js';\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\nvar slice = /*#__PURE__*/_curry3( /*#__PURE__*/_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\nexport default slice;","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry1 from './internal/_curry1.js';\nimport slice from './slice.js';\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nvar tail = /*#__PURE__*/_curry1( /*#__PURE__*/_checkForMethod('tail', /*#__PURE__*/slice(1, Infinity)));\nexport default tail;","import _arity from './internal/_arity.js';\nimport _pipe from './internal/_pipe.js';\nimport reduce from './reduce.js';\nimport tail from './tail.js';\n\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      const f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}","import _curry1 from './internal/_curry1.js';\nimport _isString from './internal/_isString.js';\n\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\nvar reverse = /*#__PURE__*/_curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});\nexport default reverse;","import pipe from './pipe.js';\nimport reverse from './reverse.js';\n\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      const classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      const yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\nexport default function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n  return pipe.apply(this, reverse(arguments));\n}","import chain from './chain.js';\nimport compose from './compose.js';\nimport map from './map.js';\n\n/**\n * Returns the right-to-left Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipeK\n * @deprecated since v0.26.0\n * @example\n *\n *       //  get :: String -> Object -> Maybe *\n *       const get = R.curry((propName, obj) => Maybe(obj[propName]))\n *\n *       //  getStateCode :: Maybe String -> Maybe String\n *       const getStateCode = R.composeK(\n *         R.compose(Maybe.of, R.toUpper),\n *         get('state'),\n *         get('address'),\n *         get('user'),\n *       );\n *       getStateCode({\"user\":{\"address\":{\"state\":\"ny\"}}}); //=> Maybe.Just(\"NY\")\n *       getStateCode({}); //=> Maybe.Nothing()\n * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))\n */\nexport default function composeK() {\n  if (arguments.length === 0) {\n    throw new Error('composeK requires at least one argument');\n  }\n  var init = Array.prototype.slice.call(arguments);\n  var last = init.pop();\n  return compose(compose.apply(this, map(chain, init)), last);\n}","export default function _pipeP(f, g) {\n  return function () {\n    var ctx = this;\n    return f.apply(ctx, arguments).then(function (x) {\n      return g.call(ctx, x);\n    });\n  };\n}","import _arity from './internal/_arity.js';\nimport _pipeP from './internal/_pipeP.js';\nimport reduce from './reduce.js';\nimport tail from './tail.js';\n\n/**\n * Performs left-to-right composition of one or more Promise-returning\n * functions. The leftmost function may have any arity; the remaining functions\n * must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeP\n * @deprecated since v0.26.0\n * @example\n *\n *      //  followersForUser :: String -> Promise [User]\n *      const followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n */\nexport default function pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n}","import pipeP from './pipeP.js';\nimport reverse from './reverse.js';\n\n/**\n * Performs right-to-left composition of one or more Promise-returning\n * functions. The rightmost function may have any arity; the remaining\n * functions must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n * @param {...Function} functions The functions to compose\n * @return {Function}\n * @see R.pipeP\n * @deprecated since v0.26.0\n * @example\n *\n *      const db = {\n *        users: {\n *          JOE: {\n *            name: 'Joe',\n *            followers: ['STEVE', 'SUZY']\n *          }\n *        }\n *      }\n *\n *      // We'll pretend to do a db lookup which returns a promise\n *      const lookupUser = (userId) => Promise.resolve(db.users[userId])\n *      const lookupFollowers = (user) => Promise.resolve(user.followers)\n *      lookupUser('JOE').then(lookupFollowers)\n *\n *      //  followersForUser :: String -> Promise [UserId]\n *      const followersForUser = R.composeP(lookupFollowers, lookupUser);\n *      followersForUser('JOE').then(followers => console.log('Followers:', followers))\n *      // Followers: [\"STEVE\",\"SUZY\"]\n */\nexport default function composeP() {\n  if (arguments.length === 0) {\n    throw new Error('composeP requires at least one argument');\n  }\n  return pipeP.apply(this, reverse(arguments));\n}","import _curry2 from './internal/_curry2.js';\nimport _isString from './internal/_isString.js';\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      const list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\nvar nth = /*#__PURE__*/_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\nexport default nth;","import nth from './nth.js';\n\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\nvar head = /*#__PURE__*/nth(0);\nexport default head;","export default function _identity(x) {\n  return x;\n}","import _curry1 from './internal/_curry1.js';\nimport _identity from './internal/_identity.js';\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      const obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\nvar identity = /*#__PURE__*/_curry1(_identity);\nexport default identity;","import _arity from './internal/_arity.js';\nimport _curry2 from './internal/_curry2.js';\nimport head from './head.js';\nimport _reduce from './internal/_reduce.js';\nimport tail from './tail.js';\nimport identity from './identity.js';\n\n/**\n * Performs left-to-right function composition using transforming function. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of pipeWith is not automatically curried.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig ((* -> *), [((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)]) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeWith, R.pipe\n * @example\n *\n *      const pipeWhileNotNil = R.pipeWith((f, res) => R.isNil(res) ? res : f(res));\n *      const f = pipeWhileNotNil([Math.pow, R.negate, R.inc])\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipeWith(f)([g, h, i])(...args) = f(i, f(h, f(g, ...args)))\n */\nvar pipeWith = /*#__PURE__*/_curry2(function pipeWith(xf, list) {\n  if (list.length <= 0) {\n    return identity;\n  }\n\n  var headList = head(list);\n  var tailList = tail(list);\n\n  return _arity(headList.length, function () {\n    return _reduce(function (result, f) {\n      return xf.call(this, f, result);\n    }, headList.apply(this, arguments), tailList);\n  });\n});\nexport default pipeWith;","import _curry2 from './internal/_curry2.js';\nimport pipeWith from './pipeWith.js';\nimport reverse from './reverse.js';\n\n/**\n * Performs right-to-left function composition using transforming function. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig ((* -> *), [(y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)]) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.compose, R.pipeWith\n * @example\n *\n *      const composeWhileNotNil = R.composeWith((f, res) => R.isNil(res) ? res : f(res));\n *\n *      composeWhileNotNil([R.inc, R.prop('age')])({age: 1}) //=> 2\n *      composeWhileNotNil([R.inc, R.prop('age')])({}) //=> undefined\n *\n * @symb R.composeWith(f)([g, h, i])(...args) = f(g, f(h, f(i, ...args)))\n */\nvar composeWith = /*#__PURE__*/_curry2(function composeWith(xf, list) {\n  return pipeWith.apply(this, [xf, reverse(list)]);\n});\nexport default composeWith;","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n}","export default function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nexport default typeof Object.is === 'function' ? Object.is : _objectIs;","import _arrayFromIterator from './_arrayFromIterator.js';\nimport _includesWith from './_includesWith.js';\nimport _functionName from './_functionName.js';\nimport _has from './_has.js';\nimport _objectIs from './_objectIs.js';\nimport keys from '../keys.js';\nimport type from '../type.js';\n\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  }\n\n  // if *a* array contains any element that is not included in *b*\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  return true;\n}","import _curry2 from './internal/_curry2.js';\nimport _equals from './internal/_equals.js';\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\nexport default equals;","import equals from '../equals.js';\n\nexport default function _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}","import _indexOf from './_indexOf.js';\n\nexport default function _includes(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","export default function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}","export default function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n}","export default function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XFilter = /*#__PURE__*/function () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter = /*#__PURE__*/_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\nexport default _xfilter;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _filter from './internal/_filter.js';\nimport _isObject from './internal/_isObject.js';\nimport _reduce from './internal/_reduce.js';\nimport _xfilter from './internal/_xfilter.js';\nimport keys from './keys.js';\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar filter = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n    return acc;\n  }, {}, keys(filterable)) :\n  // else\n  _filter(pred, filterable);\n}));\nexport default filter;","import _complement from './internal/_complement.js';\nimport _curry2 from './internal/_curry2.js';\nimport filter from './filter.js';\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\nexport default reject;","import _includes from './_includes.js';\nimport _map from './_map.js';\nimport _quote from './_quote.js';\nimport _toISOString from './_toISOString.js';\nimport keys from '../keys.js';\nimport reject from '../reject.js';\n\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _includes(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return (/^\\d+$/.test(k)\n        );\n      }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}","import _curry1 from './internal/_curry1.js';\nimport _toString from './internal/_toString.js';\n\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\nvar toString = /*#__PURE__*/_curry1(function toString(val) {\n  return _toString(val, []);\n});\nexport default toString;","import _curry2 from './internal/_curry2.js';\nimport _isArray from './internal/_isArray.js';\nimport _isFunction from './internal/_isFunction.js';\nimport _isString from './internal/_isString.js';\nimport toString from './toString.js';\n\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n * Can also concatenate two members of a [fantasy-land\n * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\nvar concat = /*#__PURE__*/_curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\nexport default concat;","import _arity from './internal/_arity.js';\nimport _curry1 from './internal/_curry1.js';\nimport map from './map.js';\nimport max from './max.js';\nimport reduce from './reduce.js';\n\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @see R.ifElse, R.unless, R.when\n * @example\n *\n *      const fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\nvar cond = /*#__PURE__*/_curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n      idx += 1;\n    }\n  });\n});\nexport default cond;","import _curry2 from './internal/_curry2.js';\nimport curry from './curry.js';\nimport nAry from './nAry.js';\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      }\n *\n *      Salad.prototype.recipe = function() {\n *        const instructions = R.map(ingredient => 'Add a dollop of ' + ingredient, this.ingredients);\n *        return R.join('\\n', instructions);\n *      };\n *\n *      const ThreeLayerSalad = R.constructN(3, Salad);\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      const salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup');\n *\n *      console.log(salad.recipe());\n *      // Add a dollop of Mayonnaise\n *      // Add a dollop of Potato Chips\n *      // Add a dollop of Ketchup\n */\nvar constructN = /*#__PURE__*/_curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n  if (n === 0) {\n    return function () {\n      return new Fn();\n    };\n  }\n  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (arguments.length) {\n      case 1:\n        return new Fn($0);\n      case 2:\n        return new Fn($0, $1);\n      case 3:\n        return new Fn($0, $1, $2);\n      case 4:\n        return new Fn($0, $1, $2, $3);\n      case 5:\n        return new Fn($0, $1, $2, $3, $4);\n      case 6:\n        return new Fn($0, $1, $2, $3, $4, $5);\n      case 7:\n        return new Fn($0, $1, $2, $3, $4, $5, $6);\n      case 8:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n      case 9:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n      case 10:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\nexport default constructN;","import _curry1 from './internal/_curry1.js';\nimport constructN from './constructN.js';\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      const AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      const animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      const animalSighting = R.invoker(0, 'sighting');\n *      const sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\nvar construct = /*#__PURE__*/_curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\nexport default construct;","import _includes from './internal/_includes.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Works also with strings.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.includes\n * @deprecated since v0.26.0\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n *      R.contains('ba', 'banana'); //=>true\n */\nvar contains = /*#__PURE__*/_curry2(_includes);\nexport default contains;","import _curry2 from './internal/_curry2.js';\nimport _map from './internal/_map.js';\nimport curryN from './curryN.js';\nimport max from './max.js';\nimport pluck from './pluck.js';\nimport reduce from './reduce.js';\n\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. The arity of the new function is the same as the arity of\n * the longest branching function. When invoked, this new function is applied\n * to some arguments, and each branching function is applied to those same\n * arguments. The results of each branching function are passed as arguments\n * to the converging function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      const average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      const strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nvar converge = /*#__PURE__*/_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\nexport default converge;","import _curryN from './_curryN.js';\nimport _has from './_has.js';\nimport _xfBase from './_xfBase.js';\n\nvar XReduceBy = /*#__PURE__*/function () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy = /*#__PURE__*/_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\nexport default _xreduceBy;","import _curryN from './internal/_curryN.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _has from './internal/_has.js';\nimport _reduce from './internal/_reduce.js';\nimport _xreduceBy from './internal/_xreduceBy.js';\n\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      const groupNames = (acc, {name}) => acc.concat(name)\n *      const toGrade = ({score}) =>\n *        score < 65 ? 'F' :\n *        score < 70 ? 'D' :\n *        score < 80 ? 'C' :\n *        score < 90 ? 'B' : 'A'\n *\n *      var students = [\n *        {name: 'Abby', score: 83},\n *        {name: 'Bart', score: 62},\n *        {name: 'Curt', score: 88},\n *        {name: 'Dora', score: 92},\n *      ]\n *\n *      reduceBy(groupNames, [], toGrade, students)\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\n */\nvar reduceBy = /*#__PURE__*/_curryN(4, [], /*#__PURE__*/_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n    return acc;\n  }, {}, list);\n}));\nexport default reduceBy;","import reduceBy from './reduceBy.js';\n\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      const numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      const letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\nvar countBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return acc + 1;\n}, 0);\nexport default countBy;","import add from './add.js';\n\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\nvar dec = /*#__PURE__*/add(-1);\nexport default dec;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      const defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42(false);  //=> false\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\nvar defaultTo = /*#__PURE__*/_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\nexport default defaultTo;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @see R.ascend\n * @example\n *\n *      const byAge = R.descend(R.prop('age'));\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByOldestFirst = R.sort(byAge, people);\n *        //=> [{ name: 'Peter', age: 78 }, { name: 'Emma', age: 70 }, { name: 'Mikhail', age: 62 }]\n */\nvar descend = /*#__PURE__*/_curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\nexport default descend;","import _includes from './_includes.js';\n\nvar _Set = /*#__PURE__*/function () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  };\n\n  //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  };\n\n  //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n          return false;\n        }\n      }\n      // these types can all utilise the native Set\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        if (!_includes(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n          return false;\n        }\n        return true;\n      }\n    /* falls through */\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n        return false;\n      }\n      // scan through all previously applied items\n      if (!_includes(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n        return false;\n      }\n      return true;\n  }\n}\n\n// A simple Set type that honours R.equals semantics\nexport default _Set;","import _curry2 from './internal/_curry2.js';\nimport _Set from './internal/_Set.js';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\nvar difference = /*#__PURE__*/_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  var secondLen = second.length;\n  var toFilterOut = new _Set();\n\n  for (var i = 0; i < secondLen; i += 1) {\n    toFilterOut.add(second[i]);\n  }\n\n  while (idx < firstLen) {\n    if (toFilterOut.add(first[idx])) {\n      out[out.length] = first[idx];\n    }\n    idx += 1;\n  }\n  return out;\n});\nexport default difference;","import _includesWith from './internal/_includesWith.js';\nimport _curry3 from './internal/_curry3.js';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      const cmp = (x, y) => x.a === y.a;\n *      const l1 = [{a: 1}, {a: 2}, {a: 3}];\n *      const l2 = [{a: 3}, {a: 4}];\n *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n */\nvar differenceWith = /*#__PURE__*/_curry3(function differenceWith(pred, first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_includesWith(pred, first[idx], second) && !_includesWith(pred, first[idx], out)) {\n      out.push(first[idx]);\n    }\n    idx += 1;\n  }\n  return out;\n});\nexport default differenceWith;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Object\n * @sig String -> {k: v} -> {k: v}\n * @param {String} prop The name of the property to dissociate\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n * @see R.assoc, R.omit\n * @example\n *\n *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n */\nvar dissoc = /*#__PURE__*/_curry2(function dissoc(prop, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  delete result[prop];\n  return result;\n});\nexport default dissoc;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @see R.without\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\nvar remove = /*#__PURE__*/_curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\nexport default remove;","import _curry3 from './internal/_curry3.js';\nimport adjust from './adjust.js';\nimport always from './always.js';\n\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, '_', ['a', 'b', 'c']);      //=> ['a', '_', 'c']\n *      R.update(-1, '_', ['a', 'b', 'c']);     //=> ['a', 'b', '_']\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\nvar update = /*#__PURE__*/_curry3(function update(idx, x, list) {\n  return adjust(idx, always(x), list);\n});\nexport default update;","import _curry2 from './internal/_curry2.js';\nimport _isInteger from './internal/_isInteger.js';\nimport _isArray from './internal/_isArray.js';\nimport assoc from './assoc.js';\nimport dissoc from './dissoc.js';\nimport remove from './remove.js';\nimport update from './update.js';\n\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\nvar dissocPath = /*#__PURE__*/_curry2(function dissocPath(path, obj) {\n  switch (path.length) {\n    case 0:\n      return obj;\n    case 1:\n      return _isInteger(path[0]) && _isArray(obj) ? remove(path[0], 1, obj) : dissoc(path[0], obj);\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n      if (obj[head] == null) {\n        return obj;\n      } else if (_isInteger(head) && _isArray(obj)) {\n        return update(head, dissocPath(tail, obj[head]), obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n  }\n});\nexport default dissocPath;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      const half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      const reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\nvar divide = /*#__PURE__*/_curry2(function divide(a, b) {\n  return a / b;\n});\nexport default divide;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDrop = /*#__PURE__*/function () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop = /*#__PURE__*/_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\nexport default _xdrop;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xdrop from './internal/_xdrop.js';\nimport slice from './slice.js';\n\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\nvar drop = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\nexport default drop;","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XTake = /*#__PURE__*/function () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake = /*#__PURE__*/_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\nexport default _xtake;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xtake from './internal/_xtake.js';\nimport slice from './slice.js';\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      const personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      const takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\nvar take = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\nexport default take;","import take from '../take.js';\n\nexport default function dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDropLast = /*#__PURE__*/function () {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n    this.store(input);\n    return result;\n  };\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast = /*#__PURE__*/_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\nexport default _xdropLast;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _dropLast from './internal/_dropLast.js';\nimport _xdropLast from './internal/_xdropLast.js';\n\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\nvar dropLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLast, _dropLast));\nexport default dropLast;","import slice from '../slice.js';\n\nexport default function dropLastWhile(pred, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && pred(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(0, idx + 1, xs);\n}","import _curry2 from './_curry2.js';\nimport _reduce from './_reduce.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDropLastWhile = /*#__PURE__*/function () {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n  };\n  XDropLastWhile.prototype.flush = function (result, input) {\n    result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n  XDropLastWhile.prototype.retain = function (result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return XDropLastWhile;\n}();\n\nvar _xdropLastWhile = /*#__PURE__*/_curry2(function _xdropLastWhile(fn, xf) {\n  return new XDropLastWhile(fn, xf);\n});\nexport default _xdropLastWhile;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _dropLastWhile from './internal/_dropLastWhile.js';\nimport _xdropLastWhile from './internal/_xdropLastWhile.js';\n\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} predicate The function to be called on each element\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      const lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n *\n *      R.dropLastWhile(x => x !== 'd' , 'Ramda'); //=> 'Ramd'\n */\nvar dropLastWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLastWhile, _dropLastWhile));\nexport default dropLastWhile;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDropRepeatsWith = /*#__PURE__*/function () {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n    var sameAsLast = false;\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropRepeatsWith;\n}();\n\nvar _xdropRepeatsWith = /*#__PURE__*/_curry2(function _xdropRepeatsWith(pred, xf) {\n  return new XDropRepeatsWith(pred, xf);\n});\nexport default _xdropRepeatsWith;","import nth from './nth.js';\n\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\nvar last = /*#__PURE__*/nth(-1);\nexport default last;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith.js';\nimport last from './last.js';\n\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      const l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\nvar dropRepeatsWith = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n  if (len !== 0) {\n    result[0] = list[0];\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n  }\n  return result;\n}));\nexport default dropRepeatsWith;","import _curry1 from './internal/_curry1.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith.js';\nimport dropRepeatsWith from './dropRepeatsWith.js';\nimport equals from './equals.js';\n\n/**\n * Returns a new list without any consecutively repeating elements.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\nvar dropRepeats = /*#__PURE__*/_curry1( /*#__PURE__*/_dispatchable([], /*#__PURE__*/_xdropRepeatsWith(equals), /*#__PURE__*/dropRepeatsWith(equals)));\nexport default dropRepeats;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDropWhile = /*#__PURE__*/function () {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n      this.f = null;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropWhile;\n}();\n\nvar _xdropWhile = /*#__PURE__*/_curry2(function _xdropWhile(f, xf) {\n  return new XDropWhile(f, xf);\n});\nexport default _xdropWhile;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xdropWhile from './internal/_xdropWhile.js';\nimport slice from './slice.js';\n\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      const lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n *\n *      R.dropWhile(x => x !== 'd' , 'Ramda'); //=> 'da'\n */\nvar dropWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && pred(xs[idx])) {\n    idx += 1;\n  }\n  return slice(idx, Infinity, xs);\n}));\nexport default dropWhile;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if one or both of its arguments are `true`. Returns `false`\n * if both arguments are `false`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if truthy, otherwise the second argument.\n * @see R.either\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\nvar or = /*#__PURE__*/_curry2(function or(a, b) {\n  return a || b;\n});\nexport default or;","import _curry2 from './internal/_curry2.js';\nimport _isFunction from './internal/_isFunction.js';\nimport lift from './lift.js';\nimport or from './or.js';\n\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      const gt10 = x => x > 10;\n *      const even = x => x % 2 === 0;\n *      const f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n *\n *      R.either(Maybe.Just(false), Maybe.Just(55)); // => Maybe.Just(55)\n *      R.either([false, false, 'a'], [11]) // => [11, 11, \"a\"]\n */\nvar either = /*#__PURE__*/_curry2(function either(f, g) {\n  return _isFunction(f) ? function _either() {\n    return f.apply(this, arguments) || g.apply(this, arguments);\n  } : lift(or)(f, g);\n});\nexport default either;","import _curry1 from './internal/_curry1.js';\nimport _isArguments from './internal/_isArguments.js';\nimport _isArray from './internal/_isArray.js';\nimport _isObject from './internal/_isObject.js';\nimport _isString from './internal/_isString.js';\n\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\nvar empty = /*#__PURE__*/_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() : void 0 // else\n  ;\n});\nexport default empty;","import _curry2 from './internal/_curry2.js';\nimport drop from './drop.js';\n\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\nvar takeLast = /*#__PURE__*/_curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\nexport default takeLast;","import _curry2 from './internal/_curry2.js';\nimport equals from './equals.js';\nimport takeLast from './takeLast.js';\n\n/**\n * Checks if a list ends with the provided sublist.\n *\n * Similarly, checks if a string ends with the provided substring.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> [a] -> Boolean\n * @sig String -> String -> Boolean\n * @param {*} suffix\n * @param {*} list\n * @return {Boolean}\n * @see R.startsWith\n * @example\n *\n *      R.endsWith('c', 'abc')                //=> true\n *      R.endsWith('b', 'abc')                //=> false\n *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true\n *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar endsWith = /*#__PURE__*/_curry2(function (suffix, list) {\n  return equals(takeLast(suffix.length, list), suffix);\n});\nexport default endsWith;","import _curry3 from './internal/_curry3.js';\nimport equals from './equals.js';\n\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\nvar eqBy = /*#__PURE__*/_curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\nexport default eqBy;","import _curry3 from './internal/_curry3.js';\nimport equals from './equals.js';\n\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      const o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      const o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\nvar eqProps = /*#__PURE__*/_curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\nexport default eqProps;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      const tomato = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      const transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\nvar evolve = /*#__PURE__*/_curry2(function evolve(transformations, object) {\n  var result = object instanceof Array ? [] : {};\n  var transformation, key, type;\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];\n  }\n  return result;\n});\nexport default evolve;","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XFind = /*#__PURE__*/function () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind = /*#__PURE__*/_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\nexport default _xfind;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xfind from './internal/_xfind.js';\n\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\nvar find = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx += 1;\n  }\n}));\nexport default find;","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XFindIndex = /*#__PURE__*/function () {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n    return result;\n  };\n\n  return XFindIndex;\n}();\n\nvar _xfindIndex = /*#__PURE__*/_curry2(function _xfindIndex(f, xf) {\n  return new XFindIndex(f, xf);\n});\nexport default _xfindIndex;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xfindIndex from './internal/_xfindIndex.js';\n\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\nvar findIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}));\nexport default findIndex;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XFindLast = /*#__PURE__*/function () {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLast.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n  XFindLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n    return result;\n  };\n\n  return XFindLast;\n}();\n\nvar _xfindLast = /*#__PURE__*/_curry2(function _xfindLast(f, xf) {\n  return new XFindLast(f, xf);\n});\nexport default _xfindLast;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xfindLast from './internal/_xfindLast.js';\n\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n */\nvar findLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx -= 1;\n  }\n}));\nexport default findLast;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XFindLastIndex = /*#__PURE__*/function () {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n    return result;\n  };\n\n  return XFindLastIndex;\n}();\n\nvar _xfindLastIndex = /*#__PURE__*/_curry2(function _xfindLastIndex(f, xf) {\n  return new XFindLastIndex(f, xf);\n});\nexport default _xfindLastIndex;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xfindLastIndex from './internal/_xfindLastIndex.js';\n\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n */\nvar findLastIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx -= 1;\n  }\n  return -1;\n}));\nexport default findLastIndex;","import _curry1 from './internal/_curry1.js';\nimport _makeFlat from './internal/_makeFlat.js';\n\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\nvar flatten = /*#__PURE__*/_curry1( /*#__PURE__*/_makeFlat(true));\nexport default flatten;","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\n\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      const mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\nvar flip = /*#__PURE__*/_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\nexport default flip;","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      const printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\nvar forEach = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n  return list;\n}));\nexport default forEach;","import _curry2 from './internal/_curry2.js';\nimport keys from './keys.js';\n\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      const printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\nvar forEachObjIndexed = /*#__PURE__*/_curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n  return obj;\n});\nexport default forEachObjIndexed;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\nvar fromPairs = /*#__PURE__*/_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n  return result;\n});\nexport default fromPairs;","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry2 from './internal/_curry2.js';\nimport reduceBy from './reduceBy.js';\n\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\nvar groupBy = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('groupBy', /*#__PURE__*/reduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n  acc.push(item);\n  return acc;\n}, null)));\nexport default groupBy;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\nvar groupWith = /*#__PURE__*/_curry2(function (fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    var nextidx = idx + 1;\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n  return res;\n});\nexport default groupWith;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\nvar gt = /*#__PURE__*/_curry2(function gt(a, b) {\n  return a > b;\n});\nexport default gt;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\nvar gte = /*#__PURE__*/_curry2(function gte(a, b) {\n  return a >= b;\n});\nexport default gte;","import _curry2 from './internal/_curry2.js';\nimport _has from './internal/_has.js';\n\n/**\n * Returns whether or not a path exists in an object. Only the object's\n * own properties are checked.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> Boolean\n * @param {Array} path The path to use.\n * @param {Object} obj The object to check the path in.\n * @return {Boolean} Whether the path exists.\n * @see R.has\n * @example\n *\n *      R.hasPath(['a', 'b'], {a: {b: 2}});         // => true\n *      R.hasPath(['a', 'b'], {a: {b: undefined}}); // => true\n *      R.hasPath(['a', 'b'], {a: {c: 2}});         // => false\n *      R.hasPath(['a', 'b'], {});                  // => false\n */\nvar hasPath = /*#__PURE__*/_curry2(function hasPath(_path, obj) {\n  if (_path.length === 0) {\n    return false;\n  }\n  var val = obj;\n  var idx = 0;\n  while (idx < _path.length) {\n    if (_has(_path[idx], val)) {\n      val = val[_path[idx]];\n      idx += 1;\n    } else {\n      return false;\n    }\n  }\n  return true;\n});\nexport default hasPath;","import _curry2 from './internal/_curry2.js';\nimport hasPath from './hasPath.js';\n\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      const hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      const point = {x: 0, y: 0};\n *      const pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\nvar has = /*#__PURE__*/_curry2(function has(prop, obj) {\n  return hasPath([prop], obj);\n});\nexport default has;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns whether or not an object or its prototype chain has a property with\n * the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      function Rectangle(width, height) {\n *        this.width = width;\n *        this.height = height;\n *      }\n *      Rectangle.prototype.area = function() {\n *        return this.width * this.height;\n *      };\n *\n *      const square = new Rectangle(2, 2);\n *      R.hasIn('width', square);  //=> true\n *      R.hasIn('area', square);  //=> true\n */\nvar hasIn = /*#__PURE__*/_curry2(function hasIn(prop, obj) {\n  return prop in obj;\n});\nexport default hasIn;","import _objectIs from './internal/_objectIs.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * Note this is merely a curried version of ES6 `Object.is`.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      const o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\nvar identical = /*#__PURE__*/_curry2(_objectIs);\nexport default identical;","import _curry3 from './internal/_curry3.js';\nimport curryN from './curryN.js';\n\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when, R.cond\n * @example\n *\n *      const incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\nvar ifElse = /*#__PURE__*/_curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n  });\n});\nexport default ifElse;","import add from './add.js';\n\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\nvar inc = /*#__PURE__*/add(1);\nexport default inc;","import _includes from './internal/_includes.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Works also with strings.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.includes(3, [1, 2, 3]); //=> true\n *      R.includes(4, [1, 2, 3]); //=> false\n *      R.includes({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.includes([42], [[42]]); //=> true\n *      R.includes('ba', 'banana'); //=>true\n */\nvar includes = /*#__PURE__*/_curry2(_includes);\nexport default includes;","import reduceBy from './reduceBy.js';\n\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      const list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\nvar indexBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return elem;\n}, null);\nexport default indexBy;","import _curry2 from './internal/_curry2.js';\nimport _indexOf from './internal/_indexOf.js';\nimport _isArray from './internal/_isArray.js';\n\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\nvar indexOf = /*#__PURE__*/_curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n});\nexport default indexOf;","import slice from './slice.js';\n\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\nvar init = /*#__PURE__*/slice(0, -1);\nexport default init;","import _includesWith from './internal/_includesWith.js';\nimport _curry3 from './internal/_curry3.js';\nimport _filter from './internal/_filter.js';\n\n/**\n * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list\n * `xs'` comprising each of the elements of `xs` which is equal to one or more\n * elements of `ys` according to `pred`.\n *\n * `pred` must be a binary function expecting an element from each list.\n *\n * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should\n * not be significant, but since `xs'` is ordered the implementation guarantees\n * that its values are in the same order as they appear in `xs`. Duplicates are\n * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Relation\n * @sig ((a, b) -> Boolean) -> [a] -> [b] -> [a]\n * @param {Function} pred\n * @param {Array} xs\n * @param {Array} ys\n * @return {Array}\n * @see R.intersection\n * @example\n *\n *      R.innerJoin(\n *        (record, id) => record.id === id,\n *        [{id: 824, name: 'Richie Furay'},\n *         {id: 956, name: 'Dewey Martin'},\n *         {id: 313, name: 'Bruce Palmer'},\n *         {id: 456, name: 'Stephen Stills'},\n *         {id: 177, name: 'Neil Young'}],\n *        [177, 456, 999]\n *      );\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\nvar innerJoin = /*#__PURE__*/_curry3(function innerJoin(pred, xs, ys) {\n  return _filter(function (x) {\n    return _includesWith(pred, x, ys);\n  }, xs);\n});\nexport default innerJoin;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Inserts the supplied element into the list, at the specified `index`. _Note that\n\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\nvar insert = /*#__PURE__*/_curry3(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});\nexport default insert;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Inserts the sub-list into the list, at the specified `index`. _Note that this is not\n * destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig Number -> [a] -> [a] -> [a]\n * @param {Number} index The position to insert the sub-list\n * @param {Array} elts The sub-list to insert into the Array\n * @param {Array} list The list to insert the sub-list into\n * @return {Array} A new Array with `elts` inserted starting at `index`.\n * @example\n *\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n */\nvar insertAll = /*#__PURE__*/_curry3(function insertAll(idx, elts, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));\n});\nexport default insertAll;","import _Set from './internal/_Set.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\nvar uniqBy = /*#__PURE__*/_curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default uniqBy;","import identity from './identity.js';\nimport uniqBy from './uniqBy.js';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\nvar uniq = /*#__PURE__*/uniqBy(identity);\nexport default uniq;","import _includes from './internal/_includes.js';\nimport _curry2 from './internal/_curry2.js';\nimport _filter from './internal/_filter.js';\nimport flip from './flip.js';\nimport uniq from './uniq.js';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\nvar intersection = /*#__PURE__*/_curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n  return uniq(_filter(flip(_includes)(lookupList), filteredList));\n});\nexport default intersection;","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a new list with the separator interposed between elements.\n *\n * Dispatches to the `intersperse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} separator The element to add to the list.\n * @param {Array} list The list to be interposed.\n * @return {Array} The new list.\n * @example\n *\n *      R.intersperse('a', ['b', 'n', 'n', 's']); //=> ['b', 'a', 'n', 'a', 'n', 'a', 's']\n */\nvar intersperse = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('intersperse', function intersperse(separator, list) {\n  var out = [];\n  var idx = 0;\n  var length = list.length;\n  while (idx < length) {\n    if (idx === length - 1) {\n      out.push(list[idx]);\n    } else {\n      out.push(list[idx], separator);\n    }\n    idx += 1;\n  }\n  return out;\n}));\nexport default intersperse;","import _has from './_has.js';\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      const matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\nvar objOf = /*#__PURE__*/_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\nexport default objOf;","import _objectAssign from './_objectAssign.js';\nimport _identity from './_identity.js';\nimport _isArrayLike from './_isArrayLike.js';\nimport _isTransformer from './_isTransformer.js';\nimport objOf from '../objOf.js';\n\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _objectAssign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\n\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n  throw new Error('Cannot create transformer for ' + obj);\n}","import _clone from './internal/_clone.js';\nimport _curry3 from './internal/_curry3.js';\nimport _isTransformer from './internal/_isTransformer.js';\nimport _reduce from './internal/_reduce.js';\nimport _stepCat from './internal/_stepCat.js';\n\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.transduce\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      const intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\nvar into = /*#__PURE__*/_curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\nexport default into;","import _curry1 from './internal/_curry1.js';\nimport _has from './internal/_has.js';\nimport keys from './keys.js';\n\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      const raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\nvar invert = /*#__PURE__*/_curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : out[val] = [];\n    list[list.length] = key;\n    idx += 1;\n  }\n  return out;\n});\nexport default invert;","import _curry1 from './internal/_curry1.js';\nimport keys from './keys.js';\n\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @see R.invert\n * @example\n *\n *      const raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      const raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\nvar invertObj = /*#__PURE__*/_curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n  return out;\n});\nexport default invertObj;","import _curry2 from './internal/_curry2.js';\nimport _isFunction from './internal/_isFunction.js';\nimport curryN from './curryN.js';\nimport toString from './toString.js';\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      const sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      const sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\nvar invoker = /*#__PURE__*/_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\nexport default invoker;","import _curry2 from './internal/_curry2.js';\n\n/**\n * See if an object (`val`) is an instance of the supplied constructor. This\n * function will check up the inheritance chain, if any.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Type\n * @sig (* -> {*}) -> a -> Boolean\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @example\n *\n *      R.is(Object, {}); //=> true\n *      R.is(Number, 1); //=> true\n *      R.is(Object, 1); //=> false\n *      R.is(String, 's'); //=> true\n *      R.is(String, new String('')); //=> true\n *      R.is(Object, new String('')); //=> true\n *      R.is(Object, 's'); //=> false\n *      R.is(Number, {}); //=> false\n */\nvar is = /*#__PURE__*/_curry2(function is(Ctor, val) {\n  return val != null && val.constructor === Ctor || val instanceof Ctor;\n});\nexport default is;","import _curry1 from './internal/_curry1.js';\nimport empty from './empty.js';\nimport equals from './equals.js';\n\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\nvar isEmpty = /*#__PURE__*/_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\nexport default isEmpty;","import invoker from './invoker.js';\n\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      const spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\nvar join = /*#__PURE__*/invoker(1, 'join');\nexport default join;","import _curry1 from './internal/_curry1.js';\nimport converge from './converge.js';\n\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      const getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\nvar juxt = /*#__PURE__*/_curry1(function juxt(fns) {\n  return converge(function () {\n    return Array.prototype.slice.call(arguments, 0);\n  }, fns);\n});\nexport default juxt;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Returns a list containing the names of all the properties of the supplied\n * object, including prototype properties.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own and prototype properties.\n * @see R.keys, R.valuesIn\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.keysIn(f); //=> ['x', 'y']\n */\nvar keysIn = /*#__PURE__*/_curry1(function keysIn(obj) {\n  var prop;\n  var ks = [];\n  for (prop in obj) {\n    ks[ks.length] = prop;\n  }\n  return ks;\n});\nexport default keysIn;","import _curry2 from './internal/_curry2.js';\nimport _isArray from './internal/_isArray.js';\nimport equals from './equals.js';\n\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\nvar lastIndexOf = /*#__PURE__*/_curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n      idx -= 1;\n    }\n    return -1;\n  }\n});\nexport default lastIndexOf;","export default function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n}","import _curry1 from './internal/_curry1.js';\nimport _isNumber from './internal/_isNumber.js';\n\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\nvar length = /*#__PURE__*/_curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\nexport default length;","import _curry2 from './internal/_curry2.js';\nimport map from './map.js';\n\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lens = /*#__PURE__*/_curry2(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return map(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});\nexport default lens;","import _curry1 from './internal/_curry1.js';\nimport lens from './lens.js';\nimport nth from './nth.js';\nimport update from './update.js';\n\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\nvar lensIndex = /*#__PURE__*/_curry1(function lensIndex(n) {\n  return lens(nth(n), update(n));\n});\nexport default lensIndex;","import _curry1 from './internal/_curry1.js';\nimport assocPath from './assocPath.js';\nimport lens from './lens.js';\nimport path from './path.js';\n\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\nvar lensPath = /*#__PURE__*/_curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\nexport default lensPath;","import _curry1 from './internal/_curry1.js';\nimport assoc from './assoc.js';\nimport lens from './lens.js';\nimport prop from './prop.js';\n\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lensProp = /*#__PURE__*/_curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\nexport default lensProp;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\nvar lt = /*#__PURE__*/_curry2(function lt(a, b) {\n  return a < b;\n});\nexport default lt;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\nvar lte = /*#__PURE__*/_curry2(function lte(a, b) {\n  return a <= b;\n});\nexport default lte;","import _curry3 from './internal/_curry3.js';\n\n/**\n * The `mapAccum` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from left to right, and returning a final value of this\n * accumulator together with the new list.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.scan, R.addIndex, R.mapAccumRight\n * @example\n *\n *      const digits = ['1', '2', '3', '4'];\n *      const appender = (a, b) => [a + b, a + b];\n *\n *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n * @symb R.mapAccum(f, a, [b, c, d]) = [\n *   f(f(f(a, b)[0], c)[0], d)[0],\n *   [\n *     f(a, b)[1],\n *     f(f(a, b)[0], c)[1],\n *     f(f(f(a, b)[0], c)[0], d)[1]\n *   ]\n * ]\n */\nvar mapAccum = /*#__PURE__*/_curry3(function mapAccum(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var tuple = [acc];\n  while (idx < len) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx += 1;\n  }\n  return [tuple[0], result];\n});\nexport default mapAccum;","import _curry3 from './internal/_curry3.js';\n\n/**\n * The `mapAccumRight` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from right to left, and returning a final value of this\n * accumulator together with the new list.\n *\n * Similar to [`mapAccum`](#mapAccum), except moves through the input list from\n * the right to the left.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccum\n * @example\n *\n *      const digits = ['1', '2', '3', '4'];\n *      const appender = (a, b) => [b + a, b + a];\n *\n *      R.mapAccumRight(appender, 5, digits); //=> ['12345', ['12345', '2345', '345', '45']]\n * @symb R.mapAccumRight(f, a, [b, c, d]) = [\n *   f(f(f(a, d)[0], c)[0], b)[0],\n *   [\n *     f(a, d)[1],\n *     f(f(a, d)[0], c)[1],\n *     f(f(f(a, d)[0], c)[0], b)[1]\n *   ]\n * ]\n */\nvar mapAccumRight = /*#__PURE__*/_curry3(function mapAccumRight(fn, acc, list) {\n  var idx = list.length - 1;\n  var result = [];\n  var tuple = [acc];\n  while (idx >= 0) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx -= 1;\n  }\n  return [tuple[0], result];\n});\nexport default mapAccumRight;","import _curry2 from './internal/_curry2.js';\nimport _reduce from './internal/_reduce.js';\nimport keys from './keys.js';\n\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      const xyz = { x: 1, y: 2, z: 3 };\n *      const prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, xyz); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\nvar mapObjIndexed = /*#__PURE__*/_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\nexport default mapObjIndexed;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\nvar match = /*#__PURE__*/_curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});\nexport default match;","import _curry2 from './internal/_curry2.js';\nimport _isInteger from './internal/_isInteger.js';\n\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      const clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      const seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\nvar mathMod = /*#__PURE__*/_curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) {\n    return NaN;\n  }\n  if (!_isInteger(p) || p < 1) {\n    return NaN;\n  }\n  return (m % p + p) % p;\n});\nexport default mathMod;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * larger result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.max, R.minBy\n * @example\n *\n *      //  square :: Number -> Number\n *      const square = n => n * n;\n *\n *      R.maxBy(square, -3, 2); //=> -3\n *\n *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n *      R.reduce(R.maxBy(square), 0, []); //=> 0\n */\nvar maxBy = /*#__PURE__*/_curry3(function maxBy(f, a, b) {\n  return f(b) > f(a) ? b : a;\n});\nexport default maxBy;","import add from './add.js';\nimport reduce from './reduce.js';\n\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\nvar sum = /*#__PURE__*/reduce(add, 0);\nexport default sum;","import _curry1 from './internal/_curry1.js';\nimport sum from './sum.js';\n\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.median\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\nvar mean = /*#__PURE__*/_curry1(function mean(list) {\n  return sum(list) / list.length;\n});\nexport default mean;","import _curry1 from './internal/_curry1.js';\nimport mean from './mean.js';\n\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.mean\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\nvar median = /*#__PURE__*/_curry1(function median(list) {\n  var len = list.length;\n  if (len === 0) {\n    return NaN;\n  }\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});\nexport default median;","import _arity from './internal/_arity.js';\nimport _curry2 from './internal/_curry2.js';\nimport _has from './internal/_has.js';\n\n/**\n * Creates a new function that, when invoked, caches the result of calling `fn`\n * for a given argument set and returns the result. Subsequent calls to the\n * memoized `fn` with the same argument set will not result in an additional\n * call to `fn`; instead, the cached result for that set of arguments will be\n * returned.\n *\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to generate the cache key.\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoizeWith(R.identity, n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nvar memoizeWith = /*#__PURE__*/_curry2(function memoizeWith(mFn, fn) {\n  var cache = {};\n  return _arity(fn.length, function () {\n    var key = mFn.apply(this, arguments);\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n    return cache[key];\n  });\n});\nexport default memoizeWith;","import _objectAssign from './internal/_objectAssign.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @deprecated\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.merge({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge(a, b) = {...a, ...b}\n */\nvar merge = /*#__PURE__*/_curry2(function merge(l, r) {\n  return _objectAssign({}, l, r);\n});\nexport default merge;","import _objectAssign from './internal/_objectAssign.js';\nimport _curry1 from './internal/_curry1.js';\n\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\nvar mergeAll = /*#__PURE__*/_curry1(function mergeAll(list) {\n  return _objectAssign.apply(null, [{}].concat(list));\n});\nexport default mergeAll;","import _curry3 from './internal/_curry3.js';\nimport _has from './internal/_has.js';\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\nvar mergeWithKey = /*#__PURE__*/_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\nexport default mergeWithKey;","import _curry3 from './internal/_curry3.js';\nimport _isObject from './internal/_isObject.js';\nimport mergeWithKey from './mergeWithKey.js';\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWithKey = /*#__PURE__*/_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\nexport default mergeDeepWithKey;","import _curry2 from './internal/_curry2.js';\nimport mergeDeepWithKey from './mergeDeepWithKey.js';\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\nvar mergeDeepLeft = /*#__PURE__*/_curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\nexport default mergeDeepLeft;","import _curry2 from './internal/_curry2.js';\nimport mergeDeepWithKey from './mergeDeepWithKey.js';\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\nvar mergeDeepRight = /*#__PURE__*/_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\nexport default mergeDeepRight;","import _curry3 from './internal/_curry3.js';\nimport mergeDeepWithKey from './mergeDeepWithKey.js';\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWith = /*#__PURE__*/_curry3(function mergeDeepWith(fn, lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\nexport default mergeDeepWith;","import _objectAssign from './internal/_objectAssign.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepLeft, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.mergeLeft({ 'age': 40 }, { 'name': 'fred', 'age': 10 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const resetToDefault = R.mergeLeft({x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.mergeLeft(a, b) = {...b, ...a}\n */\nvar mergeLeft = /*#__PURE__*/_curry2(function mergeLeft(l, r) {\n  return _objectAssign({}, r, l);\n});\nexport default mergeLeft;","import _objectAssign from './internal/_objectAssign.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeLeft, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.mergeRight({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.mergeRight({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.mergeRight(a, b) = {...a, ...b}\n */\nvar mergeRight = /*#__PURE__*/_curry2(function mergeRight(l, r) {\n  return _objectAssign({}, l, r);\n});\nexport default mergeRight;","import _curry3 from './internal/_curry3.js';\nimport mergeWithKey from './mergeWithKey.js';\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWith, R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\nvar mergeWith = /*#__PURE__*/_curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function (_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});\nexport default mergeWith;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns the smaller of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.minBy, R.max\n * @example\n *\n *      R.min(789, 123); //=> 123\n *      R.min('a', 'b'); //=> 'a'\n */\nvar min = /*#__PURE__*/_curry2(function min(a, b) {\n  return b < a ? b : a;\n});\nexport default min;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * smaller result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.min, R.maxBy\n * @example\n *\n *      //  square :: Number -> Number\n *      const square = n => n * n;\n *\n *      R.minBy(square, -3, 2); //=> 2\n *\n *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n */\nvar minBy = /*#__PURE__*/_curry3(function minBy(f, a, b) {\n  return f(b) < f(a) ? b : a;\n});\nexport default minBy;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      const isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\nvar modulo = /*#__PURE__*/_curry2(function modulo(a, b) {\n  return a % b;\n});\nexport default modulo;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Move an item, at index `from`, to index `to`, in a list of elements.\n * A new list will be created containing the new elements order.\n *\n * @func\n * @memberOf R\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} from The source index\n * @param {Number} to The destination index\n * @param {Array} list The list which will serve to realise the move\n * @return {Array} The new list reordered\n * @example\n *\n *      R.move(0, 2, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['b', 'c', 'a', 'd', 'e', 'f']\n *      R.move(-1, 0, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['f', 'a', 'b', 'c', 'd', 'e'] list rotation\n */\nvar move = /*#__PURE__*/_curry3(function (from, to, list) {\n  var length = list.length;\n  var result = list.slice();\n  var positiveFrom = from < 0 ? length + from : from;\n  var positiveTo = to < 0 ? length + to : to;\n  var item = result.splice(positiveFrom, 1);\n\n  return positiveFrom < 0 || positiveFrom >= list.length || positiveTo < 0 || positiveTo >= list.length ? list : [].concat(result.slice(0, positiveTo)).concat(item).concat(result.slice(positiveTo, list.length));\n});\n\nexport default move;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      const double = R.multiply(2);\n *      const triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\nvar multiply = /*#__PURE__*/_curry2(function multiply(a, b) {\n  return a * b;\n});\nexport default multiply;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Negates its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number}\n * @example\n *\n *      R.negate(42); //=> -42\n */\nvar negate = /*#__PURE__*/_curry1(function negate(n) {\n  return -n;\n});\nexport default negate;","import _complement from './internal/_complement.js';\nimport _curry2 from './internal/_curry2.js';\nimport all from './all.js';\n\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *      const isOdd = n => n % 2 === 1;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\n */\nvar none = /*#__PURE__*/_curry2(function none(fn, input) {\n  return all(_complement(fn), input);\n});\nexport default none;","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\nimport nth from './nth.js';\n\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\nvar nthArg = /*#__PURE__*/_curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function () {\n    return nth(n, arguments);\n  });\n});\nexport default nthArg;","import _curry3 from './internal/_curry3.js';\n\n/**\n * `o` is a curried composition function that returns a unary function.\n * Like [`compose`](#compose), `o` performs right-to-left function composition.\n * Unlike [`compose`](#compose), the rightmost function passed to `o` will be\n * invoked with only one argument. Also, unlike [`compose`](#compose), `o` is\n * limited to accepting only 2 unary functions. The name o was chosen because\n * of its similarity to the mathematical composition operator ∘.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (b -> c) -> (a -> b) -> a -> c\n * @param {Function} f\n * @param {Function} g\n * @return {Function}\n * @see R.compose, R.pipe\n * @example\n *\n *      const classyGreeting = name => \"The name's \" + name.last + \", \" + name.first + \" \" + name.last\n *      const yellGreeting = R.o(R.toUpper, classyGreeting);\n *      yellGreeting({first: 'James', last: 'Bond'}); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.o(R.multiply(10), R.add(10))(-4) //=> 60\n *\n * @symb R.o(f, g, x) = f(g(x))\n */\nvar o = /*#__PURE__*/_curry3(function o(f, g, x) {\n  return f(g(x));\n});\nexport default o;","export default function _of(x) {\n  return [x];\n}","import _curry1 from './internal/_curry1.js';\nimport _of from './internal/_of.js';\n\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\nvar of = /*#__PURE__*/_curry1(_of);\nexport default of;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\nvar omit = /*#__PURE__*/_curry2(function omit(names, obj) {\n  var result = {};\n  var index = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    index[names[idx]] = 1;\n    idx += 1;\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nexport default omit;","import _arity from './internal/_arity.js';\nimport _curry1 from './internal/_curry1.js';\n\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      const addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\nvar once = /*#__PURE__*/_curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\nexport default once;","import _isFunction from './_isFunction.js';\nimport _toString from './_toString.js';\n\nexport default function _assertPromise(name, p) {\n  if (p == null || !_isFunction(p.then)) {\n    throw new TypeError('`' + name + '` expected a Promise, received ' + _toString(p, []));\n  }\n}","import _curry2 from './internal/_curry2.js';\nimport _assertPromise from './internal/_assertPromise.js';\n\n/**\n * Returns the result of applying the onFailure function to the value inside\n * a failed promise. This is useful for handling rejected promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig (e -> b) -> (Promise e a) -> (Promise e b)\n * @sig (e -> (Promise f b)) -> (Promise e a) -> (Promise f b)\n * @param {Function} onFailure The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(null, onFailure)`\n * @see R.then\n * @example\n *\n *      var failedFetch = (id) => Promise.reject('bad ID');\n *      var useDefault = () => ({ firstName: 'Bob', lastName: 'Loblaw' })\n *\n *      //recoverFromFailure :: String -> Promise ({firstName, lastName})\n *      var recoverFromFailure = R.pipe(\n *        failedFetch,\n *        R.otherwise(useDefault),\n *        R.then(R.pick(['firstName', 'lastName'])),\n *      );\n *      recoverFromFailure(12345).then(console.log)\n */\nvar otherwise = /*#__PURE__*/_curry2(function otherwise(f, p) {\n  _assertPromise('otherwise', p);\n\n  return p.then(null, f);\n});\nexport default otherwise;","import _curry3 from './internal/_curry3.js';\n\n// `Identity` is a functor that holds a single value, where `map` simply\n// transforms the held value with the provided function.\nvar Identity = function (x) {\n  return { value: x, map: function (f) {\n      return Identity(f(x));\n    } };\n};\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      const headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\nvar over = /*#__PURE__*/_curry3(function over(lens, f, x) {\n  // The value returned by the getter function is first transformed with `f`,\n  // then set as the value of an `Identity`. This is then mapped over with the\n  // setter function of the lens.\n  return lens(function (y) {\n    return Identity(f(y));\n  })(x).value;\n});\nexport default over;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\nvar pair = /*#__PURE__*/_curry2(function pair(fst, snd) {\n  return [fst, snd];\n});\nexport default pair;","import _arity from './_arity.js';\nimport _curry2 from './_curry2.js';\n\nexport default function _createPartialApplicator(concat) {\n  return _curry2(function (fn, args) {\n    return _arity(Math.max(0, fn.length - args.length), function () {\n      return fn.apply(this, concat(args, arguments));\n    });\n  });\n}","import _concat from './internal/_concat.js';\nimport _createPartialApplicator from './internal/_createPartialApplicator.js';\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided initially followed by the arguments provided to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partialRight, R.curry\n * @example\n *\n *      const multiply2 = (a, b) => a * b;\n *      const double = R.partial(multiply2, [2]);\n *      double(2); //=> 4\n *\n *      const greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const sayHello = R.partial(greet, ['Hello']);\n *      const sayHelloToMs = R.partial(sayHello, ['Ms.']);\n *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n */\nvar partial = /*#__PURE__*/_createPartialApplicator(_concat);\nexport default partial;","import _concat from './internal/_concat.js';\nimport _createPartialApplicator from './internal/_createPartialApplicator.js';\nimport flip from './flip.js';\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      const greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\nvar partialRight = /*#__PURE__*/_createPartialApplicator( /*#__PURE__*/flip(_concat));\nexport default partialRight;","import filter from './filter.js';\nimport juxt from './juxt.js';\nimport reject from './reject.js';\n\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.includes('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.includes('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\nvar partition = /*#__PURE__*/juxt([filter, reject]);\nexport default partition;","import _curry3 from './internal/_curry3.js';\nimport equals from './equals.js';\nimport path from './path.js';\n\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      const user1 = { address: { zipCode: 90210 } };\n *      const user2 = { address: { zipCode: 55555 } };\n *      const user3 = { name: 'Bob' };\n *      const users = [ user1, user2, user3 ];\n *      const isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\nvar pathEq = /*#__PURE__*/_curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});\nexport default pathEq;","import _curry3 from './internal/_curry3.js';\nimport defaultTo from './defaultTo.js';\nimport path from './path.js';\n\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\nvar pathOr = /*#__PURE__*/_curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, path(p, obj));\n});\nexport default pathOr;","import _curry3 from './internal/_curry3.js';\nimport path from './path.js';\n\n/**\n * Returns `true` if the specified object property at given path satisfies the\n * given predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Logic\n * @typedefn Idx = String | Int\n * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n * @param {Function} pred\n * @param {Array} propPath\n * @param {*} obj\n * @return {Boolean}\n * @see R.propSatisfies, R.path\n * @example\n *\n *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n */\nvar pathSatisfies = /*#__PURE__*/_curry3(function pathSatisfies(pred, propPath, obj) {\n  return propPath.length > 0 && pred(path(propPath, obj));\n});\nexport default pathSatisfies;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\nvar pick = /*#__PURE__*/_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default pick;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\nvar pickAll = /*#__PURE__*/_curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n  return result;\n});\nexport default pickAll;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      const isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\nvar pickBy = /*#__PURE__*/_curry2(function pickBy(test, obj) {\n  var result = {};\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nexport default pickBy;","import composeK from './composeK.js';\nimport reverse from './reverse.js';\n\n/**\n * Returns the left-to-right Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.pipeK(f, g, h)` is equivalent to `R.pipe(f, R.chain(g), R.chain(h))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)\n * @param {...Function}\n * @return {Function}\n * @see R.composeK\n * @deprecated since v0.26.0\n * @example\n *\n *      //  parseJson :: String -> Maybe *\n *      //  get :: String -> Object -> Maybe *\n *\n *      //  getStateCode :: Maybe String -> Maybe String\n *      const getStateCode = R.pipeK(\n *        parseJson,\n *        get('user'),\n *        get('address'),\n *        get('state'),\n *        R.compose(Maybe.of, R.toUpper)\n *      );\n *\n *      getStateCode('{\"user\":{\"address\":{\"state\":\"ny\"}}}');\n *      //=> Just('NY')\n *      getStateCode('[Invalid JSON]');\n *      //=> Nothing()\n * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))\n */\nexport default function pipeK() {\n  if (arguments.length === 0) {\n    throw new Error('pipeK requires at least one argument');\n  }\n  return composeK.apply(this, reverse(arguments));\n}","import _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\nvar prepend = /*#__PURE__*/_curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\nexport default prepend;","import multiply from './multiply.js';\nimport reduce from './reduce.js';\n\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\nvar product = /*#__PURE__*/reduce(multiply, 1);\nexport default product;","import _curry2 from './internal/_curry2.js';\nimport curryN from './curryN.js';\n\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\nvar useWith = /*#__PURE__*/_curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function () {\n    var args = [];\n    var idx = 0;\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\nexport default useWith;","import _map from './internal/_map.js';\nimport identity from './identity.js';\nimport pickAll from './pickAll.js';\nimport useWith from './useWith.js';\n\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @example\n *\n *      const abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      const fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      const kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\nvar project = /*#__PURE__*/useWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\nexport default project;","import _curry3 from './internal/_curry3.js';\nimport equals from './equals.js';\n\n/**\n * Returns `true` if the specified object property is equal, in\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n * You can test multiple properties with [`R.whereEq`](#whereEq).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig String -> a -> Object -> Boolean\n * @param {String} name\n * @param {*} val\n * @param {*} obj\n * @return {Boolean}\n * @see R.whereEq, R.propSatisfies, R.equals\n * @example\n *\n *      const abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      const fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      const rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      const alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      const kids = [abby, fred, rusty, alois];\n *      const hasBrownHair = R.propEq('hair', 'brown');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\nvar propEq = /*#__PURE__*/_curry3(function propEq(name, val, obj) {\n  return equals(val, obj[name]);\n});\nexport default propEq;","import _curry3 from './internal/_curry3.js';\nimport is from './is.js';\n\n/**\n * Returns `true` if the specified object property is of the given type;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Type\n * @sig Type -> String -> Object -> Boolean\n * @param {Function} type\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.is, R.propSatisfies\n * @example\n *\n *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n *      R.propIs(Number, 'x', {});            //=> false\n */\nvar propIs = /*#__PURE__*/_curry3(function propIs(type, name, obj) {\n  return is(type, obj[name]);\n});\nexport default propIs;","import _curry3 from './internal/_curry3.js';\nimport pathOr from './pathOr.js';\n\n/**\n * If the given, non-null object has an own property with the specified name,\n * returns the value of that property. Otherwise returns the provided default\n * value.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Object\n * @sig a -> String -> Object -> a\n * @param {*} val The default value.\n * @param {String} p The name of the property to return.\n * @param {Object} obj The object to query.\n * @return {*} The value of given property of the supplied object or the default value.\n * @example\n *\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const favorite = R.prop('favoriteLibrary');\n *      const favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n *\n *      favorite(alice);  //=> undefined\n *      favoriteWithDefault(alice);  //=> 'Ramda'\n */\nvar propOr = /*#__PURE__*/_curry3(function propOr(val, p, obj) {\n  return pathOr(val, [p], obj);\n});\nexport default propOr;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise. You can test multiple properties with\n * [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.where, R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\nvar propSatisfies = /*#__PURE__*/_curry3(function propSatisfies(pred, name, obj) {\n  return pred(obj[name]);\n});\nexport default propSatisfies;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      const fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\nvar props = /*#__PURE__*/_curry2(function props(ps, obj) {\n  var len = ps.length;\n  var out = [];\n  var idx = 0;\n\n  while (idx < len) {\n    out[idx] = obj[ps[idx]];\n    idx += 1;\n  }\n\n  return out;\n});\nexport default props;","import _curry2 from './internal/_curry2.js';\nimport _isNumber from './internal/_isNumber.js';\n\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in the set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\nvar range = /*#__PURE__*/_curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n  var result = [];\n  var n = from;\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n  return result;\n});\nexport default range;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * Similar to [`reduce`](#reduce), except moves through the input list from the\n * right to the left.\n *\n * The iterator function receives two values: *(value, acc)*, while the arguments'\n * order of `reduce`'s iterator function is *(acc, value)*.\n *\n * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduceRight` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> b) -> b -> [a] -> b\n * @param {Function} fn The iterator function. Receives two values, the current element from the array\n *        and the accumulator.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.addIndex\n * @example\n *\n *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n *      //    -               -2\n *      //   / \\              / \\\n *      //  1   -            1   3\n *      //     / \\              / \\\n *      //    2   -     ==>    2  -1\n *      //       / \\              / \\\n *      //      3   -            3   4\n *      //         / \\              / \\\n *      //        4   0            4   0\n *\n * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n */\nvar reduceRight = /*#__PURE__*/_curry3(function reduceRight(fn, acc, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    acc = fn(list[idx], acc);\n    idx -= 1;\n  }\n  return acc;\n});\nexport default reduceRight;","import _curryN from './internal/_curryN.js';\nimport _reduce from './internal/_reduce.js';\nimport _reduced from './internal/_reduced.js';\n\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator.\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      const isOdd = (acc, x) => x % 2 === 1;\n *      const xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      const ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\nvar reduceWhile = /*#__PURE__*/_curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  return _reduce(function (acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  }, a, list);\n});\nexport default reduceWhile;","import _curry1 from './internal/_curry1.js';\nimport _reduced from './internal/_reduced.js';\n\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * Note: this optimization is only available to the below functions:\n * - [`reduce`](#reduce)\n * - [`reduceWhile`](#reduceWhile)\n * - [`transduce`](#transduce)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.reduceWhile, R.transduce\n * @example\n *\n *     R.reduce(\n *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),\n *       [],\n *       [1, 2, 3, 4, 5]) // [1, 2, 3]\n */\nvar reduced = /*#__PURE__*/_curry1(_reduced);\nexport default reduced;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\nvar times = /*#__PURE__*/_curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n  list = new Array(len);\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n  return list;\n});\nexport default times;","import _curry2 from './internal/_curry2.js';\nimport always from './always.js';\nimport times from './times.js';\n\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      const obj = {};\n *      const repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\nvar repeat = /*#__PURE__*/_curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\nexport default repeat;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * The first two parameters correspond to the parameters of the\n * `String.prototype.replace()` function, so the second parameter can also be a\n * function.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\nvar replace = /*#__PURE__*/_curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\nexport default replace;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Scan is similar to [`reduce`](#reduce), but returns a list of successively\n * reduced values from the left\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @see R.reduce, R.mapAccum\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\nvar scan = /*#__PURE__*/_curry3(function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [acc];\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n  return result;\n});\nexport default scan;","import _curry2 from './internal/_curry2.js';\nimport ap from './ap.js';\nimport map from './map.js';\nimport prepend from './prepend.js';\nimport reduceRight from './reduceRight.js';\n\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\nvar sequence = /*#__PURE__*/_curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {\n    return ap(map(prepend, x), acc);\n  }, of([]), traversable);\n});\nexport default sequence;","import _curry3 from './internal/_curry3.js';\nimport always from './always.js';\nimport over from './over.js';\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\nvar set = /*#__PURE__*/_curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\nexport default set;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, a) -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @example\n *\n *      const diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\nvar sort = /*#__PURE__*/_curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\nexport default sort;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      const sortByFirstItem = R.sortBy(R.prop(0));\n *      const pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *\n *      const sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      const people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\nvar sortBy = /*#__PURE__*/_curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\nexport default sortBy;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Sorts a list according to a list of comparators.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Relation\n * @sig [(a, a) -> Number] -> [a] -> [a]\n * @param {Array} functions A list of comparator functions.\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted according to the comarator functions.\n * @example\n *\n *      const alice = {\n *        name: 'alice',\n *        age: 40\n *      };\n *      const bob = {\n *        name: 'bob',\n *        age: 30\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 40\n *      };\n *      const people = [clara, bob, alice];\n *      const ageNameSort = R.sortWith([\n *        R.descend(R.prop('age')),\n *        R.ascend(R.prop('name'))\n *      ]);\n *      ageNameSort(people); //=> [alice, clara, bob]\n */\nvar sortWith = /*#__PURE__*/_curry2(function sortWith(fns, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var result = 0;\n    var i = 0;\n    while (result === 0 && i < fns.length) {\n      result = fns[i](a, b);\n      i += 1;\n    }\n    return result;\n  });\n});\nexport default sortWith;","import invoker from './invoker.js';\n\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `str`.\n * @see R.join\n * @example\n *\n *      const pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\nvar split = /*#__PURE__*/invoker(1, 'split');\nexport default split;","import _curry2 from './internal/_curry2.js';\nimport length from './length.js';\nimport slice from './slice.js';\n\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\nvar splitAt = /*#__PURE__*/_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\nexport default splitAt;","import _curry2 from './internal/_curry2.js';\nimport slice from './slice.js';\n\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\nvar splitEvery = /*#__PURE__*/_curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n  var result = [];\n  var idx = 0;\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n  return result;\n});\nexport default splitEvery;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Takes a list and a predicate and returns a pair of lists with the following properties:\n *\n *  - the result of concatenating the two output lists is equivalent to the input list;\n *  - none of the elements of the first output list satisfies the predicate; and\n *  - if the second output list is non-empty, its first element satisfies the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n */\nvar splitWhen = /*#__PURE__*/_curry2(function splitWhen(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var prefix = [];\n\n  while (idx < len && !pred(list[idx])) {\n    prefix.push(list[idx]);\n    idx += 1;\n  }\n\n  return [prefix, Array.prototype.slice.call(list, idx)];\n});\nexport default splitWhen;","import _curry2 from './internal/_curry2.js';\nimport equals from './equals.js';\nimport take from './take.js';\n\n/**\n * Checks if a list starts with the provided sublist.\n *\n * Similarly, checks if a string starts with the provided substring.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> [a] -> Boolean\n * @sig String -> String -> Boolean\n * @param {*} prefix\n * @param {*} list\n * @return {Boolean}\n * @see R.endsWith\n * @example\n *\n *      R.startsWith('a', 'abc')                //=> true\n *      R.startsWith('b', 'abc')                //=> false\n *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar startsWith = /*#__PURE__*/_curry2(function (prefix, list) {\n  return equals(take(prefix.length, list), prefix);\n});\nexport default startsWith;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Subtracts its second argument from its first argument.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a - b`.\n * @see R.add\n * @example\n *\n *      R.subtract(10, 8); //=> 2\n *\n *      const minus5 = R.subtract(R.__, 5);\n *      minus5(17); //=> 12\n *\n *      const complementaryAngle = R.subtract(90);\n *      complementaryAngle(30); //=> 60\n *      complementaryAngle(72); //=> 18\n */\nvar subtract = /*#__PURE__*/_curry2(function subtract(a, b) {\n  return Number(a) - Number(b);\n});\nexport default subtract;","import _curry2 from './internal/_curry2.js';\nimport concat from './concat.js';\nimport difference from './difference.js';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\nvar symmetricDifference = /*#__PURE__*/_curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\nexport default symmetricDifference;","import _curry3 from './internal/_curry3.js';\nimport concat from './concat.js';\nimport differenceWith from './differenceWith.js';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      const eqA = R.eqBy(R.prop('a'));\n *      const l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      const l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\nvar symmetricDifferenceWith = /*#__PURE__*/_curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\nexport default symmetricDifferenceWith;","import _curry2 from './internal/_curry2.js';\nimport slice from './slice.js';\n\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      const isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n *\n *      R.takeLastWhile(x => x !== 'R' , 'Ramda'); //=> 'amda'\n */\nvar takeLastWhile = /*#__PURE__*/_curry2(function takeLastWhile(fn, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && fn(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(idx + 1, Infinity, xs);\n});\nexport default takeLastWhile;","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XTakeWhile = /*#__PURE__*/function () {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n\n  return XTakeWhile;\n}();\n\nvar _xtakeWhile = /*#__PURE__*/_curry2(function _xtakeWhile(f, xf) {\n  return new XTakeWhile(f, xf);\n});\nexport default _xtakeWhile;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xtakeWhile from './internal/_xtakeWhile.js';\nimport slice from './slice.js';\n\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      const isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n *\n *      R.takeWhile(x => x !== 'd' , 'Ramda'); //=> 'Ram'\n */\nvar takeWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && fn(xs[idx])) {\n    idx += 1;\n  }\n  return slice(0, idx, xs);\n}));\nexport default takeWhile;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XTap = /*#__PURE__*/function () {\n  function XTap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTap.prototype['@@transducer/init'] = _xfBase.init;\n  XTap.prototype['@@transducer/result'] = _xfBase.result;\n  XTap.prototype['@@transducer/step'] = function (result, input) {\n    this.f(input);\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XTap;\n}();\n\nvar _xtap = /*#__PURE__*/_curry2(function _xtap(f, xf) {\n  return new XTap(f, xf);\n});\nexport default _xtap;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xtap from './internal/_xtap.js';\n\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      const sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\nvar tap = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xtap, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\nexport default tap;","export default function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n}","import _cloneRegExp from './internal/_cloneRegExp.js';\nimport _curry2 from './internal/_curry2.js';\nimport _isRegExp from './internal/_isRegExp.js';\nimport toString from './toString.js';\n\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\nvar test = /*#__PURE__*/_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n  return _cloneRegExp(pattern).test(str);\n});\nexport default test;","import _curry2 from './internal/_curry2.js';\nimport _assertPromise from './internal/_assertPromise.js';\n\n/**\n * Returns the result of applying the onSuccess function to the value inside\n * a successfully resolved promise. This is useful for working with promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig (a -> b) -> (Promise e a) -> (Promise e b)\n * @sig (a -> (Promise e b)) -> (Promise e a) -> (Promise e b)\n * @param {Function} onSuccess The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(onSuccess)`\n * @see R.otherwise\n * @example\n *\n *      var makeQuery = (email) => ({ query: { email }});\n *\n *      //getMemberName :: String -> Promise ({firstName, lastName})\n *      var getMemberName = R.pipe(\n *        makeQuery,\n *        fetchMember,\n *        R.then(R.pick(['firstName', 'lastName']))\n *      );\n */\nvar then = /*#__PURE__*/_curry2(function then(f, p) {\n  _assertPromise('then', p);\n\n  return p.then(f);\n});\nexport default then;","import invoker from './invoker.js';\n\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\nvar toLower = /*#__PURE__*/invoker(0, 'toLowerCase');\nexport default toLower;","import _curry1 from './internal/_curry1.js';\nimport _has from './internal/_has.js';\n\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\nvar toPairs = /*#__PURE__*/_curry1(function toPairs(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n  return pairs;\n});\nexport default toPairs;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\nvar toPairsIn = /*#__PURE__*/_curry1(function toPairsIn(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n  return pairs;\n});\nexport default toPairsIn;","import invoker from './invoker.js';\n\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\nvar toUpper = /*#__PURE__*/invoker(0, 'toUpperCase');\nexport default toUpper;","import _reduce from './internal/_reduce.js';\nimport _xwrap from './internal/_xwrap.js';\nimport curryN from './curryN.js';\n\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the [`R.reduced`](#reduced) function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is\n * [`R.identity`](#identity). The init function can be used to provide an\n * initial accumulator, but is ignored by transduce.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n *\n *      const isOdd = (x) => x % 2 === 1;\n *      const firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));\n *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]\n */\nvar transduce = /*#__PURE__*/curryN(4, function transduce(xf, fn, acc, list) {\n  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});\nexport default transduce;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Transposes the rows and columns of a 2D list.\n * When passed a list of `n` lists of length `x`,\n * returns a list of `x` lists of length `n`.\n *\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [[a]] -> [[a]]\n * @param {Array} list A 2D list\n * @return {Array} A 2D list\n * @example\n *\n *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n *\n *      // If some of the rows are shorter than the following rows, their elements are skipped:\n *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\n * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\n * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\n */\nvar transpose = /*#__PURE__*/_curry1(function transpose(outerlist) {\n  var i = 0;\n  var result = [];\n  while (i < outerlist.length) {\n    var innerlist = outerlist[i];\n    var j = 0;\n    while (j < innerlist.length) {\n      if (typeof result[j] === 'undefined') {\n        result[j] = [];\n      }\n      result[j].push(innerlist[j]);\n      j += 1;\n    }\n    i += 1;\n  }\n  return result;\n});\nexport default transpose;","import _curry3 from './internal/_curry3.js';\nimport map from './map.js';\nimport sequence from './sequence.js';\n\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `traverse` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n * @param {Function} of\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Maybe.Nothing` if the given divisor is `0`\n *      const safeDiv = n => d => d === 0 ? Maybe.Nothing() : Maybe.Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Maybe.Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Maybe.Nothing\n */\nvar traverse = /*#__PURE__*/_curry3(function traverse(of, f, traversable) {\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](f, of) : sequence(of, map(f, traversable));\n});\nexport default traverse;","import _curry1 from './internal/_curry1.js';\n\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\nvar trim = !hasProtoTrim || /*#__PURE__*/ws.trim() || ! /*#__PURE__*/zeroWidth.trim() ? /*#__PURE__*/_curry1(function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n}) : /*#__PURE__*/_curry1(function trim(str) {\n  return str.trim();\n});\nexport default trim;","import _arity from './internal/_arity.js';\nimport _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send then to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(() => { throw 'foo'}, R.always('catched'))('bar') // => 'catched'\n *      R.tryCatch(R.times(R.identity), R.always([]))('s') // => []\n `` */\nvar tryCatch = /*#__PURE__*/_curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function () {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\nexport default tryCatch;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, `R.unapply` derives a variadic function from a function which\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\nvar unapply = /*#__PURE__*/_curry1(function unapply(fn) {\n  return function () {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\nexport default unapply;","import _curry1 from './internal/_curry1.js';\nimport nAry from './nAry.js';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> b) -> (a -> b)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      const takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\nvar unary = /*#__PURE__*/_curry1(function unary(fn) {\n  return nAry(1, fn);\n});\nexport default unary;","import _curry2 from './internal/_curry2.js';\nimport curryN from './curryN.js';\n\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b) -> (a -> c)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry\n * @example\n *\n *      const addFour = a => b => c => d => a + b + c + d;\n *\n *      const uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\nvar uncurryN = /*#__PURE__*/_curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function () {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n    return value;\n  });\n});\nexport default uncurryN;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      const f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\nvar unfold = /*#__PURE__*/_curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n  return result;\n});\nexport default unfold;","import _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\nimport compose from './compose.js';\nimport uniq from './uniq.js';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\nvar union = /*#__PURE__*/_curry2( /*#__PURE__*/compose(uniq, _concat));\nexport default union;","import _includesWith from './internal/_includesWith.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      const strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\nvar uniqWith = /*#__PURE__*/_curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n  while (idx < len) {\n    item = list[idx];\n    if (!_includesWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default uniqWith;","import _concat from './internal/_concat.js';\nimport _curry3 from './internal/_curry3.js';\nimport uniqWith from './uniqWith.js';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      const l1 = [{a: 1}, {a: 2}];\n *      const l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\nvar unionWith = /*#__PURE__*/_curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});\nexport default unionWith;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when, R.cond\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\nvar unless = /*#__PURE__*/_curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\nexport default unless;","import _identity from './internal/_identity.js';\nimport chain from './chain.js';\n\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\nvar unnest = /*#__PURE__*/chain(_identity);\nexport default unnest;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\nvar until = /*#__PURE__*/_curry3(function until(pred, fn, init) {\n  var val = init;\n  while (!pred(val)) {\n    val = fn(val);\n  }\n  return val;\n});\nexport default until;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Returns a list of all the properties, including prototype properties, of the\n * supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own and prototype properties.\n * @see R.values, R.keysIn\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.valuesIn(f); //=> ['X', 'Y']\n */\nvar valuesIn = /*#__PURE__*/_curry1(function valuesIn(obj) {\n  var prop;\n  var vs = [];\n  for (prop in obj) {\n    vs[vs.length] = obj[prop];\n  }\n  return vs;\n});\nexport default valuesIn;","import _curry2 from './internal/_curry2.js';\n\n// `Const` is a functor that effectively ignores the function given to `map`.\nvar Const = function (x) {\n  return { value: x, 'fantasy-land/map': function () {\n      return this;\n    } };\n};\n\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\nvar view = /*#__PURE__*/_curry2(function view(lens, x) {\n  // Using `Const` effectively ignores the setter function of the `lens`,\n  // leaving the value returned by the getter function unmodified.\n  return lens(Const)(x).value;\n});\nexport default view;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless, R.cond\n * @example\n *\n *      // truncate :: String -> String\n *      const truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\nvar when = /*#__PURE__*/_curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\nexport default when;","import _curry2 from './internal/_curry2.js';\nimport _has from './internal/_has.js';\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.whereEq\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\nvar where = /*#__PURE__*/_curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n  return true;\n});\nexport default where;","import _curry2 from './internal/_curry2.js';\nimport equals from './equals.js';\nimport map from './map.js';\nimport where from './where.js';\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propEq, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\nvar whereEq = /*#__PURE__*/_curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\nexport default whereEq;","import _includes from './internal/_includes.js';\nimport _curry2 from './internal/_curry2.js';\nimport flip from './flip.js';\nimport reject from './reject.js';\n\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference, R.remove\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\nvar without = /*#__PURE__*/_curry2(function (xs, list) {\n  return reject(flip(_includes)(xs), list);\n});\nexport default without;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\nvar xprod = /*#__PURE__*/_curry2(function xprod(a, b) {\n  // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n  while (idx < ilen) {\n    j = 0;\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default xprod;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\nvar zip = /*#__PURE__*/_curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n  return rv;\n});\nexport default zip;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\nvar zipObj = /*#__PURE__*/_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n  return out;\n});\nexport default zipObj;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      const f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\nvar zipWith = /*#__PURE__*/_curry3(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n  return rv;\n});\nexport default zipWith;","import curryN from './curryN.js';\nimport _curry1 from './internal/_curry1.js';\n\n/**\n * Creates a thunk out of a function. A thunk delays a calculation until\n * its result is needed, providing lazy evaluation of arguments.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig ((a, b, ..., j) -> k) -> (a, b, ..., j) -> (() -> k)\n * @param {Function} fn A function to wrap in a thunk\n * @return {Function} Expects arguments for `fn` and returns a new function\n *  that, when called, applies those arguments to `fn`.\n * @see R.partial, R.partialRight\n * @example\n *\n *      R.thunkify(R.identity)(42)(); //=> 42\n *      R.thunkify((a, b) => a + b)(25, 17)(); //=> 42\n */\nvar thunkify = /*#__PURE__*/_curry1(function thunkify(fn) {\n  return curryN(fn.length, function createThunk() {\n    var fnArgs = arguments;\n    return function invokeThunk() {\n      return fn.apply(this, fnArgs);\n    };\n  });\n});\n\nexport default thunkify;","<script>\n  export let value;\n\n  const names = ['Timer size', 'Scramble size', 'Color Scheme'];\n</script>\n\n{#each value as val, i}\n  {#if names[i] === 'Color Scheme'}\n    {#each [val] as { U, R, F, L, Bl, Br }}\n      <input bind:value={U} />\n      <input bind:value={R} />\n      <input bind:value={F} />\n      <input bind:value={L} />\n      <input bind:value={Bl} />\n      <input bind:value={Br} />\n    {/each}\n  {:else}\n    <p>\n      {names[i]}:\n      <input type=\"number\" min=\"0\" bind:value={val} />\n    </p>\n  {/if}\n{/each}\n\n{#each value as val, i}\n  <p>{names[i]}: {val}</p>\n{/each}\n","<script>\n  import { createEventDispatcher, getContext } from 'svelte';\n  import { fly } from 'svelte/transition';\n  import Settings from './Settings.svelte';\n\n  export let train;\n  export let selection;\n  export let value;\n\n  export let closeButton = true;\n  export let closeOnEsc = true;\n  export let closeOnOuterClick = true;\n  export let styleBg = {};\n  export let styleWindow = {};\n  export let styleContent = {};\n\n  let background;\n  let wrap;\n\n  let settingsOpen = false;\n\n  const dispatch = createEventDispatcher();\n\n  const changeMode = mode => dispatch('viewUpdate', { mode });\n\n  const handleKeyup = ({ key }) => {\n    if (settingsOpen && key === 'Escape') {\n      settingsOpen = false;\n    }\n  };\n</script>\n\n<style>\n  * {\n    box-sizing: border-box;\n  }\n\n  .bg {\n    top: 0;\n    left: 0;\n    position: fixed;\n    z-index: 1000;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 100vw;\n    height: 100vh;\n    background: rgba(0, 0, 0, 0.66);\n  }\n\n  .window-wrap {\n    position: relative;\n    margin: 2rem;\n    max-height: 100%;\n  }\n\n  .window {\n    position: relative;\n    width: 40rem;\n    max-width: 100%;\n    max-height: 100%;\n    margin: 2rem auto;\n    color: black;\n    border-radius: 0.5rem;\n    background: white;\n  }\n\n  .content {\n    position: relative;\n    padding: 1rem;\n    max-height: calc(100vh - 4rem);\n    overflow: auto;\n  }\n\n  .close {\n    display: block;\n    box-sizing: border-box;\n    position: absolute;\n    z-index: 1000;\n    top: 1rem;\n    right: 1rem;\n    margin: 0;\n    padding: 0;\n    width: 1.5rem;\n    height: 1.5rem;\n    border: 0;\n    color: black;\n    border-radius: 1.5rem;\n    background: white;\n    box-shadow: 0 0 0 1px black;\n    transition: transform 0.2s cubic-bezier(0.25, 0.1, 0.25, 1),\n      background 0.2s cubic-bezier(0.25, 0.1, 0.25, 1);\n    -webkit-appearance: none;\n  }\n\n  .close:before,\n  .close:after {\n    content: '';\n    display: block;\n    box-sizing: border-box;\n    position: absolute;\n    top: 50%;\n    width: 1rem;\n    height: 1px;\n    background: black;\n    transform-origin: center;\n    transition: height 0.2s cubic-bezier(0.25, 0.1, 0.25, 1),\n      background 0.2s cubic-bezier(0.25, 0.1, 0.25, 1);\n  }\n\n  .close:before {\n    -webkit-transform: translate(0, -50%) rotate(45deg);\n    -moz-transform: translate(0, -50%) rotate(45deg);\n    transform: translate(0, -50%) rotate(45deg);\n    left: 0.25rem;\n  }\n\n  .close:after {\n    -webkit-transform: translate(0, -50%) rotate(-45deg);\n    -moz-transform: translate(0, -50%) rotate(-45deg);\n    transform: translate(0, -50%) rotate(-45deg);\n    left: 0.25rem;\n  }\n\n  .close:hover {\n    background: black;\n  }\n\n  .close:hover:before,\n  .close:hover:after {\n    height: 2px;\n    background: white;\n  }\n\n  .close:focus {\n    border-color: #3399ff;\n    box-shadow: 0 0 0 2px #3399ff;\n  }\n\n  .close:active {\n    transform: scale(0.9);\n  }\n\n  .close:hover,\n  .close:focus,\n  .close:active {\n    outline: none;\n  }\n\n  .main {\n    background-color: white;\n    top: -1px;\n    position: -webkit-sticky;\n    position: sticky;\n    padding: 10px;\n    font-size: 200%;\n    font-weight: bold;\n    user-select: none;\n    -webkit-user-select: none;\n    width: auto;\n    overflow: auto;\n  }\n\n  .title {\n    float: left;\n  }\n\n  .mode {\n    float: right;\n    padding-left: 10px;\n  }\n</style>\n\n<svelte:window on:keyup={handleKeyup} />\n\n<div class=\"main\">\n  <div class=\"title\">Megaminx PLL Trainer</div>\n  {#if train}\n    <div class=\"mode\" on:click={() => changeMode(1)}>Train</div>\n  {/if}\n  {#if selection}\n    <div class=\"mode\" on:click={() => changeMode(0)}>Selection</div>\n  {/if}\n  <div class=\"mode\" on:click={() => (settingsOpen = true)}>Settings</div>\n</div>\n<div>\n  {#if settingsOpen}\n    <div\n      class=\"bg\"\n      bind:this={background}\n      on:click={event => (event.target === background || event.target === wrap ? (settingsOpen = false) : '')}>\n      <div class=\"window-wrap\" bind:this={wrap}>\n        <div class=\"window\">\n          {#if false}\n            <button on:click={() => (settingsOpen = false)} class=\"close\" />\n          {/if}\n          <div class=\"content\">\n            <Settings bind:value />\n          </div>\n        </div>\n      </div>\n    </div>\n  {/if}\n  <slot />\n</div>\n","!function(t,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define(n):t.dayjs=n()}(this,function(){\"use strict\";var t=\"millisecond\",n=\"second\",e=\"minute\",r=\"hour\",i=\"day\",s=\"week\",u=\"month\",o=\"quarter\",a=\"year\",h=/^(\\d{4})-?(\\d{1,2})-?(\\d{0,2})[^0-9]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?.?(\\d{1,3})?$/,f=/\\[([^\\]]+)]|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,c=function(t,n,e){var r=String(t);return!r||r.length>=n?t:\"\"+Array(n+1-r.length).join(e)+t},d={s:c,z:function(t){var n=-t.utcOffset(),e=Math.abs(n),r=Math.floor(e/60),i=e%60;return(n<=0?\"+\":\"-\")+c(r,2,\"0\")+\":\"+c(i,2,\"0\")},m:function(t,n){var e=12*(n.year()-t.year())+(n.month()-t.month()),r=t.clone().add(e,u),i=n-r<0,s=t.clone().add(e+(i?-1:1),u);return Number(-(e+(n-r)/(i?r-s:s-r))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(h){return{M:u,y:a,w:s,d:i,h:r,m:e,s:n,ms:t,Q:o}[h]||String(h||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},$={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\")},l=\"en\",m={};m[l]=$;var y=function(t){return t instanceof v},M=function(t,n,e){var r;if(!t)return null;if(\"string\"==typeof t)m[t]&&(r=t),n&&(m[t]=n,r=t);else{var i=t.name;m[i]=t,r=i}return e||(l=r),r},g=function(t,n,e){if(y(t))return t.clone();var r=n?\"string\"==typeof n?{format:n,pl:e}:n:{};return r.date=t,new v(r)},D=d;D.l=M,D.i=y,D.w=function(t,n){return g(t,{locale:n.$L,utc:n.$u})};var v=function(){function c(t){this.$L=this.$L||M(t.locale,null,!0)||l,this.parse(t)}var d=c.prototype;return d.parse=function(t){this.$d=function(t){var n=t.date,e=t.utc;if(null===n)return new Date(NaN);if(D.u(n))return new Date;if(n instanceof Date)return new Date(n);if(\"string\"==typeof n&&!/Z$/i.test(n)){var r=n.match(h);if(r)return e?new Date(Date.UTC(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)):new Date(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)}return new Date(n)}(t),this.init()},d.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},d.$utils=function(){return D},d.isValid=function(){return!(\"Invalid Date\"===this.$d.toString())},d.isSame=function(t,n){var e=g(t);return this.startOf(n)<=e&&e<=this.endOf(n)},d.isAfter=function(t,n){return g(t)<this.startOf(n)},d.isBefore=function(t,n){return this.endOf(n)<g(t)},d.$g=function(t,n,e){return D.u(t)?this[n]:this.set(e,t)},d.year=function(t){return this.$g(t,\"$y\",a)},d.month=function(t){return this.$g(t,\"$M\",u)},d.day=function(t){return this.$g(t,\"$W\",i)},d.date=function(t){return this.$g(t,\"$D\",\"date\")},d.hour=function(t){return this.$g(t,\"$H\",r)},d.minute=function(t){return this.$g(t,\"$m\",e)},d.second=function(t){return this.$g(t,\"$s\",n)},d.millisecond=function(n){return this.$g(n,\"$ms\",t)},d.unix=function(){return Math.floor(this.valueOf()/1e3)},d.valueOf=function(){return this.$d.getTime()},d.startOf=function(t,o){var h=this,f=!!D.u(o)||o,c=D.p(t),d=function(t,n){var e=D.w(h.$u?Date.UTC(h.$y,n,t):new Date(h.$y,n,t),h);return f?e:e.endOf(i)},$=function(t,n){return D.w(h.toDate()[t].apply(h.toDate(),(f?[0,0,0,0]:[23,59,59,999]).slice(n)),h)},l=this.$W,m=this.$M,y=this.$D,M=\"set\"+(this.$u?\"UTC\":\"\");switch(c){case a:return f?d(1,0):d(31,11);case u:return f?d(1,m):d(0,m+1);case s:var g=this.$locale().weekStart||0,v=(l<g?l+7:l)-g;return d(f?y-v:y+(6-v),m);case i:case\"date\":return $(M+\"Hours\",0);case r:return $(M+\"Minutes\",1);case e:return $(M+\"Seconds\",2);case n:return $(M+\"Milliseconds\",3);default:return this.clone()}},d.endOf=function(t){return this.startOf(t,!1)},d.$set=function(s,o){var h,f=D.p(s),c=\"set\"+(this.$u?\"UTC\":\"\"),d=(h={},h[i]=c+\"Date\",h.date=c+\"Date\",h[u]=c+\"Month\",h[a]=c+\"FullYear\",h[r]=c+\"Hours\",h[e]=c+\"Minutes\",h[n]=c+\"Seconds\",h[t]=c+\"Milliseconds\",h)[f],$=f===i?this.$D+(o-this.$W):o;if(f===u||f===a){var l=this.clone().set(\"date\",1);l.$d[d]($),l.init(),this.$d=l.set(\"date\",Math.min(this.$D,l.daysInMonth())).toDate()}else d&&this.$d[d]($);return this.init(),this},d.set=function(t,n){return this.clone().$set(t,n)},d.get=function(t){return this[D.p(t)]()},d.add=function(t,o){var h,f=this;t=Number(t);var c=D.p(o),d=function(n){var e=g(f);return D.w(e.date(e.date()+Math.round(n*t)),f)};if(c===u)return this.set(u,this.$M+t);if(c===a)return this.set(a,this.$y+t);if(c===i)return d(1);if(c===s)return d(7);var $=(h={},h[e]=6e4,h[r]=36e5,h[n]=1e3,h)[c]||1,l=this.valueOf()+t*$;return D.w(l,this)},d.subtract=function(t,n){return this.add(-1*t,n)},d.format=function(t){var n=this;if(!this.isValid())return\"Invalid Date\";var e=t||\"YYYY-MM-DDTHH:mm:ssZ\",r=D.z(this),i=this.$locale(),s=this.$H,u=this.$m,o=this.$M,a=i.weekdays,h=i.months,c=function(t,r,i,s){return t&&(t[r]||t(n,e))||i[r].substr(0,s)},d=function(t){return D.s(s%12||12,t,\"0\")},$=i.meridiem||function(t,n,e){var r=t<12?\"AM\":\"PM\";return e?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:o+1,MM:D.s(o+1,2,\"0\"),MMM:c(i.monthsShort,o,h,3),MMMM:h[o]||h(this,e),D:this.$D,DD:D.s(this.$D,2,\"0\"),d:String(this.$W),dd:c(i.weekdaysMin,this.$W,a,2),ddd:c(i.weekdaysShort,this.$W,a,3),dddd:a[this.$W],H:String(s),HH:D.s(s,2,\"0\"),h:d(1),hh:d(2),a:$(s,u,!0),A:$(s,u,!1),m:String(u),mm:D.s(u,2,\"0\"),s:String(this.$s),ss:D.s(this.$s,2,\"0\"),SSS:D.s(this.$ms,3,\"0\"),Z:r};return e.replace(f,function(t,n){return n||l[t]||r.replace(\":\",\"\")})},d.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},d.diff=function(t,h,f){var c,d=D.p(h),$=g(t),l=6e4*($.utcOffset()-this.utcOffset()),m=this-$,y=D.m(this,$);return y=(c={},c[a]=y/12,c[u]=y,c[o]=y/3,c[s]=(m-l)/6048e5,c[i]=(m-l)/864e5,c[r]=m/36e5,c[e]=m/6e4,c[n]=m/1e3,c)[d]||m,f?y:D.a(y)},d.daysInMonth=function(){return this.endOf(u).$D},d.$locale=function(){return m[this.$L]},d.locale=function(t,n){if(!t)return this.$L;var e=this.clone();return e.$L=M(t,n,!0),e},d.clone=function(){return D.w(this.toDate(),this)},d.toDate=function(){return new Date(this.$d)},d.toJSON=function(){return this.toISOString()},d.toISOString=function(){return this.$d.toISOString()},d.toString=function(){return this.$d.toUTCString()},c}();return g.prototype=v.prototype,g.extend=function(t,n){return t(n,v,g),g},g.locale=M,g.isDayjs=y,g.unix=function(t){return g(1e3*t)},g.en=m[l],g.Ls=m,g});\n","<script>\n  import { createEventDispatcher } from 'svelte';\n  import dayjs from 'dayjs';\n  import * as R from 'ramda';\n\n  const dispatch = createEventDispatcher();\n  const updateTimesArray = () => dispatch('newTime', { time: timerText });\n\n  export let value;\n\n  $: timerSize = R.nth(0, value) || 50;\n\n  let startTime;\n  let timeout;\n  let allowed = true;\n  let green = false;\n  let red = false;\n  let running = false;\n  let timerColor = 'black';\n  let timerText = 'Ready';\n  let waiting = false;\n\n  const msToTime = t => {\n    const time = Number(t);\n\n    const min = Math.floor(time / (60 * 1000));\n    let s = ((time - min * 60 * 1000) / 1000).toFixed(2);\n    if (min > 0 && s.length === 4) {\n      s = '0' + s;\n    }\n\n    return `${min ? min + ':' : ''}${s}`;\n  };\n\n  const displayTime = () => (timerText = msToTime(dayjs().diff(startTime)));\n\n  const startTimer = () => {\n    running = true;\n    timeout = setInterval(displayTime, 10);\n    startTime = dayjs();\n    green = false;\n  };\n\n  const stopTimer = () => {\n    running = false;\n    waiting = true;\n    red = true;\n    clearTimeout(timeout);\n\n    timerText = msToTime(dayjs().diff(startTime));\n    updateTimesArray();\n  };\n\n  const timerSetReady = () => {\n    waiting = false;\n    timerText = '0.00';\n    green = true;\n  };\n\n  const timerAfterStop = () => {\n    red = false;\n  };\n\n  const down = event => {\n    if (!allowed) {\n      return;\n    }\n    if (running) {\n      stopTimer();\n    } else if (event.code === 'Space') {\n      timerSetReady();\n    }\n    allowed = false;\n  };\n\n  const up = event => {\n    if (!running && !waiting && event.code === 'Space') {\n      startTimer();\n    } else {\n      timerAfterStop();\n    }\n    allowed = true;\n  };\n</script>\n\n<style>\n  div {\n    text-align: center;\n  }\n\n  .red {\n    color: red;\n  }\n\n  .green {\n    color: green;\n  }\n</style>\n\n<svelte:window on:keydown={down} on:keyup={up} />\n\n<div\n  class:green\n  class:red\n  on:touchstart={() => down({ code: 'Space' })}\n  on:touchend={() => up({ code: 'Space' })}\n  style=\"font-size:{timerSize}px\">\n   {timerText}\n</div>\n","const algGroup = [\n  {\n    name: 'CPLL',\n    cases: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14],\n  },\n  {\n    name: 'EPLL',\n    cases: [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25],\n  },\n  {\n    name: '1x3 Line',\n    cases: [\n      26,\n      27,\n      28,\n      29,\n      30,\n      31,\n      32,\n      33,\n      34,\n      35,\n      36,\n      37,\n      38,\n      39,\n      40,\n      41,\n      42,\n      43,\n      44,\n    ],\n  },\n  {\n    name: '2x2 Block',\n    cases: [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59],\n  },\n];\n\nconst algInfo = [\n  {\n    name: 'A1+',\n    a: \"(R' BR' R BR) (R' F' R BR') (R' BR F R)\",\n    a2: \"F' R' F R U' R' F' R2 U R' U' R' F R\",\n  },\n  {\n    name: 'A1-',\n    a: \"(R' F' BR' R) (BR R' F R) (BR' R' BR R)\",\n    a2: \"R' F' R U R U' R2' F R U R' F' R F\",\n  },\n  {\n    name: 'A2+',\n    a: \"BR' (R' U L U') (R' U L' U') R2 BR\",\n    a2: '',\n  },\n  {\n    name: 'A2-',\n    a: \"BR' R2' (U L U' R) (U L' U' R) BR\",\n    a2: '',\n  },\n  {\n    name: 'E1',\n    a: \"R' U' R' D' R U' R' D R U R' D' R U R' D R2\",\n    a2: \"R U R' U R' U' R F' R U R' U' R' F R2 U' R2' U R\",\n  },\n  {\n    name: 'E2',\n    a: \"R2 U R' y (R U' R' U)3 y' R U' R2'\",\n    a2: '',\n  },\n  {\n    name: 'E3',\n    a: \"L' R U R' (U R U' R')2 U R U2' R' L\",\n    a2: '',\n  },\n  {\n    name: 'K1+',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'K1-',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'K2+',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'K2-',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'H1+',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'H1-',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'H2+',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'H2-',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'Q1+',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'Q1-',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'Q2+',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'Q2-',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'U1+',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'U1-',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'U2+',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'U2-',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'Z1',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'Z2',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'Z3',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'D+',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'D-',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'F1+',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'F1-',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'F2+',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'F2-',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'F3+',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'F3-',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'F4+',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'F4-',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'F5+',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'F5-',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'J1+',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'J1-',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'J2+',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'J2-',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'J3+',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'J3-',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'M',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'V1+',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'V1-',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'V2+',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'V2-',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'V3+',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'V3-',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'V4+',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'V4-',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'W',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'Y1+',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'Y1-',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'Y2+',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'Y2-',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'Y3+',\n    a: '',\n    a2: '',\n  },\n  {\n    name: 'Y3-',\n    a: '',\n    a2: '',\n  },\n];\n\nexport { algGroup, algInfo };\n","// Cases done : 1-30\nconst megaPllMap = [\n  [\n    \"R U R2' U2' R U2 R U R' U2 R' U2' R2 U2' R'\",\n    \"R U R' U2 R2' U' R2 U' R U R2 U R2' U2 R'\",\n    \"R2 U R2 U2' R2 U2 R U R' U2 R2' U2' R2' U2' R2'\",\n    \"R U R' U2 R2' U' R2 U' R U' R' U2 R2' U R2\",\n    \"R U R' U2 R' U' R U' R U' R' U2 R' U R\",\n    \"R2 U R2' U2 R' U' R U' R2 U' R2' U2 R' U R\",\n    \"R' U2 R' U2' R2 U R U2' R2 U2' R U2 R2 U2 R'\",\n    \"R' U2 R' U2' R2 U R U' R2 U2 R U2' R2 U R'\",\n    \"R U2' R' U' R2 U2' R2' U' R2 U2' R2' U' R U2' R'\",\n    \"R U2' R' U' R2' U2' R2 U' R2' U2' R2 U' R U2' R'\",\n    \"R2 U2' R2' U' R2 U2' R2' U' R2 U2' R2' U' R2 U2' R2'\",\n    \"R2 U2' R2' U' R2 U2' R2' U' R2' U2' R2 U' R2' U2' R2\",\n    \"R2 U2' R2' U' R2' U2' R2 U' R2' U2' R2 U' R2 U2' R2'\",\n    \"R2' U2' R2 U' R2 U2' R2' U' R2 U2' R2' U' R2' U2' R2\",\n    \"R2' U2' R2 U' R2' U2' R2 U' R2 U2' R2' U' R2 U2' R2'\",\n    \"R2' U2' R2 U' R2' U2' R2 U' R2' U2' R2 U' R2' U2' R2\",\n    \"R' U2' R U' R2 U2' R2' U' R2 U2' R2' U' R' U2' R\",\n    \"R' U2' R U' R2' U2' R2 U' R2' U2' R2 U' R' U2' R\",\n    \"R' U R2 U2' R U2 R2 U' R U R2 U2' R' U2 R'\",\n    \"R' U2 R2 U2 R U2' R2 U2' R U R2 U2' R' U2 R'\",\n    \"R2' U2' R2' U2' R2' U2 R' U R U2  R2 U2' R2 U R2\",\n    \"R' U2 R2' U R2 U R U' R2 U' R2' U2 R' U R\",\n    \"R' U2' R2 U2' R' U2 R' U R U2 R U2' R2' U R\",\n    \"R U2' R2' U2' R' U2 R2' U2' R2' U R2 U2' R2 U2 R U2' R\",\n    \"R U' R2' U2 R' U2' R2' U2 R2' U R2 U2' R2 U2 R U2' R\",\n    \"R2' U R2 U R2 U2 R2 U2' R U' R' U2' R2' U2 R U' R2\",\n    \"R' U2 R2 U2' R2' U' R2 U2' R2 U2 R U R' U2 R U2' R\",\n    \"R' U2 R2' U2' R2 U' R2' U2' R U2 R U R' U2 R U2' R\",\n    \"R U R2' U' R2' U2' R2 U2' R U2 R2 U2 R2' U R U' R'\",\n    \"R U R2' U' R2' U' R2 U2 R U2' R2 U R2' U R U' R'\",\n    \"R2 U2 R U2' R2' U2 R' U R U2 R2 U2' R2 U' R2 U2' R2'\",\n    \"R2 U2 R U' R' U' R2 U R2 U R U2' R2' U2 R' U' R'\",\n    \"R2' U R2 U' R2 U2' R2 U2 R U R' U2 R2' U2' R U' R2\",\n    \"R' U' R' U2 R2' U2' R U R2 U R2 U' R' U' R U2 R2\",\n    \"R2 U' R U2' R2' U2 R' U R U2 R2 U2' R2 U' R2 U R2'\",\n    \"R2' U2' R2 U' R2 U2' R2 U2 R U R' U2 R2' U2' R U2 R2\",\n    \"R' U' R U R2' U R2 U2' R U2 R2 U' R2' U' R2' U R\",\n    \"R' U' R U R2' U2 R2 U2 R U2' R2 U2' R2' U' R2' U R\",\n    \"R U2' R U2 R2 U2' R2 U R2' U2 R2' U2' R' U2 R2' U' R\",\n    \"R U2' R U2 R2 U2' R2 U R2' U2' R2' U2 R' U2' R2' U2' R\",\n    \"R U2' R U2 R' U R U2 R U2' R2' U' R2 U2' R2' U2 R'\",\n    \"R U2' R U2 R' U R U2 R2 U2' R2 U' R2' U2' R2 U2 R'\",\n    \"R2 U' R U2 R2' U2' R' U' R U2' R2 U2 R2 U R2 U R2'\",\n    \"R U R U R2 U R U' R2 U' R' U R' U R' U' R2 U2' R'\",\n    \"R U R U R2 U2 R U2' R2 U' R' U R' U2 R' U2' R2 U2' R'\",\n    \"R U R2' U2' R U2 R U R U' R2' U2' R' U2 R2' U R' U2' R'\",\n    \"R U R2' U2' R2 U' R' U2' R U' R' U2' R U' R2' U2' R2 U2' R'\",\n    \"R U R' U2 R2' U2' R' U R2' U' R' U R2' U' R' U2 R2' U2 R'\",\n    \"R U R' U' R U2' R2 U' R2' U2' R' U R U R2 U R2' U2 R'\",\n    \"R U2 R U' R2 U R2 U' R U R' U R2' U' R2' U R' U2 R'\",\n    \"R U2 R2' U2' R2 U2 R2' U2 R2 U2' R2 U2 R U R' U2 R U2' R\",\n    \"R U2' R2 U R2' U2 R' U2' R2' U2' R2 U' R U R2 U R2' U2 R'\",\n    \"R U2' R2 U2' R2 U R U' R2 U2' R2' U2' R' U2 R2' U' R2' U2 R'\",\n    \"R U2' R2 U2' R2 U R U' R2 U' R2' U2 R' U2' R2' U2' R2' U2 R'\",\n    \"R U2' R2' U2' R' U2 R2' U2' R2' U R2 U2 R2 U2' R U2 R2 U R'\",\n    \"R U2' R' U R U2 R2 U2 R2' U R' U' R2' U2' R2 U2 R U2 R'\",\n    \"R U' R U2 R2 U2' R2 U2 R U R' U2 R2' U2' R2' U2 R' U R'\",\n    \"R U' R2' U2 R' U2' R2' U2 R2' U R2 U2 R2 U2' R U2 R2 U R'\",\n    \"R U' R2' U2 R' U2' R' U2 R2 U R2' U2 R U2' R U2 R2 U R'\",\n    \"R U' R2' U2 R' U2' R' U2 R2 U R2' U2 R' U R2 U2 R U2' R\",\n    \"R2 U R2 U R2 U' R2' U2' R2' U2 R' U R U2 R2 U2 R2' U' R2'\",\n    \"R2 U R2 U2 R2 U2' R U2 R2 U R2' U2' R' U2 R2' U2' R2' U2' R2'\",\n    \"R2 U R2 U2 R2 U2' R U2 R2 U2 R2' U2 R' U2' R2' U2 R2' U2' R2'\",\n    \"R2 U R2 U2' R2 U2 R U R2 U2 R2 U2' R2' U2 R2 U2' R U2' R2'\",\n    \"R2 U R2 U2' R2 U2 R U2' R2 U R2' U2 R' U2' R2' U2 R2' U2' R2'\",\n    \"R2 U R2 U2' R2' U' R' U2' R U' R' U2' R U' R2 U2' R2' U2' R2'\",\n    \"R2 U R2' U R U R2' U' R' U R2' U' R2 U' R' U R2' U2' R2'\",\n    \"R2 U R2' U R2 U R2 U' R U R2 U' R2' U' R' U R2' U2' R2'\",\n    \"R2 U R' U2' R2' U2 R2 U2' R2' U2 R2' U R' U2 R2' U2' R2' U2' R2'\",\n    \"R2 U R' U2' R' U2' R' U' R U2' R U2 R2' U R2 U' R U' R2'\",\n    \"R2 U2 R2 U2' R2' U2 R2 U2 R2' U2' R U2 R U R' U2 R U2' R\",\n    \"R2 U2 R' U R2' U' R2 U' R' U R2' U' R2' U R U R2' U2 R2'\",\n    \"R2 U2' R2 U2 R U R2 U' R2 U2' R2' U2 R U R2 U2 R2' U2 R2\",\n    \"R2 U2' R2' U R2 U2 R2' U2 R2 U2' R2 U2' R2' U' R2 U2' R2' U' R2'\",\n    \"R2 U2' R2' U R2 U2 R2' U2 R2 U2' R2' U2' R2 U' R2' U2' R2 U' R2'\",\n    \"R2 U2' R2' U R2 U' R2' U2' R2 U2 R2' U R2 U' R2' U2' R2 U' R2'\",\n    \"R2 U' R2 U2 R' U2' R2' U2 R2' U R2 U2 R2 U2' R U2 R2' U R2'\",\n    \"R2 U' R2 U2 R' U2' R' U2 R2 U R2' U2 R U2' R U2 R2' U R2'\",\n    \"R2 U' R' U2 R2' U2' R U2 R U R' U2 R' U2' R2 U2 R U R2'\",\n    \"R2 U' R' U2 R' U2 R2' U' R2 U' R U R2 U R2' U R U R2'\",\n    \"R2' U R U R2' U' R2 U2' R' U2 R' U R U2 R U2 R' U' R2\",\n    \"R2' U R2 U R2 U' R U R2 U R2' U' R' U R2' U' R2' U2' R2\",\n    \"R2' U R2 U R2 U' R U R2' U R2 U' R U R2 U' R' U2' R2\",\n    \"R2' U R2 U' R2' U2' R' U' R U2' R2 U R2' U R' U R U2 R2\",\n    \"R2' U R' U2' R2' U2' R' U' R U2' R2 U2 R2 U R2' U' R U' R2\",\n    \"R2' U2' R2 U R2' U2 R2 U2 R2' U2' R2 U2' R2' U' R2 U2' R2' U' R2\",\n    \"R2' U2' R2 U R2' U2 R2 U2 R2' U2' R2' U2' R2 U' R2' U2' R2 U' R2\",\n    \"R2' U2' R2 U R2' U' R2 U2' R2' U2 R2 U R2' U' R2 U2' R2' U' R2\",\n    \"R2' U2' R2' U2' R' U R2' U R2 U2' R U2 R2 U' R2' U R2 U2 R2\",\n    \"R2' U2' R2' U2' R' U R2' U2 R2 U2 R U2' R2 U2' R2' U R2 U2 R2\",\n    \"R2' U2' R' U2' R2' U2' R2 U2' R U2 R2 U2 R2' U R' U R U2 R2\",\n    \"R2' U2' R' U2' R2' U' R2 U2 R U2' R2 U R2' U R' U R U2 R2\",\n    \"R2' U' R U2 R' U2' R2' U2 R2' U R2 U2 R2 U2' R U2 R' U R2\",\n    \"R2' U' R U2 R' U2' R' U2 R2 U R2' U2 R U2' R U2 R' U R2\",\n    \"R2' U' R2' U2 R2' U2' R U2 R U R' U2 R' U2' R2 U2 R2 U R2\",\n    \"R2' U' R2' U2 R' U2 R2' U' R2 U' R U R2 U R2' U R2 U R2\",\n    \"R2' U' R' U2 R2 U2' R2 U2 R U R' U2 R2' U2' R2' U2 R U R2\",\n    \"R' U R' U' R' U R2 U R U' R2 U' R U R2 U R' U2' R\",\n    \"R' U2 R2 U2' R2' U' R2 U2' R2' U' R' U2' R U' R' U2' R U2 R\",\n    \"R' U2 R2' U2' R2 U' R2' U2' R2 U' R' U2' R U' R' U2' R U2 R\",\n    \"R' U2 R' U R2' U R' U' R2' U' R U R U R U' R2' U2 R\",\n    \"R' U' R' U2 R2 U R2' U R' U' R2' U' R2 U2 R U R U R\",\n    \"R2 U' R U' R2 U' R2' U2 R' U R2' U2 R2' U' R2 U2' R2' U2' R2\",\n    \"R U2' R' U2 R2 U' R2 U' R U R2 U R' U2' R' U2 R' U2' R\",\n    \"R2 U R2' U2 R2 U' R2' U R2 U2 R2' U' R2 U R2' U2 R2 U2 R2'\",\n    \"R2 U2' R2' U' R2 U2' R2' U2 R' U2 R' U2' R U' R' U2' R U2 R\",\n    \"R2 U2' R2' U' R2 U2' R2' U2 R' U2' R' U2 R U R' U2 R U2' R\",\n    \"R2' U R2 U2 R2' U' R2 U R2' U2 R2 U' R2' U R2 U2 R2' U2 R2\",\n    \"R2' U2' R2 U' R2' U2' R2 U2 R' U2 R' U2' R U' R' U2' R U2 R\",\n    \"R2' U2' R2 U' R2' U2' R2 U2 R' U2' R' U2 R U R' U2 R U2' R\",\n    \"R2' U2' R' U2 R2 U R U2 R2 U2 R' U2' R' U2' R' U' R U2' R2'\",\n    \"R' U R U2 R U2 R2' U2' R U2 R U R' U2 R' U2 R2 U2' R'\",\n    \"R' U R U2 R2 U2 R2 U2' R2 U2 R U R' U2 R2' U2 R2' U2' R2'\",\n    \"R' U2' R U' R U2 R' U2' R' U2' R U R U2 R' U' R U2' R'\",\n    \"R' U' R U' R U R2' U R U2' R2' U R2 U R U' R2 U' R2\",\n    \"R' U' R U' R2 U R2 U R2 U2' R2' U R2 U R U' R2 U' R\",\n    \"R U R' U' R U2' R2 U' R2' U2' R' U R U' R' U2 R2' U R2\",\n    \"R U2' R2 U R2' U2 R' U2' R2' U2' R2 U' R U' R' U2 R2' U R2\",\n    \"R U' R2' U2' R' U2 R2' U R' U R U2' R2 U2' R U2 R2 U2 R'\",\n    \"R U' R2' U2' R' U2 R2' U R' U R U' R2 U2 R U2' R2 U R'\",\n    \"R2 U R2' U2 R' U' R U R' U2' R2' U' R2 U2' R U' R' U R\",\n    \"R2 U R2' U2 R' U' R U' R2 U2' R2' U2' R' U2 R2' U R2 U2' R\",\n    \"R2 U2' R U2 R2 U R U2 R' U R U2 R2 U2' R2 U' R2 U2' R2'\",\n    \"R2 U2' R U2 R2' U2' R' U' R U2' R' U' R2' U2' R2 U' R2 U2' R2'\",\n    \"R2' U R2 U R U' R2 U' R2 U2 R2' U' R2 U' R U R2 U R2\",\n    \"R2' U2 R2' U R' U2 R2' U' R2 U' R U' R2 U R2 U2' R2' U2' R2\",\n    \"R2' U' R U2' R' U2' R2 U R U' R2 U2 R U2 R' U R2' U R'\",\n    \"R' U R U2 R U' R2 U R2 U2' R2' U' R2 U R2 U R' U' R2'\",\n    \"R' U2 R2' U2' R2 U2' R2' U' R2' U2' R' U2' R2 U' R' U2' R U2' R'\",\n    \"R' U2 R' U2' R2 U' R2' U' R2 U2' R U2 R2 U' R U2 R2 U2 R'\",\n    \"R' U2 R' U' R' U' R2' U R' U' R2' U R' U R U2' R2 U R'\",\n    \"R' U2' R U R U2 R2' U' R2 U' R' U2 R2' U2 R2 U2 R2' U R2\",\n    \"R' U2' R U2' R' U' R2 U2' R' U2' R2' U' R2' U2' R2 U2' R2' U2 R'\",\n  ],\n  [\n    \"R U2' R2' U2' R' U2 R2' U2 R' U' R2' U2 R U2' R\",\n    \"R U' R2' U2 R' U2' R2' U R' U' R2' U2 R U2' R\",\n    \"R2' U' R2 U2' R U R' U R2' U R2 U2' R U' R'\",\n    \"R' U' R U2' R U R' U R' U R U2' R U' R'\",\n    \"R' U' R U2' R2 U R2' U R' U R U2' R2 U' R2'\",\n    \"R U2 R2' U2 R U2' R U' R' U2' R' U2 R2 U' R'\",\n    \"R U2' R2 U' R2' U' R' U R2' U R2 U2' R U' R'\",\n    \"R2 U2 R2 U2 R2 U2' R U' R' U2' R2' U2 R2' U' R2'\",\n    \"R U2 R' U R2 U2 R2' U R2 U2 R2' U R U2 R'\",\n    \"R U2 R' U R2' U2 R2 U R2' U2 R2 U R U2 R'\",\n    \"R2 U2 R2' U R2 U2 R2' U R2 U2 R2' U R2 U2 R2'\",\n    \"R2 U2 R2' U R2 U2 R2' U R2' U2 R2 U R2' U2 R2\",\n    \"R2 U2 R2' U R2' U2 R2 U R2' U2 R2 U R2 U2 R2'\",\n    \"R2' U2 R2 U R2 U2 R2' U R2 U2 R2' U R2' U2 R2\",\n    \"R2' U2 R2 U R2' U2 R2 U R2 U2 R2' U R2 U2 R2'\",\n    \"R2' U2 R2 U R2' U2 R2 U R2' U2 R2 U R2' U2 R2\",\n    \"R' U2 R U R2 U2 R2' U R2 U2 R2' U R' U2 R\",\n    \"R' U2 R U R2' U2 R2 U R2' U2 R2 U R' U2 R\",\n    \"R U2' R U2 R2' U' R' U R2' U2' R' U2 R2' U' R\",\n    \"R U2' R U2 R2' U' R' U2 R2' U2 R' U2' R2' U2' R\",\n    \"R2' U' R2' U2 R2' U2' R' U' R U2' R2 U2 R2 U2 R2\",\n    \"R' U' R U2' R2 U R2' U R' U' R2' U' R2 U2' R\",\n    \"R' U' R2 U2 R' U2' R' U' R U2' R U2 R2' U2 R\",\n    \"R2' U R' U2' R2 U2 R U R' U2 R2' U2' R2' U' R2' U' R2\",\n    \"R' U2 R' U2' R U' R' U2' R2' U2 R2' U R2 U2 R2' U2' R\",\n    \"R' U2 R' U2' R U' R' U2' R' U2 R2 U R2' U2 R2 U2' R\",\n    \"R' U2 R' U2' R2' U2 R2' U' R2 U2 R2 U2' R U2 R2 U2 R'\",\n    \"R' U2 R' U2' R2' U2 R2' U' R2 U2' R2 U2 R U2' R2 U R'\",\n    \"R U R' U' R2 U2' R2' U2' R' U2 R2' U2 R2 U R2 U' R'\",\n    \"R U R' U' R2 U' R2' U2 R' U2' R2' U R2 U R2 U' R'\",\n    \"R2 U2 R2' U R2' U2 R2' U2' R' U' R U2' R2 U2 R' U2' R2'\",\n    \"R2' U R' U2 R2 U2' R U' R' U2' R2' U2 R2' U R2' U' R2\",\n    \"R U R U2' R2 U2 R' U' R2' U' R2' U R U R' U2' R2'\",\n    \"R2 U' R2' U R2' U2 R2' U2' R' U' R U2' R2 U2 R' U R2'\",\n    \"R2' U2' R' U R U R2' U' R2' U' R' U2 R2 U2' R U R\",\n    \"R2' U2' R' U2 R2 U2' R U' R' U2' R2' U2 R2' U R2' U2 R2\",\n    \"R' U' R2 U R2 U R2' U2' R' U2 R2' U' R2 U' R' U R\",\n    \"R' U' R2 U R2 U2 R2' U2 R' U2' R2' U2' R2 U' R' U R\",\n    \"R U2' R2 U2 R2' U R2 U2 R' U2' R' U' R U2' R' U2 R'\",\n    \"R U2' R2' U2 R2 U R2' U2 R2' U2' R' U' R U2' R' U2 R'\",\n    \"R2 U' R2' U' R2' U2' R2' U2 R' U R U2 R2 U2' R' U R2'\",\n    \"R' U R2 U2' R U2 R2 U2' R2 U' R2' U2 R2' U2' R' U2 R'\",\n    \"R' U2 R2 U2 R U2' R2 U2 R2 U' R2' U2 R2' U2' R' U2 R'\",\n    \"R U2' R2' U2' R' U R2' U2' R' U2 R2' U R2 U R2' U2 R U2' R\",\n    \"R U2' R2' U2' R' U2 R2' U2 R' U' R U' R2 U2' R U2 R2 U R'\",\n    \"R U' R2 U' R U2' R' U2' R2' U R' U' R2' U2 R U2 R' U R2\",\n    \"R U' R2' U2 R' U2' R2' U R' U' R U' R2 U2' R U2 R2 U R'\",\n    \"R U' R2' U2 R' U' R U' R2 U R U' R2 U R U R U2' R\",\n    \"R2 U R U' R2' U' R2' U R2 U2 R2' U' R2' U R' U2' R' U' R\",\n    \"R2 U2 R2' U R2' U2 R2 U R U2 R' U R U2 R2 U2' R' U2 R2'\",\n    \"R2 U2 R2' U R2' U2 R2' U2' R' U' R U2' R' U' R2' U2' R' U2 R2'\",\n    \"R2' U2 R2 U2 R2' U' R2' U R' U R2' U R2 U2' R U' R2 U2' R2\",\n    \"R2' U' R2 U2' R2' U2' R2 U2' R U R2' U R2 U2' R' U' R' U2 R\",\n    \"R2' U' R2' U' R' U R2' U R2 U2' R2' U R2' U R' U' R2' U' R2\",\n    \"R U2 R' U2 R U R2' U2 R U2 R2 U R2 U2 R2' U2 R2 U2' R\",\n    \"R U2' R2 U2 R2' U2 R2 U R2 U2 R U2 R2' U R U2 R' U2 R\",\n    \"R2' U' R2 U2' R U R' U R2' U2 R2 U2 R U2' R2 U' R2' U2 R'\",\n    \"R2' U' R2 U2' R U R' U' R U2 R2 U R2' U2 R' U R U' R'\",\n    \"R' U2 R2' U' R2 U2' R U2 R2 U2 R2' U R' U R U2' R2 U' R2'\",\n    \"R' U' R U R' U2 R2' U R2 U2 R U' R' U R U2' R2 U' R2'\",\n    \"R U2 R U' R2 U2' R U2 R2 U R' U' R' U2' R' U2 R2 U' R'\",\n    \"R U2 R2' U R U' R U' R U R2' U R' U' R2' U' R' U' R'\",\n    \"R U2 R2' U2 R U2' R U' R U R2' U2 R' U2' R2' U' R' U' R'\",\n    \"R U2 R2' U2 R2 U R' U2 R U R' U2 R U R2' U2 R2 U' R'\",\n    \"R U2' R U' R2 U R2 U' R U' R' U R2' U' R2' U R' U2' R'\",\n    \"R U2' R2 U R2 U2' R U2 R2 U2 R2' U R' U' R2' U2 R2' U2 R'\",\n    \"R U2' R2 U2 R2 U2 R U2' R2 U R2' U R' U' R2' U2 R2' U2 R'\",\n    \"R U2' R2 U2' R U R2 U' R U R2 U' R U2 R2 U2' R U' R'\",\n    \"R U2' R2 U' R2' U' R' U R2' U2 R2 U2 R U2' R2 U' R2' U2 R'\",\n    \"R U2' R2 U' R2' U' R' U' R U2 R2 U R2' U2 R' U R U' R'\",\n    \"R U2' R' U2' R2' U2 R2 U R U' R2 U2' R2' U2' R' U' R U2 R'\",\n    \"R U' R U2' R2 U2 R2 U2' R U' R' U2' R2' U2 R2' U2' R' U R'\",\n    \"R U' R2' U2' R' U2 R2' U2' R2' U' R2 U2 R2 U2' R U2 R2 U2 R'\",\n    \"R U' R2' U2' R' U2 R2' U2' R2' U' R2 U2' R2 U2 R U2' R2 U R'\",\n    \"R U' R2' U2' R' U2 R' U2' R2 U' R2' U2' R U2 R U2' R2 U R'\",\n    \"R2 U R2 U2 R2' U R2 U2 R2' U2 R2' U2' R2 U2' R2' U' R2 U2 R2'\",\n    \"R2 U R2 U2' R2' U2' R' U' R U2' R2 U2 R2 U R2' U' R2' U' R2'\",\n    \"R2 U R2' U2 R2 U R2' U2 R2 U2 R2' U2' R2 U2' R2' U' R2 U2 R2'\",\n    \"R2 U R2' U2 R2 U R2' U' R2 U2' R2' U2 R2 U R2' U' R2 U2 R2'\",\n    \"R2 U R' U R2' U' R2 U2' R' U2 R' U R U2 R U2 R U' R2'\",\n    \"R2 U2 R2 U2 R2 U2' R U2 R2 U' R2' U2' R' U2 R2' U2' R2' U' R2'\",\n    \"R2 U2 R2 U2 R2 U2' R U' R2 U2' R2 U2 R2' U2' R2 U2 R U' R2'\",\n    \"R2 U2 R2 U2 R2' U R' U2 R U R' U2 R U R2 U2 R2' U' R2'\",\n    \"R2 U2 R2 U2' R2 U2 R U2' R2 U2' R2' U2' R' U2 R2' U2' R2' U' R2'\",\n    \"R2 U2 R2 U2' R2 U2 R U2' R2 U' R2' U2 R' U2' R2' U2 R2' U' R2'\",\n    \"R2 U2 R2 U' R U R2 U R2' U' R' U R2' U' R2' U' R2 U' R2'\",\n    \"R2 U2 R2 U' R U R2' U R2 U' R U R2 U' R' U' R2 U' R2'\",\n    \"R2 U2 R' U2 R2' U2' R2 U2 R2' U2' R2' U' R' U2' R2' U2 R2' U' R2'\",\n    \"R2 U2' R2 U' R' U' R2 U R2 U' R U R2' U R2 U' R U2' R2'\",\n    \"R2 U' R2 U2' R' U2 R2' U2' R2' U' R2 U2' R2 U2 R U2' R2' U R2'\",\n    \"R2 U' R2 U2' R' U2 R' U2' R2 U' R2' U2' R U2 R U2' R2' U R2'\",\n    \"R2 U' R' U2' R2' U2 R U2' R U' R' U2' R' U2 R2 U2' R U R2'\",\n    \"R2 U' R' U' R2 U' R2' U' R' U R2' U R2 U2' R U2' R U R2'\",\n    \"R2' U R U2' R' U2' R' U' R U2' R U2 R2' U R2 U' R' U' R2\",\n    \"R2' U R2 U2 R2' U R2 U2 R2' U2 R2 U2' R2' U2' R2 U' R2' U2 R2\",\n    \"R2' U R2 U2 R2' U R2 U' R2' U2' R2 U2 R2' U R2 U' R2' U2 R2\",\n    \"R2' U R2' U2 R2 U R2' U2 R2 U2 R2 U2' R2' U2' R2 U' R2' U2 R2\",\n    \"R2' U R' U R2 U' R2' U2' R2' U2 R' U R U2 R2 U2 R U' R2\",\n    \"R2' U2 R U R2' U' R' U R2' U' R2 U' R' U R2' U' R2' U' R2\",\n    \"R2' U2 R2 U R2 U' R U R2 U' R2' U' R' U R2' U' R2' U' R2\",\n    \"R2' U2' R2 U2' R2' U' R' U2' R2 U2 R2' U R2' U' R' U2' R2' U2 R2'\",\n    \"R2' U2' R2' U' R2 U R2' U2' R' U2 R2' U' R2 U' R U2 R2 U2 R2\",\n    \"R2' U2' R2' U' R2 U2 R2' U2 R' U2' R2' U2' R2 U' R U2 R2 U2 R2\",\n    \"R2' U2' R' U' R U' R2 U2' R2' U2' R' U2 R2' U2 R2 U2 R U2 R2\",\n    \"R2' U2' R' U' R U' R2 U' R2' U2 R' U R U2 R2 U R2' U' R2\",\n    \"R2' U2' R' U' R U' R2 U' R2' U2 R' U2' R2' U R2 U2 R U2 R2\",\n    \"R2' U' R U2' R' U2 R2' U2' R2' U' R2 U2' R2 U2 R U2' R' U R2\",\n    \"R2' U' R U2' R' U2 R' U2' R2 U' R2' U2' R U2 R U2' R' U R2\",\n    \"R2' U' R2' U2' R2' U2 R U2' R U' R' U2' R' U2 R2 U2' R2 U R2\",\n    \"R2' U' R2' U' R2 U' R2' U' R' U R2' U R2 U2' R U2' R2 U R2\",\n    \"R2' U' R' U2' R2 U2 R2 U2' R U' R' U2' R2' U2 R2' U2' R U R2\",\n    \"R' U2 R U' R2' U' R' U R2' U R' U' R2' U' R U R U' R\",\n    \"R' U2 R' U2' R U' R' U2' R2' U2 R2' U2' R2 U2' R2' U2 R2 U2' R'\",\n    \"R' U2 R' U2' R U' R' U2' R' U2 R2 U2' R2' U2' R2 U2 R2' U2' R2'\",\n    \"R' U2 R' U2' R2' U' R U2' R2 U' R2' U2' R U2 R U2' R2 U R'\",\n    \"R' U2' R2 U R' U' R' U' R' U R2 U R U' R2 U' R U2' R\",\n    \"R' U2' R' U2 R U R' U2 R U R2 U2 R2' U R2 U2 R2' U2' R\",\n    \"R' U2' R' U2 R U R' U2 R U R2' U2 R2 U R2' U2 R2 U2' R\",\n    \"R' U' R' U' R' U2' R2' U R2 U R U' R2 U' R2' U2' R U R\",\n    \"R U R' U R2' U' R2' U' R2' U2 R2 U' R2' U' R' U R2' U R'\",\n    \"R U R' U R' U' R2 U' R' U2 R2 U' R2' U' R' U R2' U R2'\",\n    \"R U2 R U2' R' U2' R2' U' R2' U R2 U2 R2' U2' R' U' R2' U2' R\",\n    \"R U2 R2' U R2' U2' R' U2 R2' U2 R2 U R U' R2 U2 R2 U2' R'\",\n    \"R U2 R2' U2 R2' U2 R' U2' R2' U R2 U R U' R2 U2 R2 U2' R'\",\n    \"R U2 R' U R2 U2 R2' U' R U R U2' R' U2' R' U2 R U2 R'\",\n    \"R U2 R' U R' U2' R U2 R U2 R' U' R' U2' R U R' U2 R\",\n    \"R U2 R' U2' R' U2' R U R U' R2' U2 R2 U R' U2 R U2 R'\",\n    \"R U2' R' U' R2' U2 R2' U R2 U2 R2 U2' R U' R' U' R U2 R'\",\n    \"R U2' R' U' R' U2 R2 U R2' U2 R U2' R U' R' U' R U2 R'\",\n    \"R U' R' U2' R2' U2' R2' U2 R2' U2' R' U' R U2' R2 U2' R2 U2 R2\",\n    \"R U' R' U2' R' U2' R2 U2 R' U2' R' U' R U2' R U2' R2' U2 R\",\n    \"R2 U R2 U R2' U' R' U R' U' R2 U' R2' U2 R' U' R2 U' R'\",\n    \"R2 U R2 U2 R2' U' R' U R' U' R2 U2' R2' U2' R' U2' R2 U' R'\",\n    \"R2 U2 R U2' R2' U' R' U2' R2' U2' R U2 R U2 R U R' U2 R2\",\n    \"R2 U2 R2 U' R U R2 U' R2' U' R' U R2' U' R2' U R2 U' R2'\",\n    \"R2 U2 R2' U R2 U2 R2' U2' R U2 R U2' R' U' R U2' R' U2 R'\",\n    \"R2 U2 R2' U R2 U2 R2' U2' R U2' R U2 R' U R U2 R' U2' R'\",\n    \"R2 U' R2' U2' R2 U R2' U' R2 U2' R2' U R2 U' R2' U2' R2 U2' R2'\",\n    \"R2' U2 R2 U R2' U2 R2 U2' R U2 R U2' R' U' R U2' R' U2 R'\",\n    \"R2' U2 R2 U R2' U2 R2 U2' R U2' R U2 R' U R U2 R' U2' R'\",\n    \"R2' U2 R2 U R2' U' R2' U R' U' R2' U' R2 U R U' R2 U' R2\",\n    \"R2' U' R2 U2' R2' U R2 U' R2' U2' R2 U R2' U' R2 U2' R2' U2' R2\",\n    \"R' U2 R U2' R2' U R2' U R' U' R2' U' R U2 R U2' R U2 R'\",\n    \"R' U' R U' R' U R U2 R U2' R2' U' R2 U2' R' U2' R' U R\",\n    \"R' U' R U' R' U R U2 R2 U2' R2 U' R2' U2' R2' U2' R' U R\",\n    \"R' U' R' U R2' U2' R' U' R U2' R2 U2 R2 U R2' U R U R\",\n    \"R' U' R' U2' R2' U R2 U2 R2 U2' R U' R' U2' R2' U' R U R\",\n  ],\n  [\n    \"R U R' U2' R2' U2' R2 U' R U R2 U2 R2' U R'\",\n    \"R' U R' U' R U2' R U2 R2' U R2 U2 R' U2 R\",\n    \"R' U R' U' R U2' R2 U2 R2 U R2' U2 R2' U2 R\",\n    \"R U2 R2' U2 R2' U R2 U2 R2 U2' R U' R' U R'\",\n    \"R U2 R' U2 R2 U R2' U2 R U2' R U' R' U R'\",\n    \"R' U R2' U2 R2 U R U' R2 U2' R2' U2' R' U R\",\n    \"R U2 R2' U2' R U2 R U R' U2 R' U2' R2 U2 R'\",\n    \"R U2 R' U2 R2' U' R2 U' R U R2 U R2' U R'\",\n    \"R2 U2 R2 U2' R2 U2 R U R' U2 R2' U2' R2' U2 R2'\",\n    \"R' U2 R' U2' R2' U2 R2' U R2 U2 R2 U2' R U2 R\",\n    \"R' U2 R' U2' R' U2 R2 U R2' U2 R U2' R U2 R\",\n    \"R U2 R U2' R U2 R2' U R2 U2 R' U2' R' U2 R'\",\n    \"R U2 R U2' R2 U2 R2 U R2' U2 R2' U2' R' U2 R'\",\n    \"R2' U2 R2' U2' R2' U2 R' U R U2 R2 U2' R2 U2 R2\",\n    \"R' U R2' U R2 U R U' R2 U' R2' U2 R' U2 R\",\n    \"R' U2 R2 U2' R' U2 R' U R U2 R U2' R2' U2 R\",\n    \"R U2 R' U2 R U2' R2 U R2' U R' U' R2' U' R2' U2' R'\",\n    \"R U2' R2' U2' R' U2 R2' U2' R2' U2 R2 U2 R2 U2' R U2 R\",\n    \"R U' R2 U2 R2 U R U' R2 U2' R2' U2' R' U2 R U R'\",\n    \"R U' R2' U2 R' U2' R2' U2 R2' U2 R2 U2 R2 U2' R U2 R\",\n    \"R' U2' R2 U2 R2' U R2 U2 R2 U2' R U' R' U2' R U2 R\",\n    \"R' U2' R2' U2 R2 U R2' U2 R U2' R U' R' U2' R U2 R\",\n    \"R U2' R' U2' R U2 R2' U2' R2 U' R2' U R U' R' U2' R\",\n    \"R U2' R' U' R U R2' U' R2 U2' R2' U2 R U2' R' U2' R\",\n    \"R' U2 R U R U2 R2' U2' R2 U' R2' U R U2 R U2 R'\",\n    \"R' U2 R U2 R U R2' U' R2 U2' R2' U2 R U R U2 R'\",\n    \"R2 U2' R U2' R2' U2 R' U R U2 R2 U2' R2 U' R2 U2 R2'\",\n    \"R2' U2 R2 U' R2 U2' R2 U2 R U R' U2 R2' U2' R U2' R2\",\n    \"R U2 R U2' R2 U2 R2 U2 R2' U2 R2' U2' R' U2 R2' U' R\",\n    \"R U2 R U2' R2 U2 R2 U2 R2' U2' R2' U2 R' U2' R2' U2' R\",\n    \"R U2 R U2' R' U' R U2' R U2 R2' U R2 U2 R2' U2' R'\",\n    \"R U2 R U2' R' U' R U2' R2 U2 R2 U R2' U2 R2 U2' R'\",\n    \"R' U R U2 R' U2' R2' U2' R2 U' R U R2 U2 R2 U' R\",\n    \"R' U2' R2' U' R2' U' R' U R2' U R2 U2' R U2 R' U2 R\",\n    \"R U' R2' U2' R' U2 R2' U2' R2' U R2 U2 R2 U2' R U2 R\",\n    \"R2' U2 R2 U R2 U2 R2 U2' R U' R' U2' R2' U2 R U2' R2\",\n    \"R' U2 R' U2' R2' U2 R2' U R2 U2' R2 U2 R U2' R2 U' R'\",\n    \"R U2 R U2' R2 U2 R2 U R2' U2' R2' U2 R' U2' R2' U' R\",\n    \"R2 U2' R U2 R2' U2' R' U' R U2' R2 U2 R2 U R2 U2 R2'\",\n    \"R' U' R2 U2' R U2 R2 U2' R2 U R2' U2 R2' U2' R' U2 R'\",\n    \"R U R U2 R2 U R U' R2 U2' R' U2 R' U R' U' R2 U2 R'\",\n    \"R U R' U R2' U2 R2 U2' R2' U2 R2 U2 R U R2 U2 R2' U R'\",\n    \"R U R' U2' R U' R' U2 R' U2' R U' R' U2' R U R U2 R'\",\n    \"R U R' U2' R U' R' U2' R' U2 R U R' U2 R U2 R U2 R'\",\n    \"R U R' U2' R2 U2' R2' U' R2 U2' R U2 R2' U R2 U2 R2' U R'\",\n    \"R U R' U2' R2 U2' R2' U' R2 U2' R2 U2 R2 U R2' U2 R2 U R'\",\n    \"R U R' U2' R2' U2 R' U R2' U' R' U R2' U' R' U2' R2' U R'\",\n    \"R U R' U2' R2' U2' R2 U' R U R2' U2 R2 U R2' U2 R' U2' R2\",\n    \"R U R' U2' R2' U2' R2 U' R U2' R2 U2' R2' U2 R2 U2' R2' U2' R'\",\n    \"R U R' U2' R2' U2' R2 U' R2' U2' R U2 R2 U R2' U2 R2 U R'\",\n    \"R U2 R U' R2 U R2 U' R U2 R' U R2' U' R2' U R' U R'\",\n    \"R U2 R2 U2 R2' U' R' U R2' U R2 U2' R U2 R2 U2 R2' U2' R'\",\n    \"R U2 R2 U2 R2' U' R' U R2' U2 R2 U2 R U2' R2 U R2' U2' R'\",\n    \"R U2 R2 U' R2 U2' R U2 R2 U2 R2' U R' U' R2' U' R2' U2' R'\",\n    \"R U2 R' U2 R2 U2 R' U2' R' U' R U2' R U2 R2' U' R U2' R'\",\n    \"R U2' R2' U2 R2 U2' R2' U2' R2 U2 R2 U2' R U' R' U2' R U2 R\",\n    \"R U2' R2' U2' R' U2 R U2' R2 U2 R2' U2' R2 U' R2 U2' R U2 R\",\n    \"R U2' R2' U2' R' U2 R U2' R2 U2 R2' U2' R' U2 R U2' R2 U' R'\",\n    \"R U2' R2' U2' R' U2 R2' U2' R2' U2 R2 U2' R2 U2 R U2' R2 U' R'\",\n    \"R U' R2 U2 R2 U R U' R2 U' R2' U2 R' U2' R2' U' R2' U R'\",\n    \"R U' R2 U' R2' U2' R' U2 R2' U' R2 U' R U R2 U2 R2' U R'\",\n    \"R U' R2' U2 R' U2' R2' U2 R2' U2 R2 U2' R2 U2 R U2' R2 U' R'\",\n    \"R2 U R2 U2 R2 U2' R U2 R2 U2 R2' U2' R' U2 R2' U2' R2' U2 R2'\",\n    \"R2 U R2 U2 R2 U2' R U2 R2 U2' R2' U2 R' U2' R2' U2 R2' U2 R2'\",\n    \"R2 U R2 U2 R2 U2' R2' U2 R2' U2' R2 U2 R2 U2' R2' U2 R2' U2 R2'\",\n    \"R2 U R2 U2 R2 U2' R2' U2 R2' U2' R' U2 R2' U2' R2 U2 R U2 R2'\",\n    \"R2 U R2 U2 R2 U2' R2' U2' R2' U2 R' U2' R2' U2 R2 U2 R U2 R2'\",\n    \"R2 U R2 U2' R2 U2 R U2' R2 U R2' U2' R' U2 R2' U2' R2' U2 R2'\",\n    \"R2 U R2 U2' R2 U2 R U2' R2 U2 R2' U2 R' U2' R2' U2 R2' U2 R2'\",\n    \"R2 U R2' U R2 U2 R2 U2' R2' U' R2 U2' R2' U2' R2' U2 R2 U R2'\",\n    \"R2 U R2' U R2 U2 R2' U2' R2 U' R2' U R2 U2 R2' U2' R2 U2' R2'\",\n    \"R2 U R2' U R2 U2 R2' U2' R2 U' R2' U2' R2 U2' R2' U2 R2 U R2'\",\n    \"R2 U R2' U2 R2 U R2 U' R U R2 U2' R2' U' R' U R2' U2' R2'\",\n    \"R2 U R2' U2' R2 U2' R2' U2 R2 U2 R2' U R2 U2 R2' U2' R2 U2' R2'\",\n    \"R2 U R2' U2' R2 U2' R2' U2 R2 U2 R2' U2' R2 U2' R2' U2 R2 U R2'\",\n    \"R2 U R2' U2' R2 U2' R2' U2 R2' U2 R2 U R2' U2 R2 U2' R2 U2' R2'\",\n    \"R2 U R2' U2' R2 U2' R2' U' R2 U2' R2 U2 R2' U R2 U2 R2' U R2'\",\n    \"R2 U R2' U2' R2 U2' R2' U' R2 U2' R2' U2 R2 U R2' U2 R2 U R2'\",\n    \"R2 U R2' U2' R2' U2' R2 U' R2' U2' R U2 R2' U R2 U2 R2' U R2'\",\n    \"R2 U R2' U2' R2' U2' R2 U' R2' U2' R2 U2 R2 U R2' U2 R2 U R2'\",\n    \"R2 U R' U2 R2' U2 R2 U2' R U2 R2 U2' R2 U2' R2' U2 R2' U2 R2'\",\n    \"R2 U R' U2 R2' U2' R2 U2 R U2' R2 U2 R2 U2' R2' U2 R2' U2 R2'\",\n    \"R2 U R' U2 R2' U2' R2 U2 R U2' R' U2 R2' U2' R2 U2 R U2 R2'\",\n    \"R2 U R' U2' R U' R' U2' R2' U2 R U R' U2 R U2 R2 U2 R2'\",\n    \"R2 U2 R2' U2 R2' U2 R2' U2' R' U' R U2' R2 U2 R2 U' R2 U2' R2'\",\n    \"R2 U2' R2 U2 R2' U2' R2 U2' R2' U2 R U2' R U' R' U2' R U2 R\",\n    \"R2 U' R2 U' R U R2 U2' R2' U' R' U R2' U' R2' U2 R2 U2 R2'\",\n    \"R2' U R2 U R2 U' R U R2 U2 R2' U' R' U R2' U' R2' U2 R2\",\n    \"R2' U R2 U R2' U2 R2 U2' R2' U' R2 U R2' U2 R2 U2' R2' U2' R2\",\n    \"R2' U R2 U R2' U2 R2 U2' R2' U' R2 U2' R2' U2' R2 U2 R2' U R2\",\n    \"R2' U R2 U R2' U2 R2' U2' R2 U' R2' U2' R2 U2' R2 U2 R2' U R2\",\n    \"R2' U R2 U2' R2 U2' R2' U' R2 U2' R2' U2 R2' U R2 U2 R2' U R2\",\n    \"R2' U R2 U2' R2 U2' R2' U' R2 U2' R' U2 R2 U R2' U2 R2 U R2\",\n    \"R2' U R2 U2' R2' U2' R2 U2 R2 U2 R2' U R2 U2 R2' U2' R2' U2' R2\",\n    \"R2' U R2 U2' R2' U2' R2 U2 R2' U2 R2 U R2' U2 R2 U2' R2' U2' R2\",\n    \"R2' U R2 U2' R2' U2' R2 U2 R2' U2 R2 U2' R2' U2' R2 U2 R2' U R2\",\n    \"R2' U R2 U2' R2' U2' R2 U' R2' U2' R2 U2 R2' U R2 U2 R2' U R2\",\n    \"R2' U R2 U2' R2' U2' R2 U' R2' U2' R2' U2 R2 U R2' U2 R2 U R2\",\n    \"R2' U R' U2' R U' R' U2' R2 U2 R U R' U2 R U2 R2' U2 R2\",\n    \"R2' U2 R U2' R' U' R U2' R' U2 R2 U R2 U2 R2' U2 R2 U R2'\",\n    \"R2' U2 R2' U2 R2 U R2' U2' R' U2 R2' U' R2 U' R U' R2 U2' R2\",\n    \"R2' U2 R2' U2 R2 U2 R2' U2 R' U2' R2' U2' R2 U' R U' R2 U2' R2\",\n    \"R2' U2 R' U2 R U' R2 U2' R2' U2' R' U2 R2' U2 R2 U' R U2' R2\",\n    \"R2' U2 R' U2 R U' R2 U' R2' U2 R' U2' R2' U R2 U' R U2' R2\",\n    \"R2' U2' R U2 R' U R U2 R' U2' R2 U R2 U2 R2' U2 R2 U R2'\",\n    \"R2' U' R U2' R2 U R' U' R' U2 R' U2' R2 U R U' R2 U2' R2\",\n    \"R2' U' R2' U2 R' U R2' U R2 U2' R U2 R2 U' R2' U2 R2 U R2\",\n    \"R2' U' R2' U2 R' U R2' U2 R2 U2 R U R2 U2 R2' U2' R2 U2' R2\",\n    \"R2' U' R2' U2 R' U R2' U2 R2 U2 R U2' R2 U2' R2' U2 R2 U R2\",\n    \"R2' U' R2' U2 R' U' R2' U2 R U2' R U R U2' R2' U2' R' U2' R2\",\n    \"R2' U' R' U2 R2' U2' R2 U2' R U2 R2 U2 R2' U R' U2 R U R2\",\n    \"R2' U' R' U2 R2' U' R2 U2 R U2' R2 U R2' U R' U2 R U R2\",\n    \"R' U R2 U2 R2 U2 R2' U2 R2' U2' R' U2 R2' U' R2 U2 R U2 R\",\n    \"R' U R2 U2 R2 U2 R2' U2' R2' U2 R' U2' R2' U2' R2 U2 R U2 R\",\n    \"R' U R' U2 R2' U' R2 U2' R U2 R2 U2' R2 U R2' U2 R2' U2 R\",\n    \"R' U R' U' R2' U2' R2' U2 R2 U2' R2' U2 R' U R2' U2 R2' U2 R\",\n    \"R' U R' U' R' U R2 U2 R U2' R2 U' R U R2 U2 R' U2 R\",\n    \"R' U2 R U2' R' U' R U2' R' U2 R U R2' U2 R2 U2 R2' U R2\",\n    \"R' U2' R U2 R' U R U2 R' U2' R U R2' U2 R2 U2 R2' U R2\",\n    \"R' U2' R2 U2 R2' U R2 U2 R2' U R' U2 R U R' U2 R U2' R\",\n    \"R' U2' R2' U2 R2 U R2' U2 R2 U R' U2 R U R' U2 R U2' R\",\n    \"R' U2' R2' U2' R' U' R2' U2' R2' U2 R' U R2' U2 R2' U2' R2 U' R\",\n    \"R' U' R' U R U2 R U R' U2 R' U2' R2 U' R2' U2 R U R\",\n    \"R U R' U2 R' U2' R U R' U' R2 U' R2' U2 R U2' R' U2' R\",\n    \"R U2' R U2' R2' U' R2 U2' R2' U2 R U2' R2' U2' R U' R' U2' R\",\n    \"R U2' R2 U2' R2 U' R2' U2' R2 U2 R U2' R2' U2' R U' R' U2' R\",\n    \"R U2' R' U2' R U2 R2 U2' R2' U' R2 U2' R U2' R U' R' U2' R\",\n    \"R U2' R' U2' R U2 R2' U' R2 U' R' U R U2' R' U2 R' U R\",\n    \"R U2' R' U2' R' U2 R2 U2' R2' U2 R2 U2 R2' U R U' R' U2' R\",\n    \"R U2' R' U' R U R2' U2 R2 U2 R2' U2' R2 U2 R' U2' R' U2' R\",\n    \"R U2' R' U' R U2' R U2' R2 U' R2' U2' R2 U2 R U2' R' U2' R\",\n    \"R U2' R' U' R U2' R2' U2' R U2 R2 U2' R2' U' R2 U2' R2 U2' R\",\n    \"R U2' R' U' R U2' R2' U2' R U2 R2' U2' R2 U' R2' U2' R U2' R\",\n    \"R U2 R2' U R2 U2 R' U R2 U2' R2' U' R' U R2' U2 R2 U R\",\n    \"R U' R2' U2 R U R U' R2' U2' R2' U R' U2 R U2 R' U2' R'\",\n    \"R2 U2 R2 U R2' U2 R2' U R2 U2' R2' U' R' U R2' U2 R2 U R\",\n    \"R2 U2 R2' U R2 U2 R2' U2' R' U2 R' U2' R U' R' U2' R U2 R\",\n    \"R2 U2 R2' U R2 U2 R2' U2' R' U2' R' U2 R U R' U2 R U2' R\",\n    \"R2' U2 R2 U R2' U2 R2 U2' R' U2 R' U2' R U' R' U2' R U2 R\",\n    \"R2' U2 R2 U R2' U2 R2 U2' R' U2' R' U2 R U R' U2 R U2' R\",\n    \"R2 U2 R2' U' R2 U2 R2' U' R2 U2' R2' U R2 U R2' U R2 U2' R2'\",\n    \"R2 U2' R U' R2' U R2 U2 R2 U2' R U' R' U' R2' U2 R' U2' R2'\",\n    \"R2' U2 R2 U' R2' U2 R2 U' R2' U2' R2 U R2' U R2 U R2' U2' R2\",\n    \"R U2 R' U2 R U2' R2 U R2' U R' U' R U2 R' U2' R2' U' R2\",\n    \"R U2' R U2' R2' U R U' R U' R' U2 R' U' R2 U2 R' U2' R'\",\n    \"R U2' R2 U2' R2 U R2 U' R U' R' U2 R2' U' R2' U2 R2' U2' R'\",\n    \"R2 U R' U' R U2' R2 U2 R2 U R2' U' R U R' U2 R2' U2' R2'\",\n    \"R2 U2 R U2' R2 U' R U2' R' U' R U2' R2 U2 R2 U R2 U2 R2'\",\n    \"R2 U2 R U2' R2' U2 R' U R U2 R' U R2' U2 R2 U R2 U2 R2'\",\n    \"R2 U2 R U' R2 U2 R' U2' R' U2 R' U' R' U2' R2' U2' R U' R'\",\n    \"R2 U2' R2 U' R2' U R U R2 U2' R' U2 R' U' R' U2 R2 U2' R\",\n    \"R2 U2' R2' U2 R U2 R' U2' R U' R' U2' R U2 R' U2 R2 U2' R2'\",\n    \"R2 U2' R2' U2 R U2' R' U2 R U R' U2 R U2' R' U2 R2 U2' R2'\",\n    \"R2 U' R2' U2' R' U2 R U' R' U R2' U R2 U2' R U2 R' U2 R\",\n    \"R2' U R2' U2' R2' U2 R2' U2' R' U R2 U' R U R U R' U2' R'\",\n    \"R2' U R' U' R U2' R U2 R2' U R2 U' R U R' U2 R' U2' R2\",\n    \"R2' U2 R U2 R U2' R2' U2' R' U' R2 U R U R' U' R2' U R2'\",\n    \"R2' U2' R U2 R2' U2' R2 U2 R U R2 U2 R2 U2' R2' U2 R U2' R2\",\n    \"R2' U2' R U2 R2' U2' R2 U2 R U R' U2 R2' U2' R2 U2 R' U2' R2\",\n    \"R2' U2' R U' R2' U2' R2' U R U R2' U R2 U2' R U2 R U2' R2\",\n    \"R2' U2' R2 U2 R2 U2 R' U2' R U' R' U2' R U2 R2' U2 R2' U2' R2\",\n    \"R2' U2' R2 U2 R2 U2' R' U2 R U R' U2 R U2' R2' U2 R2' U2' R2\",\n    \"R2' U2' R' U2 R2 U2' R2' U2 R2' U R2 U2 R2 U2' R2' U2 R U2' R2\",\n    \"R2' U2' R' U2 R2 U2' R2' U2 R2' U R' U2 R2' U2' R2 U2 R' U2' R2\",\n    \"R2' U2' R' U2 R2 U2' R' U2 R2 U R2' U2 R U2' R2' U2 R U2' R2\",\n    \"R' U R U2' R2' U' R' U2' R' U2 R U R2' U' R2' U2 R2 U R'\",\n    \"R' U2 R U R U2 R2 U2' R2' U' R2 U2' R U2' R U2 R U2 R'\",\n    \"R' U2 R U R' U2 R2 U2' R2' U2 R2 U2 R2' U R U2 R U2 R'\",\n    \"R' U2 R U2 R U R2' U2 R2 U2 R2' U2' R2 U2 R' U R U2 R'\",\n    \"R' U2 R U2 R U2' R U2' R2 U' R2' U2' R2 U2 R U R U2 R'\",\n    \"R' U2' R U2 R2' U2 R' U2' R U' R' U2' R U2 R2 U2 R' U2' R\",\n    \"R' U2' R U2 R2' U2' R' U2 R U R' U2 R U2' R2 U2 R' U2' R\",\n    \"R' U2' R2' U2 R U2' R U2 R U R' U2 R' U2' R' U2 R2 U2' R\",\n    \"R' U2' R' U2 R U2' R2' U2 R2' U R2 U2 R2 U2' R' U2 R U2' R\",\n    \"R' U2' R' U2 R U2' R' U2 R2 U R2' U2 R U2' R' U2 R U2' R\",\n    \"R' U' R U2' R2' U2' R' U' R' U2 R' U2' R' U2 R2 U' R U2 R2\",\n  ],\n  [\n    \"R U' R2 U2' R2' U' R' U R2' U2 R2 U2 R U' R'\",\n    \"R' U2' R U2' R2' U' R2 U2' R' U2 R' U R U' R\",\n    \"R' U2' R2 U2' R2 U' R2' U2' R2' U2 R' U R U' R\",\n    \"R U' R U R' U2 R2' U2' R2' U' R2 U2' R2 U2' R'\",\n    \"R U' R U R' U2 R' U2' R2 U' R2' U2' R U2' R'\",\n    \"R' U' R U2 R2 U2 R2' U R' U' R2' U2' R2 U' R\",\n    \"R U2' R2' U2 R U2' R U' R' U2' R' U2 R2 U2' R'\",\n    \"R U' R2 U' R2' U' R' U R2' U R2 U2' R U2' R'\",\n    \"R2 U2' R2 U2 R2 U2' R U' R' U2' R2' U2 R2' U2' R2'\",\n    \"R' U2' R' U2 R2' U2' R2' U' R2 U2' R2 U2 R U2' R\",\n    \"R' U2' R' U2 R' U2' R2 U' R2' U2' R U2 R U2' R\",\n    \"R U2' R U2 R U2' R2' U' R2 U2' R' U2 R' U2' R'\",\n    \"R U2' R U2 R2 U2' R2 U' R2' U2' R2' U2 R' U2' R'\",\n    \"R2' U2' R2' U2 R2' U2' R' U' R U2' R2 U2 R2 U2' R2\",\n    \"R' U2' R U2' R2 U R2' U R' U' R2' U' R2 U' R\",\n    \"R' U2' R2 U2 R' U2' R' U' R U2' R U2 R2' U2' R\",\n    \"R U2 R2 U R2 U R U' R2 U' R2' U2 R' U2' R U2' R'\",\n    \"R U' R' U2' R U2 R2 U2 R2' U R' U' R2' U2' R2' U R'\",\n    \"R' U2' R' U2 R U R' U2 R2' U2' R2' U' R2 U2' R2' U2 R\",\n    \"R' U2' R' U2 R U R' U2 R' U2' R2 U' R2' U2' R2 U2 R\",\n    \"R' U2' R' U2 R2' U2' R2' U2' R2 U2 R2 U2' R U2 R2 U2 R'\",\n    \"R' U2' R' U2 R2' U2' R2' U2' R2 U2' R2 U2 R U2' R2 U R'\",\n    \"R U2' R' U2' R' U' R2 U R2' U2 R2 U2' R' U' R' U2' R\",\n    \"R U2' R' U' R' U2' R2 U2 R2' U R2 U' R' U2' R' U2' R\",\n    \"R' U2 R U R' U' R2 U R2' U2 R2 U2' R' U2 R U2 R'\",\n    \"R' U2 R U2 R' U2' R2 U2 R2' U R2 U' R' U R U2 R'\",\n    \"R2 U2' R2' U R2' U2 R2' U2' R' U' R U2' R2 U2 R' U2 R2'\",\n    \"R2' U2 R' U2 R2 U2' R U' R' U2' R2' U2 R2' U R2' U2' R2\",\n    \"R U2 R2 U2' R2' U' R2 U2' R' U2 R' U R U2 R' U2' R'\",\n    \"R U2 R2' U2' R2 U' R2' U2' R2' U2 R' U R U2 R' U2' R'\",\n    \"R' U R2 U2' R U2 R2 U2' R2 U2' R2' U2' R2' U2 R' U2' R'\",\n    \"R' U R2' U2' R2' U' R' U R2' U2 R2 U2 R U2' R' U' R\",\n    \"R' U2 R2 U2 R U2' R2 U2 R2 U2' R2' U2' R2' U2 R' U2' R'\",\n    \"R' U2' R U2' R' U2 R2' U' R2 U' R U R2 U R2 U2 R\",\n    \"R U R2' U2 R' U2' R2' U2 R2' U' R2 U2' R2 U2 R U2' R\",\n    \"R2' U2 R' U2' R2 U2 R U R' U2 R2' U2' R2' U' R2' U2' R2\",\n    \"R' U2' R' U2 R2' U2' R2' U' R2 U2 R2 U2' R U2 R2 U R'\",\n    \"R U2' R U2 R2 U2' R2 U' R2' U2 R2' U2' R' U2 R2' U R\",\n    \"R2 U2' R2' U' R2' U2' R2' U2 R' U R U2 R2 U2' R' U2 R2'\",\n    \"R' U R2 U2 R U2' R2 U2 R2 U' R2' U2' R2' U2 R' U2' R'\",\n    \"R U R2' U2 R' U2' R U2 R2 U2' R2' U2 R' U2' R U2 R2 U2 R'\",\n    \"R U R2' U2 R' U2' R2' U2 R2' U2' R2 U2 R2 U2' R U2 R2 U2 R'\",\n    \"R U R2' U2 R' U2' R2' U2 R2' U2' R2 U2' R2 U2 R U2' R2 U R'\",\n    \"R U2 R2 U R2 U R U' R2 U2' R2' U2' R' U2 R2' U R2' U2' R'\",\n    \"R U2 R2 U2 R2' U2' R2 U2 R2' U2 R' U R2' U2 R2 U2 R U' R'\",\n    \"R U2 R2 U2' R2' U2' R' U2 R2' U' R2 U' R U R2 U2' R2' U2' R'\",\n    \"R U2 R2 U' R2' U2 R' U2' R2' U2' R2 U' R U R2 U2' R2' U2' R'\",\n    \"R U2 R' U R2 U2' R' U2 R' U R U2 R U2' R2' U2' R U2' R'\",\n    \"R U2' R2' U R U' R U2' R U2 R2' U R' U' R2' U2' R' U' R'\",\n    \"R U2' R' U2' R' U2' R U' R' U2' R U2 R U R' U2 R U' R'\",\n    \"R U2' R' U' R' U2 R U R' U2 R U2' R U R' U2 R U' R'\",\n    \"R U' R U' R2 U R2 U' R U2' R' U R2' U' R2' U R' U2' R'\",\n    \"R U' R2 U R2 U2 R U2' R2 U R2' U R' U' R2' U2' R2' U R'\",\n    \"R U' R2 U2 R U R2 U' R U R2 U' R U2' R2 U2 R U' R'\",\n    \"R U' R2 U2' R2' U' R2 U2' R' U2 R2' U R2 U2 R2' U2 R U' R'\",\n    \"R U' R2 U2' R2' U' R' U R2' U R2 U2' R U2 R2 U R2' U R'\",\n    \"R U' R2 U2' R2' U' R' U2' R2' U2' R2 U2 R2' U2' R2 U' R U' R'\",\n    \"R U' R2' U2' R2 U' R2' U2' R2' U2 R2' U R2 U2 R2' U2 R U' R'\",\n    \"R U' R2' U2' R2 U' R2' U2' R' U2 R2 U R2' U2 R2 U2 R U' R'\",\n    \"R2 U2 R2 U' R U R2 U2 R2' U' R' U R2' U' R2' U2' R2 U' R2'\",\n    \"R2 U2 R2' U R2' U2' R2' U2 R' U R U2 R2 U2' R2 U2' R2 U2' R2'\",\n    \"R2 U2 R2' U2 R2 U2' R2' U' R2 U R2' U2 R2 U2' R2' U' R2 U' R2'\",\n    \"R2 U2 R2' U2 R2 U2' R2' U' R2 U2' R2' U2' R2 U2 R2' U2 R2 U' R2'\",\n    \"R2 U2 R2' U2 R2' U2' R2 U' R2' U2' R2 U2' R2 U2 R2' U2 R2 U' R2'\",\n    \"R2 U2' R2 U2 R2 U2' R U2 R2 U2' R2' U2' R' U2 R2' U2' R2' U' R2'\",\n    \"R2 U2' R2 U2 R2 U2' R U2 R2 U' R2' U2 R' U2' R2' U2 R2' U' R2'\",\n    \"R2 U2' R2 U2' R2 U2 R U2' R2 U2 R2' U2' R' U2 R2' U2' R2' U' R2'\",\n    \"R2 U2' R2 U2' R2 U2 R U2' R2 U2' R2' U2 R' U2' R2' U2 R2' U' R2'\",\n    \"R2 U2' R2 U2' R2 U2 R2' U2 R2' U2' R' U2 R2' U2' R2 U2' R U' R2'\",\n    \"R2 U2' R2 U2' R2 U2 R2' U2' R2' U2 R2 U2' R2 U2 R2' U2' R2' U' R2'\",\n    \"R2 U2' R2 U2' R2 U2 R2' U2' R2' U2 R' U2' R2' U2 R2 U2' R U' R2'\",\n    \"R2 U2' R2' U2' R2 U R2 U' R U R2 U2 R2' U' R' U R2' U R2'\",\n    \"R2 U2' R2' U2' R' U2' R U' R' U2' R2 U2 R U R' U2 R U' R2'\",\n    \"R2 U2' R' U2' R2' U2 R2 U2' R U2 R2 U2' R2 U2 R2' U2' R2' U' R2'\",\n    \"R2 U2' R' U2' R2' U2 R2 U2' R U2 R' U2' R2' U2 R2 U2' R U' R2'\",\n    \"R2 U2' R' U2' R2' U2' R2 U2 R U2' R2 U2 R2 U2 R2' U2' R2' U' R2'\",\n    \"R2 U' R2 U2' R2' U' R2 U2' R2' U2 R2' U R2 U2 R2' U2 R2 U' R2'\",\n    \"R2 U' R2 U2' R2' U' R2 U2' R' U2 R2 U R2' U2 R2 U2 R2 U' R2'\",\n    \"R2 U' R2' U2' R2 U2 R2 U2 R2' U R2 U2 R2' U2' R2' U' R2 U' R2'\",\n    \"R2 U' R2' U2' R2 U2 R2' U2 R2 U R2' U2 R2 U2' R2' U' R2 U' R2'\",\n    \"R2 U' R2' U2' R2 U2 R2' U2 R2 U2' R2' U2' R2 U2 R2' U2 R2 U' R2'\",\n    \"R2 U' R2' U2' R2 U2' R2' U' R2' U2 R U2' R' U' R U2' R' U2 R2\",\n    \"R2 U' R2' U2' R2 U2' R2' U' R2' U2' R U2 R' U R U2 R' U2' R2\",\n    \"R2 U' R2' U2' R2 U' R2' U2' R2 U2 R2' U R2 U2 R2' U2 R2 U' R2'\",\n    \"R2 U' R2' U2' R2 U' R2' U2' R2' U2 R2 U R2' U2 R2 U2 R2 U' R2'\",\n    \"R2' U2 R U2 R2 U2 R' U' R' U2 R' U2' R2 U R U2' R2 U R2\",\n    \"R2' U2 R U2' R2 U' R2' U2' R2 U' R' U R2' U2 R2 U2 R U' R'\",\n    \"R2' U2 R2 U2 R2 U2' R2' U' R2 U2' R2' U2' R2' U2 R2 U2 R2' U' R2\",\n    \"R2' U2 R2 U2 R2' U2' R2 U' R2' U R2 U2 R2' U2' R2 U' R2' U' R2\",\n    \"R2' U2 R2 U2 R2' U2' R2 U' R2' U2' R2 U2' R2' U2 R2 U2 R2' U' R2\",\n    \"R2' U2 R2' U R' U R2' U R2 U2' R U2 R2 U' R2' U2' R2 U2' R2\",\n    \"R2' U2 R2' U R' U R2' U2 R2 U2 R U2' R2 U2' R2' U2' R2 U2' R2\",\n    \"R2' U2 R2' U R' U' R2' U2 R U2' R U R U' R2' U2 R' U R2\",\n    \"R2' U2 R2' U2 R2 U2' R2' U' R' U2' R2' U2' R2 U' R U2' R2 U R2\",\n    \"R2' U2 R' U R2' U2' R2 U2' R U2 R2 U2 R2' U R' U2' R U2' R2\",\n    \"R2' U2 R' U R2' U' R2 U2 R U2' R2 U R2' U R' U2' R U2' R2\",\n    \"R2' U2' R2 U R2 U' R U R2 U2' R2' U' R' U R2' U' R2' U' R2\",\n    \"R2' U2' R2 U2' R' U2' R U' R' U2' R2' U2 R U R' U2 R U' R2\",\n    \"R2' U' R2 U2' R2' U2 R2 U2 R2' U R2 U2 R2' U2' R2 U' R2' U' R2\",\n    \"R2' U' R2 U2' R2' U2 R2 U2 R2' U2' R2 U2' R2' U2 R2 U2 R2' U' R2\",\n    \"R2' U' R2 U2' R2' U2 R2' U2 R2 U R2' U2 R2 U2' R2 U' R2' U' R2\",\n    \"R2' U' R2 U2' R2' U2' R2 U' R' U2 R U2' R' U' R U2' R' U2 R\",\n    \"R2' U' R2 U2' R2' U2' R2 U' R' U2' R U2 R' U R U2 R' U2' R\",\n    \"R2' U' R2 U2' R2' U' R2 U2' R2 U2 R2' U R2 U2 R2' U2 R2' U' R2\",\n    \"R2' U' R2 U2' R2' U' R2 U2' R2' U2 R2 U R2' U2 R2 U2 R2' U' R2\",\n    \"R2' U' R2' U2' R2 U R2' U2' R' U2 R2' U' R2 U' R U2' R2 U R2\",\n    \"R2' U' R2' U2' R2 U2 R2' U2 R' U2' R2' U2' R2 U' R U2' R2 U R2\",\n    \"R2' U' R2' U2' R2 U' R2' U2' R U2 R2' U R2 U2 R2' U2 R2' U' R2\",\n    \"R2' U' R2' U2' R2 U' R2' U2' R2 U2 R2 U R2' U2 R2 U2 R2' U' R2\",\n    \"R2' U' R' U2' R U' R2 U2' R2' U2' R' U2 R2' U2 R2 U2' R U R2\",\n    \"R2' U' R' U2' R U' R2 U' R2' U2 R' U2' R2' U R2 U2' R U R2\",\n    \"R' U R2' U2 R2 U2' R2 U' R U2' R2 U2 R2 U R U2 R2 U2 R\",\n    \"R' U2 R' U2' R U' R' U2' R U' R2 U2' R2' U' R2 U2' R2' U2 R\",\n    \"R' U2 R' U2' R U' R' U2' R U' R2' U2' R2 U' R2' U2' R2 U2 R\",\n    \"R' U2' R U2' R2' U' R' U R2' U2 R' U2' R2' U' R U R U' R\",\n    \"R' U2' R2 U2' R2 U' R U2' R2 U2 R2' U2' R2 U2 R2 U R U' R\",\n    \"R' U2' R2 U2' R2 U' R2' U2 R2' U2' R' U2 R2' U R2 U2' R U' R\",\n    \"R' U2' R' U2 R U R' U2 R2' U2' R2' U2 R2 U2 R2' U2' R2 U2 R'\",\n    \"R' U2' R' U2 R U R' U2 R' U2' R2 U2 R2' U2 R2 U2' R2' U2 R2'\",\n    \"R' U2' R' U2 R2' U R2' U2 R2 U2' R2' U2 R' U2' R U2 R2 U2 R'\",\n    \"R' U2' R' U2' R2' U R2 U2' R U2 R2 U2' R2 U2' R2' U2' R2' U' R\",\n    \"R' U2' R' U2' R2' U2 R2 U2 R U2' R2 U2 R2 U2' R2' U2' R2' U' R\",\n    \"R' U' R' U2' R2 U R2' U2 R U2' R U' R' U2' R' U' R U R\",\n    \"R U2 R U2' R2' U R U2' R U R' U R' U' R2 U2 R' U2 R'\",\n    \"R U2 R2 U2' R2 U R2 U2' R U R' U R2' U' R2' U2 R2' U2 R'\",\n    \"R U' R2' U2' R2 U R2 U' R' U2' R U2 R U R2 U2 R' U' R\",\n    \"R2 U2 R2 U2' R U' R' U R2 U' R2' U2' R2' U2 R' U R U' R2'\",\n    \"R2 U2 R2' U2' R U2 R' U2' R U' R' U2' R U2 R' U2' R2 U2 R2'\",\n    \"R2 U2 R2' U2' R U2' R' U2 R U R' U2 R U2' R' U2' R2 U2 R2'\",\n    \"R2 U' R2 U R U' R' U' R2' U R U2 R2 U2 R' U2' R' U2' R2\",\n    \"R2' U2 R U2' R U' R' U R2' U' R2 U2' R' U2 R' U R U' R2\",\n    \"R2' U2 R U2' R2' U2 R2 U2' R U' R2 U2' R2 U2 R2' U2' R U2 R2\",\n    \"R2' U2 R U2' R2' U2 R2 U2' R U' R' U2' R2' U2 R2 U2' R' U2 R2\",\n    \"R2' U2 R2 U2' R2 U2 R' U2' R U' R' U2' R U2 R2' U2' R2' U2 R2\",\n    \"R2' U2 R2 U2' R2 U2' R' U2 R U R' U2 R U2' R2' U2' R2' U2 R2\",\n    \"R2' U2 R' U2' R2 U2 R2' U2' R2' U' R2 U2' R2 U2 R2' U2' R U2 R2\",\n    \"R2' U2 R' U2' R2 U2 R2' U2' R2' U' R' U2' R2' U2 R2 U2' R' U2 R2\",\n    \"R2' U2 R' U2' R2 U2 R' U2' R2 U' R2' U2' R U2 R2' U2' R U2 R2\",\n    \"R2' U2 R' U2' R' U2 R2' U' R2 U' R' U' R2 U2 R2 U R' U2 R2\",\n    \"R' U2 R U2' R2' U2 R' U2' R U' R' U2' R U2 R2 U2' R' U2 R\",\n    \"R' U2 R U2' R2' U2' R' U2 R U R' U2 R U2' R2 U2' R' U2 R\",\n    \"R' U2 R2' U2' R U2 R U2' R U' R' U2' R' U2 R' U2' R2 U2 R\",\n    \"R' U2 R' U2' R U2 R2' U2' R2' U' R2 U2' R2 U2 R' U2' R U2 R\",\n    \"R' U2 R' U2' R U2 R' U2' R2 U' R2' U2' R U2 R' U2' R U2 R\",\n    \"R U R' U2 R2 U2 R U R U2' R U2 R U2' R2' U R' U2' R2'\",\n    \"R U2' R' U2' R' U2 R' U2 R2' U R2 U2 R2' U2' R' U' R' U2' R\",\n    \"R U2' R' U2' R' U' R2 U2' R2' U2' R2 U2 R2' U2' R U' R' U2' R\",\n    \"R U2' R' U' R U2' R2' U2 R2 U2' R2' U2' R2 U' R' U2' R' U2' R\",\n    \"R U2' R' U' R' U2' R2' U2 R2 U R2' U2 R' U2 R' U2' R' U2' R\",\n    \"R2' U R2 U2 R U2' R' U R U' R2 U' R2' U2 R' U2' R U2' R'\",\n    \"R2' U2' R' U R2' U2' R U2 R U2' R U R U2 R2 U2 R' U R\",\n    \"R' U2' R U2' R' U2 R2' U' R2 U' R U R' U2' R U2 R2 U R2'\",\n    \"R' U2 R2' U2' R U R U2' R U2 R2' U' R' U' R2 U R2' U2 R2'\",\n    \"R U2 R U' R' U' R' U R2' U' R U2 R2 U2' R2 U2 R2 U' R2\",\n  ],\n  [\n    \"R U R U R' U R' U' R2 U R' U' R U' R2' U R U2' R'\",\n    \"R U2 R' U' R2 U R' U R U' R2' U R U' R U' R' U' R'\",\n    \"R2 U2 R2' U2 R2 U2' R2' U R2 U2 R2' U R2 U2' R2' U R2 U R2'\",\n    \"R2 U' R2' U2' R2 U2 R2' U' R2 U2 R2' U R2 U2' R2' U R2 U R2'\",\n    \"R2' U2 R2 U2 R2' U2' R2 U R2' U2 R2 U R2' U2' R2 U R2' U R2\",\n    \"R2' U' R2 U2' R2' U2 R2 U' R2' U2 R2 U R2' U2' R2 U R2' U R2\",\n    \"R2 U2 R' U R' U' R2' U2 R' U' R' U2 R2' U' R' U R' U2 R2\",\n    \"R2 U' R2' U' R2 U2 R2' U' R2 U2' R2' U R2 U2' R2' U2 R2 U R2'\",\n    \"R2 U' R2' U' R2 U2 R2' U' R2 U2' R2' U' R2 U2 R2' U2' R2 U2' R2'\",\n    \"R2' U2' R U' R U R2 U2' R U R U2' R2 U R U' R U2' R2'\",\n    \"R2' U' R2 U' R2' U2 R2 U' R2' U2' R2 U R2' U2' R2 U2 R2' U R2\",\n    \"R2' U' R2 U' R2' U2 R2 U' R2' U2' R2 U' R2' U2 R2 U2' R2' U2' R2\",\n    \"R2 U R2' U2 R2 U2' R2' U R2 U2' R2' U' R2 U2 R2' U' R2 U' R2'\",\n    \"R2 U2' R2' U2' R2 U2 R2' U' R2 U2' R2' U' R2 U2 R2' U' R2 U' R2'\",\n    \"R2' U R2 U2 R2' U2' R2 U R2' U2' R2 U' R2' U2 R2 U' R2' U' R2\",\n    \"R2' U2' R2 U2' R2' U2 R2 U' R2' U2' R2 U' R2' U2 R2 U' R2' U' R2\",\n    \"R2 U R2' U R2 U2' R2' U R2 U2 R2' U R2 U2' R2' U2 R2 U2 R2'\",\n    \"R2 U R2' U R2 U2' R2' U R2 U2 R2' U' R2 U2 R2' U2' R2 U' R2'\",\n    \"R2' U R2 U R2' U2' R2 U R2' U2 R2 U R2' U2' R2 U2 R2' U2 R2\",\n    \"R2' U R2 U R2' U2' R2 U R2' U2 R2 U' R2' U2 R2 U2' R2' U' R2\",\n    \"R' U2' R U R2' U' R U' R' U R2 U' R' U R' U R U R\",\n    \"R' U' R' U' R U' R U R2' U' R U R' U R2 U' R' U2 R\",\n    \"R U R' U R U' R2' U' R2 U2' R2' U R2 U' R' U2 R' U R\",\n    \"R U R' U2 R' U' R2 U R2' U2' R2 U' R2' U' R U R' U R\",\n    \"R' U' R U2' R U R2' U' R2 U2 R2' U R2 U R' U' R U' R'\",\n    \"R' U' R U' R' U R2 U R2' U2 R2 U' R2' U R U2' R U' R'\",\n    \"R U2 R2' U R2 U2' R' U2' R' U R U R2 U2 R2 U' R2 U R U2' R2'\",\n    \"R U2 R2' U2 R U2 R' U R U R U R' U R U R' U' R U R'\",\n    \"R U2 R' U R' U' R2 U2' R' U2 R' U R U2 R2 U2' R2' U' R2 U2' R2'\",\n    \"R U2 R' U R' U' R2 U2' R' U2 R' U R U2 R2' U2' R2 U' R2' U2' R2\",\n    \"R U2 R' U2' R U2' R' U' R2 U2' R' U2 R' U2' R U2' R' U' R2 U2' R2'\",\n    \"R U' R' U R U' R' U' R U' R' U' R' U' R U2' R' U2' R2 U2' R'\",\n    \"R2 U2 R2' U R U2 R' U2 R U2' R U2 R2' U R U2 R' U2 R U2' R'\",\n    \"R2 U2 R2' U R2 U2 R2' U2' R' U' R U2' R U2 R2' U R U' R U2' R'\",\n    \"R2 U2 R' U' R2' U R2' U2' R2' U' R' U' R U2 R U2 R2' U' R2 U2' R'\",\n    \"R2 U' R U' R U R' U R2 U' R' U R' U' R U' R U R2 U R2'\",\n    \"R2 U' R2' U' R' U R' U R U' R U R2' U' R U' R' U R' U R2'\",\n    \"R2' U2 R2 U R U' R U' R' U R' U' R2 U R' U R U' R U2' R2\",\n    \"R2' U2 R2 U R2' U2 R2 U2' R' U' R U2' R U2 R2' U R U' R U2' R'\",\n    \"R2' U2 R' U R' U' R U' R2' U R U' R U R' U R' U' R2' U2' R2\",\n  ],\n  [\n    \"R2 U2 R2' U R2 U' R2' U R2 U2 R2' U' R2 U2' R2' U' R2 U2' R2'\",\n    \"R2 U2 R2' U R2 U' R2' U R2 U2 R2' U' R2' U2' R2 U' R2' U2' R2\",\n    \"R2' U2 R2 U R2' U' R2 U R2' U2 R2 U' R2 U2' R2' U' R2 U2' R2'\",\n    \"R2' U2 R2 U R2' U' R2 U R2' U2 R2 U' R2' U2' R2 U' R2' U2' R2\",\n    \"R U' R2 U2 R' U R U' R' U R U' R' U R U2 R2' U R'\",\n    \"R U' R2 U2' R' U' R U R' U' R U R' U' R U2' R2' U R'\",\n    \"R U' R' U' R U2' R' U2' R2 U2 R' U R U' R' U' R U' R2'\",\n    \"R2 U R' U R U R' U' R U2' R2' U2 R U2 R' U R U R'\",\n    \"R2' U R' U R' U' R2 U R' U R U' R2' U R U' R U2' R2\",\n    \"R2' U2 R' U R' U R U' R U R2' U' R U' R' U R2 U2 R2\",\n    \"R2' U2 R' U R' U' R2 U R' U' R U' R2' U R U' R U' R2\",\n    \"R2' U2' R2' U' R U R' U R2 U' R' U R' U' R U' R U2' R2\",\n    \"R' U2 R U2 R U2' R2' U2 R2' U2' R2 U2' R2' U' R2' U R U2 R'\",\n    \"R U2' R' U' R2 U R2 U2 R2' U2 R2 U2' R2 U2 R' U2' R' U2' R\",\n    \"R2 U2 R2' U R2 U2 R2' U R2 U2' R2' U' R2 U R2' U' R2 U2' R2'\",\n    \"R2 U2 R2' U R2 U2 R2' U R2' U2' R2 U' R2' U R2 U' R2' U2' R2\",\n    \"R2' U2 R2 U R2' U2 R2 U R2 U2' R2' U' R2 U R2' U' R2 U2' R2'\",\n    \"R2' U2 R2 U R2' U2 R2 U R2' U2' R2 U' R2' U R2 U' R2' U2' R2\",\n    \"R2 U2 R2 U R' U' R U' R2' U R U' R U R' U R' U2 R2'\",\n    \"R2 U2' R U' R U R2' U' R U R' U R2 U' R' U R' U R2'\",\n    \"R2 U2' R U' R U' R' U R' U' R2 U R' U R U' R2' U2' R2'\",\n    \"R2 U2' R2' U' R2 U2' R2' U' R2 U2 R2' U R2 U' R2' U R2 U2 R2'\",\n    \"R2 U2' R2' U' R2 U2' R2' U' R2' U2 R2 U R2' U' R2 U R2' U2 R2\",\n    \"R2 U' R U' R U R2' U' R U' R' U R2 U' R' U R' U2 R2'\",\n    \"R2' U2' R2 U' R2' U2' R2 U' R2 U2 R2' U R2 U' R2' U R2 U2 R2'\",\n    \"R2' U2' R2 U' R2' U2' R2 U' R2' U2 R2 U R2' U' R2 U R2' U2 R2\",\n    \"R2' U' R U' R' U' R U R' U2 R2 U2' R' U2' R U' R' U' R\",\n    \"R' U R U R' U2 R U2 R2' U2' R U' R' U R U R' U R2\",\n    \"R' U R2' U2 R U R' U' R U R' U' R U R' U2 R2 U' R\",\n    \"R' U R2' U2' R U' R' U R U' R' U R U' R' U2' R2 U' R\",\n    \"R' U2 R U R2' U' R2' U2' R2 U2' R2' U2 R2' U2' R U2 R U2 R'\",\n    \"R2 U2' R2' U' R2 U R2' U' R2 U2' R2' U R2 U2 R2' U R2 U2 R2'\",\n    \"R2 U2' R2' U' R2 U R2' U' R2 U2' R2' U R2' U2 R2 U R2' U2 R2\",\n    \"R2' U2' R2 U' R2' U R2 U' R2' U2' R2 U R2 U2 R2' U R2 U2 R2'\",\n    \"R2' U2' R2 U' R2' U R2 U' R2' U2' R2 U R2' U2 R2 U R2' U2 R2\",\n    \"R U2' R' U2' R' U2 R2 U2' R2 U2 R2' U2 R2 U R2 U' R' U2' R\",\n    \"R U R2 U R2 U R U' R2 U' R2' U' R' U R' U' R U2' R' U2' R\",\n    \"R2 U R2' U R2' U2' R U2' R' U2 R' U' R' U' R' U R' U R2' U2 R2\",\n    \"R2 U2 R2' U R2 U2 R U2 R2 U R2' U2 R2 U' R2 U2' R2' U' R2 U2' R2'\",\n    \"R2 U2 R2' U R2 U2 R U2 R2 U R2' U2 R2 U' R2' U2' R2 U' R2' U2' R2\",\n    \"R2 U2 R2' U R2 U' R2' U R2 U' R U2' R2 U' R2' U2' R2 U' R2 U2' R2'\",\n    \"R2' U R' U R2' U' R2' U' R' U2' R2' U2' R2 U2' R2 U2' R2' U R2 U R\",\n    \"R2' U2 R2 U R2' U2 R' U2 R2' U R2 U2 R2' U' R2 U2' R2' U' R2 U2' R2'\",\n    \"R2' U2 R2 U R2' U2 R' U2 R2' U R2 U2 R2' U' R2' U2' R2 U' R2' U2' R2\",\n    \"R2' U2 R2 U R2' U' R2 U R2' U' R' U2' R2' U' R2 U2' R2' U' R2' U2' R2\",\n    \"R' U R2 U2' R U2 R2 U' R U R2' U2' R2' U' R2 U2' R' U2 R' U2' R'\",\n    \"R' U R2 U2' R U2 R2 U' R U R' U2' R2 U' R2' U2' R2' U2 R' U2' R'\",\n    \"R' U2 R2 U R' U R' U' R U' R' U2' R2' U2' R2' U2' R2 U' R' U2' R'\",\n    \"R' U2 R2 U2 R U2' R2 U2' R U R2' U2' R2' U' R2 U2' R' U2 R' U2' R'\",\n    \"R' U2 R2 U2 R U2' R2 U2' R U R' U2' R2 U' R2' U2' R2' U2 R' U2' R'\",\n    \"R' U2' R2' U R2 U R U' R U' R' U2' R' U2 R2 U R U' R2 U2' R\",\n  ],\n  [\n    \"R U2' R U2 R2 U2' R2 U R2' U R U R2 U2' R' U2 R'\",\n    \"R U2' R U2 R2' U' R' U' R2 U2' R2' U2' R2' U2 R' U2' R'\",\n    \"R U2' R U2 R2' U' R' U' R2 U' R2' U2 R2' U2' R' U2 R'\",\n    \"R' U2 R' U2' R2 U R U R2' U R2 U2' R2 U2 R U2' R\",\n    \"R' U2 R' U2' R2 U R U R2' U2 R2 U2 R2 U2' R U2 R\",\n    \"R' U2 R' U2' R2' U2 R2' U' R2 U' R' U' R2' U2 R U2' R\",\n    \"R U2 R U2' R2 U2 R2 U2 R2' U R U R2 U2' R' U2 R'\",\n    \"R' U2' R' U2 R2' U2' R2' U2' R2 U' R' U' R2' U2 R U2' R\",\n    \"R' U R2 U2 R U2' R2 U2 R2 U R2' U R U R2 U2' R' U2 R'\",\n    \"R U2' R' U2' R U R' U' R U R' U' R U R' U R U2 R'\",\n    \"R U2' R' U' R U' R' U R U' R' U R U' R' U2 R U2 R'\",\n    \"R2 U2 R2' U R2 U2 R2 U2' R U' R U R2' U2 R U2' R U' R'\",\n    \"R2' U2 R2 U R2' U2 R U2' R U' R U R2' U2 R U2' R U' R'\",\n    \"R' U2 R2 U2' R U2' R' U2 R2' U2' R U2 R U2' R U2 R' U2 R'\",\n    \"R U2' R U2 R2' U' R' U' R2 U2' R2' U2 R2' U2' R' U2 R2' U R\",\n    \"R2 U R2' U2 R2 U' R2' U R2 U' R2' U2' R2 U' R2' U R2 U' R2'\",\n    \"R2 U' R2' U R2 U' R2' U R2 U2' R2' U R2 U' R2' U R2 U' R2'\",\n    \"R2 U' R2' U R2 U' R2' U2' R2 U' R2' U R2 U' R2' U2 R2 U R2'\",\n    \"R2' U R2 U2 R2' U' R2 U R2' U' R2 U2' R2' U' R2 U R2' U' R2\",\n    \"R2' U2 R U R2' U' R' U' R U R U' R' U' R2' U R U2 R2'\",\n    \"R2' U' R2 U R2' U' R2 U R2' U2' R2 U R2' U' R2 U R2' U' R2\",\n    \"R2' U' R2 U R2' U' R2 U2' R2' U' R2 U R2' U' R2 U2 R2' U R2\",\n    \"R' U' R U' R' U2 R2' U' R2' U' R U2 R U' R' U' R U R2'\",\n    \"R U R' U2 R' U2' R2 U' R' U R' U2 R2' U2' R2' U' R2 U2' R2'\",\n    \"R U R' U2 R' U2' R2 U' R' U R' U2 R' U2' R2 U' R2' U2' R2\",\n    \"R U2' R U2 R2' U' R' U' R2 U' R2' U2' R2' U2 R' U2' R2' U' R\",\n    \"R U2' R U2' R' U2 R' U2' R' U2 R2 U2' R U2 R' U2 R2' U2' R\",\n    \"R' U2 R U R' U R U' R' U R U' R' U R U2' R' U2' R\",\n    \"R' U2 R U2 R' U' R U R' U' R U R' U' R U' R' U2' R\",\n    \"R' U2 R' U2 R U2' R U2 R U2' R2' U2 R' U2' R U2' R2 U2 R'\",\n    \"R' U2 R' U2' R2 U R U R2' U R2 U2 R2 U2' R U2 R2 U R'\",\n    \"R' U' R U2' R U2 R2' U R U' R U2' R U2 R2' U R2 U2 R2'\",\n    \"R' U' R U2' R U2 R2' U R U' R U2' R2 U2 R2 U R2' U2 R2\",\n    \"R U R' U R U2' R2 U R2 U R' U2' R' U R U R' U' R2\",\n    \"R U' R2' U2' R' U2 R2' U2' R2' U' R2 U' R' U' R2' U2 R U2' R\",\n    \"R2 U R2' U' R2 U R2' U2 R2 U R2' U' R2 U R2' U2' R2 U' R2'\",\n    \"R2 U R2' U' R2 U R2' U' R2 U2 R2' U' R2 U R2' U' R2 U R2'\",\n    \"R2 U2' R' U' R2 U R U R' U' R' U R U R2 U' R' U2' R2\",\n    \"R2 U' R2' U2' R2 U R2' U' R2 U R2' U2 R2 U R2' U' R2 U R2'\",\n    \"R2' U R2 U' R2' U R2 U2 R2' U R2 U' R2' U R2 U2' R2' U' R2\",\n    \"R2' U R2 U' R2' U R2 U' R2' U2 R2 U' R2' U R2 U' R2' U R2\",\n    \"R2' U' R2 U2' R2' U R2 U' R2' U R2 U2 R2' U R2 U' R2' U R2\",\n    \"R' U2 R' U2' R2 U R U R2' U2 R2 U2' R2 U2 R U2' R2 U' R'\",\n    \"R U R2' U2 R' U2' R2' U2 R2' U2' R2 U' R' U' R2' U2 R U2' R\",\n    \"R U2' R2' U2 R' U2 R U2' R2 U2 R' U2' R' U2 R' U2' R U2' R\",\n    \"R2 U2' R2' U' R2 U2' R' U2 R' U R' U' R2 U2' R' U2 R' U R\",\n    \"R2 U' R' U R U R' U2' R' U R2 U R2 U2' R U R' U R\",\n    \"R2' U R U' R' U' R U2 R U' R2' U' R2' U2 R' U' R U' R'\",\n    \"R2' U2' R2 U' R2' U2' R2' U2 R' U R' U' R2 U2' R' U2 R' U R\",\n    \"R' U' R2 U2' R U2 R2 U2' R2 U2 R2' U R U R2 U2' R' U2 R'\",\n    \"R U R' U2 R U' R' U R U2 R2' U' R2 U R2' U2 R2 U2 R2' U2' R\",\n    \"R U2 R' U R U2 R2' U2 R U R' U2 R U' R2 U2' R2' U' R2 U2' R2'\",\n    \"R U2 R' U R U2 R2' U2 R U R' U2 R U' R2' U2' R2 U' R2' U2' R2\",\n    \"R U2' R U2 R2 U R' U2 R2' U R2 U2 R U' R U R2 U2' R' U2 R'\",\n    \"R U2' R U2 R2 U2' R2 U R2' U R U R' U R2' U2 R' U2' R2' U' R\",\n    \"R U2' R2' U2 R2' U2' R2 U2 R2' U2' R' U R2' U R U R2 U2' R' U2 R'\",\n    \"R U' R2 U' R' U R2 U R U R2 U2' R' U R' U2' R2' U2 R2' U R2\",\n    \"R2 U R2' U2 R2 U' R2' U R2 U' R2 U2' R2' U' R2 U R2' U' R2 U2' R\",\n    \"R2 U2' R U2 R2' U2' R' U2' R2' U2' R2' U2 R U R' U2' R U2 R U2 R2\",\n    \"R2 U2' R U2' R2' U' R2' U' R2 U R' U' R2' U2 R2 U2 R2 U R2 U2 R2'\",\n    \"R2 U2' R2' U R2' U R' U R2' U R2 U2 R2' U2' R2 U R U' R' U R2'\",\n    \"R2 U2' R2' U R2' U R' U R2' U2' R2 U2' R2' U2 R2 U' R U' R' U R2'\",\n    \"R2 U2' R2' U2' R2 U' R2' U2 R2 U2 R' U R U2 R' U2' R' U2 R U2 R'\",\n    \"R2 U2' R2' U2' R2 U' R2' U2 R2 U2 R' U2' R' U2' R U2 R U2' R' U' R'\",\n    \"R2 U2' R2' U2' R2 U' R' U R U2' R2' U2' R U R U2' R2' U2' R U R'\",\n    \"R2 U2' R2' U2' R2 U' R' U2 R U2 R' U2' R' U2 R U R' U2 R2 U2 R2'\",\n    \"R2 U2' R2' U2' R2 U' R' U' R' U2' R U2 R U2' R' U2' R' U2 R2 U2 R2'\",\n    \"R2' U R2 U2 R2' U' R2 U R2' U' R2' U2' R2 U' R2' U R2 U' R2' U2' R'\",\n    \"R2' U2' R2 U2' R U2' R2' U2 R' U R U2 R2 U R2 U' R2' U2' R2 U2 R2\",\n    \"R2' U' R2 U' R2' U R U2' R' U2 R2 U' R' U' R' U2' R2 U R' U R\",\n    \"R' U R2 U2 R U2' R U2 R2' U R2 U2 R U' R U R2 U2' R' U2 R'\",\n    \"R' U2' R2 U2 R2' U' R' U' R2' U' R' U R2' U R2' U' R' U2' R' U2 R\",\n    \"R' U' R U' R' U R U2' R' U2 R U R U2' R' U2' R U' R2' U2' R\",\n  ],\n  [\n    \"R2 U2' R2' U' R2 U R2' U' R2 U2' R U2' R2 U' R2' U2' R2\",\n    \"R2 U2' R2' U' R2 U2' R U2' R2 U' R2' U R2 U' R2' U2' R2\",\n    \"R2' U2' R2 U' R2' U R2 U' R2' U2' R' U2' R2' U' R2 U2' R2'\",\n    \"R2' U2' R2 U' R2' U2' R' U2' R2' U' R2 U R2' U' R2 U2' R2'\",\n    \"R2 U R2' U2' R2 U R2' U' R2 U R2' U2' R2 U' R2' U' R2 U2' R2'\",\n    \"R2 U2' R2' U R2 U2 R2' U' R2 U R2' U' R2 U2 R2' U R2 U2' R2'\",\n    \"R2 U2' R2' U2 R' U2 R2' U R2 U2 R U2 R2 U R2' U' R2 U2' R2'\",\n    \"R2 U2' R2' U2 R' U2 R2' U R2 U' R2' U R2 U2 R U2 R2 U2' R2'\",\n    \"R2 U2' R2' U2' R2 U R2' U R2 U' R2' U' R2 U2 R2' U' R2 U2' R2'\",\n    \"R2 U2' R2' U' R2 U R2' U2 R' U2 R2' U R2 U2 R U2 R2 U2' R2'\",\n    \"R2 U2' R2' U' R2 U R2' U2' R2 U R2' U R2 U' R2' U' R2 U' R2'\",\n    \"R2 U2' R2' U' R2 U2 R2' U' R2 U' R2' U R2 U R2' U2' R2 U2' R2'\",\n    \"R2 U2' R2' U' R2 U2' R U2' R2 U' R2' U2' R' U2' R2' U' R2 U2' R2'\",\n    \"R2 U2' R2' U' R2 U' R2' U2' R2 U R2' U' R2 U R2' U2' R2 U R2'\",\n    \"R2 U' R2' U' R2 U' R2' U R2 U R2' U2' R2 U R2' U' R2 U2' R2'\",\n    \"R2' U R2 U2' R2' U R2 U' R2' U R2 U2' R2' U' R2 U' R2' U2' R2\",\n    \"R2' U2' R2 U R2' U2 R2 U' R2' U R2 U' R2' U2 R2 U R2' U2' R2\",\n    \"R2' U2' R2 U2 R U2 R2 U R2' U2 R' U2 R2' U R2 U' R2' U2' R2\",\n    \"R2' U2' R2 U2 R U2 R2 U R2' U' R2 U R2' U2 R' U2 R2' U2' R2\",\n    \"R2' U2' R2 U2' R2' U R2 U R2' U' R2 U' R2' U2 R2 U' R2' U2' R2\",\n    \"R2' U2' R2 U' R2' U R2 U2 R U2 R2 U R2' U2 R' U2 R2' U2' R2\",\n    \"R2' U2' R2 U' R2' U R2 U2' R2' U R2 U R2' U' R2 U' R2' U' R2\",\n    \"R2' U2' R2 U' R2' U2 R2 U' R2' U' R2 U R2' U R2 U2' R2' U2' R2\",\n    \"R2' U2' R2 U' R2' U2' R' U2' R2' U' R2 U2' R U2' R2 U' R2' U2' R2\",\n    \"R2' U2' R2 U' R2' U' R2 U2' R2' U R2 U' R2' U R2 U2' R2' U R2\",\n    \"R2' U' R2 U' R2' U' R2 U R2' U R2 U2' R2' U R2 U' R2' U2' R2\",\n    \"R2 U2 R2' U2' R2 U2 R2' U2 R2 U R2' U' R2 U R2' U' R2 U2' R2'\",\n    \"R2' U2 R2 U2' R2' U2 R2 U2 R2' U R2 U' R2' U R2 U' R2' U2' R2\",\n    \"R2 U2' R2' U' R2 U R2' U' R2 U R2' U2 R2 U2 R2' U2' R2 U2 R2'\",\n    \"R2' U2' R2 U' R2' U R2 U' R2' U R2 U2 R2' U2 R2 U2' R2' U2 R2\",\n  ],\n  [\n    \"R2 U2 R2' U R2 U2 R U2 R2 U R2' U' R2 U R2' U2 R2\",\n    \"R2 U2 R2' U R2 U' R2' U R2 U2 R U2 R2 U R2' U2 R2\",\n    \"R2' U2 R2 U R2' U2 R' U2 R2' U R2 U' R2' U R2 U2 R2'\",\n    \"R2' U2 R2 U R2' U' R2 U R2' U2 R' U2 R2' U R2 U2 R2'\",\n    \"R2 U R2' U R2 U R2' U' R2 U' R2' U2 R2 U' R2' U R2 U2 R2'\",\n    \"R2 U2 R2' U R2 U R2' U2 R2 U' R2' U R2 U' R2' U2 R2 U' R2'\",\n    \"R2 U2 R2' U R2 U2 R U2 R2 U R2' U2 R' U2 R2' U R2 U2 R2'\",\n    \"R2 U2 R2' U R2 U2' R2' U R2 U R2' U' R2 U' R2' U2 R2 U2 R2'\",\n    \"R2 U2 R2' U R2 U' R2' U2 R2 U' R2' U' R2 U R2' U R2 U R2'\",\n    \"R2 U2 R2' U R2 U' R2' U2' R' U2' R2' U' R2 U2' R U2' R2 U2 R2'\",\n    \"R2 U2 R2' U2 R2 U' R2' U' R2 U R2' U R2 U2' R2' U R2 U2 R2'\",\n    \"R2 U2 R2' U2' R' U2' R2' U' R2 U R2' U' R2 U2' R U2' R2 U2 R2'\",\n    \"R2 U2 R2' U2' R' U2' R2' U' R2 U2' R U2' R2 U' R2' U R2 U2 R2'\",\n    \"R2 U2 R2' U' R2 U2' R2' U R2 U' R2' U R2 U2' R2' U' R2 U2 R2'\",\n    \"R2 U' R2' U2 R2 U' R2' U R2 U' R2' U2 R2 U R2' U R2 U2 R2'\",\n    \"R2' U R2 U R2' U R2 U' R2' U' R2 U2 R2' U' R2 U R2' U2 R2\",\n    \"R2' U2 R2 U R2' U R2 U2 R2' U' R2 U R2' U' R2 U2 R2' U' R2\",\n    \"R2' U2 R2 U R2' U2 R' U2 R2' U R2 U2 R U2 R2 U R2' U2 R2\",\n    \"R2' U2 R2 U R2' U2' R2 U R2' U R2 U' R2' U' R2 U2 R2' U2 R2\",\n    \"R2' U2 R2 U R2' U' R2 U2 R2' U' R2 U' R2' U R2 U R2' U R2\",\n    \"R2' U2 R2 U R2' U' R2 U2' R U2' R2 U' R2' U2' R' U2' R2' U2 R2\",\n    \"R2' U2 R2 U2 R2' U' R2 U' R2' U R2 U R2' U2' R2 U R2' U2 R2\",\n    \"R2' U2 R2 U2' R U2' R2 U' R2' U R2 U' R2' U2' R' U2' R2' U2 R2\",\n    \"R2' U2 R2 U2' R U2' R2 U' R2' U2' R' U2' R2' U' R2 U R2' U2 R2\",\n    \"R2' U2 R2 U' R2' U2' R2 U R2' U' R2 U R2' U2' R2 U' R2' U2 R2\",\n    \"R2' U' R2 U2 R2' U' R2 U R2' U' R2 U2 R2' U R2 U R2' U2 R2\",\n    \"R2 U2 R2' U2' R2 U2 R2' U2 R2 U R2' U' R2 U R2' U' R2 U2' R2'\",\n    \"R2' U2 R2 U2' R2' U2 R2 U2 R2' U R2 U' R2' U R2 U' R2' U2' R2\",\n    \"R2 U2' R2' U' R2 U R2' U' R2 U R2' U2 R2 U2 R2' U2' R2 U2 R2'\",\n    \"R2' U2' R2 U' R2' U R2 U' R2' U R2 U2 R2' U2 R2 U2' R2' U2 R2\",\n  ],\n  [\n    \"R U2 R' U R U2 R2' U2 R U R' U2 R2' U2 R2' U R2 U2 R2'\",\n    \"R U2 R' U R U2 R2' U2 R U R' U2 R' U2 R2 U R2' U2 R2\",\n    \"R2 U2' R2' U' R2 U' R2' U' R' U' R U R2 U' R2' U' R' U R\",\n    \"R2' U2 R U2 R' U R2 U2' R' U' R U2 R U2 R' U' R U' R'\",\n    \"R' U2 R U2 R' U2' R U R' U R2 U R2' U R2 U2' R2' U2 R\",\n    \"R' U2' R U R' U R U2 R U2 R' U' R U2 R' U' R U2' R'\",\n    \"R' U2' R U' R' U2 R U' R' U2 R U2 R U R' U R U2' R'\",\n    \"R U2 R U R2' U2 R2 U' R' U R' U2' R U2 R' U' R2 U2' R2'\",\n    \"R2 U2' R2' U' R2 U2 R' U2 R U2 R' U2' R' U2 R U R U R2'\",\n    \"R2 U2' R2' U' R2 U2 R' U' R' U2' R U2 R U2' R' U2' R U R2'\",\n    \"R2' U2' R2 U R' U2' R' U R2 U R2' U R U R U' R' U R\",\n    \"R U R' U' R U R U R2' U R2 U R' U2' R' U R2 U2' R2'\",\n    \"R U2 R' U R U R U2' R2' U2' R2 U' R' U' R' U' R U R'\",\n    \"R U2' R' U R U2 R' U2' R U' R' U2' R U2' R' U2 R U' R'\",\n    \"R U2' R' U R U2' R' U2 R U R' U2 R U' R' U2 R U' R'\",\n    \"R2 U R2' U2' R2 U R2' U2 R2 U2 R2' U' R2 U2 R2' U R2 U R2'\",\n    \"R2 U2 R' U2' R2' U' R U' R2' U R U2' R2 U R' U' R2 U2' R\",\n    \"R2 U2' R U R U2 R2 U2' R2 U2 R U2' R U' R2 U R2 U R2'\",\n    \"R2' U R2 U2' R2' U R2 U2 R2' U2 R2 U' R2' U2 R2 U R2' U R2\",\n    \"R2' U2' R2 U' R' U2 R U2' R' U R' U' R2 U2 R2' U R U2 R\",\n    \"R2' U' R2 U2' R' U2' R U2' R' U' R' U R2' U2' R' U2' R U' R'\",\n    \"R' U' R2' U2' R' U2 R' U' R2' U R U2' R2 U R' U' R2 U2' R\",\n    \"R U2' R2 U' R' U R2 U2' R U R2' U' R U' R2' U2' R' U2 R2\",\n    \"R U2' R2 U' R' U R2 U2' R U R2' U' R' U2 R' U2' R2' U' R'\",\n    \"R2 U R2' U R2 U2 R2' U' R2 U2 R2' U2 R2 U R2' U2' R2 U R2'\",\n    \"R2 U2 R U2' R2' U2 R2' U2' R U' R' U2' R2 U2 R2 U2' R' U2 R2'\",\n    \"R2' U R U R U2 R' U2' R' U2 R U2 R' U2 R2 U' R2' U2' R2\",\n    \"R2' U R U2' R' U2' R U2 R U2' R' U' R' U2 R2 U' R2' U2' R2\",\n    \"R2' U R2 U R2 U' R U2' R U2 R2 U2' R2 U2 R U R U2' R2\",\n    \"R2' U R2 U R2' U2 R2 U' R2' U2 R2 U2 R2' U R2 U2' R2' U R2\",\n    \"R2' U2 R' U2' R2 U2 R2 U2' R' U' R U2' R2' U2 R2' U2' R U2 R2\",\n    \"R' U' R U2 R' U2' R U2' R' U' R U2' R' U2 R U R' U2' R\",\n    \"R' U' R U2 R' U' R U2 R' U R U2 R' U2' R U R' U2' R\",\n    \"R' U' R U2' R' U2' R2' U R' U' R' U2' R U2' R' U2' R2 U' R2'\",\n    \"R U R' U' R2' U' R2 U R U' R' U' R2' U' R2 U' R2' U2' R2\",\n    \"R U2 R2' U2' R2 U R2' U R2 U R' U R U2' R' U2 R U2 R'\",\n    \"R2 U2 R2' U R2 U2 R' U2 R' U R U2 R2' U2 R U R' U2 R\",\n    \"R2' U2 R2 U R2' U2 R2' U2 R' U R U2 R2' U2 R U R' U2 R\",\n    \"R' U' R U' R' U2 R U2 R U' R' U2' R2 U R' U2 R U2 R2'\",\n    \"R U2' R' U2 R U' R2' U2 R2 U2 R2' U R2 U2' R' U2 R U2' R'\",\n    \"R2 U2' R2 U2 R' U R2' U2 R U' R' U' R2 U' R U2 R2' U2' R2'\",\n    \"R2 U2' R' U R2' U R' U2' R' U' R U2' R U' R2 U2' R U2' R2'\",\n    \"R2 U' R' U' R U R' U2' R' U2 R2 U' R2' U' R U2 R U R2'\",\n    \"R2' U R U2 R U' R2' U' R2 U2 R' U2' R' U R U' R' U' R2\",\n    \"R2' U2' R U2' R2 U' R U2' R U' R' U2' R' U R2' U R' U2' R2\",\n    \"R2' U2' R2' U2 R U' R2 U' R' U' R U2 R2' U R' U2 R2 U2' R2\",\n    \"R' U R U' R' U' R' U' R2 U2' R2' U2' R U R U R' U2 R\",\n    \"R' U2' R U2 R' U2' R2 U R2' U2 R2 U2 R2' U' R U2 R' U2' R\",\n    \"R U2 R2' U' R U' R' U' R U2' R U2' R' U' R' U R U R U' R'\",\n    \"R U2' R2 U R2 U2' R2 U2' R2' U' R U R U2 R' U2 R2 U' R2' U2 R'\",\n    \"R U' R U2' R' U2' R' U R2 U2' R2' U R U2' R U2' R' U' R U2' R2'\",\n    \"R2 U2' R2' U' R U2' R U2 R U2 R' U2 R' U2' R' U' R2 U2' R U R2\",\n    \"R2 U2' R2' U' R U2' R U2 R U' R' U2' R' U2 R U2' R2' U' R2' U' R2\",\n    \"R2 U2' R2' U' R2 U2' R' U R' U' R2' U' R2 U R U' R' U' R2' U R2\",\n    \"R2' U R2 U2' R2' U2' R2 U2 R' U2 R' U R U' R U R' U2 R' U R2\",\n    \"R2' U2' R2 U2 R U' R' U2' R2' U2 R2 U' R U R2' U2 R2 U' R2' U' R\",\n    \"R2' U2' R2 U' R2' U2' R2' U R' U' R2' U' R2 U R U' R' U' R2' U R2\",\n    \"R2' U2' R2 U' R2' U2' R' U R2' U' R' U' R U R2 U' R2' U' R' U R\",\n  ],\n  [\n    \"R U R' U R U2' R' U2' R' U R U2 R2' U' R U2' R' U2' R2\",\n    \"R2 U2' R2' U' R2 U2' R2 U2' R U' R' U2' R2 U2' R' U' R U2' R'\",\n    \"R2' U2' R2 U' R2' U2' R U2' R U' R' U2' R2 U2' R' U' R U2' R'\",\n    \"R' U' R U R2 U R2' U' R' U R U R2 U R2' U R2 U2 R2'\",\n    \"R2 U' R' U2 R U2 R' U2' R' U2 R U R U2' R2' U R2 U2 R2'\",\n    \"R2 U' R' U' R' U2' R U2 R U2' R' U2' R U2' R2' U R2 U2 R2'\",\n    \"R2 U2 R2' U R U2' R' U2 R U' R U R2' U2' R2 U' R' U2' R'\",\n    \"R' U' R U R' U' R' U' R2 U' R2' U' R U2 R U' R2' U2 R2\",\n    \"R U2 R' U R U2' R' U R U2' R' U2' R' U' R U' R' U2 R\",\n    \"R U2 R' U' R U' R' U2' R' U2' R U R' U2' R U R' U2 R\",\n    \"R' U2' R2 U2 R2' U' R2 U' R2' U' R U' R' U2 R U2' R' U2' R\",\n    \"R U R' U2 R U2 R2 U' R U R U2 R' U2 R U2 R2' U R2\",\n    \"R U R' U2' R U R' U2' R U' R' U2' R U2 R' U' R U2 R'\",\n    \"R U R' U2' R U2 R' U2 R U R' U2 R U2' R' U' R U2 R'\",\n    \"R U2' R' U2' R U2 R' U' R U' R2' U' R2 U' R2' U2 R2 U2' R'\",\n    \"R2 U2' R U2 R2' U2' R2' U2 R U R' U2 R2 U2' R2 U2 R' U2' R2'\",\n    \"R2 U' R2' U' R2 U2' R2' U R2 U2' R2' U2' R2 U' R2' U2 R2 U' R2'\",\n    \"R2 U' R2' U' R2' U R' U2 R' U2' R2' U2 R2' U2' R' U' R' U2 R2'\",\n    \"R2' U2' R' U2 R2 U2' R2 U2 R' U R U2 R2' U2' R2' U2 R U2' R2\",\n    \"R2' U' R2 U' R2' U2' R2 U R2' U2' R2 U2' R2' U' R2 U2 R2' U' R2\",\n    \"R' U2 R2' U R U' R2' U2 R' U' R2 U R U2' R U2 R2 U R\",\n    \"R' U2 R2' U R U' R2' U2 R' U' R2 U R' U R2 U2 R U2' R2'\",\n    \"R U R2 U2 R U2' R U R2 U' R' U2 R2' U' R U R2' U2 R'\",\n    \"R2 U R2' U2 R U2 R' U2 R U R U' R2 U2 R U2 R' U R\",\n    \"R2 U' R2' U2 R2 U' R2' U2' R2 U2' R2' U R2 U2' R2' U' R2 U' R2'\",\n    \"R2' U2 R' U' R' U2' R2' U2 R2' U2' R' U2 R' U R2' U' R2' U' R2\",\n    \"R2' U2' R U2 R2 U R' U R2 U' R' U2 R2' U' R U R2' U2 R'\",\n    \"R2' U' R2 U2 R2' U' R2 U2' R2' U2' R2 U R2' U2' R2 U' R2' U' R2\",\n    \"R' U2 R U' R' U2 R U2' R' U' R U2' R' U R U2' R' U R\",\n    \"R' U2 R U' R' U2' R U2 R' U R U2 R' U2 R U2' R' U R\",\n    \"R' U2' R U' R' U' R' U2 R2 U2 R2' U R U R U R' U' R\",\n    \"R2 U2 R2' U' R U2 R U' R2' U' R2 U' R' U' R' U R U' R'\",\n    \"R2 U2' R' U2' R U' R2' U2 R U R' U2' R' U2' R U R' U R\",\n    \"R2' U2 R2 U R2' U R2 U R U R' U' R2' U R2 U R U' R'\",\n    \"R2' U2 R2 U R2' U2' R U R U2 R' U2' R' U2 R U2 R' U' R2\",\n    \"R2' U2 R2 U R2' U2' R U2' R' U2' R U2 R U2' R' U' R' U' R2\",\n    \"R' U2' R U' R' U2' R2 U2' R' U' R U2' R U2' R2' U' R2 U2' R2'\",\n    \"R' U2' R U' R' U2' R2 U2' R' U' R U2' R2 U2' R2 U' R2' U2' R2\",\n    \"R' U2' R' U' R2 U2' R2' U R U' R U2 R' U2' R U R2' U2 R2\",\n    \"R U2 R' U2' R U2 R2' U' R2 U2' R2' U2' R2 U R' U2' R U2 R'\",\n    \"R U' R' U R U R U R2' U2 R2 U2 R' U' R' U' R U2' R'\",\n    \"R2 U2 R2 U2' R' U R2' U R U R' U2' R2 U' R U2' R2' U2 R2'\",\n    \"R2 U2 R' U2 R2' U R' U2 R' U R U2 R U' R2 U' R U2 R2'\",\n    \"R2 U' R' U2' R' U R2 U R2' U2' R U2 R U' R' U R U R2'\",\n    \"R2' U R U R' U' R U2 R U2' R2' U R2 U R' U2' R' U' R2\",\n    \"R2' U2 R U' R2 U' R U2 R U R' U2 R' U R2' U2 R' U2 R2\",\n    \"R2' U2 R2' U2' R U' R2 U2' R' U R U R2' U R' U2' R2 U2 R2\",\n    \"R' U2 R U2' R' U R2 U2' R2' U2' R2 U' R2' U2 R U2' R' U2 R\",\n    \"R U R' U' R' U' R U R U2 R' U2 R' U R U R' U R2 U2' R'\",\n    \"R U2' R2 U R2' U2' R U2' R' U' R' U R2 U2 R2' U2 R2' U' R2' U2 R'\",\n    \"R2 U2 R' U R U2 R' U2 R' U' R2 U2 R2' U' R U2 R U2 R' U R'\",\n    \"R2' U R2 U R2 U2 R' U2' R U2 R U R' U2' R' U2 R' U R2 U2 R2'\",\n    \"R2' U' R U2' R U' R' U R' U' R U2' R U2' R2' U2 R2 U2 R2' U' R2\",\n    \"R2' U' R2 U R U R' U' R2' U R2 U R U' R U2 R2' U R2 U2 R2'\",\n    \"R2' U' R2 U R U R' U' R2' U R2 U R U' R2 U2 R2 U R2' U2 R2\",\n    \"R2' U' R' U2 R2' U R U2 R U2' R U2' R' U2' R' U2 R' U R2 U2 R2'\",\n    \"R' U R2 U R2' U2' R2 U' R' U R2' U2' R2 U2 R U R' U2' R2' U2 R2\",\n    \"R' U' R U R2 U R2' U' R' U R U R2 U' R U2 R2 U R2' U2 R2\",\n  ],\n  [\n    \"R U2' R2' U2' R U R2 U R U2' R' U2 R U2' R U2 R2 U' R' U2' R'\",\n    \"R U2' R2' U2' R U R2 U R2 U2' R' U2 R' U2' R U2 R2' U' R' U2' R'\",\n    \"R U' R2' U' R2 U2' R2' U2' R2' U2 R' U' R' U2 R2 U' R2' U' R2 U' R2'\",\n    \"R2 U2 R2 U R' U2' R2' U R U' R U2 R' U' R' U R2' U' R2' U2' R2'\",\n    \"R2 U2 R2 U2 R2 U2' R U' R2' U2' R' U' R U2' R U2 R2' U2' R2' U' R2'\",\n    \"R2 U2 R' U R' U' R' U2 R2' U2 R2 U R U2' R U2 R' U R2 U' R2'\",\n    \"R2 U2' R2' U2' R2' U2 R' U R U2 R U2 R U R2 U' R2 U2' R2' U' R2'\",\n    \"R2 U2' R' U2 R' U' R U R U' R' U2' R' U2' R U R' U2' R U' R'\",\n    \"R2 U2' R' U2 R' U' R U2' R U2' R' U R U2' R' U2' R' U' R U2 R'\",\n    \"R2' U2' R2 U' R2' U R2 U R2' U R U2' R U R U2 R2' U' R2 U' R'\",\n    \"R2' U2' R2' U' R2' U R' U' R' U2 R U' R U R2' U2' R' U R2 U2 R2\",\n    \"R2' U' R2 U R' U2 R U2' R U R2 U2 R2' U2 R' U' R' U R' U2 R2\",\n    \"R2' U' R2 U' R2' U' R2 U R2' U2 R U2' R U R U2 R2' U' R2 U' R'\",\n    \"R2' U' R2 U' R2' U' R2 U2 R' U' R' U2 R2' U2' R2' U2' R2 U' R2' U' R\",\n    \"R2' U' R2' U2' R2 U' R2 U R U2 R U2 R U R' U2 R2' U2' R2' U2' R2\",\n    \"R2' U' R2' U2' R2' U2 R U2' R U' R' U2' R2' U' R U2' R2 U2 R2 U2 R2\",\n    \"R' U2 R U' R' U2' R' U2' R U R' U2' R U2' R U' R' U2 R' U2' R2\",\n    \"R' U2' R' U' R2 U2 R U2' R U2 R' U2' R U R2 U R U2' R2' U2' R\",\n    \"R' U2' R' U' R2' U2 R U2' R' U2 R' U2' R2 U R2 U R U2' R2' U2' R\",\n    \"R' U' R U2' R' U R U2' R' U2' R' U' R U R U' R' U2 R' U2' R2\",\n    \"R' U' R2 U' R2' U2 R U R U2' R U R2' U R2 U R2' U' R2 U2' R2'\",\n    \"R' U' R2 U' R2' U2 R U R U2' R U2 R2' U R2 U' R2' U' R2 U' R2'\",\n    \"R U2 R2 U2' R2 U2 R2' U2 R2 U R' U R2' U' R2' U R' U R2 U2 R2\",\n    \"R U' R2 U R2' U R' U' R2' U' R2' U2' R' U R U R' U2' R U2' R'\",\n    \"R U' R' U2' R U2' R' U2' R' U2' R U' R' U2' R2 U2' R' U R U R'\",\n    \"R2 U R U2 R' U R U' R U R2 U' R2' U2' R' U2' R U R U' R2\",\n    \"R2 U R U2 R' U R U' R U2' R' U2' R2' U' R2 U R U R U' R2\",\n    \"R2 U2 R2 U R' U R2' U' R2' U R' U R2 U2 R2' U2 R2 U2' R2 U2 R\",\n    \"R2 U2 R2' U2' R U2' R' U2 R U2' R2 U2' R U2 R' U2' R U2' R2' U2 R2\",\n    \"R2 U' R U R U R2 U' R2' U2' R' U2' R U' R U R' U2 R U R2\",\n    \"R2 U' R U R U2' R' U2' R2' U' R2 U R U' R U R' U2 R U R2\",\n    \"R' U R U R' U2' R2 U2' R' U' R U2' R' U2' R' U2' R U2' R' U' R\",\n    \"R' U R2 U R2 U2 R' U2 R' U2' R U2' R U' R U R' U2' R2 U' R'\",\n    \"R' U2' R U2' R' U R U R' U2' R2' U' R2' U' R' U R2' U R2 U' R\",\n    \"R' U' R2 U2' R' U R U' R U2' R U2' R' U2 R' U2 R2 U R2 U R'\",\n    \"R U2 R2 U2 R U' R U R U' R U R2 U2' R2' U2' R' U' R2 U' R2'\",\n    \"R2' U' R2 U' R' U2' R2' U2' R2 U R U' R U R U' R U2 R2 U2 R\",\n    \"R U R2' U2 R2 U2 R2' U R U R U2' R' U' R U R' U2' R U' R'\",\n    \"R U2' R U2' R2' U2 R2 U2 R2' U2 R2 U2' R2' U' R U R' U2' R U' R'\",\n    \"R U2' R U2' R2' U2 R2 U' R2' U2' R2 U2 R2' U2 R U R' U2' R U' R'\",\n    \"R U2' R2 U2' R2 U2 R2' U2 R2 U2 R2' U2' R2 U' R U R' U2' R U' R'\",\n    \"R U2' R2 U2' R2 U2 R2' U' R2 U2' R2' U2 R2 U2 R U R' U2' R U' R'\",\n    \"R' U' R U2' R' U R U2 R2 U2 R2' U2' R2 U' R2' U2 R2 U2' R2 U2' R\",\n    \"R' U' R U2' R' U R U2 R2' U2 R2 U2' R2' U' R2 U2 R2' U2' R U2' R\",\n    \"R' U' R U2' R' U R U' R2 U2' R2' U2 R2 U2 R2' U2 R2 U2' R2 U2' R\",\n    \"R' U' R U2' R' U R U' R2' U2' R2 U2 R2' U2 R2 U2 R2' U2' R U2' R\",\n    \"R' U' R U2' R' U R U' R' U2' R U R U R2' U2 R2 U2 R2' U R\",\n    \"R U R2' U2 R2 U2 R2' U R U R U2' R' U' R U R' U2' R U' R'\",\n    \"R U2 R2 U2 R U' R U R U' R U R2 U2' R2' U2' R' U' R2 U' R2'\",\n    \"R U2 R2 U2' R2 U2 R2' U2 R2 U R' U R2' U' R2' U R' U R2 U2 R2\",\n    \"R U2' R U2' R2' U2 R2 U2 R2' U2 R2 U2' R2' U' R U R' U2' R U' R'\",\n    \"R U2' R U2' R2' U2 R2 U' R2' U2' R2 U2 R2' U2 R U R' U2' R U' R'\",\n    \"R U2' R2 U2' R2 U2 R2' U2 R2 U2 R2' U2' R2 U' R U R' U2' R U' R'\",\n    \"R U2' R2 U2' R2 U2 R2' U' R2 U2' R2' U2 R2 U2 R U R' U2' R U' R'\",\n    \"R U' R2 U R2' U R' U' R2' U' R2' U2' R' U R U R' U2' R U2' R'\",\n    \"R U' R' U2' R U2' R' U2' R' U2' R U' R' U2' R2 U2' R' U R U R'\",\n    \"R2 U R U2 R' U R U' R U R2 U' R2' U2' R' U2' R U R U' R2\",\n    \"R2 U R U2 R' U R U' R U2' R' U2' R2' U' R2 U R U R U' R2\",\n    \"R2 U2 R2 U R' U R2' U' R2' U R' U R2 U2 R2' U2 R2 U2' R2 U2 R\",\n    \"R2 U2 R2' U2' R U2' R' U2 R U2' R2 U2' R U2 R' U2' R U2' R2' U2 R2\",\n    \"R2 U' R U R U R2 U' R2' U2' R' U2' R U' R U R' U2 R U R2\",\n    \"R2 U' R U R U2' R' U2' R2' U' R2 U R U' R U R' U2 R U R2\",\n    \"R2' U' R2 U' R' U2' R2' U2' R2 U R U' R U R U' R U2 R2 U2 R\",\n    \"R' U R U R' U2' R2 U2' R' U' R U2' R' U2' R' U2' R U2' R' U' R\",\n    \"R' U R2 U R2 U2 R' U2 R' U2' R U2' R U' R U R' U2' R2 U' R'\",\n    \"R' U2' R U2' R' U R U R' U2' R2' U' R2' U' R' U R2' U R2 U' R\",\n    \"R' U' R U2' R' U R U2 R2 U2 R2' U2' R2 U' R2' U2 R2 U2' R2 U2' R\",\n    \"R' U' R U2' R' U R U2 R2' U2 R2 U2' R2' U' R2 U2 R2' U2' R U2' R\",\n    \"R' U' R U2' R' U R U' R2 U2' R2' U2 R2 U2 R2' U2 R2 U2' R2 U2' R\",\n    \"R' U' R U2' R' U R U' R2' U2' R2 U2 R2' U2 R2 U2 R2' U2' R U2' R\",\n    \"R' U' R U2' R' U R U' R' U2' R U R U R2' U2 R2 U2 R2' U R\",\n    \"R' U' R2 U2' R' U R U' R U2' R U2' R' U2 R' U2 R2 U R2 U R'\",\n    \"R U R2' U2 R2 U2 R2' U R U R U2' R' U' R U R' U2' R U' R'\",\n    \"R U2 R2 U2 R U' R U R U' R U R2 U2' R2' U2' R' U' R2 U' R2'\",\n    \"R U2' R U2' R2' U2 R2 U2 R2' U2 R2 U2' R2' U' R U R' U2' R U' R'\",\n    \"R U2' R U2' R2' U2 R2 U' R2' U2' R2 U2 R2' U2 R U R' U2' R U' R'\",\n    \"R U2' R2 U2' R2 U2 R2' U2 R2 U2 R2' U2' R2 U' R U R' U2' R U' R'\",\n    \"R U2' R2 U2' R2 U2 R2' U' R2 U2' R2' U2 R2 U2 R U R' U2' R U' R'\",\n    \"R U2' R2' U2' R U R2 U R U2' R' U2 R U2' R U2 R2 U' R' U2' R'\",\n    \"R U2' R2' U2' R U R2 U R2 U2' R' U2 R' U2' R U2 R2' U' R' U2' R'\",\n    \"R U' R2' U' R2 U2' R2' U2' R2' U2 R' U' R' U2 R2 U' R2' U' R2 U' R2'\",\n    \"R2 U2 R2 U R' U2' R2' U R U' R U2 R' U' R' U R2' U' R2' U2' R2'\",\n    \"R2 U2 R2 U2 R2 U2' R U' R2' U2' R' U' R U2' R U2 R2' U2' R2' U' R2'\",\n    \"R2 U2 R' U R' U' R' U2 R2' U2 R2 U R U2' R U2 R' U R2 U' R2'\",\n    \"R2 U2' R2' U2' R2' U2 R' U R U2 R U2 R U R2 U' R2 U2' R2' U' R2'\",\n    \"R2 U2' R' U2 R' U' R U R U' R' U2' R' U2' R U R' U2' R U' R'\",\n    \"R2 U2' R' U2 R' U' R U2' R U2' R' U R U2' R' U2' R' U' R U2 R'\",\n    \"R2' U2' R2 U' R2' U R2 U R2' U R U2' R U R U2 R2' U' R2 U' R'\",\n    \"R2' U2' R2' U' R2' U R' U' R' U2 R U' R U R2' U2' R' U R2 U2 R2\",\n    \"R2' U' R2 U R' U2 R U2' R U R2 U2 R2' U2 R' U' R' U R' U2 R2\",\n    \"R2' U' R2 U' R2' U' R2 U R2' U2 R U2' R U R U2 R2' U' R2 U' R'\",\n    \"R2' U' R2 U' R2' U' R2 U2 R' U' R' U2 R2' U2' R2' U2' R2 U' R2' U' R\",\n    \"R2' U' R2 U' R' U2' R2' U2' R2 U R U' R U R U' R U2 R2 U2 R\",\n    \"R2' U' R2' U2' R2 U' R2 U R U2 R U2 R U R' U2 R2' U2' R2' U2' R2\",\n    \"R2' U' R2' U2' R2' U2 R U2' R U' R' U2' R2' U' R U2' R2 U2 R2 U2 R2\",\n    \"R' U2 R U' R' U2' R' U2' R U R' U2' R U2' R U' R' U2 R' U2' R2\",\n    \"R' U2' R' U' R2 U2 R U2' R U2 R' U2' R U R2 U R U2' R2' U2' R\",\n    \"R' U2' R' U' R2' U2 R U2' R' U2 R' U2' R2 U R2 U R U2' R2' U2' R\",\n    \"R' U' R U2' R' U R U2 R2 U2 R2' U2' R2 U' R2' U2 R2 U2' R2 U2' R\",\n    \"R' U' R U2' R' U R U2 R2' U2 R2 U2' R2' U' R2 U2 R2' U2' R U2' R\",\n    \"R' U' R U2' R' U R U2' R' U2' R' U' R U R U' R' U2 R' U2' R2\",\n    \"R' U' R U2' R' U R U' R2 U2' R2' U2 R2 U2 R2' U2 R2 U2' R2 U2' R\",\n    \"R' U' R U2' R' U R U' R2' U2' R2 U2 R2' U2 R2 U2 R2' U2' R U2' R\",\n    \"R' U' R U2' R' U R U' R' U2' R U R U R2' U2 R2 U2 R2' U R\",\n    \"R' U' R2 U' R2' U2 R U R U2' R U R2' U R2 U R2' U' R2 U2' R2'\",\n    \"R' U' R2 U' R2' U2 R U R U2' R U2 R2' U R2 U' R2' U' R2 U' R2'\",\n    \"R U R2' U2 R2 U2 R2' U R U R U2' R' U' R U R' U2' R U' R'\",\n    \"R U2 R2 U2' R2 U2 R2' U2 R2 U R' U R2' U' R2' U R' U R2 U2 R2\",\n    \"R U2' R U2' R2' U2 R2 U2 R2' U2 R2 U2' R2' U' R U R' U2' R U' R'\",\n    \"R U2' R U2' R2' U2 R2 U' R2' U2' R2 U2 R2' U2 R U R' U2' R U' R'\",\n    \"R U2' R2 U2' R2 U2 R2' U2 R2 U2 R2' U2' R2 U' R U R' U2' R U' R'\",\n    \"R U2' R2 U2' R2 U2 R2' U' R2 U2' R2' U2 R2 U2 R U R' U2' R U' R'\",\n    \"R U2' R2' U2' R U R2 U R U2' R' U2 R U2' R U2 R2 U' R' U2' R'\",\n    \"R U2' R2' U2' R U R2 U R2 U2' R' U2 R' U2' R U2 R2' U' R' U2' R'\",\n    \"R U' R2 U R2' U R' U' R2' U' R2' U2' R' U R U R' U2' R U2' R'\",\n    \"R U' R2' U' R2 U2' R2' U2' R2' U2 R' U' R' U2 R2 U' R2' U' R2 U' R2'\",\n    \"R U' R' U2' R U2' R' U2' R' U2' R U' R' U2' R2 U2' R' U R U R'\",\n    \"R2 U R U2 R' U R U' R U R2 U' R2' U2' R' U2' R U R U' R2\",\n    \"R2 U R U2 R' U R U' R U2' R' U2' R2' U' R2 U R U R U' R2\",\n    \"R2 U2 R2 U R' U R2' U' R2' U R' U R2 U2 R2' U2 R2 U2' R2 U2 R\",\n    \"R2 U2 R2 U R' U2' R2' U R U' R U2 R' U' R' U R2' U' R2' U2' R2'\",\n    \"R2 U2 R2 U2 R2 U2' R U' R2' U2' R' U' R U2' R U2 R2' U2' R2' U' R2'\",\n    \"R2 U2 R2' U2' R U2' R' U2 R U2' R2 U2' R U2 R' U2' R U2' R2' U2 R2\",\n    \"R2 U2 R' U R' U' R' U2 R2' U2 R2 U R U2' R U2 R' U R2 U' R2'\",\n    \"R2 U2' R2' U2' R2' U2 R' U R U2 R U2 R U R2 U' R2 U2' R2' U' R2'\",\n    \"R2 U2' R' U2 R' U' R U R U' R' U2' R' U2' R U R' U2' R U' R'\",\n    \"R2 U2' R' U2 R' U' R U2' R U2' R' U R U2' R' U2' R' U' R U2 R'\",\n    \"R2 U' R U R U R2 U' R2' U2' R' U2' R U' R U R' U2 R U R2\",\n    \"R2 U' R U R U2' R' U2' R2' U' R2 U R U' R U R' U2 R U R2\",\n    \"R2' U2' R2 U' R2' U R2 U R2' U R U2' R U R U2 R2' U' R2 U' R'\",\n    \"R2' U2' R2' U' R2' U R' U' R' U2 R U' R U R2' U2' R' U R2 U2 R2\",\n    \"R2' U' R2 U R' U2 R U2' R U R2 U2 R2' U2 R' U' R' U R' U2 R2\",\n    \"R2' U' R2 U' R2' U' R2 U R2' U2 R U2' R U R U2 R2' U' R2 U' R'\",\n    \"R2' U' R2 U' R2' U' R2 U2 R' U' R' U2 R2' U2' R2' U2' R2 U' R2' U' R\",\n    \"R2' U' R2' U2' R2 U' R2 U R U2 R U2 R U R' U2 R2' U2' R2' U2' R2\",\n    \"R2' U' R2' U2' R2' U2 R U2' R U' R' U2' R2' U' R U2' R2 U2 R2 U2 R2\",\n    \"R' U R U R' U2' R2 U2' R' U' R U2' R' U2' R' U2' R U2' R' U' R\",\n    \"R' U R2 U R2 U2 R' U2 R' U2' R U2' R U' R U R' U2' R2 U' R'\",\n    \"R' U2 R U' R' U2' R' U2' R U R' U2' R U2' R U' R' U2 R' U2' R2\",\n    \"R' U2' R U2' R' U R U R' U2' R2' U' R2' U' R' U R2' U R2 U' R\",\n    \"R' U2' R' U' R2 U2 R U2' R U2 R' U2' R U R2 U R U2' R2' U2' R\",\n    \"R' U2' R' U' R2' U2 R U2' R' U2 R' U2' R2 U R2 U R U2' R2' U2' R\",\n    \"R' U' R U2' R' U R U2 R2 U2 R2' U2' R2 U' R2' U2 R2 U2' R2 U2' R\",\n    \"R' U' R U2' R' U R U2 R2' U2 R2 U2' R2' U' R2 U2 R2' U2' R U2' R\",\n    \"R' U' R U2' R' U R U2' R' U2' R' U' R U R U' R' U2 R' U2' R2\",\n    \"R' U' R U2' R' U R U' R2 U2' R2' U2 R2 U2 R2' U2 R2 U2' R2 U2' R\",\n    \"R' U' R U2' R' U R U' R2' U2' R2 U2 R2' U2 R2 U2 R2' U2' R U2' R\",\n    \"R' U' R U2' R' U R U' R' U2' R U R U R2' U2 R2 U2 R2' U R\",\n    \"R' U' R2 U2' R' U R U' R U2' R U2' R' U2 R' U2 R2 U R2 U R'\",\n    \"R' U' R2 U' R2' U2 R U R U2' R U R2' U R2 U R2' U' R2 U2' R2'\",\n    \"R' U' R2 U' R2' U2 R U R U2' R U2 R2' U R2 U' R2' U' R2 U' R2'\",\n    \"R U R2' U2 R2 U2 R2' U R U R U2' R' U' R U R' U2' R U' R'\",\n    \"R U2 R2 U2 R U' R U R U' R U R2 U2' R2' U2' R' U' R2 U' R2'\",\n    \"R U2 R2 U2' R2 U2 R2' U2 R2 U R' U R2' U' R2' U R' U R2 U2 R2\",\n    \"R U2' R U2' R2' U2 R2 U2 R2' U2 R2 U2' R2' U' R U R' U2' R U' R'\",\n    \"R U2' R U2' R2' U2 R2 U' R2' U2' R2 U2 R2' U2 R U R' U2' R U' R'\",\n    \"R U2' R2 U2' R2 U2 R2' U2 R2 U2 R2' U2' R2 U' R U R' U2' R U' R'\",\n    \"R U2' R2 U2' R2 U2 R2' U' R2 U2' R2' U2 R2 U2 R U R' U2' R U' R'\",\n    \"R U2' R2' U2' R U R2 U R U2' R' U2 R U2' R U2 R2 U' R' U2' R'\",\n    \"R U2' R2' U2' R U R2 U R2 U2' R' U2 R' U2' R U2 R2' U' R' U2' R'\",\n    \"R U' R2 U R2' U R' U' R2' U' R2' U2' R' U R U R' U2' R U2' R'\",\n    \"R U' R2' U' R2 U2' R2' U2' R2' U2 R' U' R' U2 R2 U' R2' U' R2 U' R2'\",\n    \"R U' R' U2' R U2' R' U2' R' U2' R U' R' U2' R2 U2' R' U R U R'\",\n    \"R2 U R U2 R' U R U' R U R2 U' R2' U2' R' U2' R U R U' R2\",\n    \"R2 U R U2 R' U R U' R U2' R' U2' R2' U' R2 U R U R U' R2\",\n    \"R2 U2 R2 U R' U R2' U' R2' U R' U R2 U2 R2' U2 R2 U2' R2 U2 R\",\n    \"R2 U2 R2 U R' U2' R2' U R U' R U2 R' U' R' U R2' U' R2' U2' R2'\",\n    \"R2 U2 R2 U2 R2 U2' R U' R2' U2' R' U' R U2' R U2 R2' U2' R2' U' R2'\",\n    \"R2 U2 R2' U2' R U2' R' U2 R U2' R2 U2' R U2 R' U2' R U2' R2' U2 R2\",\n    \"R2 U2 R' U R' U' R' U2 R2' U2 R2 U R U2' R U2 R' U R2 U' R2'\",\n    \"R2 U2' R2' U2' R2' U2 R' U R U2 R U2 R U R2 U' R2 U2' R2' U' R2'\",\n    \"R2 U2' R' U2 R' U' R U R U' R' U2' R' U2' R U R' U2' R U' R'\",\n    \"R2 U2' R' U2 R' U' R U2' R U2' R' U R U2' R' U2' R' U' R U2 R'\",\n    \"R2 U' R U R U R2 U' R2' U2' R' U2' R U' R U R' U2 R U R2\",\n    \"R2 U' R U R U2' R' U2' R2' U' R2 U R U' R U R' U2 R U R2\",\n    \"R2' U2' R2 U' R2' U R2 U R2' U R U2' R U R U2 R2' U' R2 U' R'\",\n    \"R2' U2' R2' U' R2' U R' U' R' U2 R U' R U R2' U2' R' U R2 U2 R2\",\n    \"R2' U' R2 U R' U2 R U2' R U R2 U2 R2' U2 R' U' R' U R' U2 R2\",\n    \"R2' U' R2 U' R2' U' R2 U R2' U2 R U2' R U R U2 R2' U' R2 U' R'\",\n    \"R2' U' R2 U' R2' U' R2 U2 R' U' R' U2 R2' U2' R2' U2' R2 U' R2' U' R\",\n    \"R2' U' R2 U' R' U2' R2' U2' R2 U R U' R U R U' R U2 R2 U2 R\",\n    \"R2' U' R2' U2' R2 U' R2 U R U2 R U2 R U R' U2 R2' U2' R2' U2' R2\",\n    \"R2' U' R2' U2' R2' U2 R U2' R U' R' U2' R2' U' R U2' R2 U2 R2 U2 R2\",\n    \"R' U R U R' U2' R2 U2' R' U' R U2' R' U2' R' U2' R U2' R' U' R\",\n    \"R' U R2 U R2 U2 R' U2 R' U2' R U2' R U' R U R' U2' R2 U' R'\",\n    \"R' U2 R U' R' U2' R' U2' R U R' U2' R U2' R U' R' U2 R' U2' R2\",\n    \"R' U2' R U2' R' U R U R' U2' R2' U' R2' U' R' U R2' U R2 U' R\",\n    \"R' U2' R' U' R2 U2 R U2' R U2 R' U2' R U R2 U R U2' R2' U2' R\",\n    \"R' U2' R' U' R2' U2 R U2' R' U2 R' U2' R2 U R2 U R U2' R2' U2' R\",\n    \"R' U' R U2' R' U R U2 R2 U2 R2' U2' R2 U' R2' U2 R2 U2' R2 U2' R\",\n    \"R' U' R U2' R' U R U2 R2' U2 R2 U2' R2' U' R2 U2 R2' U2' R U2' R\",\n    \"R' U' R U2' R' U R U2' R' U2' R' U' R U R U' R' U2 R' U2' R2\",\n    \"R' U' R U2' R' U R U' R2 U2' R2' U2 R2 U2 R2' U2 R2 U2' R2 U2' R\",\n    \"R' U' R U2' R' U R U' R2' U2' R2 U2 R2' U2 R2 U2 R2' U2' R U2' R\",\n    \"R' U' R U2' R' U R U' R' U2' R U R U R2' U2 R2 U2 R2' U R\",\n    \"R' U' R2 U2' R' U R U' R U2' R U2' R' U2 R' U2 R2 U R2 U R'\",\n    \"R' U' R2 U' R2' U2 R U R U2' R U R2' U R2 U R2' U' R2 U2' R2'\",\n    \"R' U' R2 U' R2' U2 R U R U2' R U2 R2' U R2 U' R2' U' R2 U' R2'\",\n    \"R U2 R2 U2 R U' R U R U' R U R2 U2' R2' U2' R' U' R2 U' R2'\",\n    \"R U2 R2 U2' R2 U2 R2' U2 R2 U R' U R2' U' R2' U R' U R2 U2 R2\",\n    \"R U2' R2' U2' R U R2 U R U2' R' U2 R U2' R U2 R2 U' R' U2' R'\",\n    \"R U2' R2' U2' R U R2 U R2 U2' R' U2 R' U2' R U2 R2' U' R' U2' R'\",\n    \"R U' R2 U R2' U R' U' R2' U' R2' U2' R' U R U R' U2' R U2' R'\",\n    \"R U' R2' U' R2 U2' R2' U2' R2' U2 R' U' R' U2 R2 U' R2' U' R2 U' R2'\",\n    \"R U' R' U2' R U2' R' U2' R' U2' R U' R' U2' R2 U2' R' U R U R'\",\n    \"R2 U R U2 R' U R U' R U R2 U' R2' U2' R' U2' R U R U' R2\",\n    \"R2 U R U2 R' U R U' R U2' R' U2' R2' U' R2 U R U R U' R2\",\n    \"R2 U2 R2 U R' U R2' U' R2' U R' U R2 U2 R2' U2 R2 U2' R2 U2 R\",\n    \"R2 U2 R2 U R' U2' R2' U R U' R U2 R' U' R' U R2' U' R2' U2' R2'\",\n    \"R2 U2 R2 U2 R2 U2' R U' R2' U2' R' U' R U2' R U2 R2' U2' R2' U' R2'\",\n    \"R2 U2 R2' U2' R U2' R' U2 R U2' R2 U2' R U2 R' U2' R U2' R2' U2 R2\",\n    \"R2 U2 R' U R' U' R' U2 R2' U2 R2 U R U2' R U2 R' U R2 U' R2'\",\n    \"R2 U2' R2' U2' R2' U2 R' U R U2 R U2 R U R2 U' R2 U2' R2' U' R2'\",\n    \"R2 U2' R' U2 R' U' R U R U' R' U2' R' U2' R U R' U2' R U' R'\",\n    \"R2 U2' R' U2 R' U' R U2' R U2' R' U R U2' R' U2' R' U' R U2 R'\",\n    \"R2 U' R U R U R2 U' R2' U2' R' U2' R U' R U R' U2 R U R2\",\n    \"R2 U' R U R U2' R' U2' R2' U' R2 U R U' R U R' U2 R U R2\",\n    \"R2' U2' R2 U' R2' U R2 U R2' U R U2' R U R U2 R2' U' R2 U' R'\",\n    \"R2' U2' R2' U' R2' U R' U' R' U2 R U' R U R2' U2' R' U R2 U2 R2\",\n    \"R2' U' R2 U R' U2 R U2' R U R2 U2 R2' U2 R' U' R' U R' U2 R2\",\n    \"R2' U' R2 U' R2' U' R2 U R2' U2 R U2' R U R U2 R2' U' R2 U' R'\",\n    \"R2' U' R2 U' R2' U' R2 U2 R' U' R' U2 R2' U2' R2' U2' R2 U' R2' U' R\",\n    \"R2' U' R2 U' R' U2' R2' U2' R2 U R U' R U R U' R U2 R2 U2 R\",\n    \"R2' U' R2' U2' R2 U' R2 U R U2 R U2 R U R' U2 R2' U2' R2' U2' R2\",\n    \"R2' U' R2' U2' R2' U2 R U2' R U' R' U2' R2' U' R U2' R2 U2 R2 U2 R2\",\n    \"R' U R U R' U2' R2 U2' R' U' R U2' R' U2' R' U2' R U2' R' U' R\",\n    \"R' U R2 U R2 U2 R' U2 R' U2' R U2' R U' R U R' U2' R2 U' R'\",\n    \"R' U2 R U' R' U2' R' U2' R U R' U2' R U2' R U' R' U2 R' U2' R2\",\n    \"R' U2' R U2' R' U R U R' U2' R2' U' R2' U' R' U R2' U R2 U' R\",\n    \"R' U2' R' U' R2 U2 R U2' R U2 R' U2' R U R2 U R U2' R2' U2' R\",\n    \"R' U2' R' U' R2' U2 R U2' R' U2 R' U2' R2 U R2 U R U2' R2' U2' R\",\n    \"R' U' R U2' R' U R U2' R' U2' R' U' R U R U' R' U2 R' U2' R2\",\n    \"R' U' R2 U2' R' U R U' R U2' R U2' R' U2 R' U2 R2 U R2 U R'\",\n    \"R' U' R2 U' R2' U2 R U R U2' R U R2' U R2 U R2' U' R2 U2' R2'\",\n    \"R' U' R2 U' R2' U2 R U R U2' R U2 R2' U R2 U' R2' U' R2 U' R2'\",\n    \"R U R U2' R2 U' R2' U2' R2 U2' R2' U2 R' U' R' U2 R2 U' R2' U' R2 U' R2'\",\n    \"R U R U2' R' U' R U' R2' U' R2 U' R2' U R U2 R U2 R2' U2 R U R'\",\n    \"R U R2' U R2' U R' U R U2 R2' U' R2' U2' R U2' R2' U' R' U2 R2 U' R\",\n    \"R U2 R U2 R' U R U2 R2' U2 R U2' R U2 R' U R U2 R2' U2 R U R'\",\n    \"R U2 R2 U2 R2' U R2 U2 R' U2 R2' U' R U2 R U2 R' U' R' U2' R U' R'\",\n    \"R U2 R2' U2 R2 U R2' U2 R2' U2 R2' U' R U2 R U2 R' U' R' U2' R U' R'\",\n    \"R U2 R' U R U2' R2 U R U R' U' R' U' R2 U2 R U2' R U R' U2' R'\",\n    \"R U2 R' U R2' U' R2' U' R' U R2' U R2' U' R' U' R U2 R' U2' R U' R'\",\n    \"R U2 R' U2 R2' U2 R' U' R' U2' R U2' R U2 R2' U2 R2 U' R2 U2' R U2' R'\",\n    \"R U2 R' U2 R' U' R2 U2 R2' U2 R U2' R U2' R' U' R' U2 R U2' R U2' R'\",\n    \"R U2' R2 U2' R U' R U R2' U R2 U' R2 U' R2 U R U2 R U' R2 U2' R'\",\n    \"R U2' R2 U' R2 U R2 U' R2' U' R U R2' U R2 U2' R' U2 R U' R2 U2' R'\",\n    \"R U2' R2' U2 R2' U2 R2' U R2' U' R' U R2' U' R2' U R2' U2 R2' U2 R U2' R'\",\n    \"R U2' R2' U2 R2' U2 R' U R2 U' R U R2 U' R' U R2' U2 R2' U2 R U2' R'\",\n    \"R U2' R2' U2 R2' U2' R U' R2 U R2' U2' R U' R2' U' R' U R U2 R U' R'\",\n    \"R U2' R2' U2' R U R2 U R U2' R' U2 R' U R2 U2 R U2' R2 U2' R' U2' R'\",\n    \"R U2' R' U2 R2' U' R2' U R2' U2 R2 U' R2 U2' R U R' U2 R2 U R U' R'\",\n    \"R U2' R' U2' R2' U R2' U R' U' R2' U2 R2 U' R U R2 U2 R2 U2 R U2 R'\",\n    \"R U2' R' U2' R' U2' R2' U' R2' U' R2 U R' U R2' U2' R' U' R' U R2' U2' R'\",\n    \"R U' R2 U2 R' U' R2' U2' R U2' R2' U' R2' U2 R U R' U R2' U R2' U R\",\n    \"R U' R2' U2' R2 U' R2 U R2 U2 R2' U' R2 U2' R2 U R2 U' R2 U2 R2 U2 R'\",\n    \"R2 U R2 U2 R2' U R2' U' R2' U2' R2 U2 R' U' R U2 R2' U2' R U2 R2' U R2'\",\n    \"R2 U R2' U R2 U R2' U R2 U R2' U' R2 U2' R2' U2' R2 U2' R2' U2' R2 U2' R2'\",\n    \"R2 U R2' U R2 U2 R2' U R2 U' R2' U' R2 U' R2' U2' R2 U2' R2' U2' R2 U2' R2'\",\n    \"R2 U R2' U R' U' R2' U R2 U' R' U R' U R' U2' R2' U2 R2' U' R2' U2' R2'\",\n    \"R2 U R' U2 R2' U2' R U' R' U2' R2' U2 R2' U' R2 U' R' U R' U2 R2 U' R2'\",\n    \"R2 U2 R2 U2 R U R' U2 R2 U2' R U2 R' U R U2' R' U2 R' U R2 U' R2'\",\n    \"R2 U2 R2 U2 R2 U2' R' U2 R' U2' R2' U' R2 U2 R U2' R U2 R2' U2' R2' U' R2'\",\n    \"R2 U2 R2 U' R2 U2' R2' U2 R2' U2' R2 U2' R2 U' R' U R U2 R' U2 R2 U' R2'\",\n    \"R2 U2 R2' U R2 U' R' U' R2 U R U R' U2' R2' U R2 U R2 U' R' U2' R2'\",\n    \"R2 U2 R2' U R2' U' R U' R' U2 R2' U' R U' R2 U R' U R2 U' R' U2' R2'\",\n    \"R2 U2 R2' U R2' U' R2' U' R' U R2' U' R2' U2 R' U' R U R2 U' R' U2' R2'\",\n    \"R2 U2 R2' U2 R2 U2 R2' U2 R2 U2 R2' U' R2 U2 R2' U2 R2 U2 R2' U2 R2 U2 R2'\",\n    \"R2 U2 R' U2 R U2' R2 U2 R2' U2 R2 U R2 U' R' U R U2 R' U2 R2 U' R2'\",\n    \"R2 U2 R' U2' R' U2 R' U' R U' R2' U R U2 R' U2 R2' U2' R2' U' R2' U2' R2'\",\n    \"R2 U2' R2' U2 R2' U2' R' U2 R2' U2 R2 U R' U R2' U' R2' U R' U2' R' U2' R2'\",\n    \"R2 U2' R2' U2 R' U2 R U2 R2' U R2' U' R' U2' R' U' R' U2 R' U2' R2 U' R'\",\n    \"R2 U2' R2' U2' R2 U2' R2' U2' R2 U2' R2' U' R2 U R2' U R2 U R2' U R2 U R2'\",\n    \"R2 U2' R2' U2' R2 U2' R2' U2' R2 U' R2' U' R2 U' R2' U R2 U2 R2' U R2 U R2'\",\n    \"R2 U2' R2' U2' R2' U2 R' U2' R2' U R2 U R' U R2' U' R2' U R' U2' R' U2' R2'\",\n    \"R2 U2' R2' U' R2 U2' R U2' R2 U R2' U R U2' R U R U2 R2' U' R2 U' R'\",\n    \"R2 U2' R2' U' R' U2 R2' U R U R U2' R' U R U2 R' U2 R2 U' R2' U' R2\",\n    \"R2 U' R2 U2' R2' U' R2 U2' R2 U2 R' U R U' R U R' U2 R' U2' R2 U2' R2'\",\n    \"R2 U' R2' U R U2' R U R U2 R2' U' R2 U' R2 U2 R2 U R2' U' R2 U2' R2'\",\n    \"R2 U' R2' U2 R2' U2' R' U' R U2' R' U2 R2 U' R2' U' R2' U R' U R2' U2 R2'\",\n    \"R2 U' R2' U2' R2 U' R2' U2' R U2 R' U R U' R U R' U2 R' U2' R2 U2' R2'\",\n    \"R2 U' R2' U' R2 U2 R2' U2 R2' U2' R2 U' R U2' R2 U2' R2' U R2 U' R2' U' R'\",\n    \"R2 U' R2' U' R2 U2 R' U2 R U R' U2' R U R U R2' U2 R' U' R2' U2' R2\",\n    \"R2 U' R' U2' R' U R U R U R' U R' U R2 U' R' U2 R U' R' U2' R'\",\n    \"R2' U R2 U R2' U R2 U R2' U R2 U' R2' U2' R2 U2' R2' U2' R2 U2' R2' U2' R2\",\n    \"R2' U R2 U R2' U2 R2 U R2' U' R2 U' R2' U' R2 U2' R2' U2' R2 U2' R2' U2' R2\",\n    \"R2' U R2' U2 R U2' R2' U2 R U' R' U2 R2 U2' R2' U' R2' U R2' U2 R2 U R2\",\n    \"R2' U2 R2 U2 R2' U2 R2 U2 R2' U2 R2 U' R2' U2 R2 U2 R2' U2 R2 U2 R2' U2 R2\",\n    \"R2' U2 R2' U R U' R' U' R' U2 R U' R2 U2' R2 U R2 U2 R' U2' R U' R2'\",\n    \"R2' U2 R2' U R' U R2' U' R2' U' R2 U2 R' U2' R U' R' U2' R2' U2 R2' U' R2\",\n    \"R2' U2' R2 U2' R2' U2' R2 U2' R2' U2' R2 U' R2' U R2 U R2' U R2 U R2' U R2\",\n    \"R2' U2' R2 U2' R2' U2' R2 U2' R2' U' R2 U' R2' U' R2 U R2' U2 R2 U R2' U R2\",\n    \"R2' U2' R2 U2' R' U2 R' U R U' R U R' U2 R U2' R2' U' R2 U2' R2' U' R2\",\n    \"R2' U2' R2 U2' R' U2 R' U R U' R U R' U2 R2 U2' R2 U' R2' U2' R2 U' R2\",\n    \"R2' U2' R2 U' R2' U R2 U2 R2 U' R2 U' R2' U2 R U R U2' R U R2' U' R2\",\n    \"R2' U2' R2' U' R2' U2 R2' U2' R' U R' U R' U' R2 U R2' U' R' U R2' U R2\",\n    \"R2' U2' R2' U' R2' U2' R2' U2 R' U2 R U R2' U' R U' R' U2 R' U2' R' U2 R2\",\n    \"R2' U2' R' U2' R' U R2' U' R2' U R' U R2 U R2' U2' R' U2 R2' U2' R2' U2' R2\",\n    \"R2' U2' R' U2' R' U R2' U' R2' U R' U R2 U2 R2' U2 R' U2' R2' U2 R2' U2' R2\",\n    \"R2' U2' R' U' R2 U R U' R' U2 R2' U' R2' U R' U' R2' U' R2' U R2' U2 R2\",\n    \"R2' U2' R' U' R2 U R2 U R2' U2' R' U R U R2 U' R' U' R2 U R2' U2 R2\",\n    \"R2' U2' R' U' R2 U R' U R2 U' R U' R2' U2 R' U' R U' R2' U R2' U2 R2\",\n    \"R2' U' R U2' R' U2 R2 U R2 U2' R2 U' R U2 R' U' R' U' R U R2' U2 R2'\",\n    \"R2' U' R2 U R U2 R' U2' R U R2 U2 R2' U' R' U2 R U R2 U' R2' U2' R'\",\n    \"R2' U' R2 U R' U2 R' U2' R U R' U2 R U2' R2 U2 R' U R U2 R2 U2 R2\",\n    \"R2' U' R2 U2 R' U R' U' R2 U' R2' U2 R2' U2' R' U' R U2' R2' U2 R' U R2\",\n    \"R2' U' R2 U2 R' U2 R U R' U' R2 U R2 U2 R2' U2 R2 U2' R U2 R' U2 R2\",\n    \"R2' U' R2 U2 R' U2 R U R' U' R2 U2' R2 U2' R2' U2 R2' U2' R2 U' R2 U2 R2\",\n    \"R2' U' R2 U' R2' U2 R' U2 R2' U R2 U2 R2 U2' R U R U2 R2' U' R2 U' R'\",\n    \"R2' U' R2 U' R2' U' R2 U2 R' U' R' U2 R2' U2' R2 U2' R2' U' R2 U2' R U R\",\n    \"R2' U' R2' U2' R2' U2 R U2' R U2 R2 U' R2' U2' R' U2 R' U2' R2 U2 R2 U2 R2\",\n    \"R' U R U2 R2' U2 R U R' U2 R U2' R U2 R2' U2 R U R' U2 R U2 R\",\n    \"R' U R U2 R2' U2 R U2 R U R2' U' R2 U' R2' U' R U' R' U2' R U R\",\n    \"R' U2 R U2 R2 U2 R2 U R U' R2 U2 R2' U' R' U R2' U R2' U2' R' U2' R\",\n    \"R' U2 R2 U2 R2 U' R2 U R2 U2' R2 U' R2' U2 R2 U R2 U' R2 U2' R2' U' R\",\n  ],\n  [\n    \"R U R2' U R2 U2' R' U' R' U2 R' U2' R2 U' R2' U R2 U R2' U R2\",\n    \"R U R2' U R2 U2' R' U' R' U2 R' U' R2 U' R2' U' R2 U R2' U2 R2\",\n    \"R U R' U2 R U' R' U2 R U2 R U R' U' R' U R U2' R U2 R2'\",\n    \"R U2 R U R2 U2' R' U2 R U2' R U2 R2' U' R2' U' R' U2 R2 U2 R'\",\n    \"R U2 R U R2' U2' R' U2 R' U2' R U2 R' U' R2' U' R' U2 R2 U2 R'\",\n    \"R U2' R' U R U2 R U2 R' U' R U2 R' U2 R' U R U2' R U2 R2'\",\n    \"R2 U R2 U2 R2 U2' R' U2 R' U R U2 R2 U R' U2 R2' U2' R2' U2' R2'\",\n    \"R2 U R2 U2 R2' U R2' U' R' U2' R' U2' R' U' R U2' R2 U2 R2 U2 R2'\",\n    \"R2 U R2' U R2 U R2' U2' R U R U2' R2 U2 R2 U2 R2' U R2 U R'\",\n    \"R2 U R2' U R2 U R2' U' R2 U2' R' U2 R' U' R' U2' R2 U R2' U R\",\n    \"R2 U R2' U' R U2' R' U2 R' U' R2' U2' R2 U2' R U R U' R U2' R2'\",\n    \"R2 U2 R2 U R2 U' R U R U2' R' U R' U' R2 U2 R U' R2' U2' R2'\",\n    \"R2 U2 R2' U R2 U' R2' U' R2 U' R' U2 R' U' R' U2' R2 U R2' U R\",\n    \"R2' U2 R U2' R U R' U2 R' U2 R U' R' U2 R U2 R U R' U2' R\",\n    \"R2' U2 R U2' R U R' U' R' U R U2 R U2 R' U' R U2 R' U R\",\n    \"R2' U2 R2 U2 R2 U2' R U' R' U2' R' U2' R' U' R2' U R2' U2 R2 U R2\",\n    \"R2' U2' R U' R U R U2' R2 U2' R2' U' R' U2 R' U2' R U' R2' U R2\",\n    \"R2' U2' R2' U2' R2' U2 R' U R2 U2 R U R' U2 R' U2' R2 U2 R2 U R2\",\n    \"R2' U2' R2' U' R U2 R2 U' R' U R' U2' R U R U' R2 U R2 U2 R2\",\n    \"R' U R2 U R2' U2 R2 U2 R2 U2' R U R U2' R2' U R2 U R2' U R2\",\n    \"R' U2 R2 U2 R' U' R2' U' R2' U2 R U2' R U2 R' U2' R2 U R U2 R\",\n    \"R' U2 R2 U2 R' U' R2' U' R' U2 R U2' R' U2 R' U2' R2' U R U2 R\",\n    \"R U R' U2 R U' R' U R U2 R' U' R' U' R2 U2' R2' U2' R2 U' R'\",\n    \"R U R' U2 R U' R' U R2 U2 R2' U2' R2 U2' R2' U2' R2 U2 R' U2 R'\",\n    \"R U R' U2 R U' R' U R2' U2 R2 U2' R2' U2' R2 U2' R2' U2 R2' U2 R'\",\n    \"R U R' U2 R U' R' U2' R2 U2' R2' U2 R2 U R2' U2' R2 U2 R' U2 R'\",\n    \"R U R' U2 R U' R' U2' R2' U2' R2 U2 R2' U R2 U2' R2' U2 R2' U2 R'\",\n    \"R' U2 R2' U2 R2' U2' R2 U R2' U2 R2 U2' R2' U2' R' U' R U2 R' U R\",\n    \"R' U2 R2' U2 R2' U2' R2 U2' R2' U2' R2 U2 R2' U R' U' R U2 R' U R\",\n    \"R' U2 R' U2 R2 U2' R2' U R2 U2 R2' U2' R2 U2' R' U' R U2 R' U R\",\n    \"R' U2 R' U2 R2 U2' R2' U2' R2 U2' R2' U2 R2 U R' U' R U2 R' U R\",\n    \"R' U' R2 U2' R2' U2' R2 U' R' U' R' U2 R U R' U' R U2 R' U R\",\n  ],\n  [\n    \"R U' R U R U2' R2' U' R' U R2' U2 R' U' R2' U2' R U2' R'\",\n    \"R' U2' R U2' R2' U' R' U2 R2' U R' U' R2' U2' R U R U' R\",\n    \"R2 U2 R U2' R2' U2 R2' U2' R U2' R' U' R2 U R2 U' R' U R2'\",\n    \"R2' U R' U' R2 U R2 U' R' U2' R U2' R2' U2 R2' U2' R U2 R2\",\n    \"R2' U R' U2 R2' U2 R2' U' R2 U2 R2 U' R2' U2 R2' U2 R' U R2'\",\n    \"R2 U2 R U2' R2' U2 R2' U2' R U2' R' U' R2 U R2 U' R' U R2'\",\n    \"R2' U R' U2 R2' U2 R2' U' R2 U2 R2 U' R2' U2 R2' U2 R' U R2'\",\n    \"R2' U R' U' R2 U R2 U' R' U2' R U2' R2' U2 R2' U2' R U2 R2\",\n    \"R U' R U R U2' R2' U' R' U R2' U2 R' U' R2' U2' R U2' R'\",\n    \"R2 U2 R U2' R2' U2 R2' U2' R U2' R' U' R2 U R2 U' R' U R2'\",\n    \"R2' U R' U2 R2' U2 R2' U' R2 U2 R2 U' R2' U2 R2' U2 R' U R2'\",\n    \"R2' U R' U' R2 U R2 U' R' U2' R U2' R2' U2 R2' U2' R U2 R2\",\n    \"R' U2' R U2' R2' U' R' U2 R2' U R' U' R2' U2' R U R U' R\",\n    \"R U' R U R U2' R2' U' R' U R2' U2 R' U' R2' U2' R U2' R'\",\n    \"R2' U R' U2 R2' U2 R2' U' R2 U2 R2 U' R2' U2 R2' U2 R' U R2'\",\n    \"R' U2' R U2' R2' U' R' U2 R2' U R' U' R2' U2' R U R U' R\",\n    \"R U' R U R U2' R2' U' R' U R2' U2 R' U' R2' U2' R U2' R'\",\n    \"R2 U2 R U2' R2' U2 R2' U2' R U2' R' U' R2 U R2 U' R' U R2'\",\n    \"R2' U R' U' R2 U R2 U' R' U2' R U2' R2' U2 R2' U2' R U2 R2\",\n    \"R' U2' R U2' R2' U' R' U2 R2' U R' U' R2' U2' R U R U' R\",\n    \"R U' R U R U2' R2' U' R' U R2' U2 R' U' R2' U2' R U2' R'\",\n    \"R2 U2 R U2' R2' U2 R2' U2' R U2' R' U' R2 U R2 U' R' U R2'\",\n    \"R2' U R' U2 R2' U2 R2' U' R2 U2 R2 U' R2' U2 R2' U2 R' U R2'\",\n    \"R2' U R' U' R2 U R2 U' R' U2' R U2' R2' U2 R2' U2' R U2 R2\",\n    \"R' U2' R U2' R2' U' R' U2 R2' U R' U' R2' U2' R U R U' R\",\n    \"R U2' R' U2' R' U2' R2 U R2' U' R U R U' R' U' R' U2' R2 U' R'\",\n    \"R U2' R' U' R' U2 R2' U R' U2 R U2 R' U2 R2' U2' R U' R U' R'\",\n    \"R U' R U R U2' R2' U' R2 U2' R' U2 R2' U R2 U R2' U2' R U2' R'\",\n    \"R U' R U R2 U2' R2 U' R2' U2' R2' U2 R2' U R2 U R2' U2' R U2' R'\",\n    \"R U' R2 U2' R' U2' R2 U R2 U' R U R2 U R U2 R2 U2' R U2' R'\",\n    \"R2 U R U2 R2 U2' R2' U R' U' R2 U2' R2' U R2 U R U2 R2' U2' R2\",\n    \"R2 U R2' U R' U2 R U R2 U2 R2' U' R' U2 R2' U2 R2 U2' R2' U' R2'\",\n    \"R2 U R2' U R' U2 R U R2 U2 R2' U' R' U' R2' U2' R2 U2 R2' U2 R2'\",\n    \"R2 U2 R2' U2' R U2' R U' R' U2' R2 U2' R' U' R U2' R2 U2' R2 U2 R2'\",\n    \"R2 U2' R U' R U2 R2 U2' R2' U' R U R2' U2 R2 U' R2 U2' R2 U' R2'\",\n    \"R2 U2' R2' U R2 U R U R' U' R2' U R2 U R U' R2 U2 R2 U2' R2'\",\n    \"R2 U2' R2' U2 R U R2 U R2' U2' R2 U' R' U R2' U2' R2 U2 R U R2\",\n    \"R2 U2' R' U2 R U R' U2 R' U R2 U2 R2' U R2' U2 R2 U' R2' U' R2\",\n    \"R2 U' R2' U' R2 U2 R2' U R2' U2 R2 U R' U2 R' U R U2 R' U2' R2\",\n    \"R2' U2 R2 U2' R2 U2' R U' R' U2' R2 U2' R' U' R U2' R U2' R2' U2 R2\",\n    \"R2' U2 R2' U2 R2 U2' R2' U' R' U' R2' U2 R2 U R U2 R' U R2' U R2\",\n    \"R2' U2' R2 U2 R2 U' R U R2 U R2' U' R' U R U R2 U R2' U2' R2\",\n    \"R2' U' R2 U2' R2 U' R2 U2 R2' U R U' R2' U2' R2 U2 R U' R U2' R2\",\n    \"R2' U' R2' U2' R2 U2 R2' U2 R' U' R2' U2 R2 U R U2 R' U R2' U R2\",\n    \"R' U2' R U2' R2 U2 R U R2 U R U' R2 U R2 U2' R' U2' R2 U' R\",\n    \"R' U2' R U2' R2' U R2 U R2' U2 R2' U2' R2' U' R2 U2' R2 U R U' R\",\n    \"R' U2' R U2' R2' U R2 U R2' U2 R' U2' R2 U' R2' U2' R U R U' R\",\n    \"R' U' R U' R U2' R2' U2 R' U2 R U2 R' U R2' U2 R' U' R' U2' R\",\n    \"R' U' R2 U2' R' U' R' U' R U R U' R2' U R2 U2' R' U2' R' U2' R\",\n    \"R2 U2' R U2 R2 U R U2 R2' U2' R U2' R' U' R2 U R2 U' R' U R2'\",\n    \"R2' U R' U' R2 U R2 U' R' U2' R U2' R2' U2 R U R2 U2 R U2' R2\",\n    \"R' U R2 U2' R2 U2' R' U' R2 U R U2 R2 U2' R' U2' R U2 R U2 R'\",\n    \"R' U2 R U2 R U2' R' U2' R2 U2 R U R2 U' R' U2' R2 U2' R2 U R'\",\n    \"R U2 R2' U2' R2 U R' U2 R U2' R U2 R' U R2' U2' R2 U2 R U2 R2'\",\n    \"R U2 R2' U2' R2 U2' R U2' R' U2 R' U2' R U2' R2' U2' R2 U2 R U2 R2'\",\n    \"R U2 R' U R U' R' U2' R2 U2' R' U' R U2' R' U2' R' U2 R U2' R'\",\n    \"R U2' R2 U R' U R U' R U2 R U2' R2' U2 R U' R' U' R U' R2\",\n    \"R U2' R2 U2 R U R2 U R2 U2' R' U R U R2' U' R2' U' R U2' R2\",\n    \"R2 U2 R2 U2' R U2' R' U' R2 U R2 U' R' U2' R U2' R2' U2 R U2' R2'\",\n    \"R2 U2 R' U2' R2' U2 R2 U R U' R' U R' U' R U R2' U2 R2 U2' R'\",\n    \"R2 U2' R U' R2' U' R2' U R U R' U2' R2 U R2 U R U2 R2 U2' R\",\n    \"R2 U2' R' U' R U' R' U R2' U' R' U R U' R' U' R2 U R2 U2 R'\",\n    \"R2 U2' R' U' R2' U' R U R2 U' R U R2' U' R' U' R2 U R2 U2 R'\",\n    \"R2 U' R U' R' U' R U2 R2' U2' R U2 R U' R U R' U R2 U2' R\",\n    \"R2 U' R' U R2 U' R' U2' R U2' R2' U2 R2' U2' R U2' R' U' R2' U R2'\",\n    \"R2' U R2' U' R' U2' R U2' R2' U2 R2' U2' R U2' R' U' R2 U R' U' R2\",\n    \"R2' U R' U' R2 U R2 U' R' U R U2 R' U2' R2 U2 R2 U2' R' U2 R2'\",\n    \"R2' U2 R U2 R2 U2' R2' U R' U2 R U2' R U2 R' U R2 U2' R2' U2 R\",\n    \"R2' U2 R U2 R2 U2' R2' U2' R U2' R' U2 R' U2' R U2' R2 U2' R2' U2 R\",\n    \"R2' U2 R' U2' R2 U2 R2 U2' R' U2 R U R' U' R2 U R2 U' R' U R2'\",\n    \"R2' U2' R U2 R2' U2' R U2' R' U' R2 U R2 U' R' U2' R U2' R2 U2 R2\",\n    \"R' U2 R2 U R2 U' R' U' R U R' U' R2' U R' U' R U' R' U2' R2\",\n    \"R' U2 R2 U R2 U' R' U' R2' U R U' R2 U R U' R2' U' R' U2' R2\",\n    \"R' U2' R U2 R' U2' R' U2' R U' R' U2' R2 U2' R' U' R U R' U2 R\",\n    \"R' U2' R2 U2 R2' U R U' R' U R' U' R U R2 U2 R2' U2' R' U2 R2\",\n    \"R2 U R' U2 R' U2 R2 U' R2' U2' R' U' R2 U' R2' U2 R2' U2 R' U R'\",\n    \"R2 U R' U2 R' U' R' U2' R2' U' R2 U2 R2 U' R2' U2 R2' U2 R' U R'\",\n    \"R2 U2' R U2 R U R' U2' R U2 R2' U2 R2 U2 R2' U2' R2' U' R2' U2' R2\",\n    \"R2 U2' R2' U' R2' U2' R2' U2 R2 U2 R2' U2 R U2' R' U R U2 R U2' R2\",\n    \"R' U R2 U2 R U R2' U2 R2 U2 R2 U2 R' U' R2 U2' R2' U2' R2' U' R'\",\n    \"R' U R' U2 R2' U2 R2' U' R2 U2 R2 U' R2' U2' R' U' R' U2 R' U R2\",\n    \"R' U R' U2 R2' U2 R2' U' R2 U' R' U2' R2' U' R2 U2 R' U2 R' U R2\",\n    \"R' U' R2' U2' R2' U2' R2 U' R' U2 R2 U2 R2 U2 R2' U R U2 R2 U R'\",\n    \"R2' U2' R2 U R2' U R2 U R2 U R2' U R2' U2' R2 U R2' U R' U' R2'\",\n    \"R2' U' R' U R2' U R2 U2' R2' U R2' U R2 U R2 U R2' U R2 U2' R2'\",\n    \"R U2 R2' U2' R2 U R' U2 R U2' R U2 R' U R2' U2' R2 U2 R U2 R2'\",\n    \"R U2 R2' U2' R2 U2' R U2' R' U2 R' U2' R U2' R2' U2' R2 U2 R U2 R2'\",\n    \"R U2 R' U R U' R' U2' R2 U2' R' U' R U2' R' U2' R' U2 R U2' R'\",\n    \"R U2' R2 U R' U R U' R U2 R U2' R2' U2 R U' R' U' R U' R2\",\n    \"R U2' R2 U2 R U R2 U R2 U2' R' U R U R2' U' R2' U' R U2' R2\",\n    \"R2 U R' U2 R' U2 R2 U' R2' U2' R' U' R2 U' R2' U2 R2' U2 R' U R'\",\n    \"R2 U R' U2 R' U' R' U2' R2' U' R2 U2 R2 U' R2' U2 R2' U2 R' U R'\",\n    \"R2 U2 R2 U2' R U2' R' U' R2 U R2 U' R' U2' R U2' R2' U2 R U2' R2'\",\n    \"R2 U2 R' U2' R2' U2 R2 U R U' R' U R' U' R U R2' U2 R2 U2' R'\",\n    \"R2 U2' R U2 R U R' U2' R U2 R2' U2 R2 U2 R2' U2' R2' U' R2' U2' R2\",\n    \"R2 U2' R U2 R2 U R U2 R2' U2' R U2' R' U' R2 U R2 U' R' U R2'\",\n    \"R2 U2' R U' R2' U' R2' U R U R' U2' R2 U R2 U R U2 R2 U2' R\",\n    \"R2 U2' R2' U' R2' U2' R2' U2 R2 U2 R2' U2 R U2' R' U R U2 R U2' R2\",\n    \"R2 U2' R' U' R U' R' U R2' U' R' U R U' R' U' R2 U R2 U2 R'\",\n    \"R2 U2' R' U' R2' U' R U R2 U' R U R2' U' R' U' R2 U R2 U2 R'\",\n    \"R2 U' R U' R' U' R U2 R2' U2' R U2 R U' R U R' U R2 U2' R\",\n    \"R2 U' R' U R2 U' R' U2' R U2' R2' U2 R2' U2' R U2' R' U' R2' U R2'\",\n    \"R2' U R2' U' R' U2' R U2' R2' U2 R2' U2' R U2' R' U' R2 U R' U' R2\",\n    \"R2' U R' U' R2 U R2 U' R' U R U2 R' U2' R2 U2 R2 U2' R' U2 R2'\",\n    \"R2' U R' U' R2 U R2 U' R' U2' R U2' R2' U2 R U R2 U2 R U2' R2\",\n    \"R2' U2 R U2 R2 U2' R2' U R' U2 R U2' R U2 R' U R2 U2' R2' U2 R\",\n    \"R2' U2 R U2 R2 U2' R2' U2' R U2' R' U2 R' U2' R U2' R2 U2' R2' U2 R\",\n    \"R2' U2 R' U2' R2 U2 R2 U2' R' U2 R U R' U' R2 U R2 U' R' U R2'\",\n    \"R2' U2' R U2 R2' U2' R U2' R' U' R2 U R2 U' R' U2' R U2' R2 U2 R2\",\n    \"R2' U2' R2 U R2' U R2 U R2 U R2' U R2' U2' R2 U R2' U R' U' R2'\",\n    \"R2' U' R' U R2' U R2 U2' R2' U R2' U R2 U R2 U R2' U R2 U2' R2'\",\n    \"R' U R2 U2 R U R2' U2 R2 U2 R2 U2 R' U' R2 U2' R2' U2' R2' U' R'\",\n    \"R' U R2 U2' R2 U2' R' U' R2 U R U2 R2 U2' R' U2' R U2 R U2 R'\",\n    \"R' U R' U2 R2' U2 R2' U' R2 U2 R2 U' R2' U2' R' U' R' U2 R' U R2\",\n    \"R' U R' U2 R2' U2 R2' U' R2 U' R' U2' R2' U' R2 U2 R' U2 R' U R2\",\n    \"R' U2 R U2 R U2' R' U2' R2 U2 R U R2 U' R' U2' R2 U2' R2 U R'\",\n    \"R' U2 R2 U R2 U' R' U' R U R' U' R2' U R' U' R U' R' U2' R2\",\n    \"R' U2 R2 U R2 U' R' U' R2' U R U' R2 U R U' R2' U' R' U2' R2\",\n    \"R' U2' R U2 R' U2' R' U2' R U' R' U2' R2 U2' R' U' R U R' U2 R\",\n    \"R' U2' R2 U2 R2' U R U' R' U R' U' R U R2 U2 R2' U2' R' U2 R2\",\n    \"R' U' R2' U2' R2' U2' R2 U' R' U2 R2 U2 R2 U2 R2' U R U2 R2 U R'\",\n    \"R U2 R2' U2' R2 U R' U2 R U2' R U2 R' U R2' U2' R2 U2 R U2 R2'\",\n    \"R U2 R2' U2' R2 U2' R U2' R' U2 R' U2' R U2' R2' U2' R2 U2 R U2 R2'\",\n    \"R U2 R' U R U' R' U2' R2 U2' R' U' R U2' R' U2' R' U2 R U2' R'\",\n    \"R U2' R2 U R' U R U' R U2 R U2' R2' U2 R U' R' U' R U' R2\",\n    \"R U2' R2 U2 R U R2 U R2 U2' R' U R U R2' U' R2' U' R U2' R2\",\n    \"R U2' R' U2' R' U2' R2 U R2' U' R U R U' R' U' R' U2' R2 U' R'\",\n    \"R U2' R' U' R' U2 R2' U R' U2 R U2 R' U2 R2' U2' R U' R U' R'\",\n    \"R U' R U R U2' R2' U' R2 U2' R' U2 R2' U R2 U R2' U2' R U2' R'\",\n    \"R U' R U R2 U2' R2 U' R2' U2' R2' U2 R2' U R2 U R2' U2' R U2' R'\",\n    \"R U' R2 U2' R' U2' R2 U R2 U' R U R2 U R U2 R2 U2' R U2' R'\",\n    \"R2 U R U2 R2 U2' R2' U R' U' R2 U2' R2' U R2 U R U2 R2' U2' R2\",\n    \"R2 U R2' U R' U2 R U R2 U2 R2' U' R' U2 R2' U2 R2 U2' R2' U' R2'\",\n    \"R2 U R2' U R' U2 R U R2 U2 R2' U' R' U' R2' U2' R2 U2 R2' U2 R2'\",\n    \"R2 U R' U2 R' U2 R2 U' R2' U2' R' U' R2 U' R2' U2 R2' U2 R' U R'\",\n    \"R2 U R' U2 R' U' R' U2' R2' U' R2 U2 R2 U' R2' U2 R2' U2 R' U R'\",\n    \"R2 U2 R2 U2' R U2' R' U' R2 U R2 U' R' U2' R U2' R2' U2 R U2' R2'\",\n    \"R2 U2 R2' U2' R U2' R U' R' U2' R2 U2' R' U' R U2' R2 U2' R2 U2 R2'\",\n    \"R2 U2 R' U2' R2' U2 R2 U R U' R' U R' U' R U R2' U2 R2 U2' R'\",\n    \"R2 U2' R U2 R U R' U2' R U2 R2' U2 R2 U2 R2' U2' R2' U' R2' U2' R2\",\n    \"R2 U2' R U' R U2 R2 U2' R2' U' R U R2' U2 R2 U' R2 U2' R2 U' R2'\",\n    \"R2 U2' R U' R2' U' R2' U R U R' U2' R2 U R2 U R U2 R2 U2' R\",\n    \"R2 U2' R2' U R2 U R U R' U' R2' U R2 U R U' R2 U2 R2 U2' R2'\",\n    \"R2 U2' R2' U2 R U R2 U R2' U2' R2 U' R' U R2' U2' R2 U2 R U R2\",\n    \"R2 U2' R2' U' R2' U2' R2' U2 R2 U2 R2' U2 R U2' R' U R U2 R U2' R2\",\n    \"R2 U2' R' U2 R U R' U2 R' U R2 U2 R2' U R2' U2 R2 U' R2' U' R2\",\n    \"R2 U2' R' U' R U' R' U R2' U' R' U R U' R' U' R2 U R2 U2 R'\",\n    \"R2 U2' R' U' R2' U' R U R2 U' R U R2' U' R' U' R2 U R2 U2 R'\",\n    \"R2 U' R U' R' U' R U2 R2' U2' R U2 R U' R U R' U R2 U2' R\",\n    \"R2 U' R2' U' R2 U2 R2' U R2' U2 R2 U R' U2 R' U R U2 R' U2' R2\",\n    \"R2 U' R' U R2 U' R' U2' R U2' R2' U2 R2' U2' R U2' R' U' R2' U R2'\",\n    \"R2' U R2' U' R' U2' R U2' R2' U2 R2' U2' R U2' R' U' R2 U R' U' R2\",\n    \"R2' U R' U' R2 U R2 U' R' U R U2 R' U2' R2 U2 R2 U2' R' U2 R2'\",\n    \"R2' U2 R U2 R2 U2' R2' U R' U2 R U2' R U2 R' U R2 U2' R2' U2 R\",\n    \"R2' U2 R U2 R2 U2' R2' U2' R U2' R' U2 R' U2' R U2' R2 U2' R2' U2 R\",\n    \"R2' U2 R2 U2' R2 U2' R U' R' U2' R2 U2' R' U' R U2' R U2' R2' U2 R2\",\n    \"R2' U2 R2' U2 R2 U2' R2' U' R' U' R2' U2 R2 U R U2 R' U R2' U R2\",\n    \"R2' U2 R' U2' R2 U2 R2 U2' R' U2 R U R' U' R2 U R2 U' R' U R2'\",\n    \"R2' U2' R U2 R2' U2' R U2' R' U' R2 U R2 U' R' U2' R U2' R2 U2 R2\",\n    \"R2' U2' R2 U R2' U R2 U R2 U R2' U R2' U2' R2 U R2' U R' U' R2'\",\n    \"R2' U2' R2 U2 R2 U' R U R2 U R2' U' R' U R U R2 U R2' U2' R2\",\n    \"R2' U' R2 U2' R2 U' R2 U2 R2' U R U' R2' U2' R2 U2 R U' R U2' R2\",\n    \"R2' U' R2' U2' R2 U2 R2' U2 R' U' R2' U2 R2 U R U2 R' U R2' U R2\",\n    \"R2' U' R' U R2' U R2 U2' R2' U R2' U R2 U R2 U R2' U R2 U2' R2'\",\n    \"R' U R2 U2 R U R2' U2 R2 U2 R2 U2 R' U' R2 U2' R2' U2' R2' U' R'\",\n    \"R' U R' U2 R2' U2 R2' U' R2 U2 R2 U' R2' U2' R' U' R' U2 R' U R2\",\n    \"R' U R' U2 R2' U2 R2' U' R2 U' R' U2' R2' U' R2 U2 R' U2 R' U R2\",\n    \"R' U2 R2 U R2 U' R' U' R U R' U' R2' U R' U' R U' R' U2' R2\",\n    \"R' U2 R2 U R2 U' R' U' R2' U R U' R2 U R U' R2' U' R' U2' R2\",\n    \"R' U2' R U2 R' U2' R' U2' R U' R' U2' R2 U2' R' U' R U R' U2 R\",\n    \"R' U2' R U2' R2 U2 R U R2 U R U' R2 U R2 U2' R' U2' R2 U' R\",\n    \"R' U2' R U2' R2' U R2 U R2' U2 R2' U2' R2' U' R2 U2' R2 U R U' R\",\n    \"R' U2' R U2' R2' U R2 U R2' U2 R' U2' R2 U' R2' U2' R U R U' R\",\n    \"R' U2' R2 U2 R2' U R U' R' U R' U' R U R2 U2 R2' U2' R' U2 R2\",\n    \"R' U' R U' R U2' R2' U2 R' U2 R U2 R' U R2' U2 R' U' R' U2' R\",\n    \"R' U' R2 U2' R' U' R' U' R U R U' R2' U R2 U2' R' U2' R' U2' R\",\n    \"R' U' R2' U2' R2' U2' R2 U' R' U2 R2 U2 R2 U2 R2' U R U2 R2 U R'\",\n    \"R U2' R' U2' R' U2' R2 U R2' U' R U R U' R' U' R' U2' R2 U' R'\",\n    \"R U2' R' U' R' U2 R2' U R' U2 R U2 R' U2 R2' U2' R U' R U' R'\",\n    \"R U' R U R U2' R2' U' R2 U2' R' U2 R2' U R2 U R2' U2' R U2' R'\",\n    \"R U' R U R2 U2' R2 U' R2' U2' R2' U2 R2' U R2 U R2' U2' R U2' R'\",\n    \"R U' R2 U2' R' U2' R2 U R2 U' R U R2 U R U2 R2 U2' R U2' R'\",\n    \"R2 U R U2 R2 U2' R2' U R' U' R2 U2' R2' U R2 U R U2 R2' U2' R2\",\n    \"R2 U R2' U R' U2 R U R2 U2 R2' U' R' U2 R2' U2 R2 U2' R2' U' R2'\",\n    \"R2 U R2' U R' U2 R U R2 U2 R2' U' R' U' R2' U2' R2 U2 R2' U2 R2'\",\n    \"R2 U R' U2 R' U2 R2 U' R2' U2' R' U' R2 U' R2' U2 R2' U2 R' U R'\",\n    \"R2 U R' U2 R' U' R' U2' R2' U' R2 U2 R2 U' R2' U2 R2' U2 R' U R'\",\n    \"R2 U2 R2' U2' R U2' R U' R' U2' R2 U2' R' U' R U2' R2 U2' R2 U2 R2'\",\n    \"R2 U2' R U2 R U R' U2' R U2 R2' U2 R2 U2 R2' U2' R2' U' R2' U2' R2\",\n    \"R2 U2' R U2 R2 U R U2 R2' U2' R U2' R' U' R2 U R2 U' R' U R2'\",\n    \"R2 U2' R U' R U2 R2 U2' R2' U' R U R2' U2 R2 U' R2 U2' R2 U' R2'\",\n    \"R2 U2' R2' U R2 U R U R' U' R2' U R2 U R U' R2 U2 R2 U2' R2'\",\n    \"R2 U2' R2' U2 R U R2 U R2' U2' R2 U' R' U R2' U2' R2 U2 R U R2\",\n    \"R2 U2' R2' U' R2' U2' R2' U2 R2 U2 R2' U2 R U2' R' U R U2 R U2' R2\",\n    \"R2 U2' R' U2 R U R' U2 R' U R2 U2 R2' U R2' U2 R2 U' R2' U' R2\",\n    \"R2 U' R2' U' R2 U2 R2' U R2' U2 R2 U R' U2 R' U R U2 R' U2' R2\",\n    \"R2' U R' U' R2 U R2 U' R' U2' R U2' R2' U2 R U R2 U2 R U2' R2\",\n    \"R2' U2 R2 U2' R2 U2' R U' R' U2' R2 U2' R' U' R U2' R U2' R2' U2 R2\",\n    \"R2' U2 R2' U2 R2 U2' R2' U' R' U' R2' U2 R2 U R U2 R' U R2' U R2\",\n    \"R2' U2' R2 U R2' U R2 U R2 U R2' U R2' U2' R2 U R2' U R' U' R2'\",\n    \"R2' U2' R2 U2 R2 U' R U R2 U R2' U' R' U R U R2 U R2' U2' R2\",\n    \"R2' U' R2 U2' R2 U' R2 U2 R2' U R U' R2' U2' R2 U2 R U' R U2' R2\",\n    \"R2' U' R2' U2' R2 U2 R2' U2 R' U' R2' U2 R2 U R U2 R' U R2' U R2\",\n    \"R2' U' R' U R2' U R2 U2' R2' U R2' U R2 U R2 U R2' U R2 U2' R2'\",\n    \"R' U R2 U2 R U R2' U2 R2 U2 R2 U2 R' U' R2 U2' R2' U2' R2' U' R'\",\n    \"R' U R2 U2' R2 U2' R' U' R2 U R U2 R2 U2' R' U2' R U2 R U2 R'\",\n    \"R' U R' U2 R2' U2 R2' U' R2 U2 R2 U' R2' U2' R' U' R' U2 R' U R2\",\n    \"R' U R' U2 R2' U2 R2' U' R2 U' R' U2' R2' U' R2 U2 R' U2 R' U R2\",\n    \"R' U2 R U2 R U2' R' U2' R2 U2 R U R2 U' R' U2' R2 U2' R2 U R'\",\n    \"R' U2' R U2' R2 U2 R U R2 U R U' R2 U R2 U2' R' U2' R2 U' R\",\n    \"R' U2' R U2' R2' U R2 U R2' U2 R2' U2' R2' U' R2 U2' R2 U R U' R\",\n    \"R' U2' R U2' R2' U R2 U R2' U2 R' U2' R2 U' R2' U2' R U R U' R\",\n    \"R' U' R U' R U2' R2' U2 R' U2 R U2 R' U R2' U2 R' U' R' U2' R\",\n    \"R' U' R2 U2' R' U' R' U' R U R U' R2' U R2 U2' R' U2' R' U2' R\",\n    \"R' U' R2' U2' R2' U2' R2 U' R' U2 R2 U2 R2 U2 R2' U R U2 R2 U R'\",\n    \"R U2 R2' U2' R2 U R' U2 R U2' R U2 R' U R2' U2' R2 U2 R U2 R2'\",\n    \"R U2 R2' U2' R2 U2' R U2' R' U2 R' U2' R U2' R2' U2' R2 U2 R U2 R2'\",\n    \"R U2 R' U R U' R' U2' R2 U2' R' U' R U2' R' U2' R' U2 R U2' R'\",\n    \"R U2' R2 U R' U R U' R U2 R U2' R2' U2 R U' R' U' R U' R2\",\n    \"R U2' R2 U2 R U R2 U R2 U2' R' U R U R2' U' R2' U' R U2' R2\",\n    \"R U2' R' U2' R' U2' R2 U R2' U' R U R U' R' U' R' U2' R2 U' R'\",\n    \"R U2' R' U' R' U2 R2' U R' U2 R U2 R' U2 R2' U2' R U' R U' R'\",\n    \"R U' R U R U2' R2' U' R2 U2' R' U2 R2' U R2 U R2' U2' R U2' R'\",\n    \"R U' R U R2 U2' R2 U' R2' U2' R2' U2 R2' U R2 U R2' U2' R U2' R'\",\n    \"R U' R2 U2' R' U2' R2 U R2 U' R U R2 U R U2 R2 U2' R U2' R'\",\n    \"R2 U R U2 R2 U2' R2' U R' U' R2 U2' R2' U R2 U R U2 R2' U2' R2\",\n    \"R2 U R2' U R' U2 R U R2 U2 R2' U' R' U2 R2' U2 R2 U2' R2' U' R2'\",\n    \"R2 U R2' U R' U2 R U R2 U2 R2' U' R' U' R2' U2' R2 U2 R2' U2 R2'\",\n    \"R2 U2 R2 U2' R U2' R' U' R2 U R2 U' R' U2' R U2' R2' U2 R U2' R2'\",\n    \"R2 U2 R2' U2' R U2' R U' R' U2' R2 U2' R' U' R U2' R2 U2' R2 U2 R2'\",\n    \"R2 U2 R' U2' R2' U2 R2 U R U' R' U R' U' R U R2' U2 R2 U2' R'\",\n    \"R2 U2' R U2 R2 U R U2 R2' U2' R U2' R' U' R2 U R2 U' R' U R2'\",\n    \"R2 U2' R U' R U2 R2 U2' R2' U' R U R2' U2 R2 U' R2 U2' R2 U' R2'\",\n    \"R2 U2' R U' R2' U' R2' U R U R' U2' R2 U R2 U R U2 R2 U2' R\",\n    \"R2 U2' R2' U R2 U R U R' U' R2' U R2 U R U' R2 U2 R2 U2' R2'\",\n    \"R2 U2' R2' U2 R U R2 U R2' U2' R2 U' R' U R2' U2' R2 U2 R U R2\",\n    \"R2 U2' R' U2 R U R' U2 R' U R2 U2 R2' U R2' U2 R2 U' R2' U' R2\",\n    \"R2 U2' R' U' R U' R' U R2' U' R' U R U' R' U' R2 U R2 U2 R'\",\n    \"R2 U2' R' U' R2' U' R U R2 U' R U R2' U' R' U' R2 U R2 U2 R'\",\n    \"R2 U' R U' R' U' R U2 R2' U2' R U2 R U' R U R' U R2 U2' R\",\n    \"R2 U' R2' U' R2 U2 R2' U R2' U2 R2 U R' U2 R' U R U2 R' U2' R2\",\n    \"R2 U' R' U R2 U' R' U2' R U2' R2' U2 R2' U2' R U2' R' U' R2' U R2'\",\n    \"R2' U R2' U' R' U2' R U2' R2' U2 R2' U2' R U2' R' U' R2 U R' U' R2\",\n    \"R2' U R' U' R2 U R2 U' R' U R U2 R' U2' R2 U2 R2 U2' R' U2 R2'\",\n    \"R2' U R' U' R2 U R2 U' R' U2' R U2' R2' U2 R U R2 U2 R U2' R2\",\n    \"R2' U2 R U2 R2 U2' R2' U R' U2 R U2' R U2 R' U R2 U2' R2' U2 R\",\n    \"R2' U2 R U2 R2 U2' R2' U2' R U2' R' U2 R' U2' R U2' R2 U2' R2' U2 R\",\n    \"R2' U2 R2 U2' R2 U2' R U' R' U2' R2 U2' R' U' R U2' R U2' R2' U2 R2\",\n    \"R2' U2 R2' U2 R2 U2' R2' U' R' U' R2' U2 R2 U R U2 R' U R2' U R2\",\n    \"R2' U2 R' U2' R2 U2 R2 U2' R' U2 R U R' U' R2 U R2 U' R' U R2'\",\n    \"R2' U2' R U2 R2' U2' R U2' R' U' R2 U R2 U' R' U2' R U2' R2 U2 R2\",\n    \"R2' U2' R2 U R2' U R2 U R2 U R2' U R2' U2' R2 U R2' U R' U' R2'\",\n    \"R2' U2' R2 U2 R2 U' R U R2 U R2' U' R' U R U R2 U R2' U2' R2\",\n    \"R2' U' R2 U2' R2 U' R2 U2 R2' U R U' R2' U2' R2 U2 R U' R U2' R2\",\n    \"R2' U' R2' U2' R2 U2 R2' U2 R' U' R2' U2 R2 U R U2 R' U R2' U R2\",\n    \"R2' U' R' U R2' U R2 U2' R2' U R2' U R2 U R2 U R2' U R2 U2' R2'\",\n    \"R' U R2 U2' R2 U2' R' U' R2 U R U2 R2 U2' R' U2' R U2 R U2 R'\",\n    \"R' U2 R U2 R U2' R' U2' R2 U2 R U R2 U' R' U2' R2 U2' R2 U R'\",\n    \"R' U2 R2 U R2 U' R' U' R U R' U' R2' U R' U' R U' R' U2' R2\",\n    \"R' U2 R2 U R2 U' R' U' R2' U R U' R2 U R U' R2' U' R' U2' R2\",\n    \"R' U2' R U2 R' U2' R' U2' R U' R' U2' R2 U2' R' U' R U R' U2 R\",\n    \"R' U2' R U2' R2 U2 R U R2 U R U' R2 U R2 U2' R' U2' R2 U' R\",\n    \"R' U2' R U2' R2' U R2 U R2' U2 R2' U2' R2' U' R2 U2' R2 U R U' R\",\n    \"R' U2' R U2' R2' U R2 U R2' U2 R' U2' R2 U' R2' U2' R U R U' R\",\n    \"R' U2' R2 U2 R2' U R U' R' U R' U' R U R2 U2 R2' U2' R' U2 R2\",\n    \"R' U' R U' R U2' R2' U2 R' U2 R U2 R' U R2' U2 R' U' R' U2' R\",\n    \"R' U' R2 U2' R' U' R' U' R U R U' R2' U R2 U2' R' U2' R' U2' R\",\n    \"R U2 R2' U2' R2 U R' U2 R U2' R U2 R' U R2' U2' R2 U2 R U2 R2'\",\n    \"R U2 R2' U2' R2 U2' R U2' R' U2 R' U2' R U2' R2' U2' R2 U2 R U2 R2'\",\n    \"R U2 R' U R U' R' U2' R2 U2' R' U' R U2' R' U2' R' U2 R U2' R'\",\n    \"R U2' R2 U R' U R U' R U2 R U2' R2' U2 R U' R' U' R U' R2\",\n    \"R U2' R2 U2 R U R2 U R2 U2' R' U R U R2' U' R2' U' R U2' R2\",\n    \"R U2' R' U2' R' U2' R2 U R2' U' R U R U' R' U' R' U2' R2 U' R'\",\n    \"R U2' R' U' R' U2 R2' U R' U2 R U2 R' U2 R2' U2' R U' R U' R'\",\n    \"R U' R U R U2' R2' U' R2 U2' R' U2 R2' U R2 U R2' U2' R U2' R'\",\n    \"R U' R U R2 U2' R2 U' R2' U2' R2' U2 R2' U R2 U R2' U2' R U2' R'\",\n    \"R U' R2 U2' R' U2' R2 U R2 U' R U R2 U R U2 R2 U2' R U2' R'\",\n    \"R2 U R U2 R2 U2' R2' U R' U' R2 U2' R2' U R2 U R U2 R2' U2' R2\",\n    \"R2 U R2' U R' U2 R U R2 U2 R2' U' R' U2 R2' U2 R2 U2' R2' U' R2'\",\n    \"R2 U R2' U R' U2 R U R2 U2 R2' U' R' U' R2' U2' R2 U2 R2' U2 R2'\",\n    \"R2 U R' U2 R' U2 R2 U' R2' U2' R' U' R2 U' R2' U2 R2' U2 R' U R'\",\n    \"R2 U R' U2 R' U' R' U2' R2' U' R2 U2 R2 U' R2' U2 R2' U2 R' U R'\",\n    \"R2 U2 R2 U2' R U2' R' U' R2 U R2 U' R' U2' R U2' R2' U2 R U2' R2'\",\n    \"R2 U2 R2' U2' R U2' R U' R' U2' R2 U2' R' U' R U2' R2 U2' R2 U2 R2'\",\n    \"R2 U2 R' U2' R2' U2 R2 U R U' R' U R' U' R U R2' U2 R2 U2' R'\",\n    \"R2 U2' R U2 R U R' U2' R U2 R2' U2 R2 U2 R2' U2' R2' U' R2' U2' R2\",\n    \"R2 U2' R U2 R2 U R U2 R2' U2' R U2' R' U' R2 U R2 U' R' U R2'\",\n    \"R2 U2' R U' R U2 R2 U2' R2' U' R U R2' U2 R2 U' R2 U2' R2 U' R2'\",\n    \"R2 U2' R U' R2' U' R2' U R U R' U2' R2 U R2 U R U2 R2 U2' R\",\n    \"R2 U2' R2' U R2 U R U R' U' R2' U R2 U R U' R2 U2 R2 U2' R2'\",\n    \"R2 U2' R2' U2 R U R2 U R2' U2' R2 U' R' U R2' U2' R2 U2 R U R2\",\n    \"R2 U2' R2' U' R2' U2' R2' U2 R2 U2 R2' U2 R U2' R' U R U2 R U2' R2\",\n    \"R2 U2' R' U2 R U R' U2 R' U R2 U2 R2' U R2' U2 R2 U' R2' U' R2\",\n    \"R2 U2' R' U' R U' R' U R2' U' R' U R U' R' U' R2 U R2 U2 R'\",\n    \"R2 U2' R' U' R2' U' R U R2 U' R U R2' U' R' U' R2 U R2 U2 R'\",\n    \"R2 U' R U' R' U' R U2 R2' U2' R U2 R U' R U R' U R2 U2' R\",\n    \"R2 U' R2' U' R2 U2 R2' U R2' U2 R2 U R' U2 R' U R U2 R' U2' R2\",\n    \"R2 U' R' U R2 U' R' U2' R U2' R2' U2 R2' U2' R U2' R' U' R2' U R2'\",\n    \"R2' U R2' U' R' U2' R U2' R2' U2 R2' U2' R U2' R' U' R2 U R' U' R2\",\n    \"R2' U R' U' R2 U R2 U' R' U R U2 R' U2' R2 U2 R2 U2' R' U2 R2'\",\n    \"R2' U R' U' R2 U R2 U' R' U2' R U2' R2' U2 R U R2 U2 R U2' R2\",\n    \"R2' U2 R U2 R2 U2' R2' U R' U2 R U2' R U2 R' U R2 U2' R2' U2 R\",\n    \"R2' U2 R U2 R2 U2' R2' U2' R U2' R' U2 R' U2' R U2' R2 U2' R2' U2 R\",\n    \"R2' U2 R2 U2' R2 U2' R U' R' U2' R2 U2' R' U' R U2' R U2' R2' U2 R2\",\n    \"R2' U2 R2' U2 R2 U2' R2' U' R' U' R2' U2 R2 U R U2 R' U R2' U R2\",\n    \"R2' U2 R' U2' R2 U2 R2 U2' R' U2 R U R' U' R2 U R2 U' R' U R2'\",\n    \"R2' U2' R U2 R2' U2' R U2' R' U' R2 U R2 U' R' U2' R U2' R2 U2 R2\",\n    \"R2' U2' R2 U2 R2 U' R U R2 U R2' U' R' U R U R2 U R2' U2' R2\",\n    \"R2' U' R2 U2' R2 U' R2 U2 R2' U R U' R2' U2' R2 U2 R U' R U2' R2\",\n    \"R2' U' R2' U2' R2 U2 R2' U2 R' U' R2' U2 R2 U R U2 R' U R2' U R2\",\n    \"R' U R2 U2 R U R2' U2 R2 U2 R2 U2 R' U' R2 U2' R2' U2' R2' U' R'\",\n    \"R' U R2 U2' R2 U2' R' U' R2 U R U2 R2 U2' R' U2' R U2 R U2 R'\",\n    \"R' U R' U2 R2' U2 R2' U' R2 U2 R2 U' R2' U2' R' U' R' U2 R' U R2\",\n    \"R' U R' U2 R2' U2 R2' U' R2 U' R' U2' R2' U' R2 U2 R' U2 R' U R2\",\n    \"R' U2 R U2 R U2' R' U2' R2 U2 R U R2 U' R' U2' R2 U2' R2 U R'\",\n    \"R' U2 R2 U R2 U' R' U' R U R' U' R2' U R' U' R U' R' U2' R2\",\n    \"R' U2 R2 U R2 U' R' U' R2' U R U' R2 U R U' R2' U' R' U2' R2\",\n    \"R' U2' R U2 R' U2' R' U2' R U' R' U2' R2 U2' R' U' R U R' U2 R\",\n    \"R' U2' R U2' R2 U2 R U R2 U R U' R2 U R2 U2' R' U2' R2 U' R\",\n    \"R' U2' R U2' R2' U R2 U R2' U2 R2' U2' R2' U' R2 U2' R2 U R U' R\",\n    \"R' U2' R U2' R2' U R2 U R2' U2 R' U2' R2 U' R2' U2' R U R U' R\",\n    \"R' U2' R2 U2 R2' U R U' R' U R' U' R U R2 U2 R2' U2' R' U2 R2\",\n    \"R' U' R U' R U2' R2' U2 R' U2 R U2 R' U R2' U2 R' U' R' U2' R\",\n    \"R' U' R2 U2' R' U' R' U' R U R U' R2' U R2 U2' R' U2' R' U2' R\",\n    \"R' U' R2' U2' R2' U2' R2 U' R' U2 R2 U2 R2 U2 R2' U R U2 R2 U R'\",\n    \"R U R U R' U R2' U' R' U R U' R' U' R2 U R2 U R' U2' R U' R'\",\n    \"R U R U2 R' U' R2' U2 R2' U2' R2' U2 R' U' R2' U2' R2 U2 R U' R U2' R'\",\n    \"R U R2' U2' R U' R2 U2 R2' U2' R' U2' R U2 R U' R U' R2' U2' R U2' R'\",\n    \"R U R2' U2' R2' U R' U2' R' U R U R2' U R2' U R' U' R' U2 R2 U2' R2'\",\n    \"R U2 R U R U R2' U R2 U2' R2' U R' U' R2 U2 R2' U' R2 U2' R' U2' R'\",\n    \"R U2 R U2' R' U2 R U2 R2' U2' R2 U' R2 U2' R2' U2 R U2 R' U2' R U2 R\",\n    \"R U2 R U' R' U2 R' U' R2 U2 R2' U2' R U' R' U2 R2 U2' R' U' R U' R2'\",\n    \"R U2 R2 U' R2' U2 R2' U2' R' U' R2 U2' R U2' R' U' R2' U2 R U' R2 U' R'\",\n    \"R U2 R2' U R2' U R' U2 R U2 R2 U2 R U R U2' R' U R' U2 R2 U2' R'\",\n    \"R U2 R2' U2 R2 U2' R' U2' R' U' R2' U R2' U2 R2 U2 R' U2' R2' U2 R2 U R'\",\n    \"R U2 R' U R2' U R2' U' R' U2' R U R2 U' R2 U R U2 R' U2' R U2' R'\",\n    \"R U2 R' U R' U2 R2' U R' U' R2' U2' R U R U2 R U2' R2' U2' R U2' R'\",\n    \"R U2 R' U2 R2 U2' R2' U' R U' R U' R' U R' U2 R U R' U' R U2 R'\",\n    \"R U2 R' U2' R2' U2 R2 U R U' R' U R2' U R U2' R U R' U R' U R2\",\n    \"R U2 R' U' R2 U2' R' U2' R' U R2 U R' U2' R U' R' U2 R' U R U R'\",\n    \"R U2' R U2' R2' U2' R' U2' R2' U' R' U R2' U2 R U2 R2 U2 R2' U2' R U' R'\",\n    \"R U2' R2 U R U2 R U2' R2' U' R' U' R U R U' R2' U R' U2' R U' R'\",\n    \"R U2' R2' U2 R U R U2 R U R' U' R2' U R2 U2' R U2 R2' U R U2' R'\",\n    \"R U2' R2' U2' R U R2' U' R' U' R2' U' R' U2' R U' R2 U2 R2 U2' R2 U2 R2\",\n    \"R U2' R2' U2' R2 U' R' U2' R U2 R U2 R' U R' U2' R' U2 R U' R2 U2' R2'\",\n    \"R U2' R' U R U2 R' U' R2' U R2 U2 R2' U' R' U R U2 R' U2 R' U' R'\",\n    \"R U2' R' U R2 U R2' U2 R' U2' R2 U2 R U2 R' U2 R2' U2' R U' R U' R'\",\n    \"R U2' R' U2' R2' U2 R' U R2' U R2 U2' R' U R2 U R2 U' R2' U2 R2' U' R'\",\n    \"R U2' R' U2' R' U2' R U' R' U2' R2 U R' U2' R' U2' R U' R' U2' R2 U2' R'\",\n    \"R U2' R' U2' R' U2' R U' R' U2' R' U R2 U R U R' U2' R2' U' R2' U' R'\",\n    \"R U' R U R U2 R U R2 U' R U R2 U' R U2' R' U' R2' U2' R U2' R'\",\n    \"R U' R U R U2' R2' U' R' U R2' U2 R2 U2 R' U2' R2' U' R2 U2' R2 U2' R'\",\n    \"R U' R U R2 U2' R2 U' R2' U2' R' U2 R2 U R2' U2 R' U' R2' U2' R U2' R'\",\n    \"R U' R U R2' U2' R' U2 R' U R U' R U2' R U2 R2 U2 R2' U' R2 U2' R2'\",\n    \"R U' R2 U2 R2 U2 R' U' R U2 R2 U' R U2' R2' U R' U2 R' U R2 U2 R2\",\n    \"R U' R2 U2' R' U2' R U R2' U' R' U R2' U' R' U2 R U2 R2 U2' R U2' R'\",\n    \"R U' R2 U' R' U2 R U2' R2' U' R2 U2' R' U2 R2' U R2' U R2 U2' R U2' R'\",\n    \"R U' R2 U' R' U2 R U2' R2' U' R' U R2' U2 R' U2' R U R2 U2' R U2' R'\",\n    \"R U' R2 U' R' U2 R2 U2' R2 U' R2' U2' R2' U2 R2' U R2' U R2 U2' R U2' R'\",\n    \"R U' R' U2' R2' U' R2' U2' R2' U R2 U R' U' R' U' R2 U2 R2 U R2' U2' R'\",\n    \"R U' R' U' R2 U2 R U2' R' U2 R2' U R U2 R' U R2 U2' R U2 R' U2' R2'\",\n    \"R U' R' U' R2 U2 R2' U R2' U2 R' U2' R' U2 R' U R2 U2' R U2 R' U2' R2'\",\n    \"R2 U R U R2 U2 R2' U2 R' U R2' U2 R' U2 R2' U R2' U' R' U2' R2' U R2'\",\n    \"R2 U R U2 R2 U2 R2' U R2 U R2 U' R U' R2 U' R2' U R2 U2' R2' U2' R2\",\n    \"R2 U R2 U2 R U2 R2 U2' R2' U2' R U' R2 U2' R2 U2 R2' U R2' U2 R2' U2 R2'\",\n    \"R2 U R2' U R2 U R2' U R2 U R2' U2' R2 U2 R2' U2 R2 U2 R2' U2 R2 U2 R2'\",\n    \"R2 U R2' U R2 U R2' U R2 U' R2' U2 R2 U2' R2' U' R2 U2 R2' U2 R2 U2 R2'\",\n    \"R2 U R2' U R2 U2 R2' U R2 U2 R2' U2' R2 U R2' U2 R2 U2 R2' U2' R2 U' R2'\",\n    \"R2 U R2' U R2 U2 R2' U R2 U2 R2' U2' R2 U R2' U' R2 U2' R2' U2 R2 U2 R2'\",\n    \"R2 U R2' U R2 U2 R2' U2' R2 U2' R2' U2 R2 U' R2' U2 R2 U2 R2' U2' R2 U' R2'\",\n    \"R2 U R2' U R2 U2 R2' U2' R2 U2' R2' U2 R2 U' R2' U' R2 U2' R2' U2 R2 U2 R2'\",\n    \"R2 U R2' U R2' U2 R2 U R2' U2 R2 U2' R2 U R2' U2 R2 U2 R2' U2' R2 U' R2'\",\n    \"R2 U R2' U R2' U2 R2 U R2' U2 R2 U2' R2 U R2' U' R2 U2' R2' U2 R2 U2 R2'\",\n    \"R2 U R2' U2 R2 U R2' U' R2 U' R2' U2' R2 U2' R2' U' R2 U2 R2' U2 R2 U2 R2'\",\n    \"R2 U R2' U2 R2' U2' R2 U2 R2' U' R' U' R2 U2' R2' U R2 U R U2 R2' U2' R2\",\n    \"R2 U R2' U2' R2 U2' R2 U2 R2' U R2 U2 R2' U' R2' U2 R2 U2 R2' U2' R2 U' R2'\",\n    \"R2 U R2' U2' R2 U2' R2 U2 R2' U R2 U2 R2' U' R2' U' R2 U2' R2' U2 R2 U2 R2'\",\n    \"R2 U R2' U2' R2 U2' R2' U2 R2 U R2' U2 R2 U' R2' U2 R2 U2 R2' U2' R2 U' R2'\",\n    \"R2 U R2' U2' R2 U2' R2' U2 R2 U R2' U2 R2 U' R2' U' R2 U2' R2' U2 R2 U2 R2'\",\n    \"R2 U R2' U' R2 U2' R2' U2' R' U2 R2 U2' R U' R2 U R2 U2 R2' U2' R2' U' R2'\",\n    \"R2 U R' U R' U R U2' R U R2' U R' U' R U R2 U2 R2' U2' R' U2 R\",\n    \"R2 U R' U R' U R2 U2' R2' U2' R U2 R U2 R' U2' R U2' R2' U2' R2 U2' R2'\",\n    \"R2 U R' U2 R2' U' R U R U2' R U2' R2' U' R' U R2' U' R2' U' R2 U2' R2'\",\n    \"R2 U2 R U R' U' R2' U R U' R2' U2 R U2' R2 U2 R2 U2' R2' U R U2 R2'\",\n    \"R2 U2 R U2 R2' U2' R U R2' U R' U' R2' U' R U2 R2' U2' R U2 R' U R2'\",\n    \"R2 U2 R U2 R2' U2' R2' U2 R U' R' U' R U2 R2' U2' R2' U R2 U' R' U2' R2'\",\n    \"R2 U2 R U2 R' U R2 U2' R' U2 R2 U2 R' U' R' U2' R2 U R' U R' U2' R2\",\n    \"R2 U2 R2 U R2' U R U2' R2 U2 R2 U2 R' U2 R2' U' R U' R2 U R' U2' R2'\",\n    \"R2 U2 R2 U R' U2 R' U R2' U2' R U' R2 U2 R U' R' U2 R2 U2 R2 U' R\",\n    \"R2 U2 R2 U2 R2' U R' U R' U' R' U2 R U R U' R U2' R2' U R2 U R2'\",\n    \"R2 U2 R2 U2' R2 U2 R2 U' R U2' R' U' R2' U' R' U' R2' U R U2' R2' U2' R\",\n    \"R2 U2 R2' U2 R2 U2 R2' U2 R2 U2 R2' U2' R2 U R2' U R2 U R2' U R2 U R2'\",\n    \"R2 U2 R2' U2 R2 U2 R2' U' R2 U2' R2' U2 R2 U' R2' U R2 U R2' U R2 U R2'\",\n    \"R2 U2 R2' U2 R2 U2 R2' U' R2 U2' R2' U2' R2 U' R2' U' R2 U R2' U2 R2 U R2'\",\n    \"R2 U2 R2' U2 R2 U2' R2' U' R2 U R2' U2' R2 U2 R2' U R2 U2 R2' U R2 U R2'\",\n    \"R2 U2 R2' U2 R2 U2' R2' U' R2 U R2' U2' R2' U2 R2 U R2' U2 R2 U R2 U R2'\",\n    \"R2 U2 R2' U2 R2 U2' R2' U' R2 U' R2 U2 R2' U R2 U2 R2' U2' R2' U2' R2 U R2'\",\n    \"R2 U2 R2' U2 R2 U2' R2' U' R2 U' R2' U2 R2 U R2' U2 R2 U2' R2' U2' R2 U R2'\",\n    \"R2 U2 R2' U2 R2 U2' R2' U' R2 U' R2' U2 R2 U2' R2' U2' R2 U2 R2' U R2 U R2'\",\n    \"R2 U2 R' U2' R U' R' U2' R U' R2' U R2 U2 R2' U R2' U2 R2 U' R2' U' R2\",\n    \"R2 U2 R' U' R2 U2' R2' U2 R' U R' U' R' U2' R2' U2 R2 U R' U2 R' U R2'\",\n    \"R2 U2' R U' R2' U2 R2' U2' R2 U2 R2' U2 R U R2' U2 R2 U' R2 U2' R2 U' R2'\",\n    \"R2 U2' R2 U2' R' U R U R U' R' U' R U R2' U' R2' U2 R U2' R U' R2'\",\n    \"R2 U2' R2' U R2 U R2' U R2 U' R U R' U R2' U R2 U2' R U' R' U R2'\",\n    \"R2 U2' R2' U R' U2 R2' U R U2 R U2' R U R' U2 R' U2' R U2 R2' U2' R2'\",\n    \"R2 U2' R2' U R' U2' R2 U2 R U R' U2 R2' U2' R U R2 U R2' U R2 U2' R2'\",\n    \"R2 U2' R2' U2 R U R2 U R2' U2' R2 U' R' U' R2' U2 R2 U2' R2' U2 R2' U R2\",\n    \"R2 U2' R2' U2 R U' R U R2 U R2' U' R' U R U R2 U' R U2 R2 U2' R2'\",\n    \"R2 U2' R2' U2 R2 U2 R' U' R U R' U' R' U' R2 U' R2' U' R U2 R U R2'\",\n    \"R2 U2' R2' U2' R U R U2 R' U2' R' U2 R U2 R' U' R2 U R2' U2 R2 U2' R2'\",\n    \"R2 U2' R2' U2' R U2' R' U2' R U2 R U R2' U2 R2 U2' R2' U2' R2 U' R' U' R'\",\n    \"R2 U2' R2' U2' R U2' R' U2' R U2 R U2' R2' U2' R2 U2 R2' U R2 U' R' U' R'\",\n    \"R2 U2' R2' U2' R U2' R' U2' R U2 R U2' R' U' R' U' R2 U R2' U2 R2 U2' R2'\",\n    \"R2 U2' R2' U2' R U' R' U' R2 U2' R U2' R2 U2' R2 U' R' U' R U R U' R2\",\n    \"R2 U2' R2' U2' R2 U R2 U2 R' U2' R U2 R U' R' U2 R' U2' R U2 R2' U2' R2'\",\n    \"R2 U2' R2' U2' R2 U R2' U' R2 U' R U' R2 U R2 U R2' U2 R2 U2 R U R2\",\n    \"R2 U2' R2' U2' R2 U2' R2 U2' R' U2 R U2 R U2' R2' U2' R2 U R' U R2' U R2'\",\n    \"R2 U2' R2' U2' R' U2' R2' U R2 U R U2' R2' U2 R' U R U2 R2 U' R2 U2' R2'\",\n    \"R2 U2' R2' U2' R' U2' R2' U2 R2' U R2' U2 R2 U' R2' U' R' U2 R2 U2' R2' U2' R2'\",\n    \"R2 U2' R2' U2' R' U' R2 U' R U R2 U R2' U' R' U R U R2' U R2 U2' R2'\",\n    \"R2 U2' R2' U' R U2 R2 U2' R2' U2 R' U' R U R2 U' R' U' R' U2 R U R2'\",\n    \"R2 U2' R2' U' R U2 R2 U2' R2' U2 R' U' R2' U' R2' U R U R U2' R' U2' R2'\",\n    \"R2 U2' R2' U' R2 U' R' U2 R' U2' R2 U R' U2' R' U2 R U R U' R' U2' R'\",\n    \"R2 U2' R2' U' R2 U' R' U' R' U R U R U2 R' U R' U2' R U2 R U R2'\",\n    \"R2 U2' R2' U' R2' U2 R2' U2' R2 U2 R2 U' R U R2 U' R' U' R' U2 R U R2'\",\n    \"R2 U2' R2' U' R2' U2 R2' U2' R2 U2 R2 U' R2' U' R2' U R U R U2' R' U2' R2'\",\n    \"R2 U2' R2' U' R2' U2' R U' R' U' R' U' R' U2 R2' U2' R2' U2' R' U2 R' U2' R2'\",\n    \"R2 U2' R' U R2' U2 R2 U2' R U' R2 U2' R2 U2' R2' U2 R2' U2 R' U2' R U' R2'\",\n    \"R2 U2' R' U R' U R2 U2' R' U' R' U2 R2 U2 R' U2' R2 U R' U2 R U2 R2\",\n    \"R2 U2' R' U2 R U2' R' U2 R' U' R U2 R U2' R' U2 R U R2' U2' R2 U2' R2'\",\n    \"R2 U2' R' U2 R' U2' R' U R U2 R U2' R' U2 R2 U R2 U R U2 R2 U2' R2'\",\n    \"R2 U2' R' U2 R' U2' R' U2' R U2' R U2 R U R2' U2 R' U' R U2 R2 U2' R2'\",\n    \"R2 U2' R' U2' R' U R2 U R2' U2' R U R2 U2' R' U2' R' U2 R2 U2 R' U2' R2'\",\n    \"R2 U' R U R U' R' U' R2 U2' R2 U2' R U2' R2 U' R' U' R U2' R2' U2' R2\",\n    \"R2 U' R U2' R U R' U' R2 U2 R2 U2 R' U2 R' U2' R2 U2 R2 U' R2 U2' R2'\",\n    \"R2 U' R U2' R U2' R2 U2 R U R2 U' R' U2' R2 U2' R2 U2 R2' U' R' U R2'\",\n    \"R2 U' R2' U2' R2 U2 R2' U2 R2 U R2' U2' R2 U2 R2' U R2 U2 R2' U R2 U R2'\",\n    \"R2 U' R2' U2' R2 U2 R2' U2 R2 U R2' U2' R2' U2 R2 U R2' U2 R2 U R2 U R2'\",\n    \"R2 U' R2' U2' R2 U2 R2' U2 R2 U' R2 U2 R2' U R2 U2 R2' U2' R2' U2' R2 U R2'\",\n    \"R2 U' R2' U2' R2 U2 R2' U2 R2 U' R2' U2 R2 U R2' U2 R2 U2' R2' U2' R2 U R2'\",\n    \"R2 U' R2' U2' R2 U2 R2' U2 R2 U' R2' U2 R2 U2' R2' U2' R2 U2 R2' U R2 U R2'\",\n    \"R2 U' R2' U' R2 U2 R2' U R2' U2 R2 U R2' U' R U2' R' U' R U2' R' U2 R2\",\n    \"R2 U' R2' U' R2 U' R2' U' R2 U' R2' U2' R2 U' R2' U' R2 U' R2' U' R2 U' R2'\",\n    \"R2' U R U2 R U2' R' U R' U2 R U R U R' U' R' U' R2 U' R2' U2' R2\",\n    \"R2' U R U2 R U' R2' U' R2 U' R' U' R' U R U' R' U2 R2 U2 R2' U2' R2\",\n    \"R2' U R U2 R' U' R' U' R2 U R U' R2 U2 R2 U2' R2' U2 R2' U' R2' U2' R2\",\n    \"R2' U R U2 R' U' R' U' R2 U R U' R' U2 R2' U2' R2 U2 R U' R2' U2' R2\",\n    \"R2' U R U2' R2' U' R2' U2' R2 U R U2 R2 U2 R2' U' R U' R U' R2 U2' R2'\",\n    \"R2' U R2 U R2 U2 R2' U R2 U2 R2' U2' R2' U R2 U2 R2' U2 R2 U2' R2' U' R2\",\n    \"R2' U R2 U R2 U2 R2' U R2 U2 R2' U2' R2' U R2 U' R2' U2' R2 U2 R2' U2 R2\",\n    \"R2' U R2 U R2' U R2 U R2' U R2 U2' R2' U2 R2 U2 R2' U2 R2 U2 R2' U2 R2\",\n    \"R2' U R2 U R2' U R2 U R2' U' R2 U2 R2' U2' R2 U' R2' U2 R2 U2 R2' U2 R2\",\n    \"R2' U R2 U R2' U2 R2 U R2' U2 R2 U2' R2' U R2 U2 R2' U2 R2 U2' R2' U' R2\",\n    \"R2' U R2 U R2' U2 R2 U R2' U2 R2 U2' R2' U R2 U' R2' U2' R2 U2 R2' U2 R2\",\n    \"R2' U R2 U R2' U2 R2 U2' R2' U2' R2 U2 R2' U' R2 U2 R2' U2 R2 U2' R2' U' R2\",\n    \"R2' U R2 U R2' U2 R2 U2' R2' U2' R2 U2 R2' U' R2 U' R2' U2' R2 U2 R2' U2 R2\",\n    \"R2' U R2 U R2' U2' R U' R U R U2 R' U' R' U R' U R2' U2 R2 U2 R2\",\n    \"R2' U R2 U2 R2' U R2 U' R2' U' R2 U2' R2' U2' R2 U' R2' U2 R2 U2 R2' U2 R2\",\n    \"R2' U R2 U2' R2' U2' R2 U2 R2' U R2 U2 R2' U' R2 U2 R2' U2 R2 U2' R2' U' R2\",\n    \"R2' U R2 U2' R2' U2' R2 U2 R2' U R2 U2 R2' U' R2 U' R2' U2' R2 U2 R2' U2 R2\",\n    \"R2' U R2 U2' R2' U2' R2' U2 R2 U R2' U2 R2 U' R2 U2 R2' U2 R2 U2' R2' U' R2\",\n    \"R2' U R2 U2' R2' U2' R2' U2 R2 U R2' U2 R2 U' R2 U' R2' U2' R2 U2 R2' U2 R2\",\n    \"R2' U R2' U R' U R2 U2' R2' U2' R U2 R U2 R' U2' R2 U2' R2 U2' R2' U2' R2\",\n    \"R2' U R2' U2' R' U' R2' U R2' U2 R' U2 R2' U R' U2 R2' U2 R2 U R U R2\",\n    \"R2' U R' U2 R U2' R2' U2 R U' R2' U' R' U R2' U R U2' R2' U2 R U2 R2\",\n    \"R2' U R' U2 R' U R2 U2 R2' U2' R' U' R' U R' U2 R2' U2' R2 U' R' U2 R2\",\n    \"R2' U R' U' R U2' R2 U R2' U R' U R U' R2 U R2' U R2 U R2' U2' R2\",\n    \"R2' U R' U' R2' U2 R2 U2' R2 U2' R' U' R2 U R U2 R2 U2' R U2' R U' R2\",\n    \"R2' U2 R U R2' U2' R2 U2 R2 U2' R U2 R2' U' R U R2' U' R' U R U2 R2\",\n    \"R2' U2 R2 U2 R2' U2 R2 U2 R2' U2 R2 U2' R2' U R2 U R2' U R2 U R2' U R2\",\n    \"R2' U2 R2 U2 R2' U2 R2 U' R2' U2' R2 U2 R2' U' R2 U R2' U R2 U R2' U R2\",\n    \"R2' U2 R2 U2 R2' U2 R2 U' R2' U2' R2 U2' R2' U' R2 U' R2' U R2 U2 R2' U R2\",\n    \"R2' U2 R2 U2 R2' U2' R2 U' R2' U R2 U2' R2 U2 R2' U R2 U2 R2' U R2' U R2\",\n    \"R2' U2 R2 U2 R2' U2' R2 U' R2' U R2 U2' R2' U2 R2 U R2' U2 R2 U R2' U R2\",\n    \"R2' U2 R2 U2 R2' U2' R2 U' R2' U' R2 U2 R2' U R2 U2 R2' U2' R2 U2' R2' U R2\",\n    \"R2' U2 R2 U2 R2' U2' R2 U' R2' U' R2 U2 R2' U2' R2 U2' R2' U2 R2 U R2' U R2\",\n    \"R2' U2 R2 U2 R2' U2' R2 U' R2' U' R2' U2 R2 U R2' U2 R2 U2' R2 U2' R2' U R2\",\n    \"R2' U2 R2 U2' R U R U R' U' R' U2 R2 U2' R2 U R' U' R U2 R U2 R'\",\n    \"R2' U2 R2' U2 R U2' R2 U R2 U' R U R2 U R2' U2' R2' U2' R2 U2 R U2' R'\",\n    \"R2' U2 R2' U2 R2' U R2' U2 R2 U2' R2 U' R U2' R2' U2' R2 U2 R U2 R2 U R2\",\n    \"R2' U2 R2' U' R2 U R' U' R2 U2 R' U2' R2 U2 R' U' R2' U2' R2 U R2 U' R2'\",\n    \"R2' U2' R2 U R2' U R U R' U' R2' U R2 U R U' R2 U' R' U2' R2' U2' R2\",\n    \"R2' U2' R2 U R2' U R2 U R U2' R2' U2 R' U R U2 R2 U2' R' U R2' U2' R2\",\n    \"R2' U2' R2 U2 R U R2 U R2 U2 R' U2' R U2 R U R' U2' R' U2 R' U2' R2\",\n    \"R2' U2' R2 U2 R U' R2 U R U R' U' R2' U R2 U R U' R U2 R2' U2' R2\",\n    \"R2' U2' R2 U2 R U' R' U2 R2' U R U2 R U2' R U2' R' U2' R' U2 R' U2' R2\",\n    \"R2' U2' R2 U2 R2 U R U2' R' U2' R2' U2' R2' U2' R U2 R2' U2' R' U' R2' U R'\",\n    \"R2' U2' R2 U2 R2' U R2 U' R' U2 R U2 R' U2' R' U2 R U R U2' R2' U2' R2\",\n    \"R2' U2' R2 U2 R2' U R2 U' R' U' R' U2' R U2 R U2' R' U2' R U2' R2' U2' R2\",\n    \"R2' U2' R2 U2 R' U' R' U R2' U R2' U R U R' U2' R' U R2' U2' R2' U R\",\n    \"R2' U2' R2 U2' R2' U R U2 R' U2' R U2 R U' R' U2 R' U2' R U2 R' U2' R2\",\n    \"R2' U2' R2 U2' R2' U2' R U2' R' U2 R U2 R U2' R2' U2' R2 U R' U R' U R2\",\n    \"R2' U2' R2 U' R U2 R' U2' R' U R' U2 R U2 R U2' R' U' R2 U2' R2' U2' R\",\n    \"R2' U2' R2 U' R U' R U' R2' U2 R2 U2 R U R2 U2' R2' U' R2' U2' R U R2'\",\n    \"R2' U2' R2 U' R2 U2 R U R' U2 R2' U2' R U R2 U R2' U2' R' U2' R2' U2' R2\",\n    \"R2' U2' R2 U' R2 U2 R2 U2' R' U2 R' U2 R2 U2 R2 U' R' U R U2' R U' R2\",\n    \"R2' U2' R2 U' R2' U2 R2 U2 R U2' R U' R U R' U2 R' U2' R2' U R U' R\",\n    \"R2' U2' R2 U' R2' U' R2' U R' U' R2' U2' R U2' R U R U' R2' U2 R' U R2\",\n    \"R2' U2' R2' U2 R U2' R' U2 R' U R U2' R U2 R U R2' U2 R' U R2' U2' R2\",\n    \"R2' U2' R2' U2 R U2' R' U2 R' U' R U2 R U2' R' U2 R2 U R2 U2' R2' U2' R2\",\n    \"R2' U2' R2' U2' R2 U2 R' U' R2' U' R2 U2 R2' U R2' U2 R2' U2' R' U2' R2' U2' R2\",\n    \"R2' U2' R2' U' R' U R2' U2 R' U R' U' R' U' R U2 R U2' R2' U2' R U2' R'\",\n    \"R2' U2' R' U R2 U' R U' R2' U2 R' U2 R2 U2 R2 U2' R U R2' U R2 U2 R2\",\n    \"R2' U2' R' U2 R U2' R2 U R' U2 R U R2' U2 R' U2' R U2 R2 U' R' U' R\",\n    \"R2' U2' R' U2 R U2' R2 U R' U2 R' U2' R' U2 R2' U R2' U2 R2 U' R' U' R\",\n    \"R2' U2' R' U2 R2 U2 R' U2' R' U2' R2 U R U2' R2' U R2 U R' U2' R' U2' R2\",\n  ],\n  [\n    \"R U2 R' U2 R2 U R U2' R2 U' R U R2 U2 R' U' R' U R'\",\n    \"R' U R' U' R' U2 R2 U R U' R2 U2' R U R2 U2 R' U2 R\",\n    \"R2 U' R U2' R2 U2' R2 U R2' U2' R2' U R2 U2' R2 U2' R U' R2\",\n    \"R2 U' R U R2' U' R2' U R U2 R' U2 R2 U2' R2 U2 R' U2' R2'\",\n    \"R2' U2' R' U2 R2 U2' R2 U2 R' U2 R U R2' U' R2' U R U' R2\",\n    \"R2 U' R U R2' U' R2' U R U2 R' U2 R2 U2' R2 U2 R' U2' R2'\",\n    \"R2 U' R U2' R2 U2' R2 U R2' U2' R2' U R2 U2' R2 U2' R U' R2\",\n    \"R2' U2' R' U2 R2 U2' R2 U2 R' U2 R U R2' U' R2' U R U' R2\",\n    \"R U2 R' U2 R2 U R U2' R2 U' R U R2 U2 R' U' R' U R'\",\n    \"R2 U' R U R2' U' R2' U R U2 R' U2 R2 U2' R2 U2 R' U2' R2'\",\n    \"R2 U' R U2' R2 U2' R2 U R2' U2' R2' U R2 U2' R2 U2' R U' R2\",\n    \"R2' U2' R' U2 R2 U2' R2 U2 R' U2 R U R2' U' R2' U R U' R2\",\n    \"R' U R' U' R' U2 R2 U R U' R2 U2' R U R2 U2 R' U2 R\",\n    \"R U2 R' U2 R2 U R U2' R2 U' R U R2 U2 R' U' R' U R'\",\n    \"R2 U' R U R2' U' R2' U R U2 R' U2 R2 U2' R2 U2 R' U2' R2'\",\n    \"R2' U2' R' U2 R2 U2' R2 U2 R' U2 R U R2' U' R2' U R U' R2\",\n    \"R' U R' U' R' U2 R2 U R U' R2 U2' R U R2 U2 R' U2 R\",\n    \"R U2 R' U2 R2 U R U2' R2 U' R U R2 U2 R' U' R' U R'\",\n    \"R2 U' R U2' R2 U2' R2 U R2' U2' R2' U R2 U2' R2 U2' R U' R2\",\n    \"R' U R' U' R' U2 R2 U R U' R2 U2' R U R2 U2 R' U2 R\",\n    \"R U2 R' U2 R2 U R U2' R2 U' R U R2 U2 R' U' R' U R'\",\n    \"R2 U' R U R2' U' R2' U R U2 R' U2 R2 U2' R2 U2 R' U2' R2'\",\n    \"R2 U' R U2' R2 U2' R2 U R2' U2' R2' U R2 U2' R2 U2' R U' R2\",\n    \"R2' U2' R' U2 R2 U2' R2 U2 R' U2 R U R2' U' R2' U R U' R2\",\n    \"R' U R' U' R' U2 R2 U R U' R2 U2' R U R2 U2 R' U2 R\",\n    \"R U R2' U2 R U R U R' U' R' U R2 U' R2' U2 R U2 R U2 R'\",\n    \"R U R' U R' U2 R2 U2' R U2' R' U2' R U' R2 U2' R U R U2 R'\",\n    \"R U2 R' U2 R2 U' R2' U' R2 U2' R U2 R2' U R2 U2 R' U' R' U R'\",\n    \"R U2 R' U2 R2 U' R2' U' R2 U2' R2 U2 R2 U R2' U2 R2' U' R' U R'\",\n    \"R U2 R' U2 R2' U2' R' U' R2' U' R' U R2' U' R2' U2 R U2 R2' U R'\",\n    \"R2 U R2 U2 R2' U2' R2 U2' R U R2 U2' R2' U' R' U2' R U' R2 U' R2'\",\n    \"R2 U R2' U2 R2' U R2' U2' R2 U' R' U R2 U2 R2' U2' R' U R' U2 R2'\",\n    \"R2 U2 R2' U2' R2' U R' U' R2' U' R2 U R U' R' U' R2' U' R2 U2 R2'\",\n    \"R2 U2' R2 U2' R2' U2 R2 U R U R2 U2' R2' U' R' U2' R U' R2 U' R2'\",\n    \"R2 U2' R2' U2 R2' U2 R' U R U2 R2' U2 R U R' U2 R' U2 R2 U2' R2'\",\n    \"R2' U R2 U R2' U2' R2 U' R2 U2' R2' U' R U2' R U' R' U2' R U2 R2'\",\n    \"R2' U2 R U2' R' U' R U2' R U' R2' U2' R2 U' R2 U2' R2' U R2 U R2'\",\n    \"R2' U2 R2 U2' R' U' R2' U' R2 U2 R2' U R U' R2 U2 R2' U2' R' U' R2'\",\n    \"R2' U2 R2 U' R2' U' R' U' R U R2 U' R2' U' R' U R2' U2' R2' U2 R2\",\n    \"R2' U2 R' U R' U2' R2' U2 R2 U R' U' R2 U2' R2' U R2' U2 R2' U R2\",\n    \"R2' U2' R2 U2 R' U2 R' U R U2 R2' U2 R U R' U2 R2' U2 R2' U2' R2\",\n    \"R2' U' R2 U' R U2' R' U' R2' U2' R2 U R U R2 U2 R2' U2' R2 U2' R2\",\n    \"R2' U' R2 U' R U2' R' U' R2' U2' R2 U R U2' R2 U2' R2' U2 R2 U R2\",\n    \"R2' U' R' U2' R2' U2 R2 U' R U R2' U2 R2 U' R2' U' R' U2' R2 U2 R2'\",\n    \"R' U R2' U2 R U2 R2' U' R2' U R' U' R2' U' R' U2' R2' U2 R' U2 R\",\n    \"R' U R' U' R2' U2 R2' U R2 U2 R2 U2' R2 U' R2' U' R2 U2 R' U2 R\",\n    \"R' U R' U' R' U2 R2 U R2' U2 R U2' R2 U' R2' U' R2 U2 R' U2 R\",\n    \"R' U2 R U R U2' R2 U' R U2' R' U2' R U2' R2 U2 R' U R' U R\",\n    \"R' U2 R U2 R U2 R2' U' R2 U R' U' R' U R U R U2 R2' U R\",\n    \"R2 U R U' R2 U' R2' U2 R2 U' R2 U' R2' U' R2' U' R2 U' R2' U2 R2\",\n    \"R2 U2 R2' U' R2 U' R2' U' R2' U' R2 U' R2 U2 R2' U' R2 U' R U R2\",\n    \"R U R2 U2 R2 U2 R2' U R U2' R2' U2' R2' U2' R2 U' R' U2' R2' U' R\",\n    \"R U' R U2' R2 U2' R2 U R2' U R U2 R2 U R2' U2' R U2' R U' R2'\",\n    \"R U' R U2' R2 U2' R2 U R2' U2' R2' U R2 U2 R U R U2' R U' R2'\",\n    \"R U' R2' U2' R' U' R2 U2' R2' U2' R2' U2' R U R2' U2 R2 U2 R2 U R\",\n    \"R2' U2 R2 U R2 U2 R2 U2' R2' U2' R2 U2' R' U2 R U' R' U2' R' U2 R2'\",\n    \"R2' U2 R' U2' R' U' R U2 R' U2' R2 U2' R2' U2' R2 U2 R2 U R2 U2 R2'\",\n    \"R2' U' R U2' R U R U2 R2 U R2' U2' R2' U R2 U2' R2 U2' R U' R\",\n    \"R2' U' R U2' R U2' R2' U R2 U2 R U R2' U R2 U2' R2 U2' R U' R\",\n    \"R U2 R2' U2' R2 U' R' U R U' R U R' U' R2' U2' R2 U2 R U2' R2'\",\n    \"R U2 R' U2' R U2 R U2 R' U R U2 R2' U2 R U R' U' R U2' R'\",\n    \"R U2' R2' U' R2' U R U R2 U' R' U R2' U' R' U R2 U R U2 R2'\",\n    \"R U2' R2' U' R2' U R U R' U' R U R2 U' R U R' U R U2 R2'\",\n    \"R2 U2 R' U2' R2 U2 R' U2 R U R2' U' R2' U R U2 R' U2 R2' U2' R2'\",\n    \"R2 U2' R U2 R2' U2' R2' U2 R U2' R' U' R U R2' U' R2' U R U' R2\",\n    \"R2 U2' R' U2' R2' U2 R2 U2 R' U2 R U2' R U2 R' U2 R2' U2 R2 U2' R'\",\n    \"R2 U2' R' U2' R2' U2 R2 U' R U2' R' U2 R' U2' R U' R2' U2 R2 U2' R'\",\n    \"R2 U' R U R2' U' R2' U R U' R' U2' R U2 R2' U2' R2' U2 R U2' R2\",\n    \"R2 U' R2 U R U2 R' U2 R2 U2' R2 U2 R' U2 R U R2' U' R U R2'\",\n    \"R2' U R U' R2' U R U2 R' U2 R2 U2' R2 U2 R' U2 R U R2 U' R2\",\n    \"R2' U R' U R U R' U2' R2 U2 R' U2' R' U R' U' R U' R2' U2 R'\",\n    \"R2' U2 R U R2 U R' U' R2' U R' U' R2 U R U R2' U' R2' U2' R\",\n    \"R2' U2 R U R' U R U' R2 U R U' R' U R U R2' U' R2' U2' R\",\n    \"R2' U2 R' U R2 U R2 U' R' U' R U2 R2' U' R2' U' R' U2' R2' U2 R'\",\n    \"R2' U2' R U2 R2 U2' R2' U' R' U R U' R U R' U' R2 U2' R2' U2 R\",\n    \"R2' U2' R2' U2 R' U2 R U R2' U' R2' U R U2 R' U2 R2 U2' R' U2 R2\",\n    \"R' U2 R2' U2' R' U' R2' U' R2' U2 R U' R' U' R2 U R2 U R' U2 R2'\",\n    \"R' U2 R2' U' R U' R' U R' U2' R' U2 R2 U2' R' U R U R' U R2'\",\n    \"R' U2' R U' R' U R U2 R2' U2 R U R' U2 R U2 R U2' R' U2 R\",\n    \"R' U2' R2 U2 R2' U2 R' U2 R U2' R U2 R' U2 R2 U2 R2' U2' R' U2' R2\",\n    \"R' U2' R2 U2 R2' U' R U2' R' U2 R' U2' R U' R2 U2 R2' U2' R' U2' R2\",\n    \"R U2' R' U2' R' U2 R U2 R2' U2' R' U' R2' U R U2 R2' U2 R2' U' R\",\n    \"R U' R2' U2 R2' U2 R U R2' U' R' U2' R2' U2 R U2 R' U2' R' U2' R\",\n    \"R2 U' R U R2' U' R2' U R U2 R' U2 R2 U2' R' U' R2' U2' R' U2 R2'\",\n    \"R2' U2 R' U2' R2' U' R' U2' R2 U2 R' U2 R U R2' U' R2' U R U' R2\",\n    \"R U R2 U2 R2 U2 R2' U R U2' R2' U2' R2' U2' R2 U' R' U2' R2' U' R\",\n    \"R U2 R2' U2' R2 U' R' U R U' R U R' U' R2' U2' R2 U2 R U2' R2'\",\n    \"R U2 R' U2' R U2 R U2 R' U R U2 R2' U2 R U R' U' R U2' R'\",\n    \"R U2' R2' U' R2' U R U R2 U' R' U R2' U' R' U R2 U R U2 R2'\",\n    \"R U2' R2' U' R2' U R U R' U' R U R2 U' R U R' U R U2 R2'\",\n    \"R U2' R' U2' R' U2 R U2 R2' U2' R' U' R2' U R U2 R2' U2 R2' U' R\",\n    \"R U' R U2' R2 U2' R2 U R2' U R U2 R2 U R2' U2' R U2' R U' R2'\",\n    \"R U' R U2' R2 U2' R2 U R2' U2' R2' U R2 U2 R U R U2' R U' R2'\",\n    \"R U' R2' U2 R2' U2 R U R2' U' R' U2' R2' U2 R U2 R' U2' R' U2' R\",\n    \"R U' R2' U2' R' U' R2 U2' R2' U2' R2' U2' R U R2' U2 R2 U2 R2 U R\",\n    \"R2 U R U' R2 U' R2' U2 R2 U' R2 U' R2' U' R2' U' R2 U' R2' U2 R2\",\n    \"R2 U2 R2' U' R2 U' R2' U' R2' U' R2 U' R2 U2 R2' U' R2 U' R U R2\",\n    \"R2 U2 R' U2' R2 U2 R' U2 R U R2' U' R2' U R U2 R' U2 R2' U2' R2'\",\n    \"R2 U2' R U2 R2' U2' R2' U2 R U2' R' U' R U R2' U' R2' U R U' R2\",\n    \"R2 U2' R' U2' R2' U2 R2 U2 R' U2 R U2' R U2 R' U2 R2' U2 R2 U2' R'\",\n    \"R2 U2' R' U2' R2' U2 R2 U' R U2' R' U2 R' U2' R U' R2' U2 R2 U2' R'\",\n    \"R2 U' R U R2' U' R2' U R U2 R' U2 R2 U2' R' U' R2' U2' R' U2 R2'\",\n    \"R2 U' R U R2' U' R2' U R U' R' U2' R U2 R2' U2' R2' U2 R U2' R2\",\n    \"R2 U' R2 U R U2 R' U2 R2 U2' R2 U2 R' U2 R U R2' U' R U R2'\",\n    \"R2' U R U' R2' U R U2 R' U2 R2 U2' R2 U2 R' U2 R U R2 U' R2\",\n    \"R2' U R' U R U R' U2' R2 U2 R' U2' R' U R' U' R U' R2' U2 R'\",\n    \"R2' U2 R U R2 U R' U' R2' U R' U' R2 U R U R2' U' R2' U2' R\",\n    \"R2' U2 R U R' U R U' R2 U R U' R' U R U R2' U' R2' U2' R\",\n    \"R2' U2 R2 U R2 U2 R2 U2' R2' U2' R2 U2' R' U2 R U' R' U2' R' U2 R2'\",\n    \"R2' U2 R' U R2 U R2 U' R' U' R U2 R2' U' R2' U' R' U2' R2' U2 R'\",\n    \"R2' U2 R' U2' R2' U' R' U2' R2 U2 R' U2 R U R2' U' R2' U R U' R2\",\n    \"R2' U2 R' U2' R' U' R U2 R' U2' R2 U2' R2' U2' R2 U2 R2 U R2 U2 R2'\",\n    \"R2' U2' R U2 R2 U2' R2' U' R' U R U' R U R' U' R2 U2' R2' U2 R\",\n    \"R2' U2' R2' U2 R' U2 R U R2' U' R2' U R U2 R' U2 R2 U2' R' U2 R2\",\n    \"R2' U' R U2' R U R U2 R2 U R2' U2' R2' U R2 U2' R2 U2' R U' R\",\n    \"R2' U' R U2' R U2' R2' U R2 U2 R U R2' U R2 U2' R2 U2' R U' R\",\n    \"R' U2 R2' U2' R' U' R2' U' R2' U2 R U' R' U' R2 U R2 U R' U2 R2'\",\n    \"R' U2 R2' U' R U' R' U R' U2' R' U2 R2 U2' R' U R U R' U R2'\",\n    \"R' U2' R U' R' U R U2 R2' U2 R U R' U2 R U2 R U2' R' U2 R\",\n    \"R' U2' R2 U2 R2' U2 R' U2 R U2' R U2 R' U2 R2 U2 R2' U2' R' U2' R2\",\n    \"R' U2' R2 U2 R2' U' R U2' R' U2 R' U2' R U' R2 U2 R2' U2' R' U2' R2\",\n    \"R U R2 U2 R2 U2 R2' U R U2' R2' U2' R2' U2' R2 U' R' U2' R2' U' R\",\n    \"R U R2' U2 R U R U R' U' R' U R2 U' R2' U2 R U2 R U2 R'\",\n    \"R U R' U R' U2 R2 U2' R U2' R' U2' R U' R2 U2' R U R U2 R'\",\n    \"R U2 R2' U2' R2 U' R' U R U' R U R' U' R2' U2' R2 U2 R U2' R2'\",\n    \"R U2 R' U2 R2 U' R2' U' R2 U2' R U2 R2' U R2 U2 R' U' R' U R'\",\n    \"R U2 R' U2 R2 U' R2' U' R2 U2' R2 U2 R2 U R2' U2 R2' U' R' U R'\",\n    \"R U2 R' U2 R2' U2' R' U' R2' U' R' U R2' U' R2' U2 R U2 R2' U R'\",\n    \"R U2 R' U2' R U2 R U2 R' U R U2 R2' U2 R U R' U' R U2' R'\",\n    \"R U2' R2' U' R2' U R U R2 U' R' U R2' U' R' U R2 U R U2 R2'\",\n    \"R U2' R2' U' R2' U R U R' U' R U R2 U' R U R' U R U2 R2'\",\n    \"R U2' R' U2' R' U2 R U2 R2' U2' R' U' R2' U R U2 R2' U2 R2' U' R\",\n    \"R U' R U2' R2 U2' R2 U R2' U R U2 R2 U R2' U2' R U2' R U' R2'\",\n    \"R U' R U2' R2 U2' R2 U R2' U2' R2' U R2 U2 R U R U2' R U' R2'\",\n    \"R U' R2' U2 R2' U2 R U R2' U' R' U2' R2' U2 R U2 R' U2' R' U2' R\",\n    \"R U' R2' U2' R' U' R2 U2' R2' U2' R2' U2' R U R2' U2 R2 U2 R2 U R\",\n    \"R2 U R2 U2 R2' U2' R2 U2' R U R2 U2' R2' U' R' U2' R U' R2 U' R2'\",\n    \"R2 U R2' U2 R2' U R2' U2' R2 U' R' U R2 U2 R2' U2' R' U R' U2 R2'\",\n    \"R2 U2 R2' U2' R2' U R' U' R2' U' R2 U R U' R' U' R2' U' R2 U2 R2'\",\n    \"R2 U2 R' U2' R2 U2 R' U2 R U R2' U' R2' U R U2 R' U2 R2' U2' R2'\",\n    \"R2 U2' R U2 R2' U2' R2' U2 R U2' R' U' R U R2' U' R2' U R U' R2\",\n    \"R2 U2' R2 U2' R2' U2 R2 U R U R2 U2' R2' U' R' U2' R U' R2 U' R2'\",\n    \"R2 U2' R2' U2 R2' U2 R' U R U2 R2' U2 R U R' U2 R' U2 R2 U2' R2'\",\n    \"R2 U2' R' U2' R2' U2 R2 U2 R' U2 R U2' R U2 R' U2 R2' U2 R2 U2' R'\",\n    \"R2 U2' R' U2' R2' U2 R2 U' R U2' R' U2 R' U2' R U' R2' U2 R2 U2' R'\",\n    \"R2 U' R U R2' U' R2' U R U2 R' U2 R2 U2' R' U' R2' U2' R' U2 R2'\",\n    \"R2 U' R U R2' U' R2' U R U' R' U2' R U2 R2' U2' R2' U2 R U2' R2\",\n    \"R2 U' R2 U R U2 R' U2 R2 U2' R2 U2 R' U2 R U R2' U' R U R2'\",\n    \"R2' U R U' R2' U R U2 R' U2 R2 U2' R2 U2 R' U2 R U R2 U' R2\",\n    \"R2' U R2 U R2' U2' R2 U' R2 U2' R2' U' R U2' R U' R' U2' R U2 R2'\",\n    \"R2' U R' U R U R' U2' R2 U2 R' U2' R' U R' U' R U' R2' U2 R'\",\n    \"R2' U2 R U R2 U R' U' R2' U R' U' R2 U R U R2' U' R2' U2' R\",\n    \"R2' U2 R U R' U R U' R2 U R U' R' U R U R2' U' R2' U2' R\",\n    \"R2' U2 R U2' R' U' R U2' R U' R2' U2' R2 U' R2 U2' R2' U R2 U R2'\",\n    \"R2' U2 R2 U R2 U2 R2 U2' R2' U2' R2 U2' R' U2 R U' R' U2' R' U2 R2'\",\n    \"R2' U2 R2 U2' R' U' R2' U' R2 U2 R2' U R U' R2 U2 R2' U2' R' U' R2'\",\n    \"R2' U2 R2 U' R2' U' R' U' R U R2 U' R2' U' R' U R2' U2' R2' U2 R2\",\n    \"R2' U2 R' U R2 U R2 U' R' U' R U2 R2' U' R2' U' R' U2' R2' U2 R'\",\n    \"R2' U2 R' U R' U2' R2' U2 R2 U R' U' R2 U2' R2' U R2' U2 R2' U R2\",\n    \"R2' U2 R' U2' R2' U' R' U2' R2 U2 R' U2 R U R2' U' R2' U R U' R2\",\n    \"R2' U2 R' U2' R' U' R U2 R' U2' R2 U2' R2' U2' R2 U2 R2 U R2 U2 R2'\",\n    \"R2' U2' R U2 R2 U2' R2' U' R' U R U' R U R' U' R2 U2' R2' U2 R\",\n    \"R2' U2' R2 U2 R' U2 R' U R U2 R2' U2 R U R' U2 R2' U2 R2' U2' R2\",\n    \"R2' U2' R2' U2 R' U2 R U R2' U' R2' U R U2 R' U2 R2 U2' R' U2 R2\",\n    \"R2' U' R U2' R U R U2 R2 U R2' U2' R2' U R2 U2' R2 U2' R U' R\",\n    \"R2' U' R U2' R U2' R2' U R2 U2 R U R2' U R2 U2' R2 U2' R U' R\",\n    \"R2' U' R2 U' R U2' R' U' R2' U2' R2 U R U R2 U2 R2' U2' R2 U2' R2\",\n    \"R2' U' R2 U' R U2' R' U' R2' U2' R2 U R U2' R2 U2' R2' U2 R2 U R2\",\n    \"R2' U' R' U2' R2' U2 R2 U' R U R2' U2 R2 U' R2' U' R' U2' R2 U2 R2'\",\n    \"R' U R2' U2 R U2 R2' U' R2' U R' U' R2' U' R' U2' R2' U2 R' U2 R\",\n    \"R' U R' U' R2' U2 R2' U R2 U2 R2 U2' R2 U' R2' U' R2 U2 R' U2 R\",\n    \"R' U R' U' R' U2 R2 U R2' U2 R U2' R2 U' R2' U' R2 U2 R' U2 R\",\n    \"R' U2 R U R U2' R2 U' R U2' R' U2' R U2' R2 U2 R' U R' U R\",\n    \"R' U2 R U2 R U2 R2' U' R2 U R' U' R' U R U R U2 R2' U R\",\n    \"R' U2 R2' U2' R' U' R2' U' R2' U2 R U' R' U' R2 U R2 U R' U2 R2'\",\n    \"R' U2 R2' U' R U' R' U R' U2' R' U2 R2 U2' R' U R U R' U R2'\",\n    \"R' U2' R U' R' U R U2 R2' U2 R U R' U2 R U2 R U2' R' U2 R\",\n    \"R' U2' R2 U2 R2' U2 R' U2 R U2' R U2 R' U2 R2 U2 R2' U2' R' U2' R2\",\n    \"R' U2' R2 U2 R2' U' R U2' R' U2 R' U2' R U' R2 U2 R2' U2' R' U2' R2\",\n    \"R U R2' U2 R U R U R' U' R' U R2 U' R2' U2 R U2 R U2 R'\",\n    \"R U R' U R' U2 R2 U2' R U2' R' U2' R U' R2 U2' R U R U2 R'\",\n    \"R U2 R2' U2' R2 U' R' U R U' R U R' U' R2' U2' R2 U2 R U2' R2'\",\n    \"R U2 R' U2 R2 U' R2' U' R2 U2' R U2 R2' U R2 U2 R' U' R' U R'\",\n    \"R U2 R' U2 R2 U' R2' U' R2 U2' R2 U2 R2 U R2' U2 R2' U' R' U R'\",\n    \"R U2 R' U2 R2' U2' R' U' R2' U' R' U R2' U' R2' U2 R U2 R2' U R'\",\n    \"R U2 R' U2' R U2 R U2 R' U R U2 R2' U2 R U R' U' R U2' R'\",\n    \"R U2' R2' U' R2' U R U R2 U' R' U R2' U' R' U R2 U R U2 R2'\",\n    \"R U2' R2' U' R2' U R U R' U' R U R2 U' R U R' U R U2 R2'\",\n    \"R U2' R' U2' R' U2 R U2 R2' U2' R' U' R2' U R U2 R2' U2 R2' U' R\",\n    \"R U' R2' U2 R2' U2 R U R2' U' R' U2' R2' U2 R U2 R' U2' R' U2' R\",\n    \"R2 U R U' R2 U' R2' U2 R2 U' R2 U' R2' U' R2' U' R2 U' R2' U2 R2\",\n    \"R2 U R2 U2 R2' U2' R2 U2' R U R2 U2' R2' U' R' U2' R U' R2 U' R2'\",\n    \"R2 U R2' U2 R2' U R2' U2' R2 U' R' U R2 U2 R2' U2' R' U R' U2 R2'\",\n    \"R2 U2 R2' U2' R2' U R' U' R2' U' R2 U R U' R' U' R2' U' R2 U2 R2'\",\n    \"R2 U2 R2' U' R2 U' R2' U' R2' U' R2 U' R2 U2 R2' U' R2 U' R U R2\",\n    \"R2 U2 R' U2' R2 U2 R' U2 R U R2' U' R2' U R U2 R' U2 R2' U2' R2'\",\n    \"R2 U2' R U2 R2' U2' R2' U2 R U2' R' U' R U R2' U' R2' U R U' R2\",\n    \"R2 U2' R2 U2' R2' U2 R2 U R U R2 U2' R2' U' R' U2' R U' R2 U' R2'\",\n    \"R2 U2' R2' U2 R2' U2 R' U R U2 R2' U2 R U R' U2 R' U2 R2 U2' R2'\",\n    \"R2 U2' R' U2' R2' U2 R2 U2 R' U2 R U2' R U2 R' U2 R2' U2 R2 U2' R'\",\n    \"R2 U2' R' U2' R2' U2 R2 U' R U2' R' U2 R' U2' R U' R2' U2 R2 U2' R'\",\n    \"R2 U' R U R2' U' R2' U R U2 R' U2 R2 U2' R' U' R2' U2' R' U2 R2'\",\n    \"R2 U' R U R2' U' R2' U R U' R' U2' R U2 R2' U2' R2' U2 R U2' R2\",\n    \"R2 U' R2 U R U2 R' U2 R2 U2' R2 U2 R' U2 R U R2' U' R U R2'\",\n    \"R2' U R U' R2' U R U2 R' U2 R2 U2' R2 U2 R' U2 R U R2 U' R2\",\n    \"R2' U R2 U R2' U2' R2 U' R2 U2' R2' U' R U2' R U' R' U2' R U2 R2'\",\n    \"R2' U R' U R U R' U2' R2 U2 R' U2' R' U R' U' R U' R2' U2 R'\",\n    \"R2' U2 R U R2 U R' U' R2' U R' U' R2 U R U R2' U' R2' U2' R\",\n    \"R2' U2 R U R' U R U' R2 U R U' R' U R U R2' U' R2' U2' R\",\n    \"R2' U2 R U2' R' U' R U2' R U' R2' U2' R2 U' R2 U2' R2' U R2 U R2'\",\n    \"R2' U2 R2 U2' R' U' R2' U' R2 U2 R2' U R U' R2 U2 R2' U2' R' U' R2'\",\n    \"R2' U2 R2 U' R2' U' R' U' R U R2 U' R2' U' R' U R2' U2' R2' U2 R2\",\n    \"R2' U2 R' U R2 U R2 U' R' U' R U2 R2' U' R2' U' R' U2' R2' U2 R'\",\n    \"R2' U2 R' U R' U2' R2' U2 R2 U R' U' R2 U2' R2' U R2' U2 R2' U R2\",\n    \"R2' U2 R' U2' R2' U' R' U2' R2 U2 R' U2 R U R2' U' R2' U R U' R2\",\n    \"R2' U2' R U2 R2 U2' R2' U' R' U R U' R U R' U' R2 U2' R2' U2 R\",\n    \"R2' U2' R2 U2 R' U2 R' U R U2 R2' U2 R U R' U2 R2' U2 R2' U2' R2\",\n    \"R2' U2' R2' U2 R' U2 R U R2' U' R2' U R U2 R' U2 R2 U2' R' U2 R2\",\n    \"R2' U' R2 U' R U2' R' U' R2' U2' R2 U R U R2 U2 R2' U2' R2 U2' R2\",\n    \"R2' U' R2 U' R U2' R' U' R2' U2' R2 U R U2' R2 U2' R2' U2 R2 U R2\",\n    \"R2' U' R' U2' R2' U2 R2 U' R U R2' U2 R2 U' R2' U' R' U2' R2 U2 R2'\",\n    \"R' U R2' U2 R U2 R2' U' R2' U R' U' R2' U' R' U2' R2' U2 R' U2 R\",\n    \"R' U R' U' R2' U2 R2' U R2 U2 R2 U2' R2 U' R2' U' R2 U2 R' U2 R\",\n    \"R' U R' U' R' U2 R2 U R2' U2 R U2' R2 U' R2' U' R2 U2 R' U2 R\",\n    \"R' U2 R U R U2' R2 U' R U2' R' U2' R U2' R2 U2 R' U R' U R\",\n    \"R' U2 R U2 R U2 R2' U' R2 U R' U' R' U R U R U2 R2' U R\",\n    \"R' U2 R2' U2' R' U' R2' U' R2' U2 R U' R' U' R2 U R2 U R' U2 R2'\",\n    \"R' U2 R2' U' R U' R' U R' U2' R' U2 R2 U2' R' U R U R' U R2'\",\n    \"R' U2' R U' R' U R U2 R2' U2 R U R' U2 R U2 R U2' R' U2 R\",\n    \"R' U2' R2 U2 R2' U2 R' U2 R U2' R U2 R' U2 R2 U2 R2' U2' R' U2' R2\",\n    \"R' U2' R2 U2 R2' U' R U2' R' U2 R' U2' R U' R2 U2 R2' U2' R' U2' R2\",\n    \"R U R2 U2 R2 U2 R2' U R U2' R2' U2' R2' U2' R2 U' R' U2' R2' U' R\",\n    \"R U R2' U2 R U R U R' U' R' U R2 U' R2' U2 R U2 R U2 R'\",\n    \"R U R' U R' U2 R2 U2' R U2' R' U2' R U' R2 U2' R U R U2 R'\",\n    \"R U2 R' U2 R2 U' R2' U' R2 U2' R U2 R2' U R2 U2 R' U' R' U R'\",\n    \"R U2 R' U2 R2 U' R2' U' R2 U2' R2 U2 R2 U R2' U2 R2' U' R' U R'\",\n    \"R U2 R' U2 R2' U2' R' U' R2' U' R' U R2' U' R2' U2 R U2 R2' U R'\",\n    \"R U2' R' U2' R' U2 R U2 R2' U2' R' U' R2' U R U2 R2' U2 R2' U' R\",\n    \"R U' R U2' R2 U2' R2 U R2' U R U2 R2 U R2' U2' R U2' R U' R2'\",\n    \"R U' R U2' R2 U2' R2 U R2' U2' R2' U R2 U2 R U R U2' R U' R2'\",\n    \"R U' R2' U2 R2' U2 R U R2' U' R' U2' R2' U2 R U2 R' U2' R' U2' R\",\n    \"R U' R2' U2' R' U' R2 U2' R2' U2' R2' U2' R U R2' U2 R2 U2 R2 U R\",\n    \"R2 U R U' R2 U' R2' U2 R2 U' R2 U' R2' U' R2' U' R2 U' R2' U2 R2\",\n    \"R2 U R2 U2 R2' U2' R2 U2' R U R2 U2' R2' U' R' U2' R U' R2 U' R2'\",\n    \"R2 U R2' U2 R2' U R2' U2' R2 U' R' U R2 U2 R2' U2' R' U R' U2 R2'\",\n    \"R2 U2 R2' U2' R2' U R' U' R2' U' R2 U R U' R' U' R2' U' R2 U2 R2'\",\n    \"R2 U2 R2' U' R2 U' R2' U' R2' U' R2 U' R2 U2 R2' U' R2 U' R U R2\",\n    \"R2 U2' R2 U2' R2' U2 R2 U R U R2 U2' R2' U' R' U2' R U' R2 U' R2'\",\n    \"R2 U2' R2' U2 R2' U2 R' U R U2 R2' U2 R U R' U2 R' U2 R2 U2' R2'\",\n    \"R2 U' R U R2' U' R2' U R U2 R' U2 R2 U2' R' U' R2' U2' R' U2 R2'\",\n    \"R2' U R2 U R2' U2' R2 U' R2 U2' R2' U' R U2' R U' R' U2' R U2 R2'\",\n    \"R2' U2 R U2' R' U' R U2' R U' R2' U2' R2 U' R2 U2' R2' U R2 U R2'\",\n    \"R2' U2 R2 U R2 U2 R2 U2' R2' U2' R2 U2' R' U2 R U' R' U2' R' U2 R2'\",\n    \"R2' U2 R2 U2' R' U' R2' U' R2 U2 R2' U R U' R2 U2 R2' U2' R' U' R2'\",\n    \"R2' U2 R2 U' R2' U' R' U' R U R2 U' R2' U' R' U R2' U2' R2' U2 R2\",\n    \"R2' U2 R' U R' U2' R2' U2 R2 U R' U' R2 U2' R2' U R2' U2 R2' U R2\",\n    \"R2' U2 R' U2' R2' U' R' U2' R2 U2 R' U2 R U R2' U' R2' U R U' R2\",\n    \"R2' U2 R' U2' R' U' R U2 R' U2' R2 U2' R2' U2' R2 U2 R2 U R2 U2 R2'\",\n    \"R2' U2' R2 U2 R' U2 R' U R U2 R2' U2 R U R' U2 R2' U2 R2' U2' R2\",\n    \"R2' U' R U2' R U R U2 R2 U R2' U2' R2' U R2 U2' R2 U2' R U' R\",\n    \"R2' U' R U2' R U2' R2' U R2 U2 R U R2' U R2 U2' R2 U2' R U' R\",\n    \"R2' U' R2 U' R U2' R' U' R2' U2' R2 U R U R2 U2 R2' U2' R2 U2' R2\",\n    \"R2' U' R2 U' R U2' R' U' R2' U2' R2 U R U2' R2 U2' R2' U2 R2 U R2\",\n    \"R2' U' R' U2' R2' U2 R2 U' R U R2' U2 R2 U' R2' U' R' U2' R2 U2 R2'\",\n    \"R' U R2' U2 R U2 R2' U' R2' U R' U' R2' U' R' U2' R2' U2 R' U2 R\",\n    \"R' U R' U' R2' U2 R2' U R2 U2 R2 U2' R2 U' R2' U' R2 U2 R' U2 R\",\n    \"R' U R' U' R' U2 R2 U R2' U2 R U2' R2 U' R2' U' R2 U2 R' U2 R\",\n    \"R' U2 R U R U2' R2 U' R U2' R' U2' R U2' R2 U2 R' U R' U R\",\n    \"R' U2 R U2 R U2 R2' U' R2 U R' U' R' U R U R U2 R2' U R\",\n    \"R U R2 U2 R2 U2 R2' U R U2' R2' U2' R2' U2' R2 U' R' U2' R2' U' R\",\n    \"R U R2' U2 R U R U R' U' R' U R2 U' R2' U2 R U2 R U2 R'\",\n    \"R U R' U R' U2 R2 U2' R U2' R' U2' R U' R2 U2' R U R U2 R'\",\n    \"R U2 R2' U2' R2 U' R' U R U' R U R' U' R2' U2' R2 U2 R U2' R2'\",\n    \"R U2 R' U2 R2 U' R2' U' R2 U2' R U2 R2' U R2 U2 R' U' R' U R'\",\n    \"R U2 R' U2 R2 U' R2' U' R2 U2' R2 U2 R2 U R2' U2 R2' U' R' U R'\",\n    \"R U2 R' U2 R2' U2' R' U' R2' U' R' U R2' U' R2' U2 R U2 R2' U R'\",\n    \"R U2 R' U2' R U2 R U2 R' U R U2 R2' U2 R U R' U' R U2' R'\",\n    \"R U2' R2' U' R2' U R U R2 U' R' U R2' U' R' U R2 U R U2 R2'\",\n    \"R U2' R2' U' R2' U R U R' U' R U R2 U' R U R' U R U2 R2'\",\n    \"R U' R U2' R2 U2' R2 U R2' U R U2 R2 U R2' U2' R U2' R U' R2'\",\n    \"R U' R U2' R2 U2' R2 U R2' U2' R2' U R2 U2 R U R U2' R U' R2'\",\n    \"R U' R2' U2' R' U' R2 U2' R2' U2' R2' U2' R U R2' U2 R2 U2 R2 U R\",\n    \"R2 U R U' R2 U' R2' U2 R2 U' R2 U' R2' U' R2' U' R2 U' R2' U2 R2\",\n    \"R2 U R2 U2 R2' U2' R2 U2' R U R2 U2' R2' U' R' U2' R U' R2 U' R2'\",\n    \"R2 U R2' U2 R2' U R2' U2' R2 U' R' U R2 U2 R2' U2' R' U R' U2 R2'\",\n    \"R2 U2 R2' U2' R2' U R' U' R2' U' R2 U R U' R' U' R2' U' R2 U2 R2'\",\n    \"R2 U2 R2' U' R2 U' R2' U' R2' U' R2 U' R2 U2 R2' U' R2 U' R U R2\",\n    \"R2 U2 R' U2' R2 U2 R' U2 R U R2' U' R2' U R U2 R' U2 R2' U2' R2'\",\n    \"R2 U2' R U2 R2' U2' R2' U2 R U2' R' U' R U R2' U' R2' U R U' R2\",\n    \"R2 U2' R2 U2' R2' U2 R2 U R U R2 U2' R2' U' R' U2' R U' R2 U' R2'\",\n    \"R2 U2' R2' U2 R2' U2 R' U R U2 R2' U2 R U R' U2 R' U2 R2 U2' R2'\",\n    \"R2 U2' R' U2' R2' U2 R2 U2 R' U2 R U2' R U2 R' U2 R2' U2 R2 U2' R'\",\n    \"R2 U2' R' U2' R2' U2 R2 U' R U2' R' U2 R' U2' R U' R2' U2 R2 U2' R'\",\n    \"R2 U' R U R2' U' R2' U R U' R' U2' R U2 R2' U2' R2' U2 R U2' R2\",\n    \"R2 U' R2 U R U2 R' U2 R2 U2' R2 U2 R' U2 R U R2' U' R U R2'\",\n  ],\n  [\n    \"R2 U2' R2' U' R2 U2' R2' U R2 U2' R2' U' R2 U2' R2'\",\n    \"R2 U2' R2' U' R2 U2' R2' U R2' U2' R2 U' R2' U2' R2\",\n    \"R2' U2' R2 U' R2' U2' R2 U R2 U2' R2' U' R2 U2' R2'\",\n    \"R2' U2' R2 U' R2' U2' R2 U R2' U2' R2 U' R2' U2' R2\",\n    \"R' U2 R U2' R' U2' R' U2' R U' R' U2' R2 U2' R' U2 R\",\n    \"R U2 R' U2' R2 U2' R' U' R U2' R' U2' R' U2' R U2 R'\",\n    \"R' U2 R U2 R2 U R2 U R U R' U2' R2' U' R2' U' R' U2 R\",\n    \"R' U2 R U2' R' U' R' U2 R U R' U2 R U R U2' R' U2 R\",\n    \"R U2' R' U R U R2' U2' R U' R' U2' R2 U' R' U2' R U2' R'\",\n    \"R2 U2' R2' U2 R2 U2 R2' U2' R2 U2 R2' U' R2 U2' R2' U' R2 U2' R2'\",\n    \"R2 U2' R2' U2 R2 U2 R2' U2' R2 U2 R2' U' R2' U2' R2 U' R2' U2' R2\",\n    \"R2 U2' R2' U2 R' U2 R2' U2' R2 U R2' U2' R2 U2 R U2 R2 U2' R2'\",\n    \"R2 U2' R2' U' R2 U R U2 R2 U R2' U2 R' U R2' U' R2 U2' R2'\",\n    \"R2 U2' R2' U' R2 U2' R2' U R2 U2' R2' U2 R2 U2 R2' U2' R2 U2 R2'\",\n    \"R2 U2' R2' U' R2 U2' R2' U R2' U2' R2 U2 R2' U2 R2 U2' R2' U2 R2\",\n    \"R2 U2' R2' U' R2 U2' R2' U' R U2 R2 U2' R2' U' R2 U2' R2' U2 R'\",\n    \"R2 U2' R2' U' R2 U2' R2' U' R U2 R2' U2' R2 U' R2' U2' R2 U2 R'\",\n    \"R2 U2' R2' U' R2 U2' R2' U' R2 U2 R2 U2' R2' U' R2 U2' R2' U2 R2'\",\n    \"R2 U2' R2' U' R2 U2' R2' U' R2 U2 R2' U2' R2 U2 R2' U2 R2 U2' R2'\",\n    \"R2 U2' R2' U' R2 U2' R2' U' R2 U2 R2' U2' R2 U' R2' U2' R2 U2 R2'\",\n    \"R2 U2' R2' U' R2 U2' R2' U' R2' U2 R2 U2' R2' U2 R2 U2 R2' U2' R2\",\n    \"R2 U2' R2' U' R2 U2' R2' U' R2' U2 R2 U2' R2' U' R2 U2' R2' U2 R2\",\n    \"R2 U2' R2' U' R2 U2' R2' U' R2' U2 R2' U2' R2 U' R2' U2' R2 U2 R2\",\n    \"R2 U2' R2' U' R2 U2' R2' U' R' U2 R2 U2' R2' U' R2 U2' R2' U2 R\",\n    \"R2 U2' R2' U' R2 U2' R2' U' R' U2 R2' U2' R2 U' R2' U2' R2 U2 R\",\n    \"R2' U2' R2 U2 R U2 R2 U2' R2' U R2 U2' R2' U2 R' U2 R2' U2' R2\",\n    \"R2' U2' R2 U2 R2' U2 R2 U2' R2' U2 R2 U' R2 U2' R2' U' R2 U2' R2'\",\n    \"R2' U2' R2 U2 R2' U2 R2 U2' R2' U2 R2 U' R2' U2' R2 U' R2' U2' R2\",\n    \"R2' U2' R2 U' R2' U R' U2 R2' U R2 U2 R U R2 U' R2' U2' R2\",\n    \"R2' U2' R2 U' R2' U2' R2 U R2 U2' R2' U2 R2 U2 R2' U2' R2 U2 R2'\",\n    \"R2' U2' R2 U' R2' U2' R2 U R2' U2' R2 U2 R2' U2 R2 U2' R2' U2 R2\",\n    \"R2' U2' R2 U' R2' U2' R2 U' R U2 R2 U2' R2' U' R2 U2' R2' U2 R'\",\n    \"R2' U2' R2 U' R2' U2' R2 U' R U2 R2' U2' R2 U' R2' U2' R2 U2 R'\",\n    \"R2' U2' R2 U' R2' U2' R2 U' R2 U2 R2 U2' R2' U' R2 U2' R2' U2 R2'\",\n    \"R2' U2' R2 U' R2' U2' R2 U' R2 U2 R2' U2' R2 U2 R2' U2 R2 U2' R2'\",\n    \"R2' U2' R2 U' R2' U2' R2 U' R2 U2 R2' U2' R2 U' R2' U2' R2 U2 R2'\",\n    \"R2' U2' R2 U' R2' U2' R2 U' R2' U2 R2 U2' R2' U2 R2 U2 R2' U2' R2\",\n    \"R2' U2' R2 U' R2' U2' R2 U' R2' U2 R2 U2' R2' U' R2 U2' R2' U2 R2\",\n    \"R2' U2' R2 U' R2' U2' R2 U' R2' U2 R2' U2' R2 U' R2' U2' R2 U2 R2\",\n    \"R2' U2' R2 U' R2' U2' R2 U' R' U2 R2 U2' R2' U' R2 U2' R2' U2 R\",\n    \"R2' U2' R2 U' R2' U2' R2 U' R' U2 R2' U2' R2 U' R2' U2' R2 U2 R\",\n    \"R U2 R2 U2' R2' U' R2 U2' R2' U2 R' U' R2 U2' R2' U' R2 U2' R2'\",\n    \"R U2 R2 U2' R2' U' R2 U2' R2' U2 R' U' R2' U2' R2 U' R2' U2' R2\",\n    \"R U2 R2' U2' R2 U' R2' U2' R2 U2 R' U' R2 U2' R2' U' R2 U2' R2'\",\n    \"R U2 R2' U2' R2 U' R2' U2' R2 U2 R' U' R2' U2' R2 U' R2' U2' R2\",\n    \"R2 U2 R2 U2' R2' U' R2 U2' R2' U2 R2' U' R2 U2' R2' U' R2 U2' R2'\",\n    \"R2 U2 R2 U2' R2' U' R2 U2' R2' U2 R2' U' R2' U2' R2 U' R2' U2' R2\",\n    \"R2 U2 R2' U2' R2 U2 R2' U2 R2 U2' R2' U R2 U2' R2' U' R2 U2' R2'\",\n    \"R2 U2 R2' U2' R2 U2 R2' U2 R2 U2' R2' U R2' U2' R2 U' R2' U2' R2\",\n    \"R2 U2 R2' U2' R2 U' R2' U2' R2 U2 R2' U' R2 U2' R2' U' R2 U2' R2'\",\n    \"R2 U2 R2' U2' R2 U' R2' U2' R2 U2 R2' U' R2' U2' R2 U' R2' U2' R2\",\n    \"R2' U2 R2 U2' R2' U2 R2 U2 R2' U2' R2 U R2 U2' R2' U' R2 U2' R2'\",\n    \"R2' U2 R2 U2' R2' U2 R2 U2 R2' U2' R2 U R2' U2' R2 U' R2' U2' R2\",\n    \"R2' U2 R2 U2' R2' U' R2 U2' R2' U2 R2 U' R2 U2' R2' U' R2 U2' R2'\",\n    \"R2' U2 R2 U2' R2' U' R2 U2' R2' U2 R2 U' R2' U2' R2 U' R2' U2' R2\",\n    \"R2' U2 R2' U2' R2 U' R2' U2' R2 U2 R2 U' R2 U2' R2' U' R2 U2' R2'\",\n    \"R2' U2 R2' U2' R2 U' R2' U2' R2 U2 R2 U' R2' U2' R2 U' R2' U2' R2\",\n    \"R' U2 R2 U2' R2' U' R2 U2' R2' U2 R U' R2 U2' R2' U' R2 U2' R2'\",\n    \"R' U2 R2 U2' R2' U' R2 U2' R2' U2 R U' R2' U2' R2 U' R2' U2' R2\",\n    \"R' U2 R2' U2' R2 U' R2' U2' R2 U2 R U' R2 U2' R2' U' R2 U2' R2'\",\n    \"R' U2 R2' U2' R2 U' R2' U2' R2 U2 R U' R2' U2' R2 U' R2' U2' R2\",\n    \"R U2 R' U2' R U R U2 R' U R U2 R' U' R' U2' R U2 R'\",\n    \"R U2 R' U' R2' U' R2' U2' R' U R U R2 U R2 U2 R U2 R'\",\n    \"R2' U' R U2' R' U R U R2' U2' R U R2 U' R2 U2 R U R2\",\n    \"R' U2' R U2' R' U' R2 U2' R' U' R U2' R2' U R U R' U2' R\",\n    \"R U R2 U' R2' U' R' U' R U2 R2 U R2 U R U R' U2' R U' R'\",\n    \"R U R' U' R U2 R U2 R' U R U2 R2' U2 R U R' U2' R U' R'\",\n    \"R U2' R' U2 R2 U2' R' U' R U2' R' U2' R' U2' R U' R' U R U2 R'\",\n    \"R U' R' U' R U2 R' U2 R U2 R' U2 R U R2' U2 R U R' U2 R\",\n    \"R2 U' R2 U2' R U2 R2 U R2 U2' R' U2' R U' R' U2' R2 U2' R' U2 R\",\n    \"R2' U2' R' U' R' U' R2' U R2' U' R2' U R U' R' U R U2' R' U2' R2'\",\n    \"R' U R U2 R' U2 R U2 R' U2 R U' R' U' R2 U2 R' U R U2 R'\",\n    \"R' U2 R U2 R2 U R2 U R U' R2 U' R2' U2' R' U2 R U' R' U2 R\",\n    \"R' U2 R U2' R' U2' R' U2' R U' R' U2' R' U R2' U2 R' U2' R2' U' R2'\",\n    \"R' U2 R U' R2 U2' R2' U' R' U R2' U2 R2' U' R' U2' R U2' R' U2 R\",\n    \"R' U' R2' U R2 U2 R U2' R' U R U R' U2' R2' U' R2' U' R' U2 R\",\n  ],\n  [\n    \"R2 U2 R2' U R2 U2 R2' U' R2 U2 R2' U R2 U2 R2'\",\n    \"R2 U2 R2' U R2 U2 R2' U' R2' U2 R2 U R2' U2 R2\",\n    \"R2' U2 R2 U R2' U2 R2 U' R2 U2 R2' U R2 U2 R2'\",\n    \"R2' U2 R2 U R2' U2 R2 U' R2' U2 R2 U R2' U2 R2\",\n    \"R' U2' R U2 R2' U2 R U R' U2 R U2 R U2 R' U2' R\",\n    \"R U2' R' U2 R U2 R U2 R' U R U2 R2' U2 R U2' R'\",\n    \"R' U2' R U R2 U R2 U2 R U' R' U' R2' U' R2' U2' R' U2' R\",\n    \"R' U2' R U2 R' U' R' U2' R U' R' U2' R U R U2 R' U2' R\",\n    \"R U2' R2 U2 R2' U R2 U2 R2' U2' R' U R2 U2 R2' U R2 U2 R2'\",\n    \"R U2' R2 U2 R2' U R2 U2 R2' U2' R' U R2' U2 R2 U R2' U2 R2\",\n    \"R U2' R2' U2 R2 U R2' U2 R2 U2' R' U R2 U2 R2' U R2 U2 R2'\",\n    \"R U2' R2' U2 R2 U R2' U2 R2 U2' R' U R2' U2 R2 U R2' U2 R2\",\n    \"R2 U2' R2 U2 R2' U R2 U2 R2' U2' R2' U R2 U2 R2' U R2 U2 R2'\",\n    \"R2 U2' R2 U2 R2' U R2 U2 R2' U2' R2' U R2' U2 R2 U R2' U2 R2\",\n    \"R2 U2' R2' U2 R2 U R2' U2 R2 U2' R2' U R2 U2 R2' U R2 U2 R2'\",\n    \"R2 U2' R2' U2 R2 U R2' U2 R2 U2' R2' U R2' U2 R2 U R2' U2 R2\",\n    \"R2 U2' R2' U2 R2 U2' R2' U2' R2 U2 R2' U' R2 U2 R2' U R2 U2 R2'\",\n    \"R2 U2' R2' U2 R2 U2' R2' U2' R2 U2 R2' U' R2' U2 R2 U R2' U2 R2\",\n    \"R2' U2' R2 U2 R2' U R2 U2 R2' U2' R2 U R2 U2 R2' U R2 U2 R2'\",\n    \"R2' U2' R2 U2 R2' U R2 U2 R2' U2' R2 U R2' U2 R2 U R2' U2 R2\",\n    \"R2' U2' R2 U2 R2' U2' R2 U2' R2' U2 R2 U' R2 U2 R2' U R2 U2 R2'\",\n    \"R2' U2' R2 U2 R2' U2' R2 U2' R2' U2 R2 U' R2' U2 R2 U R2' U2 R2\",\n    \"R2' U2' R2' U2 R2 U R2' U2 R2 U2' R2 U R2 U2 R2' U R2 U2 R2'\",\n    \"R2' U2' R2' U2 R2 U R2' U2 R2 U2' R2 U R2' U2 R2 U R2' U2 R2\",\n    \"R' U2' R2 U2 R2' U R2 U2 R2' U2' R U R2 U2 R2' U R2 U2 R2'\",\n    \"R' U2' R2 U2 R2' U R2 U2 R2' U2' R U R2' U2 R2 U R2' U2 R2\",\n    \"R' U2' R2' U2 R2 U R2' U2 R2 U2' R U R2 U2 R2' U R2 U2 R2'\",\n    \"R' U2' R2' U2 R2 U R2' U2 R2 U2' R U R2' U2 R2 U R2' U2 R2\",\n    \"R2 U2 R2' U R2 U2 R2' U R2 U2' R2' U2 R2 U2' R2' U2' R2 U2 R2'\",\n    \"R2 U2 R2' U R2 U2 R2' U R2' U2' R2 U2 R2' U2' R2 U2' R2' U2 R2\",\n    \"R2 U2 R2' U R2 U' R U2' R2 U' R2' U2' R' U' R2' U R2 U2 R2'\",\n    \"R2 U2 R2' U2' R2 U2' R2' U2 R2 U2' R2' U R2 U2 R2' U R2 U2 R2'\",\n    \"R2 U2 R2' U2' R2 U2' R2' U2 R2 U2' R2' U R2' U2 R2 U R2' U2 R2\",\n    \"R2 U2 R2' U2' R' U2' R2' U2 R2 U' R2' U2 R2 U2' R U2' R2 U2 R2'\",\n    \"R2' U2 R2 U R2' U2 R2 U R2 U2' R2' U2 R2 U2' R2' U2' R2 U2 R2'\",\n    \"R2' U2 R2 U R2' U2 R2 U R2' U2' R2 U2 R2' U2' R2 U2' R2' U2 R2\",\n    \"R2' U2 R2 U R2' U' R' U2' R2' U' R2 U2' R U' R2 U R2' U2 R2\",\n    \"R2' U2 R2 U2' R U2' R2 U2 R2' U' R2 U2 R2' U2' R' U2' R2' U2 R2\",\n    \"R2' U2 R2 U2' R2' U2' R2 U2 R2' U2' R2 U R2 U2 R2' U R2 U2 R2'\",\n    \"R2' U2 R2 U2' R2' U2' R2 U2 R2' U2' R2 U R2' U2 R2 U R2' U2 R2\",\n    \"R U2 R' U2 R U R2' U2 R U R' U2 R2 U' R' U' R U2 R'\",\n    \"R2 U R' U2 R U' R' U' R2 U2 R' U' R2' U R2' U2' R' U' R2'\",\n    \"R' U2 R U' R' U' R2 U2 R' U R U2 R2' U R U2 R' U2 R\",\n    \"R2' U' R' U2' R2' U R2' U' R' U2 R2 U' R' U' R U2 R' U R2\",\n    \"R U2' R' U2 R U R U2' R' U' R U2' R' U' R' U2 R U2' R'\",\n    \"R U2' R' U2' R2' U' R2' U' R' U' R U2 R2 U R2 U R U2' R'\",\n    \"R2 U2 R2' U R2 U2 R2' U R U2' R2 U2 R2' U R2 U2 R2' U2' R'\",\n    \"R2 U2 R2' U R2 U2 R2' U R U2' R2' U2 R2 U R2' U2 R2 U2' R'\",\n    \"R2 U2 R2' U R2 U2 R2' U R2 U2' R2 U2 R2' U R2 U2 R2' U2' R2'\",\n    \"R2 U2 R2' U R2 U2 R2' U R2 U2' R2' U2 R2 U R2' U2 R2 U2' R2'\",\n    \"R2 U2 R2' U R2 U2 R2' U R2' U2' R2 U2 R2' U R2 U2 R2' U2' R2\",\n    \"R2 U2 R2' U R2 U2 R2' U R2' U2' R2' U2 R2 U R2' U2 R2 U2' R2\",\n    \"R2 U2 R2' U R2 U2 R2' U R' U2' R2 U2 R2' U R2 U2 R2' U2' R\",\n    \"R2 U2 R2' U R2 U2 R2' U R' U2' R2' U2 R2 U R2' U2 R2 U2' R\",\n    \"R2 U2 R2' U R2 U2 R2' U' R2 U2 R2' U2' R2 U2' R2' U2 R2 U2' R2'\",\n    \"R2 U2 R2' U R2 U2 R2' U' R2' U2 R2 U2' R2' U2' R2 U2 R2' U2' R2\",\n    \"R2' U2 R2 U R2' U2 R2 U R U2' R2 U2 R2' U R2 U2 R2' U2' R'\",\n    \"R2' U2 R2 U R2' U2 R2 U R U2' R2' U2 R2 U R2' U2 R2 U2' R'\",\n    \"R2' U2 R2 U R2' U2 R2 U R2 U2' R2 U2 R2' U R2 U2 R2' U2' R2'\",\n    \"R2' U2 R2 U R2' U2 R2 U R2 U2' R2' U2 R2 U R2' U2 R2 U2' R2'\",\n    \"R2' U2 R2 U R2' U2 R2 U R2' U2' R2 U2 R2' U R2 U2 R2' U2' R2\",\n    \"R2' U2 R2 U R2' U2 R2 U R2' U2' R2' U2 R2 U R2' U2 R2 U2' R2\",\n    \"R2' U2 R2 U R2' U2 R2 U R' U2' R2 U2 R2' U R2 U2 R2' U2' R\",\n    \"R2' U2 R2 U R2' U2 R2 U R' U2' R2' U2 R2 U R2' U2 R2 U2' R\",\n    \"R2' U2 R2 U R2' U2 R2 U' R2 U2 R2' U2' R2 U2' R2' U2 R2 U2' R2'\",\n    \"R2' U2 R2 U R2' U2 R2 U' R2' U2 R2 U2' R2' U2' R2 U2 R2' U2' R2\",\n    \"R U R' U2 R U' R' U2' R2 U2' R' U' R U2' R' U2' R' U R U' R'\",\n    \"R U R' U2 R U' R' U' R2' U' R2' U2' R' U R U R2 U R2' U' R'\",\n    \"R U2' R' U' R U R' U2 R U2 R U2 R' U R U2 R2' U2' R U2 R'\",\n    \"R U2' R' U' R U2' R2' U R U R' U2' R U2' R' U2' R U2' R' U' R\",\n    \"R2 U R2 U2 R U2' R2 U' R U2 R U R' U2 R U2 R U2 R' U2' R\",\n    \"R2 U2 R U2 R' U' R U R' U' R2 U R2 U' R2 U R U R U2 R2\",\n    \"R' U2' R U R2 U R2 U2 R U' R' U' R U2 R' U2' R2' U' R2 U R\",\n    \"R' U2' R U R' U2' R U2 R2 U R2' U R' U' R2' U' R2' U2' R' U2' R\",\n    \"R' U2' R U2 R2' U2 R U R' U2 R U2 R2' U' R2' U2' R' U2 R2' U R2'\",\n    \"R' U2' R U2 R' U2 R U R2 U2' R2 U' R U R2 U2 R2' U R' U2' R\",\n    \"R' U2' R U' R' U2' R2 U' R' U2' R U2' R' U2' R U2' R' U R U R'\",\n  ],\n  [\n    \"R U2 R' U R U2 R2' U2 R U R' U2 R\",\n    \"R U2' R' U' R U2' R' U' R' U2 R U R' U2 R\",\n    \"R U2' R' U' R U2' R' U2' R' U2' R U' R' U2' R\",\n    \"R U2 R' U R U2 R' U' R' U2' R U' R' U2' R\",\n    \"R U2' R' U' R U' R2 U2' R2' U' R' U R2' U2 R2' U' R'\",\n    \"R' U' R2' U2 R2' U R' U' R2' U2' R2 U' R U' R' U2' R\",\n    \"R U2' R2' U2' R U R' U R2 U2 R' U2 R U2' R' U2' R U' R'\",\n    \"R U2 R' U R U R2' U2' R' U2 R2' U R2 U2 R2 U R' U2 R\",\n    \"R U2 R' U R U2 R U' R2 U2' R U2 R2 U R2' U2' R' U2 R\",\n    \"R U2 R' U R U2 R2' U2 R U2' R2 U R2' U2 R' U2' R2' U' R2'\",\n    \"R U2 R' U R U' R2' U2' R2 U2 R2' U2' R2 U2 R' U R' U2 R\",\n    \"R U2 R' U R2 U2 R2 U R2' U2 R' U2' R2' U R U R' U2 R\",\n    \"R U2 R' U R' U2 R2 U2' R2' U2 R2 U2' R2' U' R U R' U2 R\",\n    \"R U2 R' U2' R2' U R2 U2 R U2' R2 U' R U2 R U R' U2 R\",\n    \"R2' U' R2' U2' R' U2 R2' U R2 U2' R U2 R2' U2 R U R' U2 R\",\n    \"R2' U R2 U2 R U2' R2 U' R2 U R U2 R2' U2 R U R' U2 R\",\n    \"R2 U2 R U' R' U2' R' U2' R U' R U R U2 R U R2 U2 R\",\n    \"R2' U2 R U2 R' U R U2 R2 U R2' U R U R' U2' R2 U' R'\",\n    \"R2' U2 R U2 R' U2' R2' U R2 U2 R U' R U R' U2' R2 U' R'\",\n    \"R' U R2' U' R2' U' R' U' R U2 R2 U R2 U R U R' U2 R\",\n    \"R U2' R' U2' R U' R' U R U2' R2' U2' R U R' U R2 U2 R'\",\n    \"R U2' R' U' R U2 R2 U R2 U R U R' U2' R2' U' R2' U R'\",\n    \"R2 U2 R2' U2' R2 U R2 U2' R2' U' R2 U2' R2' U R2' U2' R2 U2 R2'\",\n    \"R2 U2 R2' U2' R2 U R2 U2' R2' U' R2 U2' R2' U' R2' U2 R2 U2' R2'\",\n    \"R2 U2 R2' U2' R2 U R2' U2' R2 U' R2' U2' R2 U R2' U2' R2 U2 R2'\",\n    \"R2 U2 R2' U2' R2 U R2' U2' R2 U' R2' U2' R2 U' R2' U2 R2 U2' R2'\",\n    \"R2 U' R U R U R2' U R' U2' R2 U2 R2 U' R' U' R U' R2\",\n    \"R2 U' R U' R' U' R2 U2 R2 U2' R' U R2' U R U R U' R2\",\n    \"R2 U' R2' U2' R U2' R U' R U2 R U R2' U' R' U2' R' U2 R2'\",\n    \"R2' U2 R2 U2' R2' U R2 U2' R2' U' R2 U2' R2' U R2 U2' R2' U2 R2\",\n    \"R2' U2 R2 U2' R2' U R2 U2' R2' U' R2 U2' R2' U' R2 U2 R2' U2' R2\",\n    \"R2' U2 R2 U2' R2' U R2' U2' R2 U' R2' U2' R2 U R2 U2' R2' U2 R2\",\n    \"R2' U2 R2 U2' R2' U R2' U2' R2 U' R2' U2' R2 U' R2 U2 R2' U2' R2\",\n    \"R2' U2' R' U' R U R U2 R2 U2' R2 U2 R U R U' R' U2' R2'\",\n    \"R2' U2' R' U' R U R2 U2' R2' U' R' U R U R2 U2 R2' U2 R2\",\n    \"R' U R2' U' R2' U2' R' U R U R2 U R2 U2 R U' R' U2' R\",\n    \"R' U2' R U' R' U2' R2 U R U R' U R' U' R2 U' R' U' R'\",\n    \"R' U2' R' U' R U2' R' U2' R2 U2' R U R2 U2 R2' U2 R2 U R2\",\n    \"R' U2' R' U' R U2' R' U2' R2' U R2' U2 R U' R' U' R2 U' R'\",\n    \"R' U' R2 U' R' U' R U2 R2' U R2' U2' R' U2' R U' R' U2' R'\",\n    \"R U2 R2 U R U2 R U R U' R U2' R' U2' R' U' R U2 R2\",\n    \"R U2 R' U R U R2 U R2 U2 R U' R' U' R2' U' R2' U R'\",\n    \"R U2 R' U R U2 R2' U2 R U R2 U' R2 U2' R U2 R2 U R2'\",\n    \"R' U' R U2' R' U2' R U2 R' U2 R2 U R' U R U2' R2' U2' R\",\n    \"R' U' R2 U2' R' U R U R2' U R2 U2 R U R' U2 R U2 R2'\",\n    \"R' U' R2 U2' R' U R U' R U2 R2 U R2' U2' R' U2 R U2 R2'\",\n    \"R2 U2' R2' U2 R2 U' R2 U2' R2' U' R2 U2' R2' U R2' U2' R2 U2 R2'\",\n    \"R2 U2' R2' U2 R2 U' R2 U2' R2' U' R2 U2' R2' U' R2' U2 R2 U2' R2'\",\n    \"R2 U2' R2' U2 R2 U' R2' U2' R2 U' R2' U2' R2 U R2' U2' R2 U2 R2'\",\n    \"R2 U2' R2' U2 R2 U' R2' U2' R2 U' R2' U2' R2 U' R2' U2 R2 U2' R2'\",\n    \"R2 U' R' U' R U' R' U R U R U R U2 R U2' R' U' R2\",\n    \"R2' U2' R2 U2 R2' U' R2 U2' R2' U' R2 U2' R2' U R2 U2' R2' U2 R2\",\n    \"R2' U2' R2 U2 R2' U' R2 U2' R2' U' R2 U2' R2' U' R2 U2 R2' U2' R2\",\n    \"R2' U2' R2 U2 R2' U' R2' U2' R2 U' R2' U2' R2 U R2 U2' R2' U2 R2\",\n    \"R2' U2' R2 U2 R2' U' R2' U2' R2 U' R2' U2' R2 U' R2 U2 R2' U2' R2\",\n    \"R' U2 R2 U R' U R U2' R2' U2' R U R' U' R U2' R' U2' R\",\n    \"R2 U R2 U2 R2' U2 R2 U R U2' R2 U2' R' U2' R U' R' U2' R'\",\n    \"R2 U' R' U2' R U2 R U R U R U R' U' R U' R' U' R2\",\n    \"R2' U2 R' U2' R' U' R2' U R U2 R U' R U2' R U2' R2' U' R2\",\n    \"R2' U' R2 U2' R2 U2' R2' U2' R2 U' R U R' U R2' U2 R2 U2 R2'\",\n    \"R' U' R2' U2' R2 U2' R2' U' R2' U2 R U2 R U R' U2 R U2 R2'\",\n    \"R' U' R' U' R2 U' R' U R' U R U R2 U2' R' U' R U2' R'\",\n    \"R2 U2 R2' U2 R2 U R U R' U' R2' U2' R2 U R U' R' U2' R2'\",\n    \"R2' U2 R U2 R' U R U2 R U2 R2' U' R2' U2' R2 U2' R2' U' R'\",\n    \"R2' U2 R2 U2 R2' U R' U R U' R2 U2' R2' U2' R2 U2' R2 U' R2'\",\n    \"R U2' R' U2 R2' U' R2 U2' R U2 R2 U R2 U' R' U2 R U R' U2 R\",\n    \"R U2' R' U' R U2' R' U R2 U R2' U2 R' U2' R2' U' R2' U R' U2 R\",\n    \"R U2' R' U' R U2' R' U' R2 U' R2 U2' R U2 R2 U R2' U2' R' U2 R\",\n    \"R U2' R' U' R U2' R' U' R' U2 R U2' R2 U R2' U2 R' U2' R2' U' R2'\",\n    \"R U2' R' U' R U' R2' U' R2 U' R2' U R U R U2' R' U2' R' U2 R\",\n    \"R U2' R' U' R2' U R2' U2 R' U2' R2' U' R2 U2 R' U2 R U R' U2 R\",\n    \"R2' U R2' U2 R' U2' R2' U' R2 U2 R U2' R' U' R' U2 R U R' U2 R\",\n    \"R2' U2' R2 U' R2' U2 R2' U R2' U R2' U R2 U' R2 U' R' U R2' U2' R'\",\n    \"R2' U' R2 U' R2' U R U2' R2 U2 R2' U2' R' U2' R U2' R2 U2 R2' U2' R\",\n    \"R2' U' R2 U' R2' U R U2' R2 U2 R2' U2' R' U2' R2' U2' R2' U2 R2 U2' R'\",\n    \"R2' U' R2 U' R2' U R2' U2' R2' U2 R2 U2' R2 U2' R U2' R2 U2 R2' U2' R\",\n    \"R2' U' R2 U' R2' U R2' U2' R2' U2 R2 U2' R2 U2' R2' U2' R2' U2 R2 U2' R'\",\n    \"R' U2 R U2 R U' R U' R2' U' R2' U R' U2 R2 U2 R U' R2' U2' R2'\",\n    \"R' U' R U' R2' U2 R U R' U2 R U R U R' U2' R U R' U2 R\",\n    \"R' U' R U' R' U' R' U2' R U' R' U2' R2 U R' U2' R U R' U2 R\",\n    \"R U2 R U2' R U2 R2 U R2' U2 R' U2' R' U2 R2' U2 R U R' U2 R\",\n    \"R U2 R2 U2' R' U2 R2' U R2 U2 R U2' R2' U2 R2' U2 R U R' U2 R\",\n    \"R U2 R' U R U2 R U2 R2 U2' R2' U2 R2 U2' R2' U2 R2' U R' U2 R\",\n    \"R U2 R' U R U2 R U' R2 U2' R U2 R2 U2 R2' U2 R' U2' R2' U' R2'\",\n    \"R U2 R' U R U2 R2 U2 R2' U R2 U2 R U2' R2 U' R' U R' U2 R\",\n    \"R U2 R' U R U2 R2' U2 R U R U2 R2' U2' R2 U2 R2' U2' R2 U2 R'\",\n    \"R U2 R' U R U2 R2' U2 R U R U' R2' U2' R' U2 R2' U R2 U2 R2\",\n    \"R U2 R' U R U2 R2' U2 R U R2 U2 R2 U2' R2' U2 R2 U2' R2' U2 R2'\",\n    \"R U2 R' U R U2 R2' U2 R U R2' U2 R2' U R2 U2 R U2' R2 U' R'\",\n    \"R U2 R' U R U2 R2' U2 R U' R2 U' R2' U2' R' U2 R2' U R2 U' R\",\n    \"R U2 R' U R U2 R2' U2 R2' U2' R U2 R2 U R2' U2 R' U2' R2 U2 R\",\n    \"R U2 R' U R U2 R2' U2 R' U2' R' U2 R2' U R2 U2 R U2' R U2 R\",\n    \"R U2 R' U R U2 R2' U' R2' U R2 U2 R U2' R2 U' R2' U' R' U2 R\",\n    \"R U2 R' U R U2 R' U2 R2 U R2' U2 R' U2' R2' U' R2' U R' U2 R\",\n    \"R U2 R' U R U2' R2' U2 R' U2' R2' U' R2 U2' R U' R U R' U2 R\",\n    \"R U2 R' U R U' R U2' R2 U' R2' U2' R' U2 R2' U2' R U R' U2 R\",\n    \"R U2 R' U R2' U2 R2' U2' R2 U2 R2' U2' R2 U2 R U2 R U R' U2 R\",\n    \"R U2 R' U R2' U' R2' U2' R' U2 R2' U R2 U2 R' U2 R U R' U2 R\",\n    \"R U2 R' U R' U' R2 U2' R U2 R2 U R2' U2 R2 U2 R U R' U2 R\",\n    \"R U2 R' U R' U' R2 U2' R' U2 R' U R U2 R2 U2 R2' U R2 U2 R2'\",\n    \"R U2 R' U R' U' R2 U2' R' U2 R' U R U2 R2' U2 R2 U R2' U2 R2\",\n    \"R U2 R' U' R2' U' R2 U2' R U2 R2 U R2' U' R2' U2 R U R' U2 R\",\n    \"R U' R2 U R2' U2 R' U2' R2' U' R2 U' R U2 R2' U2 R U R' U2 R\",\n    \"R2 U2 R2 U R2' U2 R' U2' R2' U' R U R U2 R2' U2 R U R' U2 R\",\n    \"R2 U2 R2' U R U2' R2 U2' R U2' R2 U2 R2 U2' R2 U' R2' U2 R U2 R2'\",\n    \"R2 U2 R2' U R2 U2 R2' U2 R U R' U2 R' U2' R2 U' R' U R' U2 R\",\n    \"R2' U2 R U2 R2' U' R2 U2' R2 U2 R2 U2' R U2' R2 U2' R U R2' U2 R2\",\n    \"R2' U2 R2 U R2' U2 R2 U2 R U R' U2 R' U2' R2 U' R' U R' U2 R\",\n    \"R2' U2 R2' U2' R2 U2 R2' U2' R2 U2 R2 U R U2 R2' U2 R U R' U2 R\",\n    \"R2' U' R2' U2' R' U2 R2' U2 R2 U2 R U2' R2 U' R U2 R U R' U2 R\",\n    \"R' U2 R2 U2' R2' U2 R2 U2' R2' U2 R U R U2 R2' U2 R U R' U2 R\",\n    \"R' U' R2 U2' R U2 R2 U R2' U2 R2' U R U2 R2' U2 R U R' U2 R\",\n    \"R2 U' R2' U2' R2 U R' U2 R2 U R U2 R2 U' R U' R' U' R' U2' R2'\",\n    \"R U R U2' R2 U' R' U2' R2' U R' U R U R2 U R' U2 R2 U2 R2'\",\n    \"R U R2 U R U2 R U' R U2' R' U2' R' U2' R' U R2' U2 R2 U2' R2\",\n    \"R U R2' U R U' R U' R2' U' R U2' R' U' R' U2 R U R' U2 R2\",\n    \"R U2' R2 U' R U' R2' U' R2' U R2 U R U' R2' U2 R2 U2 R U2' R'\",\n    \"R2' U' R2 U2' R U2 R2 U R2 U' R U2' R' U' R' U2 R U R' U2 R\",\n    \"R' U2 R U2 R' U2' R U R' U R U' R U2 R2' U R2 U2 R2' U2' R\",\n    \"R' U2 R U2 R' U2' R U R' U R U' R2 U2 R2 U R2' U2 R2 U2' R\",\n    \"R' U2' R U2 R U2' R' U2 R' U2' R U2' R U2 R2' U2 R U R' U2 R\",\n    \"R' U' R2' U2 R2' U R' U' R2' U2' R2 U R U R' U2 R U R' U2 R\",\n    \"R' U' R' U' R2 U' R' U R' U R U R U R U2 R' U R U2 R'\",\n    \"R U R' U R U2' R' U2' R' U2' R U' R' U2' R2 U2' R' U2' R U' R'\",\n    \"R2 U2 R' U R2 U R U2' R U2' R U2 R2' U2' R2' U' R' U' R2' U' R'\",\n    \"R2 U' R' U2 R' U2' R U' R U2 R2' U R U' R2' U2 R U R' U2 R\",\n    \"R2 U' R' U2' R2' U2' R2' U2' R' U2 R2' U2' R2' U R U R U' R U2' R\",\n    \"R2 U' R' U2' R2' U' R2' U2 R' U2' R2' U2 R2' U R U R U' R U2' R\",\n    \"R2 U' R' U' R U2' R2 U R U' R2 U R2' U R U R U R2 U2 R\",\n    \"R2' U R U2' R' U' R U2' R' U' R2' U R2' U R U R' U2' R2 U' R'\",\n    \"R2' U R U' R2' U2 R U2 R U R2 U2 R2' U2' R2' U R' U2' R' U2' R2'\",\n    \"R2' U2 R U2 R2 U2' R2 U R U' R U R2' U' R2' U2 R2 U R U2 R\",\n    \"R2' U2 R U2 R' U R U' R2 U2' R U2 R2' U R2 U2 R' U2' R2' U2 R\",\n    \"R2' U2 R U2 R' U R U' R2 U2' R2 U2 R2 U R2' U2 R2' U2' R2' U2 R\",\n    \"R2' U2 R U2 R' U R2' U2 R U2' R2 U' R U R2 U2 R' U2' R2' U2 R\",\n    \"R2' U2 R U2' R2 U2 R' U2 R U R2' U' R2' U R U2 R' U2 R U2' R2\",\n    \"R2' U2 R2 U2 R U R2' U' R2' U R U2 R' U2 R2 U2' R2 U2 R2 U2' R2\",\n    \"R2' U2 R2' U' R2' U2' R' U2 R2' U2 R2 U2 R U' R U R' U2' R2 U' R'\",\n    \"R2' U' R2 U2' R U2 R2 U R2' U' R' U R U2 R2' U2 R U R' U2 R\",\n    \"R2' U' R' U2' R' U R2' U' R U2 R U R U2 R2 U2 R2' U' R2 U' R'\",\n    \"R' U R2' U' R2' U' R' U R2' U R2 U2 R U2' R' U R U R' U2 R\",\n    \"R' U2 R' U' R2' U' R' U R U2 R U R2' U2' R2' U2 R2' U2 R2' U2 R2'\",\n    \"R' U' R2' U2 R2 U R U' R2 U2' R2 U R U2 R' U2 R U R' U2 R\",\n    \"R' U' R' U' R U' R U R2' U R U R U2 R U2 R' U R U2 R'\",\n    \"R U R' U' R2 U2' R' U R' U2 R U2' R U R2 U2' R U' R' U2' R\",\n    \"R U2 R U2' R2 U' R2 U R2' U2 R2' U2 R' U2 R2' U2' R2' U2 R' U R'\",\n    \"R U2' R2 U' R2' U R2' U2 R2' U2' R U2' R' U' R2 U R2 U' R2 U R2\",\n    \"R U2' R2 U' R2' U2' R U2' R2' U2' R2 U' R U R' U R2' U2 R2 U2 R2'\",\n    \"R U2' R2' U2 R2 U R U2 R2' U' R2 U2 R2 U2' R2' U R' U R U2 R2'\",\n    \"R U2' R' U R2' U R2 U2 R U2' R' U R U R' U2' R2' U' R2' U R'\",\n    \"R U2' R' U2 R2' U' R2 U2' R U2 R2 U R2 U2' R' U2' R U' R' U2' R\",\n    \"R U2' R' U' R U R2 U' R2' U2' R' U2 R2' U R U2' R U' R' U2' R\",\n    \"R U2' R' U' R U2 R2 U R2 U R U' R2 U' R2' U2' R' U2 R U R'\",\n    \"R U2' R' U' R U2 R2 U2 R2' U2' R2 U2 R2' U2 R' U R2' U2 R2' U' R'\",\n    \"R U2' R' U' R U2' R U R2' U2 R' U2' R2' U' R2 U R U' R' U2' R\",\n    \"R U2' R' U' R U2' R2 U R U2' R U2 R' U R' U2' R2 U' R' U R\",\n    \"R U2' R' U' R U2' R' U R U R2 U2' R2 U' R U R2 U2 R2' U' R'\",\n    \"R U2' R' U' R U2' R' U R2 U' R2' U2' R' U2 R2' U R2' U' R' U2' R\",\n    \"R U2' R' U' R U2' R' U2' R2 U R2 U2 R U2' R2 U' R2' U2 R' U2' R\",\n    \"R U2' R' U' R U2' R' U2' R' U2' R U2 R2 U' R2' U2' R' U2 R2' U R2'\",\n    \"R U2' R' U' R U2' R' U2' R' U2' R U' R2 U R2 U2 R U2' R2 U' R2'\",\n    \"R U2' R' U' R U2' R' U' R' U2 R U R2 U' R2 U2' R U2 R2 U R2'\",\n    \"R U2' R' U' R U' R2 U2 R U R2 U' R U R2 U' R U2' R2' U' R'\",\n    \"R U2' R' U' R U' R2 U2' R2' U' R2 U2' R' U2 R2' U R2 U2 R' U' R'\",\n    \"R U2' R' U' R U' R2' U2' R2 U' R2' U2' R2' U2 R2' U R2 U2 R' U' R'\",\n    \"R U2' R' U' R U' R2' U2' R2 U' R2' U2' R' U2 R2 U R2' U2 R2' U' R'\",\n    \"R U2' R' U' R2' U R2' U2 R' U2' R2' U' R2 U R' U2' R U' R' U2' R\",\n    \"R U2' R' U' R2' U2 R U2' R2 U' R2' U2' R2 U' R' U R2' U2 R2' U' R'\",\n    \"R U' R2 U2' R2' U2 R' U2' R' U2' R U' R U2 R U R2' U' R U2' R2\",\n    \"R U' R2 U' R' U' R U R U R' U R U R U' R' U' R2 U' R\",\n    \"R U' R2' U2 R2 U2' R U2 R U R2' U' R2' U' R U' R2' U R' U2 R\",\n    \"R U' R2' U2' R2 U2' R2' U R U' R U2 R2' U2 R2 U' R' U' R U2' R'\",\n    \"R2 U R2 U2 R2 U2' R2 U R U' R' U2 R2' U2' R' U2 R2' U2 R' U2' R'\",\n    \"R2 U R2 U2 R2 U2' R2 U R U' R' U2' R2' U2 R' U2' R2' U R' U2' R'\",\n    \"R2 U2 R U2 R2 U' R2 U2 R U2 R2 U2 R2' U2 R' U' R U' R' U2 R2'\",\n    \"R2 U2 R2' U2' R2 U R2' U2' R2 U2 R U2 R2 U2' R2' U R2 U2' R2' U2 R2\",\n    \"R2 U2 R2' U2' R2 U R2' U2' R2 U2 R U2 R2 U2' R2' U' R2 U2 R2' U2' R2\",\n    \"R2 U2 R2' U2' R2 U R2' U2' R2 U' R2 U2' R2' U' R2 U2' R U' R2 U2' R2'\",\n    \"R2 U2 R' U' R U2 R2' U' R U' R U' R2' U2 R U2 R' U' R U2 R'\",\n    \"R2 U2' R U' R2' U R U2 R U' R U2' R' U2' R' U2 R2' U2' R2 U' R\",\n    \"R2 U2' R2' U R U2' R U R' U R' U' R2 U2 R' U2' R' U2' R U' R'\",\n    \"R2 U2' R2' U' R2 U2' R2' U2' R' U2' R U' R U R2' U2 R U2' R U' R'\",\n    \"R2 U' R2' U2' R U2' R U' R U2 R U R2' U' R U R2' U2 R' U2' R2'\",\n    \"R2 U' R2' U2' R2 U' R U2 R U R2 U' R' U2' R' U R' U2 R U R2'\",\n    \"R2 U' R2' U' R2 U2 R U2 R2' U2' R' U' R2' U R2' U2 R' U R2' U2 R2\",\n    \"R2' U R U2 R' U R U2 R' U' R2 U2' R U R2 U2 R2' U2 R2 U R2\",\n    \"R2' U R U2 R' U R U2 R' U' R2' U R2' U2 R U' R' U' R2 U' R'\",\n    \"R2' U R2' U2 R' U2' R2' U' R2 U2 R U2' R' U2' R' U2' R U' R' U2' R\",\n    \"R2' U2 R U R' U R2' U2' R2 U2 R2 U' R2' U2 R U R2 U2 R2' U2' R\",\n    \"R2' U2 R2 U2' R2' U R2 U2' R2' U2 R' U2 R2' U2' R2 U R2' U2' R2 U2 R2'\",\n    \"R2' U2 R2 U2' R2' U R2 U2' R2' U2 R' U2 R2' U2' R2 U' R2' U2 R2 U2' R2'\",\n    \"R2' U2 R2 U2' R2' U R2 U2' R2' U' R2' U2' R2 U' R2' U2' R' U' R2' U2' R2\",\n    \"R2' U2' R U' R U2' R U2 R U2' R2' U2 R2 U R U R U2' R2 U2' R2\",\n    \"R2' U2' R2 U R2 U2' R U R' U R2' U' R2' U2 R2' U2' R' U2' R U' R'\",\n    \"R2' U2' R2 U2' R U2 R2' U' R2' U2 R2' U2' R2' U2 R' U' R2 U2' R2 U' R2\",\n    \"R2' U2' R2 U' R2 U' R2 U R2' U2' R2' U2 R' U' R2' U R2' U2 R2' U2 R2\",\n    \"R2' U2' R2 U' R2' U2' R2 U2' R' U2' R U' R U R2' U2 R U2' R U' R'\",\n    \"R2' U2' R' U2 R U R U2 R2' U R' U2' R U2 R2' U2 R' U2 R' U2' R2'\",\n    \"R2' U2' R' U2 R' U2 R2' U2 R U2' R' U R2' U2 R U R U2 R' U2' R2'\",\n    \"R2' U2' R' U' R U2' R' U R U2 R2 U' R2' U' R' U2' R2' U2 R2 U R2'\",\n    \"R2' U2' R' U' R U' R U2 R2 U2' R2' U' R' U2' R' U2 R2 U R U' R2\",\n    \"R2' U2' R' U' R2 U2' R2 U2 R2 U2' R U R U2 R2 U2' R2' U' R' U R2'\",\n    \"R2' U2' R' U' R' U R2 U2' R U2 R2 U2' R2 U R U R2' U2' R2' U' R2\",\n    \"R2' U2' R' U' R' U2 R2 U2 R U2' R2 U2 R2 U R U R2' U2' R2' U' R2\",\n    \"R' U R U2 R' U2' R2' U' R2 U' R U R2 U R2 U2 R U' R' U2' R\",\n    \"R' U R2' U' R2' U2' R' U R U R' U2' R U2 R2 U R2' U R' U2' R\",\n    \"R' U2 R U' R' U' R' U2' R2 U R2' U R U2 R' U2 R U R' U2 R2\",\n    \"R' U2 R' U2' R U2 R' U2 R2 U2' R U2' R2 U2 R' U2 R U2' R' U2 R'\",\n    \"R' U2' R U' R' U2' R U R U R U R2' U R U' R U' R' U' R'\",\n    \"R' U2' R2' U' R2' U R2' U2 R2 U2' R' U' R U2 R2' U2' R U2 R2' U R2'\",\n    \"R' U2' R' U R2' U2' R' U2 R2' U2' R' U' R U R2 U2' R2 U2 R2 U R2\",\n    \"R' U2' R' U2 R2' U2 R' U2' R2' U2 R' U' R U R2 U2' R2 U2 R2 U R2\",\n    \"R' U' R2 U2' R U2 R' U R2' U2 R2' U2 R' U2 R2' U2' R2' U2 R' U R'\",\n    \"R' U' R2 U2' R2' U2' R2 U2' R' U2' R U' R' U2' R U2' R' U R U2 R'\",\n    \"R' U' R2 U2' R2' U2' R2 U' R' U2 R U R' U2 R U' R' U R U2 R'\",\n    \"R' U' R2 U' R' U' R U2 R2' U R2' U' R' U2 R U R' U2 R U R2'\",\n  ],\n  [\n    \"R' U2' R U' R' U2' R2 U2' R' U' R U2' R'\",\n    \"R' U2 R U R' U2 R U R U2' R' U' R U2' R'\",\n    \"R' U2' R U' R' U2' R U R U2 R' U R U2 R'\",\n    \"R' U2 R U R' U2 R U2 R U2 R' U R U2 R'\",\n    \"R U R2 U2' R2 U' R U R2 U2 R2' U R' U R U2 R'\",\n    \"R' U2 R U R' U R2' U2 R2 U R U' R2 U2' R2 U R\",\n    \"R U' R2 U R2 U R U R' U2' R2' U' R2' U' R' U' R U2' R'\",\n    \"R2 U2' R' U2' R U2 R2 U' R2' U2' R' U R' U' R U2 R2' U R\",\n    \"R2 U2' R' U2' R U' R' U2' R2' U' R2 U' R' U' R U2 R2' U R\",\n    \"R2' U2' R' U R U2 R U2 R' U R' U' R' U2' R' U' R2' U2' R'\",\n    \"R2 U' R2' U2' R' U2 R2' U R2' U' R' U2' R2 U2' R' U' R U2' R'\",\n    \"R2 U R2 U2 R U2' R2 U' R2' U2 R' U2' R2 U2' R' U' R U2' R'\",\n    \"R' U2' R U2 R2 U' R2' U2' R' U2 R2' U R' U2' R' U' R U2' R'\",\n    \"R' U2' R U' R U2' R2' U2 R2 U2' R2' U2 R2 U R' U' R U2' R'\",\n    \"R' U2' R U' R2' U2' R2' U' R2 U2' R U2 R2 U' R' U' R U2' R'\",\n    \"R' U2' R U' R' U R2 U2 R2' U2' R2 U2 R2' U2' R U' R U2' R'\",\n    \"R' U2' R U' R' U2' R2 U2' R' U2 R2' U' R2 U2' R U2 R2 U R2\",\n    \"R' U2' R U' R' U2' R' U R2' U2 R' U2' R2' U' R2 U2 R U2' R'\",\n    \"R' U2' R U' R' U' R2 U2 R U2' R2 U' R2' U2' R2' U' R U2' R'\",\n    \"R' U2 R2 U2 R' U' R U' R2' U2' R U2' R' U2 R U2 R' U R\",\n    \"R2 U2' R2' U2' R2 U' R U' R' U R2' U2 R2 U2 R2' U2 R2' U R2\",\n    \"R2 U2' R' U2' R U' R' U2' R' U2' R2 U R2 U2 R2' U2 R2 U R\",\n    \"R2' U2' R2 U2' R2' U' R' U' R U R2 U2 R2' U' R' U R U2 R2\",\n    \"R U R U R2' U R U' R U' R' U' R2' U2 R U R' U2 R\",\n    \"R U R2 U2 R2' U2 R2 U R2 U2' R' U2' R' U' R U2' R' U2' R2\",\n    \"R2 U R2' U2 R2' U2 R2 U2 R2' U R' U' R U' R2 U2' R2' U2' R2\",\n    \"R2 U2' R U2 R U R2 U' R' U2' R' U R' U2 R' U2 R2 U R2'\",\n    \"R2' U R U2 R' U2' R' U' R' U' R' U' R U R' U R U R2'\",\n    \"R2' U' R2' U2' R2 U2' R2' U' R' U2 R2' U2 R U2 R' U R U2 R\",\n    \"R U2' R2' U' R U' R' U2 R2 U2 R' U' R U R' U2 R U2 R'\",\n    \"R2 U2 R2' U2' R2 U R2 U2 R2' U R2 U2 R2' U R2' U2' R2 U2 R2'\",\n    \"R2 U2 R2' U2' R2 U R2 U2 R2' U R2 U2 R2' U' R2' U2 R2 U2' R2'\",\n    \"R2 U2 R2' U2' R2 U R2' U2 R2 U R2' U2 R2 U R2' U2' R2 U2 R2'\",\n    \"R2 U2 R2' U2' R2 U R2' U2 R2 U R2' U2 R2 U' R2' U2 R2 U2' R2'\",\n    \"R2' U R U R' U R U' R' U' R' U' R' U2' R' U2 R U R2'\",\n    \"R2' U2 R2 U2' R2' U R2 U2 R2' U R2 U2 R2' U R2 U2' R2' U2 R2\",\n    \"R2' U2 R2 U2' R2' U R2 U2 R2' U R2 U2 R2' U' R2 U2 R2' U2' R2\",\n    \"R2' U2 R2 U2' R2' U R2' U2 R2 U R2' U2 R2 U R2 U2' R2' U2 R2\",\n    \"R2' U2 R2 U2' R2' U R2' U2 R2 U R2' U2 R2 U' R2 U2 R2' U2' R2\",\n    \"R U R2' U2 R U' R' U R' U2' R2' U' R2 U2 R U2' R' U2' R2\",\n    \"R U R2' U2 R U' R' U' R2 U' R2' U2' R' U' R U2' R' U2' R2\",\n    \"R U R' U2 R U2 R' U2' R U2' R2' U' R U' R' U2 R2 U2 R'\",\n    \"R' U2' R U' R' U2' R2 U2' R' U' R2' U R2' U2 R' U2' R2' U' R2\",\n    \"R' U2' R U' R' U' R2' U' R2' U2' R' U R U R2 U R2 U' R\",\n    \"R' U2' R2' U' R' U2' R' U' R' U R' U2 R U2 R U R' U2' R2'\",\n    \"R U R2' U R U R' U2' R2 U' R2 U2 R U2 R' U R U2 R\",\n    \"R U2 R U R' U2 R U2 R2 U' R2 U2' R' U R U R2' U R\",\n    \"R U2 R U R' U2 R U2 R2' U2 R' U' R2' U2' R2 U2' R2' U' R2'\",\n    \"R U2 R' U R U2 R2' U' R' U' R U' R U R2' U R U R\",\n    \"R U' R2 U R2 U2 R U' R' U' R2' U' R2' U2' R' U R U2 R'\",\n    \"R2 U2 R U R' U' R2' U2 R2 U R U' R' U' R2' U2' R2 U2' R2'\",\n    \"R2 U2 R U R' U' R' U2' R2' U2 R2' U2' R' U' R' U R U2 R2\",\n    \"R2 U2' R2' U2 R2 U' R2 U2 R2' U R2 U2 R2' U R2' U2' R2 U2 R2'\",\n    \"R2 U2' R2' U2 R2 U' R2 U2 R2' U R2 U2 R2' U' R2' U2 R2 U2' R2'\",\n    \"R2 U2' R2' U2 R2 U' R2' U2 R2 U R2' U2 R2 U R2' U2' R2 U2 R2'\",\n    \"R2 U2' R2' U2 R2 U' R2' U2 R2 U R2' U2 R2 U' R2' U2 R2 U2' R2'\",\n    \"R2' U R2 U2 R' U2 R' U R' U2' R' U' R2 U R U2 R U2' R2\",\n    \"R2' U R' U R U R2' U2' R2' U2 R U' R2 U' R' U' R' U R2'\",\n    \"R2' U R' U' R' U' R2 U' R U2 R2' U2' R2' U R U R' U R2'\",\n    \"R2' U2' R2 U2 R2' U' R2 U2 R2' U R2 U2 R2' U R2 U2' R2' U2 R2\",\n    \"R2' U2' R2 U2 R2' U' R2 U2 R2' U R2 U2 R2' U' R2 U2 R2' U2' R2\",\n    \"R2' U2' R2 U2 R2' U' R2' U2 R2 U R2' U2 R2 U R2 U2' R2' U2 R2\",\n    \"R2' U2' R2 U2 R2' U' R2' U2 R2 U R2' U2 R2 U' R2 U2 R2' U2' R2\",\n    \"R' U2 R U R' U2' R2' U' R2' U' R' U' R U2 R2 U R2 U' R\",\n    \"R' U2 R U2 R' U R U' R' U2 R2 U2 R' U' R U' R2' U2' R\",\n    \"R U R U R' U R' U' R2 U' R' U' R' U2' R' U2' R U' R' U2' R\",\n    \"R U R2 U2' R2' U' R' U R2' U2 R2' U' R' U2' R U2' R' U' R U2' R'\",\n    \"R U2' R U R2 U R U' R' U2' R' U' R2 U2 R2 U2' R2 U2' R2 U2' R2\",\n    \"R U' R2 U R2 U R U' R2 U' R2' U2' R' U2 R U' R' U' R U2' R'\",\n    \"R2 U R U2 R U' R2 U R' U2' R' U' R' U2' R2' U2' R2 U R2' U R\",\n    \"R2 U R2' U2 R' U2' R2' U' R2 U R U' R' U2' R2 U2' R' U' R U2' R'\",\n    \"R2 U2' R2 U R2 U2 R U2' R2 U2' R2' U2' R' U R' U' R U2 R2' U R\",\n    \"R2 U2' R2' U2' R' U' R2 U R2 U' R' U2' R U2' R2' U2 R2' U2' R2' U2 R2'\",\n    \"R2 U2' R' U2 R2' U2' R U2' R' U' R2 U R2 U' R' U2' R U2' R' U2 R2'\",\n    \"R2 U2' R' U2' R U' R2 U2' R' U2 R2' U R' U' R2' U2' R U2 R2 U2' R'\",\n    \"R2 U2' R' U2' R U' R' U R2' U2 R2' U2' R2' U' R2 U2' R2 U2 R2 U2' R'\",\n    \"R2 U2' R' U2' R U' R' U R2' U2 R' U2' R2 U' R2' U2' R U2 R2 U2' R'\",\n    \"R2 U2' R' U2' R2' U2 R2' U' R' U R' U' R2 U R2 U2' R2' U' R' U2' R'\",\n    \"R2 U' R' U R2 U2' R' U2' R' U' R2' U2' R2 U2 R2 U' R U2 R U2 R2\",\n    \"R2 U' R' U2 R U R' U2 R U R2 U' R2 U' R' U' R U2 R2' U R\",\n    \"R2' U R U R' U2 R2' U' R' U R2' U' R2 U' R' U' R' U' R2' U2' R'\",\n    \"R2' U R U2 R2 U R2 U2' R U2 R2 U2' R2 U' R' U' R' U R' U2 R'\",\n    \"R2' U R U2 R2 U2 R2 U2 R U2' R2 U2 R2 U' R' U' R' U R' U2 R'\",\n    \"R2' U R U2' R U2 R' U R' U2' R2 U' R' U R2 U2' R' U' R U2' R'\",\n    \"R2' U2' R U' R2' U' R' U2 R' U2 R' U2' R2 U2 R2 U R U R2 U R\",\n    \"R' U' R U' R' U2 R U2 R U2 R' U R U2 R2' U2 R U2 R' U R\",\n    \"R U R U R2' U R U' R U' R' U' R' U' R' U2' R U' R' U2' R\",\n    \"R U R2 U2' R2 U' R U R2 U2 R2' U' R' U' R U2' R' U' R U2' R'\",\n    \"R U2 R' U2' R' U2 R U2' R U2 R' U2 R' U2' R2 U2' R' U' R U2' R'\",\n    \"R U2' R' U2' R U2 R' U' R U' R' U R2' U2' R2' U' R2 U2' R2' U2 R'\",\n    \"R U2' R' U2' R U2 R' U' R U' R' U R' U2' R2 U' R2' U2' R2 U2 R'\",\n    \"R2 U R2' U2 R' U2' R2' U' R2' U R' U2 R U R U2' R' U' R U2' R'\",\n    \"R' U2 R2' U R' U R2 U R2 U' R2' U' R' U R2 U2' R2' U2' R' U2 R\",\n    \"R' U' R2 U' R' U R' U R2 U R' U2 R U R U2' R' U' R U2' R2'\",\n    \"R' U' R2' U' R' U2' R' U R' U2 R U2 R U2 R U' R2 U2' R2' U2 R2'\",\n    \"R' U' R' U2 R2' U R U2 R2 U' R U' R' U' R2' U' R U2' R2' U2' R2\",\n    \"R2' U R2 U2 R2' U' R U2' R2' U' R' U2' R2' U R' U R U R U2 R2\",\n    \"R U R2' U2 R' U2' R2' U' R2 U2' R2 U' R' U2' R2 U2' R' U' R U2' R'\",\n    \"R U2' R2' U2 R2 U2' R2' U2 R2 U2' R' U' R' U2' R2 U2' R' U' R U2' R'\",\n    \"R2 U R2 U2 R U2' R2 U2' R2' U2' R' U2 R2' U R' U2' R' U' R U2' R'\",\n    \"R2 U2' R2 U2 R2' U2' R2 U2 R2' U2' R2' U' R' U2' R2 U2' R' U' R U2' R'\",\n    \"R2 U2' R2' U' R2 U2' R2' U2' R' U' R U2' R U2 R2' U R U' R U2' R'\",\n    \"R2 U2' R' U2' R2 U R2' U2 R2' U2' R2' U2 R' U2 R2' U2 R' U' R2 U2' R2'\",\n    \"R2' U2' R2 U' R2' U2' R2 U2' R' U' R U2' R U2 R2' U R U' R U2' R'\",\n    \"R2' U2' R2 U' R' U2 R2' U2 R' U2 R2' U2' R2' U2 R2' U R2 U2' R' U2' R2\",\n    \"R2' U2' R2' U' R2 U2' R U2 R2 U R' U' R' U2' R2 U2' R' U' R U2' R'\",\n    \"R' U R2' U' R2 U2' R U2 R2 U R2' U R' U2' R2 U2' R' U' R U2' R'\",\n    \"R' U2' R U R2 U R2' U2 R' U2' R2' U' R2 U R2 U2' R' U' R U2' R'\",\n    \"R' U2' R U' R U R2' U2 R U2' R U' R' U2' R2 U2' R2' U' R2 U2' R2'\",\n    \"R' U2' R U' R U R2' U2 R U2' R U' R' U2' R2' U2' R2 U' R2' U2' R2\",\n    \"R' U2' R U' R U R2' U2 R' U2' R2' U' R2 U2' R2' U2' R' U' R U2' R'\",\n    \"R' U2' R U' R2 U R2 U2 R U2' R2 U' R2' U2' R U2' R' U' R U2' R'\",\n    \"R' U2' R U' R2 U2' R2 U2 R2' U2' R2 U2 R2' U2' R' U2' R' U' R U2' R'\",\n    \"R' U2' R U' R' U R' U2 R2' U R2 U2 R U2' R2 U2 R' U' R U2' R'\",\n    \"R' U2' R U' R' U2 R2 U2' R U2 R2 U R2' U2 R' U R' U' R U2' R'\",\n    \"R' U2' R U' R' U2' R U2' R2' U' R2 U2' R U2 R2 U R2 U' R U2' R'\",\n    \"R' U2' R U' R' U2' R2 U R2 U' R2' U2' R' U2 R2' U R2 U R U2' R'\",\n    \"R' U2' R U' R' U2' R2 U2' R U2 R U2' R2 U' R2' U2' R' U2 R' U2' R'\",\n    \"R' U2' R U' R' U2' R2 U2' R2 U2 R' U2' R2' U' R2 U2' R U2 R2' U2' R'\",\n    \"R' U2' R U' R' U2' R2 U2' R' U R2' U R2 U2 R U2' R2 U' R2' U R'\",\n    \"R' U2' R U' R' U2' R2 U2' R' U' R2 U2' R2 U' R2' U2' R' U2 R2' U R\",\n    \"R' U2' R U' R' U2' R2 U2' R' U' R2' U2' R2' U2 R2 U2' R2' U2 R2 U2' R2\",\n    \"R' U2' R U' R' U2' R2 U2' R' U' R' U R2 U2 R U2' R2 U' R2' U2' R2'\",\n    \"R' U2' R U' R' U2' R2 U2' R' U' R' U2' R2 U2 R2' U2' R2 U2 R2' U2' R\",\n    \"R' U2' R U' R' U2' R2' U2' R2 U' R2' U2' R' U2 R2' U R U' R U2' R'\",\n    \"R' U2' R U' R' U2' R' U R2' U2 R' U2' R2' U2' R2 U2' R U2 R2 U R2\",\n    \"R' U2' R U' R' U2' R' U2' R2' U2 R2 U2' R2' U2 R2 U2' R2 U' R U2' R'\",\n    \"R' U2' R2' U2 R U2' R2 U' R2' U2' R' U2 R2 U2' R2 U2' R' U' R U2' R'\",\n    \"R' U2' R' U2 R' U2' R2' U' R2 U2' R U2 R U2' R2 U2' R' U' R U2' R'\",\n    \"R U R' U R U R U2 R' U R U2 R2' U' R U2 R' U' R U2' R'\",\n    \"R U R' U R2 U2' R' U' R U2' R' U' R' U' R U2 R' U' R U2' R'\",\n    \"R U2' R' U2' R' U R' U R2 U R2 U' R U2' R2' U2' R' U R2 U2 R2\",\n    \"R2 U R2' U R2 U' R2 U2 R2 U2' R2' U2 R2' U2 R2 U2 R2 U2' R2' U2 R\",\n    \"R2 U R2' U R2 U' R2 U2 R2 U2' R2' U2 R2' U2 R' U2 R2' U2' R2 U2 R'\",\n    \"R2 U R2' U R2 U' R' U2 R2' U2' R2 U2 R U2 R2 U2 R2 U2' R2' U2 R\",\n    \"R2 U R2' U R2 U' R' U2 R2' U2' R2 U2 R U2 R' U2 R2' U2' R2 U2 R'\",\n    \"R2 U2 R2' U R2 U2' R2 U' R2 U' R2 U' R2' U R2' U R U' R2 U2 R\",\n    \"R2 U' R2 U2' R U2 R2 U R2' U2' R' U2 R U R U2' R' U' R U2' R'\",\n    \"R' U2 R U R2 U' R2 U2' R U2 R2 U R2' U2' R U2' R' U' R U2' R'\",\n    \"R' U2 R U R' U R2 U R2' U R2 U' R' U' R' U2 R U2 R U2' R'\",\n    \"R' U2 R U R' U2 R U R U2' R' U2 R2' U' R2 U2' R U2 R2 U R2\",\n    \"R' U2 R U R' U2 R U R2' U R2' U2 R' U2' R2' U' R2 U2 R U2' R'\",\n    \"R' U2 R U R' U2 R U' R2' U' R2 U2' R U2 R2 U R2 U' R U2' R'\",\n    \"R' U2 R U2' R2 U R2' U2 R' U2' R2' U' R2' U R U2' R' U' R U2' R'\",\n    \"R U R U R' U R' U' R2 U' R U2' R2' U' R' U R2' U2 R2' U' R'\",\n    \"R U R U R' U R' U' R2 U' R' U' R' U' R' U2 R U R' U2 R\",\n    \"R U R U2 R2' U' R2' U2 R2 U' R U R2 U2' R' U' R2' U R U2' R'\",\n    \"R U R2 U2' R2' U' R' U R2' U2 R2' U' R' U' R U2 R' U R U2 R'\",\n    \"R U2' R' U' R U R' U2' R U' R' U2' R U R2' U2 R2 U2 R2' U R\",\n    \"R U2' R' U' R U2 R' U2 R U R' U2 R U2 R2' U2 R2 U2 R2' U R\",\n    \"R2 U R U2 R U2' R' U' R U2' R U' R2' U2' R' U' R2' U2 R2 U R2'\",\n    \"R2 U2' R2' U2' R2 U' R U' R' U R2' U2 R2 U2 R' U2 R2 U R2' U2 R'\",\n    \"R2 U' R2 U2' R' U2 R2 U2' R' U R U2 R2' U2' R2 U' R2 U R2 U2 R\",\n    \"R2 U' R2' U2' R2 U R U2 R U R2 U' R' U' R2' U2 R U2' R U' R2\",\n    \"R2 U' R' U2 R U R' U2 R U R2' U2' R2 U R2 U2 R2' U2 R2 U R\",\n    \"R2' U2 R2' U2 R' U' R' U' R2' U2' R2 U2 R' U2' R' U2 R' U R' U2 R2\",\n    \"R2' U2' R U2 R2 U2 R2' U2' R2 U2' R U2' R2 U2 R' U2' R' U2' R2' U2' R2\",\n    \"R2' U2' R U' R2 U R U2 R2 U R2' U2' R2 U' R' U R2 U2 R2' U R'\",\n    \"R2' U2' R U' R2 U2' R2' U R2 U2 R U R2 U' R' U R2 U2 R2' U R'\",\n    \"R2' U2' R U' R2 U2' R2' U2 R2 U R U2' R2 U2 R' U2' R' U2' R2' U2' R2\",\n    \"R2' U2' R U' R' U2' R U2' R' U' R2 U' R2' U2 R U R U R' U2' R\",\n    \"R2' U2' R2 U2' R2 U' R2 U R U2' R2 U2 R2 U' R2' U R2' U R2' U2 R2\",\n    \"R2' U2' R2 U' R U2' R2 U' R2 U R U2 R2 U2' R' U2' R2' U R2 U R2'\",\n    \"R2' U2' R' U R U2 R U2 R' U R' U' R' U2' R2 U2 R' U2' R2' U' R2\",\n    \"R2' U2' R' U2' R U2 R2 U2 R2' U' R2 U R2 U2 R2' U' R2' U2' R' U2' R2'\",\n    \"R' U2 R2 U R U R' U R2 U' R' U R' U2' R2 U2 R U' R U2' R'\",\n    \"R' U2 R2 U2 R2 U R2' U' R2' U' R2 U R' U R2' U2' R U2 R2 U2 R'\",\n    \"R' U2 R2 U2 R2 U2' R' U R' U' R2 U R' U R U R U' R U2' R'\",\n    \"R' U2' R U2 R U2 R U2' R U2' R' U2 R' U2 R' U2 R2' U2' R2 U R'\",\n  ],\n  [\n    \"R U R' U R2' U R U2' R2 U' R' U R' U2 R' U' R2\",\n    \"R2 U' R' U2 R' U R' U' R2 U2' R U R2' U R' U R\",\n    \"R U2' R U R2' U R U' R U' R' U2 R' U' R U R'\",\n    \"R U2' R' U R' U' R2 U' R' U R' U R U2' R U2' R'\",\n    \"R' U2' R U' R' U2 R' U' R U' R U R2' U R U R\",\n    \"R U R U R2' U R U' R U' R' U2 R' U' R U2' R'\",\n    \"R' U R U' R' U2 R' U' R U' R U R2' U R U2' R\",\n    \"R' U2' R U2' R U R' U R' U' R2 U' R' U R' U2' R\",\n    \"R U R' U' R' U2 R' U R2 U R U' R2 U' R U2' R\",\n    \"R U2' R U' R2 U' R U R2 U R' U2 R' U' R' U R\",\n    \"R2 U2' R U' R2' U' R' U R2' U R' U2 R2' U' R U R'\",\n    \"R' U R U' R2' U2 R' U R2' U R' U' R2' U' R U2' R2\",\n    \"R U2 R U R' U R' U' R2 U' R' U R' U R U R'\",\n    \"R2 U2 R U R' U R' U' R2 U' R' U R' U R U R2'\",\n    \"R2' U2 R U R' U R' U' R2 U' R' U R' U R U R2\",\n    \"R' U2 R U R' U R' U' R2 U' R' U R' U R U R\",\n    \"R U R U R' U R' U' R2 U' R' U R' U R U2 R'\",\n    \"R2 U R U R' U R' U' R2 U' R' U R' U R U2 R2'\",\n    \"R2' U R U R' U R' U' R2 U' R' U R' U R U2 R2\",\n    \"R' U R U R' U R' U' R2 U' R' U R' U R U2 R\",\n    \"R U R' U R U2 R U2' R2 U' R2' U2' R' U R' U R' U R\",\n    \"R U R' U R2' U' R2' U' R2 U2' R U2 R U R' U2 R' U' R2\",\n    \"R U R' U R' U R' U2' R2' U' R2 U2' R U2 R U R' U R\",\n    \"R U2 R2' U' R U R U2' R' U2 R U2 R2' U R U' R U2' R'\",\n    \"R2 U' R' U2 R' U R U2 R U2' R2 U' R2' U' R2' U R' U R\",\n    \"R' U2 R' U2' R U R U' R2' U2 R2' U2 R2' U R U' R U2' R'\",\n    \"R' U2' R U' R U R2' U2 R U2 R' U2' R U R U' R2' U2 R\",\n    \"R' U2' R U' R U R2' U2 R2' U2 R2' U' R U R U2' R' U2 R'\",\n    \"R U R2' U2 R U2 R' U2' R U R U' R2' U2 R U2' R' U2' R\",\n    \"R U R2' U2 R2' U2 R2' U2' R2 U R2' U R2 U' R' U' R2' U2' R\",\n    \"R U R2' U2 R2' U2 R2' U' R U R U2' R' U2 R' U2' R' U2' R\",\n    \"R U2' R' U2' R2 U' R2 U' R U R2 U R2' U2 R U2 R2' U R\",\n    \"R' U R' U2' R U R U2' R2' U R U' R U2 R' U' R' U2 R2\",\n    \"R' U' R2 U R2' U' R2' U2 R' U' R U' R2 U R2 U' R2' U2 R\",\n    \"R' U' R2 U2 R' U' R U' R2' U R U R2' U2' R U R' U R2\",\n    \"R U' R2' U' R2 U' R' U R' U R U2' R U R' U R U R'\",\n    \"R2 U2 R' U R' U R' U' R2 U' R' U R' U R U2' R2 U2' R2'\",\n    \"R2 U2' R U2' R U' R2 U2' R' U R U R2' U R' U2' R' U R2'\",\n    \"R2 U2' R' U' R2 U' R U2 R U R' U2 R' U R2' U2 R U R2'\",\n    \"R2' U2 R2' U R' U R' U' R2 U' R' U R' U R U2' R2' U2' R2\",\n    \"R2' U2' R U2 R2' U R' U2 R' U R U2 R U' R2 U' R' U R2\",\n    \"R2' U2' R' U2' R' U R2' U R U R' U2' R2 U' R U2' R U R2\",\n    \"R' U2 R2 U R' U R' U' R2 U' R' U R' U R U2' R' U2' R\",\n    \"R' U2' R U R' U R U2' R U R' U R' U' R2 U' R2' U2 R\",\n    \"R U R2' U2 R U2 R2' U R2 U R U' R2 U' R2 U2' R' U2' R\",\n    \"R U2 R2' U' R2 U R2 U' R U' R' U2 R2' U' R2' U R2 U' R'\",\n    \"R U2 R2' U' R2 U' R' U R' U R U2' R U R' U R U2' R'\",\n    \"R U2' R2' U' R' U' R2 U R2' U R2 U2' R2' U2 R2' U2 R2' U R\",\n    \"R U2' R' U2' R U R' U R' U' R2 U' R' U R' U R2 U2 R'\",\n    \"R U2' R' U2' R U2 R2' U' R U R U2' R' U2 R U2 R2' U R\",\n    \"R U2' R' U2' R' U2 R' U2' R U R U' R2' U2 R2' U2 R2' U R\",\n    \"R2 U R U2' R U' R2 U2' R' U R U R2' U R' U2' R' U2' R2'\",\n    \"R2 U R' U R U2' R2' U R U R2' U' R U' R' U2 R2 U' R'\",\n    \"R2 U R' U' R2 U' R U2 R U R' U2 R' U R2' U2 R U2' R2'\",\n    \"R2 U2 R' U' R' U2 R U' R U R2' U2' R U R U2' R' U R'\",\n    \"R2 U2' R2' U2' R U R' U R' U' R2 U' R' U R' U R2' U2 R2'\",\n    \"R2' U R U2 R2' U R' U2 R' U R U2 R U' R2 U' R' U2' R2\",\n    \"R2' U R' U2' R' U R2' U R U R' U2' R2 U' R U2' R U2' R2\",\n    \"R2' U2' R2 U2' R U R' U R' U' R2 U' R' U R' U R' U2 R2\",\n    \"R' U R U R' U R U2' R U R' U R' U' R2 U' R2' U' R\",\n  ],\n  [\n    \"R2' U R U2' R U' R U R2' U2 R' U' R2 U' R U' R'\",\n    \"R' U' R U' R2 U' R' U2 R2' U R U' R U2' R U R2'\",\n    \"R U2 R' U R U2' R U R' U R' U' R2 U' R' U' R'\",\n    \"R' U2 R U' R U R2' U R U' R U' R' U2 R' U2 R\",\n    \"R' U2 R' U' R2 U' R' U R' U R U2' R U R' U' R\",\n    \"R U2 R' U2 R' U' R U' R U R2' U R U' R U2 R'\",\n    \"R U' R' U R U2' R U R' U R' U' R2 U' R' U2 R'\",\n    \"R' U' R' U' R2 U' R' U R' U R U2' R U R' U2 R\",\n    \"R U' R' U' R U' R U R2' U R U' R U' R' U2' R'\",\n    \"R2 U' R' U' R U' R U R2' U R U' R U' R' U2' R2'\",\n    \"R2' U' R' U' R U' R U R2' U R U' R U' R' U2' R2\",\n    \"R' U' R' U' R U' R U R2' U R U' R U' R' U2' R\",\n    \"R U2' R' U' R U' R U R2' U R U' R U' R' U' R'\",\n    \"R2 U2' R' U' R U' R U R2' U R U' R U' R' U' R2'\",\n    \"R2' U2' R' U' R U' R U R2' U R U' R U' R' U' R2\",\n    \"R' U2' R' U' R U' R U R2' U R U' R U' R' U' R\",\n    \"R U' R' U R2 U2' R U' R2 U' R U R2 U R' U2 R2'\",\n    \"R2' U2 R' U R2 U R U' R2 U' R U2' R2 U R' U' R\",\n    \"R' U2 R' U R2' U R' U' R2' U' R U2' R U R U' R'\",\n    \"R' U' R U R U2' R U' R2' U' R' U R2' U R' U2 R'\",\n    \"R U2 R' U R' U' R2 U2' R2 U2' R2 U R' U' R' U2 R U2' R\",\n    \"R U2 R' U R' U' R2 U2' R' U2' R U2 R' U' R' U R2 U2' R'\",\n    \"R U2' R U2 R' U' R' U R2 U2' R2 U2' R2 U' R' U R' U2 R\",\n    \"R2' U R U2' R U' R' U2' R' U2 R2' U R2 U R2 U' R U' R'\",\n    \"R' U2' R2 U R' U' R' U2 R U2' R' U2' R2 U' R' U R' U2 R\",\n    \"R' U' R U' R U' R U2 R2 U R2' U2 R' U2' R' U' R U' R'\",\n    \"R' U' R U' R2 U R2 U R2' U2 R' U2' R' U' R U2' R U R2'\",\n    \"R' U' R U' R' U2' R' U2 R2' U R2 U2 R U' R U' R U' R'\",\n    \"R U2 R' U' R U' R' U2 R' U' R U' R U R2' U R2 U2' R'\",\n    \"R U2' R2' U' R U' R U R2' U R U' R U' R' U2 R U2 R'\",\n    \"R2 U2 R U2 R U' R2 U' R' U' R U2 R2' U R' U2 R' U' R2'\",\n    \"R2 U2 R' U2' R2 U' R U2' R U' R' U2' R' U R2' U R U' R2'\",\n    \"R2 U2' R2 U' R U' R U R2' U R U' R U' R' U2 R2 U2 R2'\",\n    \"R2' U2 R U R2' U R' U2' R' U' R U2' R U' R2 U2' R' U' R2\",\n    \"R2' U2 R' U2 R' U R2' U2 R U' R' U' R2 U' R U2 R U' R2\",\n    \"R2' U2' R U' R U' R U R2' U R U' R U' R' U2 R2' U2 R2\",\n    \"R' U R2 U R2' U R U' R U' R' U2 R' U' R U' R' U' R\",\n    \"R U R2' U2' R U R' U R2 U' R' U' R2 U2 R' U' R U' R2'\",\n    \"R U R2' U' R2 U R2 U2' R U R' U R2' U' R2' U R2 U2' R'\",\n    \"R U' R U2 R' U' R' U2 R2 U' R' U R' U2' R U R U2' R2'\",\n    \"R' U2 R U2 R2' U R2' U R' U' R2' U' R2 U2' R' U2' R2 U' R'\",\n    \"R' U' R2 U2' R2 U2' R2 U R' U' R' U2 R U2' R U2 R U2 R'\",\n    \"R' U' R2 U2' R2 U2' R2 U2 R2' U' R2 U' R2' U R U R2 U2 R'\",\n    \"R' U' R2 U2' R' U2' R U2 R' U' R' U R2 U2' R' U2 R U2 R'\",\n    \"R U' R' U' R U' R' U2 R' U' R U' R U R2' U R2 U R'\",\n    \"R2 U2 R2' U2 R' U' R U' R U R2' U R U' R U' R U2' R2'\",\n    \"R2 U' R U2 R U' R2 U' R' U' R U2 R2' U R' U2 R' U2 R2'\",\n    \"R2 U' R' U2' R2 U' R U2' R U' R' U2' R' U R2' U R U2 R2'\",\n    \"R2' U2 R2 U2 R' U' R U' R U R2' U R U' R U' R2 U2' R2\",\n    \"R2' U2' R U R U2' R' U R' U' R2 U2 R' U' R' U2 R U' R\",\n    \"R2' U' R U R2' U R' U2' R' U' R U2' R U' R2 U2' R' U2 R2\",\n    \"R2' U' R U' R' U2 R2 U' R' U' R2 U R' U R U2' R2' U R\",\n    \"R2' U' R' U2 R' U R2' U2 R U' R' U' R2 U' R U2 R U2 R2\",\n    \"R' U2 R U2 R U2' R U2 R' U' R' U R2 U2' R2 U2' R2 U' R'\",\n    \"R' U2 R U2 R' U2' R2 U R' U' R' U2 R U2' R' U2' R2 U' R'\",\n    \"R' U2 R U2 R' U' R U' R U R2' U R U' R U' R2' U2' R\",\n    \"R' U2 R2 U R U R2' U' R2 U' R2' U2 R2 U2' R2 U2' R2 U' R'\",\n    \"R' U2' R2 U R2' U R U' R U' R' U2 R' U' R U' R' U2 R\",\n    \"R' U2' R2 U R2' U' R2' U R' U R U2' R2 U R2 U' R2' U R\",\n    \"R' U' R2 U2' R' U2' R2 U' R2' U' R' U R2' U R2' U2 R U2 R'\",\n  ],\n  [\n    \"R U' R' U2' R2' U2' R2 U' R2' U' R2' U R' U' R2' U' R2\",\n    \"R2 U2' R2' U' R' U2 R2 U2' R U' R' U2' R2' U2 R2' U' R2'\",\n    \"R2 U' R2' U' R2' U R' U' R2' U' R2 U R U' R' U2' R2'\",\n    \"R2' U2' R' U' R U R2 U' R2' U' R' U R2' U' R2' U' R2\",\n    \"R2' U' R2' U2 R2' U2' R' U' R U2' R2 U2 R' U' R2' U2' R2\",\n    \"R2 U R U' R' U2' R2' U2' R2 U' R2' U' R2' U R' U' R2'\",\n    \"R2 U2' R2' U2' R' U' R U R2 U' R2' U' R' U R2' U' R2'\",\n    \"R2 U2' R2' U' R2' U2 R2' U2' R' U' R U2' R2 U2 R' U' R2'\",\n    \"R2' U2' R2 U2' R2' U' R' U2 R2 U2' R U' R' U2' R2' U2 R2'\",\n    \"R2' U2' R2 U' R2' U' R2' U R' U' R2' U' R2 U R U' R'\",\n    \"R U R' U' R2' U' R U2' R U R U' R2' U2 R' U R2\",\n    \"R U2 R2' U' R U R U2' R U' R2' U' R' U R2' U R2'\",\n    \"R2 U2 R' U' R' U R2 U2' R U' R2 U' R U R2 U R2\",\n    \"R2' U' R' U2 R2 U2' R U' R' U2' R2' U2 R2' U' R2' U2' R2\",\n    \"R' U R U' R2 U' R U2' R2 U R' U' R' U2 R' U R2'\",\n    \"R' U' R U R2 U' R2' U' R' U R2' U' R2' U' R2 U2' R2'\",\n    \"R2 U R2 U R U' R2 U' R U2' R2 U R' U' R' U2 R2\",\n    \"R2 U R' U2 R2' U' R U R U2' R U' R2' U' R' U R\",\n    \"R2' U R2' U R' U' R2' U' R U2' R U R U' R2' U2 R\",\n    \"R2' U R' U2 R' U' R' U R2 U2' R U' R2 U' R U R'\",\n    \"R2' U2 R2' U2' R' U' R U2' R2 U2 R' U' R2' U2' R2 U2' R2'\",\n    \"R2' U' R2' U R' U' R2' U' R2 U R U' R' U2' R2' U2' R2\",\n    \"R2' U' R' U R2' U' R2' U' R2 U2' R2' U2' R' U' R U R2\",\n    \"R2 U' R2' U' R' U R2' U' R2' U' R2 U2' R2' U2' R' U' R\",\n    \"R U2 R U R2' U R U' R U' R' U2 R' U' R U2 R'\",\n    \"R U2 R' U R' U' R2 U' R' U R' U R U2' R U' R'\",\n    \"R' U2 R U' R' U2 R' U' R U' R U R2' U R U2 R\",\n    \"R' U' R U2' R U R' U R' U' R2 U' R' U R' U2 R\",\n    \"R U R U' R' U2' R2' U2' R2 U' R2' U' R2' U R' U' R2' U' R\",\n    \"R U2' R2 U2' R2' U' R' U2 R2 U2' R U' R' U2' R2' U2 R2' U' R2\",\n    \"R U2' R2 U' R2' U' R2' U R' U' R2' U' R2 U R U' R' U2' R2\",\n    \"R U2' R2' U2' R' U' R U R2 U' R2' U' R' U R2' U' R2' U' R\",\n    \"R U2' R2' U' R2' U2 R2' U2' R' U' R U2' R2 U2 R' U' R2' U2' R\",\n    \"R2 U2' R2 U2' R2' U' R' U2 R2 U2' R U' R' U2' R2' U2 R2' U' R\",\n    \"R2 U2' R2 U' R2' U' R2' U R' U' R2' U' R2 U R U' R' U2' R\",\n    \"R2' U R U' R' U2' R2' U2' R2 U' R2' U' R2' U R' U' R2' U' R'\",\n    \"R2' U2' R2' U2' R' U' R U R2 U' R2' U' R' U R2' U' R2' U' R'\",\n    \"R2' U2' R2' U' R2' U2 R2' U2' R' U' R U2' R2 U2 R' U' R2' U2' R'\",\n    \"R' U R U' R' U2' R2' U2' R2 U' R2' U' R2' U R' U' R2' U' R2'\",\n    \"R' U2' R2 U2' R2' U' R' U2 R2 U2' R U' R' U2' R2' U2 R2' U' R'\",\n    \"R' U2' R2 U' R2' U' R2' U R' U' R2' U' R2 U R U' R' U2' R'\",\n    \"R' U2' R2' U2' R' U' R U R2 U' R2' U' R' U R2' U' R2' U' R2'\",\n    \"R' U2' R2' U' R2' U2 R2' U2' R' U' R U2' R2 U2 R' U' R2' U2' R2'\",\n    \"R U' R' U2' R2 U2' R2' U' R2 U2' R U R2' U R' U' R2' U' R2\",\n    \"R U' R' U2' R2' U2' R2 U' R' U' R2 U R U' R2 U R U2' R2\",\n    \"R2 U R2' U R U2 R' U2 R U R2' U2 R U2 R2 U' R2 U2 R\",\n    \"R U' R U2 R2 U' R2' U' R2 U' R2 U R2' U R U' R' U2 R\",\n    \"R U' R' U2 R2' U2' R2' U R' U2' R2 U2 R U' R' U' R U2' R2\",\n    \"R2' U R' U R2' U R2 U2' R U' R2 U2' R2 U R2' U R2 U2' R2'\",\n    \"R2 U R2' U R2 U2 R2' U' R2 U' R2' U' R2 U2 R2' U R2 U R2'\",\n    \"R2 U2 R2 U' R2 U2' R2' U R2 U R U2' R2' U2 R' U R2' U' R2'\",\n    \"R2 U2' R' U' R U R2 U' R2' U' R' U R2' U R U2' R2 U' R2'\",\n    \"R2 U' R' U' R2 U R U' R2 U R U2' R2 U R U' R' U2' R2'\",\n    \"R2' U R2 U R2' U2 R2 U' R2' U' R2 U' R2' U2 R2 U R2' U R2\",\n    \"R2' U2' R' U' R U R2 U2' R U R2 U' R U R2 U' R' U' R2\",\n    \"R2' U' R2 U2' R U R2' U R' U' R2' U' R2 U R U' R' U2' R2\",\n    \"R2' U' R2' U R' U2 R2' U2' R U R2 U R2' U2' R2 U' R2 U2 R2\",\n    \"R U R2' U R2 U' R2 U' R2' U' R2 U2 R U' R U2 R U2 R'\",\n    \"R2 U2 R U2 R2' U R U2 R' U2 R U R2' U R2 U R U2 R2\",\n    \"R2 U2' R2' U R2 U R U2' R2' U2 R' U R2' U' R2' U2' R2 U2 R2\",\n    \"R U R2 U R2' U R U2 R' U2 R U R2' U2 R U2 R2 U' R2\",\n    \"R U2 R U' R U2 R2 U' R2' U' R2 U' R2 U R2' U R U' R'\",\n    \"R2 U R U' R' U2' R2 U2' R2' U' R2 U2' R U R2' U R' U' R2'\",\n    \"R2 U R U' R' U2' R2' U2' R2 U' R' U' R2 U R U' R2 U R\",\n    \"R2 U2 R U' R' U2 R2' U2' R2' U R' U2' R2 U2 R U' R' U' R\",\n    \"R2 U2' R2' U R2 U R2' U2 R2 U' R2' U' R2 U' R2' U2 R2 U R2'\",\n    \"R2 U2' R2' U2' R' U' R U R2 U2' R U R2 U' R U R2 U' R'\",\n    \"R2 U2' R2' U' R2 U2' R U R2' U R' U' R2' U' R2 U R U' R'\",\n    \"R2 U2' R2' U' R2' U R' U2 R2' U2' R U R2 U R2' U2' R2 U' R2\",\n  ],\n  [\n    \"R2 U' R U2' R U R U' R2' U2 R' U R2' U R' U' R\",\n    \"R2 U' R2 U' R U R2 U R' U2 R' U' R' U R2 U2' R'\",\n    \"R2' U' R U2' R2 U R' U' R' U2 R' U R2 U R U' R'\",\n    \"R2' U' R2' U' R' U R2' U R' U2 R2' U' R U R U2' R2'\",\n    \"R2 U2 R2' U R2 U R2 U' R U R2 U R2' U' R' U R\",\n    \"R2' U2 R2 U R2 U2' R2 U2 R U R' U2 R2' U2' R U R2\",\n    \"R2' U R2 U R U' R2 U R2 U R2' U2 R2 U2 R U R'\",\n    \"R2 U R U' R2 U R2 U R2' U2 R2 U2 R U R' U' R2'\",\n    \"R2 U R2 U' R U R2 U R2' U' R' U R U2 R2 U2 R2'\",\n    \"R2 U2' R2 U2 R U R' U2 R2' U2' R U R2 U2 R2' U2 R2\",\n    \"R U R' U' R2' U R2 U R U' R2 U R2 U R2' U2 R2\",\n    \"R U' R' U R2' U R' U2 R2' U' R U R U2' R U' R2\",\n    \"R2 U R U2' R2' U2 R' U R U2 R2 U2' R2 U R2 U2 R2'\",\n    \"R2' U2' R U R U' R2' U2 R' U R2' U R' U' R2' U' R2'\",\n    \"R' U R U2 R2 U2 R2' U R2 U R2 U' R U R2 U R2'\",\n    \"R' U2' R2 U R' U' R' U2 R' U R2 U R U' R2 U' R2\",\n    \"R' U' R U R2 U R' U2 R' U' R' U R2 U2' R U' R2'\",\n    \"R2 U2 R2' U2 R2 U R U2' R2' U2 R' U R U2 R2 U2' R2\",\n    \"R2' U2 R2 U2 R U R' U' R2' U R2 U R U' R2 U R2\",\n    \"R2' U' R' U R U2 R2 U2 R2' U R2 U R2 U' R U R2\",\n    \"R U R' U2 R' U' R U' R U R2' U R U' R U2' R'\",\n    \"R U2' R' U R U2' R U R' U R' U' R2 U' R' U2' R'\",\n    \"R' U2' R U' R U R2' U R U' R U' R' U2 R' U R\",\n    \"R' U2' R' U' R2 U' R' U R' U R U2' R U R' U2' R\",\n    \"R2 U R2 U2' R2 U2 R U R' U2 R2' U2' R U R2 U2 R2'\",\n    \"R2 U2 R U R' U' R2' U R2 U R U' R2 U R2 U R2'\",\n    \"R2' U R2 U R2 U' R U R2 U R2' U' R' U R U2 R2\",\n    \"R2' U2 R2 U R U2' R2' U2 R' U R U2 R2 U2' R2 U R2\",\n    \"R U2 R U2' R U' R2' U' R' U R2' U R' U2 R2' U' R U' R'\",\n    \"R U2' R' U R2' U R' U2 R2' U' R U R U2' R U' R2' U R'\",\n    \"R U2' R' U' R' U2 R' U R2 U R U' R2 U' R U2' R2 U2' R'\",\n    \"R2 U R U2 R U2' R' U' R U R2 U2 R2 U2' R U2 R U2 R2\",\n    \"R2 U2' R2 U2' R' U2' R2' U2 R2' U2' R' U' R2 U2 R2' U R' U' R\",\n    \"R2' U2 R U R U' R2' U2 R' U R2' U R' U' R2' U' R U R2\",\n    \"R2' U2' R2' U R U2 R2 U2' R2 U2 R U2 R2' U2 R2 U R U' R'\",\n    \"R2' U2' R2' U2 R' U R U2 R2 U2' R2 U R2 U2 R2' U2 R2 U R2'\",\n    \"R' U2 R2 U R' U' R' U2 R' U R2 U R U' R2 U' R U R\",\n    \"R' U2 R2 U2' R U' R2 U' R U R2 U R' U2 R' U' R' U' R\",\n    \"R' U2' R U R2 U R' U2 R' U' R' U R2 U2' R U' R2 U R\",\n    \"R' U2' R U' R2' U2 R' U R2' U R' U' R2' U' R U2' R U2' R\",\n  ],\n  [\n    \"R2 U R2' U2 R2 U' R2' U2' R2 U2' R2' U2' R2 U2' R2' U R2 U2' R2'\",\n    \"R2' U R2 U2 R2' U' R2 U2' R2' U2' R2 U2' R2' U2' R2 U R2' U2' R2\",\n    \"R2 U2' R2' U' R2 U2' R2 U2' R2 U R' U' R' U2 R U R U' R'\",\n    \"R2 U2' R' U' R U R U2 R' U' R' U R2 U2' R2 U2' R2 U' R2'\",\n    \"R2' U2' R2 U' R2' U2' R U2' R2 U R' U' R' U2 R U R U' R'\",\n    \"R2' U2' R' U' R U R U2 R' U' R' U R2 U2' R U2' R2' U' R2\",\n    \"R' U2' R U' R' U' R U2 R' U2 R U2 R' U2 R U' R' U' R\",\n    \"R2 U2 R' U R U2 R2' U2 R U R2' U2' R U' R' U2' R2 U2' R'\",\n    \"R U' R2' U R2 U R2' U' R U R2' U2' R' U' R' U R U2 R2\",\n    \"R2 U2' R2 U R2 U' R2' U' R2 U R' U' R2 U2 R U R U' R2\",\n    \"R2 U2' R' U' R2' U R2 U R2' U' R U' R2 U2 R U R U' R2\",\n    \"R2' U R' U' R' U2' R2' U R U' R2' U R2 U R2' U' R2' U2 R2'\",\n    \"R2' U R' U' R' U2' R2' U R' U R2 U' R2' U' R2 U R U2 R2'\",\n    \"R2' U2' R' U' R U R U2 R2 U' R U' R2' U R2 U R2' U' R\",\n    \"R2' U2' R' U' R U R U2 R2 U' R' U R2 U' R2' U' R2 U R'\",\n    \"R' U R2 U' R2' U' R2 U R' U R2' U2' R' U' R' U R U2 R2\",\n    \"R2' U' R2 U R2' U2 R2 U2' R U R' U' R2' U2 R2 U R U' R'\",\n    \"R' U' R U R2 U2 R2' U' R' U R U2' R2 U2 R2' U R2 U' R2'\",\n    \"R2' U2' R U' R' U2' R2 U2' R' U' R2 U2 R' U R U2 R2' U2 R\",\n    \"R U2 R' U R U R' U2' R U2' R' U2' R U2' R' U R U R'\",\n    \"R2 U2 R U R' U' R' U2' R U R U' R2' U2 R' U2 R2 U R2'\",\n    \"R2 U2 R2' U R2 U2 R' U2 R2' U' R U R U2' R' U' R' U R\",\n    \"R2' U2 R U R' U' R' U2' R U R U' R2' U2 R2' U2 R2' U R2\",\n    \"R2' U2 R2 U R2' U2 R2' U2 R2' U' R U R U2' R' U' R' U R\",\n    \"R2 U' R2' U2' R2 U R2' U2 R2 U2 R2' U2 R2 U2 R2' U' R2 U2 R2'\",\n    \"R2' U' R2 U2' R2' U R2 U2 R2' U2 R2 U2 R2' U2 R2 U' R2' U2 R2\",\n    \"R U R' U' R2' U2' R2 U R U' R' U2 R2' U2' R2 U' R2' U R2\",\n    \"R U R' U' R' U2' R U R U' R2' U2 R2' U2 R2' U R2 U2 R2'\",\n    \"R U R' U' R' U2' R U R U' R2' U2 R' U2 R2 U R2' U2 R2\",\n    \"R U2 R2' U2 R U R' U2 R2 U' R' U2' R2 U2' R' U' R U2' R2'\",\n    \"R2 U R2' U2 R2' U2 R2' U' R U R U2' R' U' R' U R U2 R2'\",\n    \"R2 U R2' U' R2 U2' R2' U2 R' U' R U R2 U2' R2' U' R' U R\",\n    \"R2 U2 R2' U' R2 U2 R2' U2 R2 U2 R2' U2 R2 U R2' U2' R2 U' R2'\",\n    \"R2' U R2 U2 R' U2 R2' U' R U R U2' R' U' R' U R U2 R2\",\n    \"R2' U2 R2 U' R2' U2 R2 U2 R2' U2 R2 U2 R2' U R2 U2' R2' U' R2\",\n    \"R' U R U R' U2' R U2' R' U2' R U2' R' U R U R' U2 R\",\n    \"R U' R2' U R2 U R2' U' R U' R2 U2 R U R U' R' U2' R2'\",\n    \"R U' R' U' R U2 R' U2 R U2 R' U2 R U' R' U' R U2' R'\",\n    \"R2 U2 R U R' U' R' U2' R2' U R U' R2' U R2 U R2' U' R\",\n    \"R2 U2 R U R' U' R' U2' R2' U R' U R2 U' R2' U' R2 U R'\",\n    \"R2 U2' R2' U R2 U2' R2' U2' R2 U2' R2' U2' R2 U' R2' U2 R2 U R2'\",\n    \"R2 U' R U R U2 R2 U' R U' R2' U R2 U R2' U' R' U2' R2\",\n    \"R2 U' R U R U2 R2 U' R' U R2 U' R2' U' R2 U R2 U2' R2\",\n    \"R2 U' R2' U2' R U2' R2 U R' U' R' U2 R U R U' R' U2' R2'\",\n    \"R2' U2 R U R2 U' R2' U' R2 U R' U R2' U2' R' U' R' U R2'\",\n    \"R2' U2 R2' U' R2' U R2 U R2' U' R U R2' U2' R' U' R' U R2'\",\n    \"R2' U2' R2 U R2' U2' R2 U2' R2' U2' R2 U2' R2' U' R2 U2 R2' U R2\",\n    \"R2' U' R2 U2' R2 U2' R2 U R' U' R' U2 R U R U' R' U2' R2\",\n    \"R' U R2 U' R2' U' R2 U R' U' R2 U2 R U R U' R' U2' R2'\",\n    \"R' U2' R2 U2' R' U' R U2' R2' U R U2 R2' U2 R U R' U2 R2\",\n    \"R' U' R U R U2 R' U' R' U R2 U2' R U2' R2' U' R2 U2' R2'\",\n    \"R' U' R U R U2 R' U' R' U R2 U2' R2 U2' R2 U' R2' U2' R2\",\n    \"R U2 R' U' R' U2' R U R U2 R' U' R' U2' R U R U2 R2' U2 R\",\n    \"R U2' R U2 R2' U R U R U R2' U2 R U2 R2 U R2 U2 R2' U2 R2\",\n    \"R U2' R U2 R2' U' R' U R2' U2' R' U2 R2' U' R2' U2 R2' U R2 U2 R2'\",\n    \"R U2' R U2 R2' U' R' U R2' U2' R' U2 R2' U' R' U2 R2 U R2' U2 R2\",\n    \"R U2' R U2 R2' U' R' U2 R2' U2 R' U2' R2' U2' R2' U2 R2' U R2 U2 R2'\",\n    \"R U2' R U2 R2' U' R' U2 R2' U2 R' U2' R2' U2' R' U2 R2 U R2' U2 R2\",\n    \"R2 U R2 U2 R U2 R2' U R U R U R2' U2 R U2' R U2 R2 U2 R2'\",\n    \"R2 U R2' U' R' U2' R2' U' R2 U2' R2' U2' R2' U2' R2 U2' R2' U R2 U2' R2'\",\n    \"R2 U2 R U2' R2' U2 R' U2 R U2 R2' U R' U2' R U2 R2 U' R' U2' R2\",\n    \"R2' U R2 U' R U2' R2 U' R2' U2' R2 U2' R2 U2' R2' U2' R2 U R2' U2' R2\",\n    \"R2' U2' R2' U R2 U R2 U' R U' R2 U2' R2 U R U2' R2 U2' R2' U' R'\",\n    \"R' U2 R U2' R U' R' U' R' U R2 U2 R' U' R U2 R' U R U' R'\",\n    \"R' U2 R2' U R' U R' U2' R2' U2 R U2' R2' U R2' U2 R U' R2 U' R2'\",\n    \"R' U' R2 U' R2' U2 R U' R2 U2 R2' U R2 U2' R' U2 R U2 R' U2 R'\",\n    \"R U2' R' U R' U2' R2 U2' R2' U R U' R U2 R2' U2 R U2' R U2' R'\",\n    \"R U2' R' U2' R U2' R U2 R2' U2 R U' R U R2' U2' R2 U2' R' U R'\",\n    \"R2 U R U2 R2' U' R U R U2' R' U' R' U R U2' R2' U2' R2 U' R2'\",\n    \"R2 U2' R2' U' R2 U2' R' U2' R U2 R' U' R' U R2 U2' R2' U2' R U' R'\",\n    \"R2 U2' R' U' R U2' R2' U2' R2 U R' U' R' U2 R U2' R' U2' R2 U' R2'\",\n    \"R2 U' R U2 R2 U2' R2 U R2' U2' R U R2' U' R2' U R' U R' U2' R2'\",\n    \"R2 U' R2' U' R2' U' R' U2 R U2' R U R2' U2 R2 U2 R U' R2' U' R2\",\n    \"R2' U R U2 R2' U' R U R U2' R' U' R' U R U2' R2 U2' R2' U' R2\",\n    \"R2' U2' R2 U' R2' U2' R2' U2' R U2 R' U' R' U R2 U2' R2' U2' R U' R'\",\n    \"R2' U2' R2' U2 R2' U' R2 U2 R' U2' R2 U2' R2' U2' R2' U' R U2' R2' U R'\",\n    \"R2' U2' R' U R2' U2' R U' R2' U2' R2' U2' R2 U2' R' U2 R2 U' R2' U2 R2'\",\n    \"R2' U2' R' U' R U2' R2' U2' R2 U R' U' R' U2 R U2' R2' U2' R2' U' R2\",\n    \"R2' U' R U' R' U' R U2 R' U' R2 U2 R U2' R' U2' R2' U2 R2' U2 R'\",\n    \"R2' U' R2 U2' R2' U2' R U2 R' U R2' U2 R' U R U2 R2 U' R U' R\",\n    \"R' U R2' U2 R2' U R2 U R U2' R2' U R' U' R2 U2 R' U R2 U2 R\",\n    \"R' U2' R2 U R2 U' R' U2' R2' U R2' U2 R2' U R2' U2' R' U' R2 U R2\",\n    \"R' U2 R2' U2 R2 U R U2' R2 U2 R2 U' R2' U' R2' U R' U R2' U2 R2'\",\n    \"R' U2 R2' U2 R' U' R' U2 R2' U2' R2' U R2 U R2 U' R' U R2' U2 R2'\",\n    \"R' U2' R2 U' R' U2 R2' U2' R U R' U R2' U2' R2' U2' R U2' R U' R'\",\n    \"R' U' R2 U2' R' U2' R2' U' R2' U2' R2 U2' R2' U2' R' U2 R' U2' R2 U' R'\",\n    \"R U R2' U' R' U2 R' U2' R2 U2' R U' R' U2' R' U' R' U2 R' U2' R2\",\n    \"R U2 R2 U R2' U2 R2 U' R2 U2' R2' U2' R2 U2' R2' U2' R2 U R2' U2' R2\",\n    \"R U2 R2' U R2 U R2' U' R U' R2 U2 R U R U' R' U2' R' U2 R'\",\n    \"R U2' R U2 R U R' U' R' U2' R2' U R' U R2 U' R2' U' R2 U2' R'\",\n    \"R U' R2' U' R2' U2 R U2 R U2' R2 U2' R' U2' R U' R2 U R2 U2' R\",\n    \"R2 U2 R U R U2 R2 U' R U' R2' U R2 U R2' U' R' U2' R' U2 R2'\",\n    \"R2 U2 R U R U2 R2 U' R' U R2 U' R2' U' R2 U R2 U2' R' U2 R2'\",\n    \"R2 U2 R2' U' R2 U2 R2' U2 R2 U2 R2' U2 R2 U R2 U2' R2' U' R2 U2' R\",\n    \"R2 U2' R U2 R U R2 U' R2' U' R2 U R' U R2' U2' R' U' R' U2' R2'\",\n    \"R2 U2' R U2 R2' U' R2' U R2 U R2' U' R U R2' U2' R' U' R' U2' R2'\",\n    \"R2' U2 R U2' R U R U2 R U R' U2 R2' U2 R U2' R U R2 U' R'\",\n    \"R2' U2 R2 U' R2' U2 R2 U2 R2' U2 R2 U2 R2' U R2' U2' R2 U' R2' U2' R'\",\n    \"R' U2 R2' U R2 U2 R2' U' R2' U2' R2 U2' R2' U2' R2 U2' R2' U R2 U2' R2'\",\n    \"R' U2 R2' U' R2' U R' U2 R U2 R2' U2 R' U2' R' U2' R2 U R2 U R'\",\n    \"R' U2' R2' U2 R U R' U' R' U2' R2' U R U' R2' U R2 U R2' U R\",\n    \"R' U' R2 U' R2' U' R2 U R' U' R2 U2 R U R U' R' U2' R2 U2 R\",\n    \"R2 U R U2 R2' U R' U2 R' U' R2' U R2' U2' R' U' R2 U2' R' U2' R2'\",\n    \"R2 U2 R2' U R2 U' R2' U R2' U2 R2' U2' R' U' R U2' R2 U2 R' U2' R2'\",\n    \"R2 U2 R2' U2 R U2' R U2 R2' U' R' U R2' U2' R' U2 R2' U' R2' U2 R2'\",\n    \"R2 U2 R2' U2 R U2' R U2 R2' U' R' U2 R2' U2 R' U2' R2' U2' R2' U2 R2'\",\n    \"R2 U2 R' U2' R2' U2' R' U2 R2' U2 R' U' R2' U2 R U2' R U2 R2 U2 R2'\",\n    \"R2 U2 R' U' R2' U2 R' U2' R2' U R' U' R2' U2 R U2' R U2 R2 U2 R2'\",\n    \"R2 U' R2' U R2' U2 R2' U2' R' U' R U2' R2 U2 R' U2' R2' U R2 U2 R2'\",\n    \"R2' U2 R2 U R2' U2' R' U2 R2 U2' R U' R' U2' R2' U2 R2' U R2' U' R2\",\n    \"R2' U2 R2 U2 R U2' R U2 R2' U' R' U R2' U2' R' U2 R2' U' R' U2 R2\",\n    \"R2' U2 R2 U2 R U2' R U2 R2' U' R' U2 R2' U2 R' U2' R2' U2' R' U2 R2\",\n    \"R2' U2 R2' U2' R2' U2' R' U2 R2' U2 R' U' R2' U2 R U2' R U2 R2' U2 R2\",\n    \"R2' U2 R2' U' R2' U2 R' U2' R2' U R' U' R2' U2 R U2' R U2 R2' U2 R2\",\n    \"R2' U2 R' U2 R2' U R2 U2 R2' U2' R U R' U' R2' U2 R2 U R U' R'\",\n    \"R2' U2' R' U2 R2 U2' R U' R' U2' R2' U2 R2' U R2' U' R2 U R2' U2 R2\",\n    \"R2' U2' R' U2' R2 U' R' U2' R2' U R2' U' R' U2 R' U R2' U2 R U R2\",\n    \"R2' U' R2 U2' R2' U2' R2 U2 R2' U2' R2' U R' U' R2' U2 R2 U R U' R'\",\n    \"R' U' R U R2 U2 R2' U' R' U R U2' R2' U2 R2 U R2' U2 R' U2 R2'\",\n    \"R' U' R U R2 U2 R2' U' R' U R2' U2' R2' U2 R2 U2' R2' U2' R2 U' R2'\",\n    \"R' U' R U' R U2 R' U2' R2' U' R' U2' R U R U R U R2' U' R'\",\n    \"R' U' R U' R2' U' R2' U2' R' U2 R2 U2' R U R U R U R2' U' R'\",\n    \"R' U' R2' U R U R U R U2' R2 U2 R' U2' R2' U' R2' U' R U' R'\",\n    \"R' U' R2' U R U R U R U2' R' U' R2' U2' R' U2 R U' R U' R'\",\n    \"R U R2' U2 R U2 R2 U R2 U2 R2' U2 R2 U2 R U2' R U2 R2' U R\",\n    \"R U2 R2 U2' R2 U R2' U2' R U R2' U' R2' U R' U R' U2' R2' U2' R2\",\n    \"R U2 R2' U R U2' R2 U2 R' U' R U' R2 U2 R2 U2 R' U2 R' U R\",\n    \"R U2 R' U R U R2' U2' R2 U R' U' R' U R2 U' R2' U2 R2 U R'\",\n    \"R U2 R' U2 R U' R' U' R U2 R2' U2' R U R U' R2' U2 R2 U R'\",\n    \"R U2' R2 U2' R U R U2' R2 U2 R2 U' R2' U' R2' U R U' R2 U2' R2\",\n    \"R U2' R2 U2' R2' U' R' U2 R2' U2' R2' U R2 U R2 U' R U' R2 U2' R2\",\n    \"R U' R2' U2' R2 U R2' U' R U R U' R2' U2 R2 U' R' U' R U2' R'\",\n    \"R U' R2' U2' R2 U R' U' R' U2 R2 U2' R' U R U R' U2' R U2' R'\",\n    \"R U' R' U' R U2 R' U' R2 U2 R U2' R' U2' R2' U R2' U2' R' U2 R2'\",\n    \"R U' R' U' R U2 R' U' R2 U2 R U2' R' U2' R2' U2 R2' U2 R' U2' R2'\",\n    \"R2 U R U' R U2' R U' R' U2' R' U2' R' U' R2' U R2' U2' R' U' R2'\",\n    \"R2 U2' R U2 R2 U' R2 U2 R U2 R' U2' R2' U R U2' R' U R U R'\",\n    \"R2 U2' R2 U' R2' U' R' U2 R2 U' R U R2' U2' R U' R2' U2' R' U2 R\",\n    \"R2 U2' R2 U' R2' U' R' U2 R2 U' R U R2' U2' R' U2 R' U2' R2' U' R2'\",\n    \"R2 U2' R2' U2' R U2 R' U R2' U2 R' U R U2 R2 U' R U' R U2' R2'\",\n    \"R2 U' R' U' R2 U' R U2 R2' U2' R2 U2 R U2' R U2' R U2' R U2 R\",\n    \"R2 U' R' U' R2 U' R' U2 R2 U2' R2' U2 R2' U2' R U2' R U2' R U2 R\",\n    \"R2' U2 R U2 R' U2' R' U2 R U2 R2' U' R' U R U R2 U2 R' U2 R2\",\n    \"R2' U2' R U2' R2' U' R' U' R U R2 U R U2 R' U2' R' U2 R U R2\",\n    \"R2' U2' R U2' R2' U' R' U' R U R2 U2' R' U2' R U2 R U2' R' U2' R2\",\n    \"R2' U2' R' U2 R' U2' R2' U R U' R2 U2 R' U' R2' U' R2 U2' R2 U' R2'\",\n    \"R2' U' R2' U' R' U2 R U2' R U R2' U2 R2 U2 R U' R2' U' R2 U2' R2\",\n    \"R2' U' R' U2' R U2 R U2' R' U' R2' U' R' U R U R2 U2 R' U2 R2\",\n    \"R' U2 R U2 R2' U2' R U R U' R2' U2 R2 U2' R' U2 R U' R' U2 R\",\n    \"R' U2 R U2 R' U2' R2 U2 R2' U' R U R U2' R2' U2 R U' R' U2 R\",\n    \"R' U2' R U R' U2' R U2 R2' U2' R2 U R' U' R' U2 R2 U2' R' U2' R\",\n    \"R' U2' R U R' U2' R2 U2 R' U' R' U R2 U2' R2' U2 R U2' R' U2' R\",\n    \"R' U2' R2 U R' U' R2 U2 R U R U' R' U2' R2 U R2 U' R2' U R\",\n    \"R' U2' R2 U R' U' R' U2 R U R U' R' U2 R2 U2 R2' U R2 U2 R2'\",\n    \"R' U2' R2 U R' U' R' U2 R U R U' R' U2 R2' U2 R2 U R2' U2 R2\",\n    \"R' U2' R2' U R2' U' R' U2' R' U2' R' U' R U2' R U' R U R2 U' R2'\",\n    \"R' U2' R' U2 R' U2 R' U2 R2 U2' R2 U2 R2' U2' R U R2' U R U R2'\",\n    \"R' U2' R' U2 R' U2 R' U2 R' U2' R2' U2 R2 U2' R' U R2' U R U R2'\",\n    \"R' U' R2 U R2' U' R2' U2 R U R' U' R' U2' R2' U R U' R2' U2 R\",\n    \"R U2 R U R' U' R' U2' R U R U' R2' U2 R2' U2 R2' U R2 U2 R2\",\n    \"R U2 R U R' U' R' U2' R U R U' R2' U2 R' U2 R2 U R2' U2 R\",\n    \"R U2 R2 U R2' U2 R2' U2 R2' U' R U R U2' R' U' R' U R U2 R2\",\n    \"R U2 R2' U R2 U2 R' U2 R2' U' R U R U2' R' U' R' U R U2 R\",\n    \"R U2 R2' U' R2' U R U2 R2 U' R2 U2' R2 U' R2 U2 R U R2' U' R2'\",\n    \"R U2 R' U2' R2' U' R U2' R2' U R U' R2 U2 R' U' R2' U' R2 U2' R2\",\n    \"R U2' R U' R' U' R U2 R' U2 R U2 R' U2 R U' R' U' R U2' R2'\",\n    \"R U2' R2 U' R2' U2' R U2' R2 U R' U' R' U2 R U R U' R' U2' R2\",\n    \"R U2' R2' U' R2 U2' R2 U2' R2 U R' U' R' U2 R U R U' R' U2' R\",\n    \"R U2' R' U' R U R U2 R' U' R' U R2 U2' R U2' R2' U' R2 U2' R2\",\n    \"R U2' R' U' R U R U2 R' U' R' U R2 U2' R2 U2' R2 U' R2' U2' R\",\n    \"R U' R2 U2' R2 U' R2' U' R' U2 R2 U' R U R2' U2' R U' R2' U2' R'\",\n    \"R2 U R U2 R2 U' R2 U R U2 R U2 R U R' U2 R' U R' U' R2'\",\n    \"R2 U R2 U2 R U2' R U2 R2 U' R' U R2' U2' R U R2 U R2' U2 R2'\",\n    \"R2 U R2' U2 R2 U2 R' U2' R U' R2 U2' R U' R' U2' R2' U R' U R'\",\n    \"R2 U R2' U2 R2' U R2 U R U2' R2' U R' U' R2 U2 R U2' R U2 R2\",\n    \"R2 U R2' U' R' U R' U2 R' U R U2 R U2 R U R2 U' R2 U2 R\",\n    \"R2 U R' U R U R' U2' R U R2' U2' R' U2 R U2 R2 U2' R2 U2' R\",\n    \"R2 U2 R U R' U2 R2 U2 R2' U' R U R U2' R' U2 R2 U2 R2 U R2'\",\n    \"R2 U2 R U R' U' R' U2' R U R U' R2' U2 R2' U2 R2' U R2 U2 R\",\n    \"R2 U2 R U2' R2 U2' R2 U2 R U2 R' U2' R2' U R U2' R' U R U R'\",\n    \"R2 U2 R U' R2 U2 R' U R2 U2 R2 U2 R2' U2 R U2' R2' U R2 U2' R2\",\n    \"R2 U2 R2 U R2' U2 R2' U2 R2' U' R U R U2' R' U' R' U R U2 R\",\n    \"R2 U2 R2 U2' R2 U R2' U2' R U2 R2' U2 R2 U2 R2 U R' U2 R2 U' R\",\n    \"R2 U2 R2' U R2 U2 R2 U2 R' U2' R U R U' R2' U2 R2 U2 R' U R\",\n    \"R2 U2 R2' U R2 U2 R2' U2 R' U' R U R U2 R' U' R' U R2 U2' R'\",\n    \"R2 U2 R' U R U R' U2' R U2' R' U2' R U2' R' U R U R' U2 R'\",\n    \"R2 U2 R' U R' U R2' U2' R' U' R U2' R2 U' R U2' R' U2 R2 U2 R2'\",\n    \"R2 U2' R U' R' U' R U2 R' U2 R U2 R' U2 R U' R' U' R U2' R2\",\n    \"R2 U2' R2 U' R2' U2' R U2' R2 U R' U' R' U2 R U R U' R' U2' R\",\n    \"R2 U2' R2 U' R2' U' R U2 R2 U2 R2' U R U2' R U2 R' U' R2' U' R2'\",\n    \"R2 U2' R2' U2' R' U R' U R2' U' R2' U R U2' R2' U R2 U2' R2 U2 R\",\n    \"R2 U2' R2' U' R2 U2' R2' U2' R U R' U' R' U2' R U R U' R2' U2 R\",\n    \"R2 U2' R' U' R U R U2 R' U' R' U R2 U2' R U2' R2' U' R2 U2' R\",\n    \"R2 U' R' U2' R2 U R' U' R' U2 R U R U' R' U2 R2' U2 R2 U R2'\",\n    \"R2' U R2 U R2 U R U2' R' U2 R' U' R2 U2' R2' U2' R' U R2 U R2'\",\n    \"R2' U R' U2' R2' U2 R2' U' R2 U2 R' U' R2 U R2 U' R U' R U2 R2\",\n    \"R2' U2 R U R' U2 R2 U2 R2' U' R U R U2' R' U2 R U2 R2' U R2\",\n    \"R2' U2 R U R' U' R' U2' R U R U' R2' U2 R' U2 R2 U R2' U2 R'\",\n    \"R2' U2 R2 U R2' U2 R U2 R' U2' R U R U' R2' U2 R2 U2 R' U R\",\n    \"R2' U2 R2 U R2' U2 R2 U2 R' U' R U R U2 R' U' R' U R2 U2' R'\",\n    \"R2' U2 R2 U2 R U' R U' R2 U R2 U' R' U2 R2 U' R2' U2 R2' U2' R'\",\n    \"R2' U2 R2' U R2 U R' U2' R2' U2' R2 U' R' U2 R' U2' R U R2 U R2\",\n    \"R2' U2 R2' U R2 U2 R' U2 R2' U' R U R U2' R' U' R' U R U2 R'\",\n    \"R2' U2 R' U R U R' U2' R U2' R' U2' R U2' R' U R U R' U2 R2'\",\n    \"R2' U2' R U' R U' R2 U2 R U R' U2 R2' U R' U2 R U2' R2' U2' R2\",\n    \"R2' U2' R U' R' U' R U2 R' U2 R U2 R' U2 R U' R' U' R U2' R\",\n    \"R2' U2' R2 U' R2' U2' R2 U2' R U R' U' R' U2' R U R U' R2' U2 R\",\n    \"R2' U2' R2' U' R2 U2' R2 U2' R2 U R' U' R' U2 R U R U' R' U2' R'\",\n    \"R2' U2' R' U2 R2' U2 R2' U2' R' U2' R U2 R2 U' R' U2 R U' R' U' R\",\n    \"R2' U2' R' U' R U R U2 R' U' R' U R2 U2' R2 U2' R2 U' R2' U2' R'\",\n    \"R2' U' R2 U R U' R U2' R U' R' U2' R' U2' R' U' R2' U R2' U2' R'\",\n    \"R2' U' R2 U2' R2 U' R2' U' R' U2 R2 U' R U R2' U2' R' U2 R' U2' R2'\",\n    \"R2' U' R2' U2' R' U2 R' U2' R2' U R U' R2 U2 R' U' R2' U' R2 U2' R2\",\n    \"R2' U' R' U2' R2 U R' U' R' U2 R U R U' R' U2 R2 U2 R2' U R2\",\n    \"R2' U' R' U2' R2' U R2' U' R' U2' R' U2' R' U' R U2' R U' R U R2\",\n    \"R' U2 R U R' U' R' U2' R U R U' R2' U2 R2' U2 R2' U R2 U2 R'\",\n    \"R' U2 R U R' U' R' U2' R U R U' R2' U2 R' U2 R2 U R2' U2 R2'\",\n    \"R' U2 R U2 R' U2 R' U2' R2 U2' R' U R' U' R2 U2 R2' U2 R U' R\",\n    \"R' U2 R U' R U2 R2' U2 R2 U' R' U R' U2' R2 U2' R' U2 R' U2 R\",\n    \"R' U2 R2 U R2' U2 R2' U2 R2' U' R U R U2' R' U' R' U R U2 R'\",\n    \"R' U2 R2' U R2 U2 R' U2 R2' U' R U R U2' R' U' R' U R U2 R2'\",\n    \"R' U2 R' U R U R' U2' R U2' R' U2' R U2' R' U R U R' U2 R2\",\n    \"R' U2' R U2 R2 U R' U2 R2 U' R' U R2' U2' R U R2 U R2' U2 R2'\",\n    \"R' U2' R2 U' R2' U2' R U2' R2 U R' U' R' U2 R U R U' R' U2' R'\",\n    \"R' U2' R2' U' R2 U2' R2 U2' R2 U R' U' R' U2 R U R U' R' U2' R2'\",\n    \"R' U2' R' U' R U R U2 R' U' R' U R2 U2' R U2' R2' U' R2 U2' R'\",\n    \"R' U2' R' U' R U R U2 R' U' R' U R2 U2' R2 U2' R2 U' R2' U2' R2'\",\n    \"R U R2' U R2 U2' R' U R2' U2' R2 U' R2' U2 R U2' R' U2' R U2' R\",\n    \"R U R2' U' R2 U R2 U2' R' U' R U R U2 R2 U' R' U R2 U2' R'\",\n    \"R U2 R U2' R U2' R U2' R U2 R2 U2' R2' U2 R U' R2 U' R' U' R2\",\n    \"R U2 R U2' R U2' R U2' R2' U2 R2' U2' R2 U2 R' U' R2 U' R' U' R2\",\n    \"R U2 R2 U' R2 U R U2 R U2 R U R' U2 R' U R' U' R2' U R2\",\n    \"R U2 R2' U' R U R U2' R' U' R' U R U2' R2 U2' R2' U' R2 U2' R2'\",\n    \"R U2 R2' U' R U R U2' R' U' R' U R U2' R2' U2' R2 U' R2' U2' R2\",\n    \"R U2 R2' U' R U R2' U2' R' U' R' U R U2 R2' U' R2' U R2 U' R'\",\n    \"R U2 R' U' R U2 R2' U2' R U R U' R2' U2 R2 U2' R' U2 R U2 R'\",\n    \"R U2 R' U' R U2 R' U2' R2 U2 R2' U' R U R U2' R2' U2 R U2 R'\",\n    \"R U2' R2 U' R U' R U2 R2 U2' R' U2 R2 U' R2 U2' R' U R2' U R2\",\n    \"R U2' R' U2 R' U R U R U' R2' U2' R U R' U2' R U' R' U R\",\n    \"R U2' R' U2' R U2 R2' U2' R2 U R' U' R' U2 R2 U2' R' U R U2' R'\",\n    \"R U2' R' U2' R2 U2 R' U' R' U R2 U2' R2' U2 R U2' R' U R U2' R'\",\n    \"R2 U R U2 R' U2' R' U2 R U R2 U R U' R' U' R2' U2' R U2' R2'\",\n    \"R2 U R2 U R U2' R' U2 R' U' R2 U2' R2' U2' R' U R2 U R2' U2 R2'\",\n    \"R2 U2 R U2' R U2 R2 U' R' U R2' U2' R U R2 U R2' U2 R2' U R2\",\n    \"R2 U2 R2 U' R2' U' R2' U R' U R2' U2 R2' U' R' U2 R2' U2 R2 U R\",\n    \"R2 U2 R' U2 R2 U R U R' U' R2' U2 R U2 R' U2' R' U2 R U2 R2'\",\n    \"R2 U2 R' U2 R2 U R U R' U' R2' U' R' U2' R U2 R U2' R' U' R2'\",\n    \"R2 U2' R' U2' R U2 R U2' R' U2' R2 U R U' R' U' R2' U2' R U2' R2'\",\n    \"R2 U' R2' U R' U2 R2' U R2 U2 R2' U2 R2' U2 R2 U2 R2' U' R2 U2 R2'\",\n    \"R2' U R U R2' U R U2' R2' U2 R2 U2' R2 U2 R' U2 R' U2 R' U2' R'\",\n    \"R2' U R U R2' U R' U2' R2 U2 R2' U2' R' U2 R' U2 R' U2 R' U2' R'\",\n    \"R2' U2 R2 U2 R' U2' R U' R2 U2' R U' R' U2' R2' U R' U R' U2 R2\",\n    \"R2' U2 R2' U R2 U R U2' R2' U R' U' R2 U2 R U2' R U2 R2 U R2\",\n    \"R2' U2 R2' U R2 U R U2' R2' U R' U' R2 U2 R' U R2 U2 R U2' R'\",\n    \"R2' U2 R' U2' R2' U R2' U2' R' U2' R U2 R2 U' R' U2 R U' R' U' R\",\n    \"R2' U2' R' U2 R2 U2' R U2' R' U2' R2 U' R U2 R' U2' R2' U R U2 R2'\",\n    \"R2' U' R2 U R U2 R2 U R2' U2 R2 U2 R2 U2 R2' U2 R2 U' R2' U2 R2\",\n    \"R2' U' R2' U2' R' U2' R2 U' R' U' R' U' R2 U2' R' U2 R' U2' R2' U2' R2\",\n    \"R2' U' R' U R' U2 R' U R U2 R U2 R U R2 U' R2 U2 R U R2\",\n    \"R' U R U R' U2' R U R2' U2' R' U2 R U2 R2 U2' R2 U2' R U2 R2\",\n    \"R' U R U R' U2' R U R2' U2' R' U2 R U2 R2 U' R2 U2 R U2' R2\",\n    \"R' U R2 U2 R2' U' R U R U2' R2' U2 R U' R' U' R U2 R' U2 R\",\n    \"R' U R2 U2 R2' U' R2 U R' U' R' U R2 U2' R2' U R U R' U2 R\",\n    \"R' U2 R' U2' R2 U R U2' R2 U2' R U2 R2 U2 R U2' R2' U' R2 U2' R2'\",\n    \"R' U2 R' U2' R2 U R U2' R2 U2' R U2 R2 U2 R2 U2' R2 U' R2' U2' R2\",\n    \"R' U2 R' U2' R2 U R U' R2 U2 R U2' R2 U R U2' R2' U' R2 U2' R2'\",\n    \"R' U2 R' U2' R2 U R U' R2 U2 R U2' R2 U R2 U2' R2 U' R2' U2' R2\",\n    \"R' U2 R' U2' R2 U' R' U' R' U' R2 U2' R' U2' R2' U' R2' U2' R2 U2' R2'\",\n    \"R' U2' R U R U2 R' U' R' U2' R U R U2 R' U' R' U2' R2 U2' R'\",\n    \"R' U2' R U2' R' U R U R' U2' R2 U2 R' U' R' U R2 U2' R2' U' R\",\n    \"R' U2' R U' R' U' R2 U2 R2' U' R U R U' R2' U R2 U2' R2' U' R\",\n    \"R' U2' R2' U2 R2' U' R2 U2 R' U' R2 U R2 U' R U' R U2 R2 U2 R2'\",\n  ],\n  [\n    \"R2 U R2' U2 R2 U2' R2' U R2 U2' R2' U2' R2 U2' R2' U2' R2 U' R2'\",\n    \"R2 U2' R2' U2' R2 U2 R2' U' R2 U2' R2' U2' R2 U2' R2' U2' R2 U' R2'\",\n    \"R2' U R2 U2 R2' U2' R2 U R2' U2' R2 U2' R2' U2' R2 U2' R2' U' R2\",\n    \"R2' U2' R2 U2' R2' U2 R2 U' R2' U2' R2 U2' R2' U2' R2 U2' R2' U' R2\",\n    \"R2 U2' R2' U R2' U R2' U R2 U2' R' U' R' U2 R' U' R2 U2 R2'\",\n    \"R2 U2' R2' U2 R2 U' R' U2 R' U' R' U2' R2 U R2' U R2' U R2'\",\n    \"R' U2 R U' R' U' R' U2 R' U2' R2' U R2' U2' R' U2' R U2 R2\",\n    \"R2 U' R2 U R2' U R2 U' R2 U' R' U' R2' U2 R U R U2 R2\",\n    \"R2' U2' R' U' R' U2' R2 U R U R U' R2 U R2' U R2 U' R\",\n    \"R2' U2' R' U' R' U2' R2 U R U R2' U R2' U' R2 U' R2' U R2'\",\n    \"R' U R2' U' R2 U' R2' U R' U' R' U' R2' U2 R U R U2 R2\",\n    \"R2 U2 R2' U2' R2 U R' U2 R' U' R' U2' R2 U R2' U R2' U R2'\",\n    \"R2' U R2' U R2' U R2 U2' R' U' R' U2 R' U R2 U2' R2' U2 R2\",\n    \"R U2' R' U R U R U2' R U2 R2 U' R2 U2 R U2 R' U2' R2'\",\n    \"R2' U2 R2 U2' R2' U R U2' R U R U2 R2' U' R2 U' R2 U' R2\",\n    \"R2' U2 R2 U' R2 U' R2 U' R2' U2 R U R U2' R U R2' U2' R2\",\n    \"R2 U2 R2' U2 R2 U2' R2' U R2 U2 R2' U2 R2 U2 R2' U2 R2 U R2'\",\n    \"R2 U' R2' U2' R2 U2 R2' U' R2 U2 R2' U2 R2 U2 R2' U2 R2 U R2'\",\n    \"R2' U2 R2 U2 R2' U2' R2 U R2' U2 R2 U2 R2' U2 R2 U2 R2' U R2\",\n    \"R2' U' R2 U2' R2' U2 R2 U' R2' U2 R2 U2 R2' U2 R2 U2 R2' U R2\",\n    \"R2 U R2' U2 R2 U2 R2' U2 R2 U2 R2' U R2 U2' R2' U2 R2 U2 R2'\",\n    \"R2 U R2' U2 R2 U2 R2' U2 R2 U2 R2' U' R2 U2 R2' U2' R2 U' R2'\",\n    \"R2 U2' R2' U R U2' R U R U2 R2' U' R2 U' R2 U' R2 U2 R2'\",\n    \"R2 U' R2 U' R2 U' R2' U2 R U R U2' R U R2' U2' R2 U2 R2'\",\n    \"R2 U' R2 U' R2 U' R2' U2 R U R U2' R U' R2' U2 R2 U2' R2'\",\n    \"R2' U R2 U2 R2' U2 R2 U2 R2' U2 R2 U R2' U2' R2 U2 R2' U2 R2\",\n    \"R2' U R2 U2 R2' U2 R2 U2 R2' U2 R2 U' R2' U2 R2 U2' R2' U' R2\",\n    \"R2' U2' R2 U2 R2' U' R U2' R U R U2 R2' U' R2 U' R2 U' R2\",\n    \"R2' U2' R' U2 R U2 R2 U' R2 U2 R U2' R U R U R' U2' R\",\n    \"R U' R2 U R2' U R2 U' R U R U R2 U2' R' U' R' U2' R2'\",\n    \"R2 U2 R U R U2 R2' U' R' U' R2 U' R2 U R2' U R2 U' R2\",\n    \"R2 U2 R U R U2 R2' U' R' U' R' U R2' U' R2 U' R2' U R'\",\n    \"R2 U2 R U2' R' U2' R2' U R2' U2' R' U2 R' U' R' U' R U2 R'\",\n    \"R2 U' R2' U2' R2 U2' R2' U2' R2 U2' R2' U R2 U2' R2' U2 R2 U R2'\",\n    \"R2 U' R2' U2' R2 U2' R2' U2' R2 U2' R2' U' R2 U2 R2' U2' R2 U2' R2'\",\n    \"R2' U R2' U R2' U R2 U2' R' U' R' U2 R' U' R2 U2 R2' U2' R2\",\n    \"R2' U R2' U' R2 U' R2' U R2' U R U R2 U2' R' U' R' U2' R2'\",\n    \"R2' U2 R2 U' R' U2 R' U' R' U2' R2 U R2' U R2' U R2' U2' R2\",\n    \"R2' U' R2 U2' R2' U2' R2 U2' R2' U2' R2 U R2' U2' R2 U2 R2' U R2\",\n    \"R2' U' R2 U2' R2' U2' R2 U2' R2' U2' R2 U' R2' U2 R2 U2' R2' U2' R2\",\n    \"R U2' R' U R U R U2' R U2 R2 U' R2 U2 R2' U' R2' U2' R' U2 R2'\",\n    \"R2 U R2 U2 R2' U2' R2 U R2' U2' R2 U2 R U R2 U2' R2' U2' R2 U' R2'\",\n    \"R2 U2' R2 U2' R2' U2 R2 U' R2' U2' R2 U2 R U R2 U2' R2' U2' R2 U' R2'\",\n    \"R2 U2' R2' U2' R2 U' R U2' R2 U' R2' U2' R2 U2' R2 U2' R2' U2' R2 U' R2'\",\n    \"R2' U R2' U2 R2 U2' R2' U R2 U2' R2' U2 R' U R2' U2' R2 U2' R2' U' R2\",\n    \"R2' U2' R2 U2' R2' U' R' U2' R2' U' R2 U2' R2' U2' R2' U2' R2 U2' R2' U' R2\",\n    \"R2' U2' R2' U2' R2 U2 R2' U' R2 U2' R2' U2 R' U R2' U2' R2 U2' R2' U' R2\",\n    \"R' U2' R U2' R U2' R U2' R U' R2' U R' U2 R2' U2 R' U' R2 U' R'\",\n    \"R' U' R' U2 R U2 R' U2' R2 U2 R' U2' R' U2' R U' R U2' R' U' R\",\n    \"R U R U R' U R U2' R' U2' R' U2' R' U2 R U2 R U' R2' U2 R\",\n    \"R U R' U' R' U2' R U R U' R2' U2 R U R2 U2' R2' U' R2 U2' R2'\",\n    \"R U R' U' R' U2' R U R U' R2' U2 R U R2' U2' R2 U' R2' U2' R2\",\n    \"R U' R2 U R2' U2 R2 U2' R2' U R2 U2' R2' U2' R2 U2' R2 U2' R2' U' R2\",\n    \"R U' R2 U2' R2' U2' R2 U2 R2' U' R2 U2' R2' U2' R2 U2' R2 U2' R2' U' R2\",\n    \"R2 U2 R2' U2' R2' U R' U' R2' U2 R2 U R U' R' U R2' U' R2 U2' R2'\",\n    \"R2' U2 R2 U2 R2' U R2 U' R U R' U' R2' U2' R2 U R U' R2 U2 R2\",\n    \"R' U' R2' U R2 U2 R2' U2' R2 U R2' U2' R2 U2' R2' U2' R2' U2' R2 U' R2'\",\n    \"R' U' R2' U2' R2 U2' R2' U2 R2 U' R2' U2' R2 U2' R2' U2' R2' U2' R2 U' R2'\",\n    \"R U R' U2 R' U2' R2 U R' U R U2 R' U2 R' U2 R U' R' U2 R\",\n    \"R U R' U2' R2 U2' R2 U2' R2' U R2' U' R U R2' U R2 U' R U2' R2'\",\n    \"R U2' R2' U' R2 U2' R' U R' U2 R2 U2' R' U2' R U2 R' U2' R U' R'\",\n    \"R2 U R' U R U2' R2' U' R2 U2' R2' U2' R2 U2 R' U' R' U R2 U2 R2'\",\n    \"R2 U R' U R2 U2' R2 U' R2' U2' R2 U2' R2 U2 R' U' R' U R2 U2 R2'\",\n    \"R2 U2 R U2' R2' U2 R2' U' R' U' R2' U' R' U' R' U2' R U' R U2 R\",\n    \"R2 U2' R2 U' R2' U2' R2' U R' U2 R2 U2' R' U2' R U2 R' U2' R U' R'\",\n    \"R2' U R U' R2' U' R2 U R2' U R2' U R2 U2' R2 U2 R2' U2' R U' R2\",\n    \"R2' U R U' R2' U' R2 U R2' U R2' U R' U2' R2' U2 R2 U2' R' U' R2\",\n    \"R2' U R' U' R2 U' R2' U R2 U R U R2 U2' R2 U2 R2' U2' R U' R2\",\n    \"R2' U R' U' R2 U' R2' U R2 U R U R' U2' R2' U2 R2 U2' R' U' R2\",\n    \"R' U2 R U' R' U' R U' R2' U2' R' U2 R2' U2 R2' U2' R' U2' R U2 R2\",\n    \"R' U2' R' U' R2' U' R' U R2' U2' R U R' U2 R2 U' R U R2' U2' R\",\n    \"R U R U2 R' U2' R' U R U2 R' U' R' U' R2 U2' R2' U2' R2' U2 R2'\",\n    \"R U R2 U2 R2' U2 R' U R2' U R' U2 R2' U2 R2 U R2' U R2' U R2\",\n    \"R U R2 U' R2' U R U2 R U R U2 R2' U' R' U' R' U R2' U2' R'\",\n    \"R U2 R2 U R2' U2 R2 U2' R2 U R2' U2' R2 U2' R2' U2' R2 U2' R2' U' R2\",\n    \"R U2 R2 U2 R' U2' R' U2' R2' U2' R2' U2' R' U' R2 U R U2' R U' R2\",\n    \"R U2 R2 U' R U R U R2 U2' R' U' R' U2' R' U' R2 U R2' U' R'\",\n    \"R U2 R2' U R U R U2' R' U' R U2 R U2' R' U' R U2' R2 U2 R\",\n    \"R U2' R U2' R2' U R2' U R' U2 R U2 R' U2 R2' U' R U' R U2' R2'\",\n    \"R U2' R2 U R2' U R U2 R' U2 R2 U R2' U R U R2 U R U' R\",\n    \"R U2' R2 U2' R2 U2 R2' U2 R2' U2 R2 U2 R2' U R' U2' R U' R2 U2' R2\",\n    \"R U2' R2 U' R U2' R' U' R U2' R2 U2 R' U R2' U2 R2 U' R2' U2 R2\",\n    \"R U2' R2' U2 R' U R U2 R' U R2' U2 R' U R2' U2 R2 U' R2' U2 R2\",\n    \"R U2' R' U' R2' U2 R2 U R U2' R' U' R2' U2' R2 U R U2 R2 U2 R2\",\n    \"R U' R' U R U2' R2 U2 R2' U R2 U' R2' U R' U' R U R2 U2 R2\",\n    \"R U' R' U R2 U2' R U2' R2' U' R2 U2' R2' U2' R' U' R U R U2 R2'\",\n    \"R U' R' U R2 U2' R2 U2' R2 U' R2' U2' R2 U2' R' U' R U R U2 R2'\",\n    \"R U' R' U2' R' U2' R U2 R U' R2' U2' R2 U R' U' R U2 R2' U' R\",\n    \"R2 U R2' U2 R2 U2 R2' U2 R2 U2 R2' U' R2 U2 R2 U2' R2' U' R2 U2' R\",\n    \"R2 U R2' U2 R2 U2 R2' U2 R2' U2 R2 U2' R2 U2' R2' U2' R2 U' R U2' R2\",\n    \"R2 U2 R U R2 U2 R2' U' R' U2' R2' U2' R2 U2 R U R2 U2' R2' U' R2\",\n    \"R2 U2 R2 U R U2 R' U' R2' U2' R2 U R U2 R2 U2' R2' U2' R' U' R\",\n    \"R2 U2 R2' U R2 U2 R2' U2 R U R' U' R' U2' R U R U' R2' U2 R\",\n    \"R2 U2 R' U R' U R2 U2' R U2' R' U2' R U' R2 U' R2 U2 R' U2 R'\",\n    \"R2 U2 R' U2' R2 U R U R U' R2 U R2' U R2 U' R' U2' R' U2 R2'\",\n    \"R2 U2 R' U2' R2 U R U R2 U R U2' R' U2 R' U2' R U' R' U2 R2'\",\n    \"R2 U2 R' U2' R2 U R U R2 U' R' U2 R U2' R U2 R' U2 R' U2 R2'\",\n    \"R2 U2 R' U2' R2 U R U R2' U R2' U' R2 U' R2' U R U2' R' U2 R2'\",\n    \"R2 U2' R U R' U2 R U2' R U2 R' U' R2' U' R' U' R2' U2 R U2' R2'\",\n    \"R2 U2' R U2 R U R2' U' R2 U' R2' U R' U' R' U' R2' U2 R U2' R2'\",\n    \"R2 U2' R U2 R2 U' R' U2 R U' R' U' R' U2 R' U2' R2' U R2' U2' R2\",\n    \"R2 U2' R U2 R' U' R2 U R2' U R2 U' R2 U' R' U' R2' U2 R U2' R2'\",\n    \"R2 U2' R U2' R U2' R' U2 R' U2' R U R2' U' R' U' R2' U2 R U2' R2'\",\n    \"R2 U2' R U2' R2 U R' U R' U2 R U2 R' U2 R2 U' R2 U' R U2' R2\",\n    \"R2 U2' R2 U2 R2 U2 R2' U R U R U2' R' U' R U2 R U2' R' U' R'\",\n    \"R2 U2' R' U' R' U R U2 R2 U2 R2' U R2 U2 R' U2 R2' U' R U R'\",\n    \"R2 U2' R' U' R' U R U2 R2' U2 R2 U R2' U2 R2' U2 R2' U' R U R'\",\n    \"R2' U R U2 R' U R2' U2 R' U R2' U2 R2 U' R2' U2 R2' U2' R2' U2 R\",\n    \"R2' U R U2' R' U2 R' U2' R U R2' U' R' U' R2' U2 R U R U2 R2\",\n    \"R2' U R2 U2 R2' U2 R2 U2 R2' U2 R2 U' R2' U2 R2' U2' R2 U' R2' U2' R'\",\n    \"R2' U R2 U2 R2' U' R' U2' R2' U2 R2 U2 R U R2 U2' R2' U' R' U2' R2'\",\n    \"R2' U R' U2 R' U' R2' U R U2 R2 U2 R2 U2 R U2 R U2' R2' U2' R'\",\n    \"R2' U2 R2 U R2' U2 R2 U2 R U R' U' R' U2' R U R U' R2' U2 R\",\n    \"R2' U2 R2 U' R2 U2 R U2' R U R U R' U2' R U R2' U2' R' U2 R2'\",\n    \"R2' U2 R2' U R' U2 R U' R2 U2' R2' U2' R2 U2' R2 U2' R2' U2 R2' U2 R'\",\n    \"R2' U2 R' U R2' U R2' U2' R U2' R' U2' R U' R U' R2' U2 R' U2 R2'\",\n    \"R2' U2 R' U R2' U2 R2 U2 R2' U2 R2' U2' R2 U2' R2 U2' R2' U2' R2 U' R2'\",\n    \"R2' U2' R2 U R2' U2' R2 U' R U2' R2 U' R U2' R' U' R U2' R2 U2 R'\",\n    \"R2' U2' R2 U R2' U2' R2 U' R U2' R2' U2 R' U R U2 R' U R2' U2 R'\",\n    \"R2' U2' R2' U2' R' U' R2' U2 R2 U R U2 R' U' R2' U2' R2 U R U2 R'\",\n    \"R2' U2' R2' U' R' U R U' R2 U R2' U' R2 U2' R2' U2 R' U' R U R'\",\n    \"R2' U2' R' U' R' U2' R2 U R U R2 U R U2' R' U2 R' U2' R U R2\",\n    \"R2' U2' R' U' R' U2' R2 U R U R2 U' R' U2 R U2' R U2 R' U' R2\",\n    \"R2' U' R2 U' R2 U' R2' U2' R2 U2' R U' R2 U' R U2' R2 U2' R2' U' R'\",\n    \"R2' U' R' U2 R U2' R U2 R' U' R2' U' R' U' R2' U2 R U R U2 R2\",\n    \"R' U R U2 R2 U2 R2' U2' R' U' R2' U2 R2 U R U2' R' U' R2' U2' R2'\",\n    \"R' U R2 U R' U R2' U2' R' U' R' U R U2 R U R2 U' R2' U2' R\",\n    \"R' U R2 U2' R' U R U' R2' U2 R2 U R' U2' R' U2 R U2 R U R'\",\n    \"R' U R' U' R2' U' R' U' R2 U' R2' U2' R U2' R' U' R2 U' R2' U2 R'\",\n    \"R' U2 R2 U R2' U' R' U2' R' U' R U R U2 R2 U' R U' R2' U' R\",\n    \"R' U2 R2' U R2 U2 R2' U2' R2' U R2 U2' R2' U2' R2 U2' R2' U2' R2 U' R2'\",\n    \"R' U2' R2 U R' U' R' U2 R U R U' R' U2' R2 U2' R2' U' R2 U2' R2'\",\n    \"R' U2' R2 U R' U' R' U2 R U R U' R' U2' R2' U2' R2 U' R2' U2' R2\",\n    \"R' U2' R2 U2 R2 U2' R2 U R2' U2' R2 U' R U2' R2 U' R U2' R' U' R2\",\n    \"R' U2' R2' U2 R' U R U2 R' U2' R' U R U2 R' U' R' U' R2 U2' R'\",\n    \"R U R2 U2' R U' R' U2' R2' U2' R' U2' R2' U2' R' U' R2 U R U2 R2\",\n    \"R U2' R2' U' R2 U' R U R2' U R2' U' R2' U R' U2' R' U' R2' U2' R\",\n    \"R U2' R2' U' R' U2' R' U R2' U' R2' U R2' U R U' R2 U' R2' U2' R\",\n    \"R U2' R' U2 R2' U' R U2' R U R2 U R2' U' R2' U R2' U R2' U2 R'\",\n    \"R2 U R U R2 U R2' U2' R2 U R2 U' R2 U' R2' U2' R2 U2' R2' U2 R2'\",\n    \"R2 U2 R U R2 U' R' U2' R2' U2' R' U2' R2' U2' R' U' R U2' R2 U R\",\n    \"R2 U2 R U2' R2 U2' R' U2 R U' R' U' R' U2 R' U2' R2' U R2' U2' R2\",\n    \"R2 U2 R U' R2' U R2' U R2 U2' R' U' R' U2 R' U R2 U2' R2 U2 R2'\",\n    \"R2 U2 R2' U R2' U2' R2 U R2 U' R2 U' R2' U2 R U R U2' R2' U2 R2'\",\n    \"R2 U2 R2' U' R2 U2 R' U2 R2' U' R U2' R U2 R2' U R2' U2 R' U R'\",\n    \"R2 U2 R2' U' R2 U2 R' U' R U2' R2 U' R2 U2' R' U2 R' U R2 U2' R'\",\n    \"R2 U2 R' U2' R U R U2 R2' U' R2 U' R2 U R2 U2' R2' U R2 U2 R2'\",\n    \"R2 U2' R2' U R2' U2' R' U2 R' U' R' U' R U2 R' U2' R2 U2' R U2 R2\",\n    \"R2' U2 R2 U R2' U2' R2 U R2 U' R2 U' R2' U2 R U R U2' R' U2 R2\",\n    \"R2' U2 R2 U2' R2 U R' U2 R' U' R' U2' R2 U R2' U R2' U' R U2 R2\",\n    \"R2' U2 R2' U2' R U R U2 R2' U' R2 U' R2 U R2 U2' R2' U R2' U2 R2\",\n    \"R2' U2 R2' U2' R2 U2' R2' U' R2 U' R2 U R2 U2' R2' U R2 U R U R2\",\n    \"R' U R' U2 R2' U R2' U2 R U2' R U' R2' U2 R' U2 R2 U' R2' U2 R2\",\n    \"R' U2 R U2' R U R' U2 R2 U2 R' U' R2' U2 R2' U2 R2' U' R U' R'\",\n    \"R' U2 R2' U R2' U R2' U' R2' U R2 U R U2' R U' R2' U2 R' U2' R\",\n    \"R' U2' R2 U R' U2 R' U2' R2 U' R2 U2' R U' R' U2 R2 U' R2' U2 R2\",\n    \"R' U' R U' R2' U2 R2' U2 R2' U' R' U2 R2 U2 R' U R U2' R U2 R'\",\n    \"R U R U2 R' U' R' U R2 U2' R' U' R2 U2 R2' U R2 U2 R2' U2 R'\",\n    \"R U R U2 R' U' R' U R2 U2' R' U' R2' U2 R2 U R2' U2 R2 U2 R'\",\n    \"R U2 R U R2 U R U' R2 U2 R' U' R U2' R2' U R' U' R2 U2 R'\",\n    \"R U2 R2' U' R2 U R2 U2' R' U' R U R U2 R2 U' R' U R2 U2 R'\",\n    \"R U2' R2 U2 R U2 R' U' R2 U R U' R U2 R' U' R2 U2' R2' U R2'\",\n    \"R U2' R2' U' R U R2' U2' R' U' R' U R U2 R2' U' R2' U R2 U2' R'\",\n    \"R U2' R' U R U R' U R2 U2 R U2' R2 U2' R2 U2 R U2 R' U2' R2'\",\n    \"R U2' R' U' R U2 R2' U2' R U R U' R2' U2 R2 U2' R' U2 R U R'\",\n    \"R U2' R' U' R U2 R' U2' R2 U2 R2' U' R U R U2' R2' U2 R U R'\",\n    \"R U' R U R2 U R U' R' U2' R2' U2' R2' U R U R2' U2' R2' U2' R2'\",\n    \"R U' R U2 R2 U' R' U R2 U R2' U2' R' U R2 U R2 U' R U2' R2'\",\n    \"R U' R' U2' R U2 R2' U2' R2 U R' U' R' U2 R2 U2' R' U R U2 R'\",\n    \"R U' R' U2' R2 U2 R' U' R' U R2 U2' R2' U2 R U2' R' U R U2 R'\",\n    \"R2 U R2' U2 R2 U2' R2' U R2 U2' R2' U2' R2 U2' R2 U2' R2' U' R2 U2' R\",\n    \"R2 U2 R U2 R' U2' R' U2 R U R2 U R U' R' U' R2' U2' R U2 R2'\",\n    \"R2 U2 R2 U2 R2 U' R' U' R2 U2 R2 U2 R U R' U' R2' U' R' U R'\",\n    \"R2 U2 R' U R2' U' R2' U' R U2 R2 U' R2' U' R U R2' U2' R' U R'\",\n    \"R2 U2' R2' U2' R2 U2 R2' U' R2 U2' R2' U2' R2 U2' R2 U2' R2' U' R2 U2' R\",\n    \"R2 U2' R' U2 R2 U R U R' U' R2' U2 R U2 R' U2' R' U2 R U R2'\",\n    \"R2 U2' R' U2 R2 U R U R' U' R2' U' R' U2' R U2 R U2' R' U2' R2'\",\n    \"R2 U' R U R2' U R2 U' R2' U' R' U' R U2 R2 U2' R2' U2 R U R2'\",\n    \"R2 U' R U R2' U R2 U' R2' U' R' U' R2' U2 R2' U2' R2 U2 R' U R2'\",\n    \"R2 U' R2 U R2 U2 R2' U' R U2' R2' U2 R' U' R2 U R' U R U2 R2\",\n    \"R2 U' R2 U2 R2' U R U2' R' U R' U' R2' U R U2' R' U2' R2' U2 R'\",\n    \"R2 U' R' U R2 U R2' U' R2 U' R2 U' R U2 R2 U2' R2' U2 R U R2'\",\n    \"R2 U' R' U R2 U R2' U' R2 U' R2 U' R2' U2 R2' U2' R2 U2 R' U R2'\",\n    \"R2 U' R' U2' R U2 R U2' R' U2' R2 U R U' R' U' R2' U2' R U2 R2'\",\n    \"R2' U R2 U2 R2' U2' R2 U R2' U2' R2 U2' R2' U2' R2' U2' R2 U' R2' U2' R'\",\n    \"R2' U2 R2' U R2 U2 R2 U' R U2' R2' U2 R U2 R' U2' R U2 R' U R\",\n    \"R2' U2' R2 U2' R2' U2 R2 U' R2' U2' R2 U2' R2' U2' R2' U2' R2 U' R2' U2' R'\",\n    \"R2' U2' R' U2 R2 U2' R2 U R U R2 U R U R U2 R' U R' U2' R'\",\n    \"R2' U2' R' U' R U' R2' U R U2' R2 U2 R' U R2 U2' R2' U' R2' U R2'\",\n    \"R2' U' R U' R2' U2 R2' U R2 U2 R2' U2 R2' U2' R U R U' R2' U2' R2\",\n    \"R2' U' R U' R' U2 R2 U R2' U2 R2 U2 R2' U2' R U R U' R2' U2' R2\",\n    \"R2' U' R' U' R U R U R2 U2 R U' R2' U2' R2 U' R' U2' R U' R'\",\n    \"R' U2 R2 U R2' U2 R U' R U2' R2' U2 R U2 R' U2' R U2 R' U R\",\n    \"R' U2 R2 U R' U2' R2' U' R' U' R' U R U R2' U' R' U2' R U' R'\",\n    \"R' U2 R2 U2 R2' U' R U R U2' R2' U2 R U' R' U' R U2 R' U R\",\n    \"R' U2 R2 U2 R2' U' R2 U R' U' R' U R2 U2' R2' U R U R' U R\",\n    \"R' U' R U2 R2' U2 R2' U2 R2 U' R2 U R' U' R2 U' R2' U R' U2 R2\",\n    \"R' U' R U2' R U2 R2' U' R U' R' U2' R U2' R U2' R' U R U2' R'\",\n    \"R' U' R U2' R' U R U R' U2' R2 U2 R' U' R' U R2 U2' R2' U2' R\",\n    \"R' U' R U2' R' U' R2 U2' R2' U' R U2 R2 U R U R U' R' U' R2'\",\n    \"R' U' R U2' R' U' R2' U R U R' U' R' U' R2' U2' R' U R2 U2 R'\",\n    \"R' U' R U' R' U2 R U2 R U2 R U2' R' U2' R' U R2 U2' R' U2 R'\",\n    \"R' U' R U' R' U' R2 U2 R2' U' R U R U' R2' U R2 U2' R2' U2' R\",\n    \"R U R2 U2 R2' U2 R2 U2' R2' U R2 U2 R2' U2 R2 U2 R2 U2 R2' U R2\",\n    \"R U R2 U' R2' U2' R2 U2 R2' U' R2 U2 R2' U2 R2 U2 R2 U2 R2' U R2\",\n    \"R U2 R2 U R2' U2 R2 U2 R2 U2 R2' U2 R2 U R2' U2' R2 U2 R2' U2 R2\",\n    \"R U2 R2 U R2' U2 R2 U2 R2 U2 R2' U2 R2 U' R2' U2 R2 U2' R2' U' R2\",\n    \"R U2 R2 U2' R2' U R U2' R U R U2 R2' U' R2 U' R2 U' R2 U2 R2\",\n    \"R U2 R2 U' R2 U' R2 U' R2' U2 R U R U2' R U R2' U2' R2 U2 R2\",\n    \"R U2' R U2 R2' U' R U2 R U2 R' U2' R' U2' R' U2' R U R' U R\",\n    \"R U2' R2 U2' R2' U' R2 U2' R2' U R U2 R2' U' R U R U2' R' U' R'\",\n    \"R U2' R2 U' R2' U2' R2 U2' R2 U2' R2' U2' R2 U R2' U2' R2 U2 R2' U R2\",\n    \"R U2' R2 U' R2' U2' R2 U2' R2 U2' R2' U2' R2 U' R2' U2 R2 U2' R2' U2' R2\",\n    \"R U2' R2' U R2' U R2' U R2 U2' R' U' R' U2 R' U' R2 U2 R2' U2' R\",\n    \"R U2' R2' U2 R2 U' R' U2 R' U' R' U2' R2 U R2' U R2' U R2' U2' R\",\n    \"R U2' R2' U2' R2 U' R2' U2' R2 U R U2 R2' U' R U R U2' R' U' R'\",\n    \"R2 U2 R2 U2' R2' U R U2' R U R U2 R2' U' R2 U' R2 U' R2 U2 R\",\n    \"R2 U2 R2 U' R2 U' R2 U' R2' U2 R U R U2' R U R2' U2' R2 U2 R\",\n    \"R2 U2' R2' U2' R2 U' R2' U R' U' R U R2 U2 R2' U' R' U R2' U2' R2'\",\n    \"R2' U2' R2 U2 R2 U' R U R2 U2' R2' U' R' U R U' R2 U R2' U2 R2\",\n    \"R2' U2' R2' U R2' U R2' U R2 U2' R' U' R' U2 R' U' R2 U2 R2' U2' R'\",\n    \"R2' U2' R2' U2 R2 U' R' U2 R' U' R' U2' R2 U R2' U R2' U R2' U2' R'\",\n    \"R' U R2' U2 R2 U2 R2' U2' R2 U R2' U2 R2 U2 R2' U2 R2' U2 R2 U R2'\",\n    \"R' U R2' U' R2 U2' R2' U2 R2 U' R2' U2 R2 U2 R2' U2 R2' U2 R2 U R2'\",\n    \"R' U2 R2 U2 R2' U R2 U2 R2' U' R' U2' R2 U R' U' R' U2 R U R\",\n    \"R' U2 R2 U2' R2' U R U2' R U R U2 R2' U' R2 U' R2 U' R2 U2 R'\",\n    \"R' U2 R2 U' R2 U' R2 U' R2' U2 R U R U2' R U R2' U2' R2 U2 R'\",\n    \"R' U2 R2' U R2 U2 R2' U2 R2' U2 R2 U2 R2' U R2 U2' R2' U2 R2 U2 R2'\",\n    \"R' U2 R2' U R2 U2 R2' U2 R2' U2 R2 U2 R2' U' R2 U2 R2' U2' R2 U' R2'\",\n    \"R' U2 R2' U2 R2 U R2' U2 R2 U' R' U2' R2 U R' U' R' U2 R U R\",\n    \"R' U2 R' U2' R2 U R' U2' R' U2' R U2 R U2 R U2 R' U' R U' R'\",\n    \"R' U2' R2' U R2' U R2' U R2 U2' R' U' R' U2 R' U' R2 U2 R2' U2' R2'\",\n    \"R' U2' R2' U2 R2 U' R' U2 R' U' R' U2' R2 U R2' U R2' U R2' U2' R2'\",\n    \"R' U2' R2' U' R2 U2' R2' U2' R2' U2' R2 U2' R2' U R2 U2' R2' U2 R2 U R2'\",\n    \"R' U2' R2' U' R2 U2' R2' U2' R2' U2' R2 U2' R2' U' R2 U2 R2' U2' R2 U2' R2'\",\n    \"R' U' R U R U2 R' U' R' U R2 U2' R' U' R2 U2 R2' U R2 U2 R2'\",\n    \"R' U' R U R U2 R' U' R' U R2 U2' R' U' R2' U2 R2 U R2' U2 R2\",\n    \"R' U' R' U' R U' R' U2 R U2 R U2 R U2' R' U2' R' U R2 U2' R'\",\n    \"R U R U2' R' U2' R U2 R2' U2' R U2 R U2 R' U R' U2 R U R'\",\n    \"R U R' U R U R2' U2' R2 U R' U' R' U R2 U' R2' U2 R2 U2 R'\",\n    \"R U R' U R U2' R' U2' R' U2' R' U2 R U2 R U' R2' U2 R U2' R\",\n    \"R U R' U2 R U R2 U' R' U' R U R U R2 U2 R U' R2' U2' R\",\n    \"R U R' U2 R U R2' U2 R2 U R' U2' R2' U' R' U' R' U R U R2\",\n    \"R U R' U2 R U' R' U' R U2 R2' U2' R U R U' R2' U2 R2 U2 R'\",\n    \"R U2 R' U2 R' U2 R' U2 R' U R2 U' R U2' R2 U2' R U R2' U R\",\n    \"R U2' R2' U2' R2 U R2' U' R U R U' R2' U2 R2 U' R' U' R U' R'\",\n    \"R U2' R2' U2' R2 U R' U' R' U2 R2 U2' R' U R U R' U2' R U' R'\",\n    \"R U2' R2' U' R U2 R2 U R U R U' R' U' R2 U R U2 R' U R\",\n    \"R2 U R U R' U' R' U' R2' U2' R' U R2 U2 R2' U R U2 R' U R\",\n    \"R2 U2 R U R' U R2 U' R' U2 R2' U2' R U' R2' U2 R2 U R2 U' R2\",\n    \"R2 U2 R2 U2 R2' U2' R2 U R2' U2 R2 U2' R U' R2 U2 R2' U2 R2 U R2'\",\n    \"R2 U2 R2' U2 R2 U R U2 R2 U R2' U2 R2 U2 R2 U2 R2' U2 R2 U R2'\",\n    \"R2 U2 R2' U2 R2 U2' R2' U R2 U2 R2' U2 R2 U2 R2 U2 R2' U R2 U2 R\",\n    \"R2 U' R2 U2' R2' U2 R2 U' R2' U2 R2 U2' R U' R2 U2 R2' U2 R2 U R2'\",\n    \"R2 U' R2' U2' R2 U2 R2' U' R2 U2 R2' U2 R2 U2 R2 U2 R2' U R2 U2 R\",\n    \"R2' U R U2 R' U2' R' U2 R U2 R2' U' R' U R U R2 U2 R' U2' R2\",\n    \"R2' U R2' U2' R2 U' R' U2 R U' R U R2 U' R' U2 R U2 R2 U2' R\",\n    \"R2' U R2' U' R2' U2' R2 U R' U2 R2 U2' R U R2' U' R U' R' U2' R2'\",\n    \"R2' U2 R U2' R2' U' R' U' R U R2 U R U2 R' U2' R' U2 R U2 R2\",\n    \"R2' U2 R U2' R2' U' R' U' R U R2 U2' R' U2' R U2 R U2' R' U' R2\",\n    \"R2' U2 R2 U2 R2' U R' U2 R2' U R2 U2 R2' U2 R2' U2 R2 U2 R2' U R2\",\n    \"R2' U2 R2 U2 R2' U2' R2 U R2' U2 R2 U2 R2' U2 R2' U2 R2 U R2' U2 R'\",\n    \"R2' U2 R2' U2 R2 U2' R2' U R2 U2 R2' U2' R' U' R2' U2 R2 U2 R2' U R2\",\n    \"R2' U2' R U' R2 U R2 U R' U2' R2' U R2 U R' U' R2 U2 R U' R\",\n    \"R2' U2' R2' U2' R2' U R U R2' U2' R2' U2' R' U' R U R2 U R U' R\",\n    \"R2' U2' R' U2' R U2 R U2' R' U' R2' U' R' U R U R2 U2 R' U2' R2\",\n    \"R2' U' R2 U2' R2' U2 R2 U' R2' U2 R2 U2 R2' U2 R2' U2 R2 U R2' U2 R'\",\n    \"R2' U' R2' U2' R2 U2 R2' U' R2 U2 R2' U2' R' U' R2' U2 R2 U2 R2' U R2\",\n    \"R' U R U2 R2' U2' R U R U' R2' U2 R2 U2' R' U2 R U' R' U2' R\",\n    \"R' U R U2 R' U2' R2 U2 R2' U' R U R U2' R2' U2 R U' R' U2' R\",\n    \"R' U R' U2' R2' U R U' R2' U' R2 U2 R U' R2' U' R2' U R' U2 R2\",\n    \"R' U R' U' R2' U' R' U R U2 R2 U2 R2 U' R' U' R2 U2 R2 U2 R2\",\n    \"R' U2 R U R' U2' R U2 R2' U2' R2 U R' U' R' U2 R2 U2' R' U' R\",\n    \"R' U2 R U R' U2' R2 U2 R' U' R' U R2 U2' R2' U2 R U2' R' U' R\",\n    \"R' U2 R U' R' U' R' U2 R' U2' R2' U R2' U2' R2 U R2 U2 R U2' R2\",\n    \"R' U2 R2 U R' U' R2 U2 R U R U' R' U2' R2 U R2 U' R2' U2 R\",\n    \"R' U2 R2' U2' R' U2' R U R2' U' R' U R' U2' R U R2' U2 R2 U' R2\",\n    \"R' U2' R2 U R2' U' R2' U2 R U R' U' R' U2' R2' U R U' R2' U2' R\",\n  ],\n  [\n    \"R U' R U R U' R' U' R U R U2 R U' R U' R2' U' R2'\",\n    \"R U' R U' R U2 R U R U' R' U' R U R U' R' U' R2\",\n    \"R2 U R2 U R' U R' U2' R' U' R' U R U R' U' R' U R'\",\n    \"R2 U2' R U2 R U R' U' R2' U' R2 U R2' U' R2' U2 R U2 R2\",\n    \"R2' U R U R' U' R' U R U R' U' R' U2' R' U R' U R'\",\n    \"R2' U2' R' U2' R2 U R2 U' R2' U R2 U R U' R' U2' R' U2 R2'\",\n    \"R2 U2' R2' U2 R2 U R2' U R2' U R2' U R2 U2' R' U' R' U2 R'\",\n    \"R2' U R' U2 R2' U2 R2 U R2' U R2' U R2' U R2 U2 R2' U2 R'\",\n    \"R' U R U R' U R2 U2' R' U' R' U' R2 U' R' U2' R' U2 R\",\n    \"R' U R U2 R' U2' R' U' R2 U' R' U' R' U2' R2 U R' U R\",\n    \"R2 U2 R2' U2' R2 U2' R2' U R2' U R2' U R2 U2' R' U' R' U2 R'\",\n    \"R2' U2 R2' U2' R2 U' R U2' R' U' R U2' R2 U2 R' U R2' U2 R2\",\n    \"R2' U2 R2' U2' R2' U2 R' U R U2 R' U R2' U2 R' U R2' U2 R2\",\n    \"R2' U2' R2 U R' U' R U2 R2' U' R2 U' R' U2' R' U2' R U2 R\",\n    \"R' U2' R U R U R2' U2 R2 U2 R2 U2' R U' R' U2' R U2 R\",\n    \"R' U' R' U2' R2 U R' U R U R' U R U2 R' U2' R' U' R2\",\n    \"R U2' R U R U2 R2' U' R2 U' R2 U' R2 U2 R2' U2 R2 U2' R2'\",\n    \"R U2' R U R U2 R2' U' R2 U' R2 U' R2 U' R2' U2' R2 U2 R2'\",\n    \"R U2' R2 U2' R2' U' R2 U' R2 U' R2 U' R2' U2' R2 U2' R U' R2\",\n    \"R2' U R U2 R U2' R' U' R U' R' U' R U' R2' U2 R U R\",\n    \"R2' U2' R2 U' R U2' R2 U' R U2' R' U' R U2' R2 U2 R2 U2' R2\",\n    \"R2' U2' R2 U' R U2' R2' U2 R' U R U2 R' U R2' U2 R2 U2' R2\",\n    \"R' U2' R U2 R U R2' U R U R U2 R2' U' R U' R' U' R\",\n    \"R' U2' R' U2 R U R' U2 R2' U2' R2' U2' R2 U' R' U' R' U2 R\",\n    \"R' U2' R' U2 R U2 R U R2' U R2 U2' R' U R U' R2' U2 R2\",\n    \"R' U' R U' R2' U2 R U R U R2' U R U2 R U2' R' U' R\",\n    \"R U2 R' U2 R U' R' U' R U2' R' U2' R U' R' U' R U2 R'\",\n    \"R U' R' U2' R U2 R U R2' U R U R U2 R2' U' R U' R'\",\n    \"R U' R' U' R U' R2' U2 R U R U R2' U R U2 R U2' R'\",\n    \"R2 U R' U2 R' U' R' U2' R2 U R2' U R2' U R2' U R2 U2 R2'\",\n    \"R2 U2 R2' U R2 U R2' U R2 U2 R2' U2 R2 U R2' U R2 U R2'\",\n    \"R2 U2 R2' U R2 U' R2' U R' U' R U R2 U2 R2' U' R' U R\",\n    \"R2 U2 R2' U2 R2 U R2 U2' R2' U' R2 U2' R2' U2 R2' U' R2 U2 R2'\",\n    \"R2 U2 R2' U2 R2 U R2' U2' R2 U2 R2' U2 R2 U2' R2' U R2 U2 R2'\",\n    \"R2 U2 R2' U2 R2 U R2' U2' R2 U' R2' U2' R2 U2 R2' U' R2 U2 R2'\",\n    \"R2 U2 R2' U2 R2 U' R2' U2 R2 U2' R2' U' R2 U2' R2' U R2 U2 R2'\",\n    \"R2 U2 R2' U2 R2 U' R2' U2 R2' U2' R2 U' R2' U2' R2 U R2 U2 R2'\",\n    \"R2 U2' R U R' U' R2' U2 R2 U R U' R' U R2' U' R2 U R2'\",\n    \"R2 U2' R2 U2' R2' U2 R2' U2 R2 U2 R2' U R' U2 R U' R2 U2' R2'\",\n    \"R2 U2' R2' U2' R2 U R2' U2' R2 U2 R2' U R2 U2 R2' U' R2 U2' R2'\",\n    \"R2 U2' R2' U2' R2 U R2' U2' R2' U2 R2 U R2' U2 R2 U' R2 U2' R2'\",\n    \"R2 U2' R2' U2' R2 U' R U2 R' U R2' U2 R2 U2 R2' U2 R2' U2' R2\",\n    \"R2 U2' R2' U2' R2 U' R2 U2 R2' U R2 U2 R2' U2' R2' U R2 U2' R2'\",\n    \"R2 U2' R2' U2' R2 U' R2' U2 R2 U R2' U2 R2 U2' R2' U R2 U2' R2'\",\n    \"R2 U2' R2' U2' R2 U' R2' U2 R2 U2' R2' U2' R2 U2 R2' U' R2 U2' R2'\",\n    \"R2 U2' R2' U' R2 U' R2' U' R2 U2' R2' U2' R2 U' R2' U' R2 U' R2'\",\n    \"R2 U' R U2' R2 U2' R2' U' R2 U' R2 U' R2 U' R2' U2' R2 U2' R\",\n    \"R2' U2 R2 U R2' U R2 U R2' U2 R2 U2 R2' U R2 U R2' U R2\",\n    \"R2' U2 R2 U2 R2' U R2 U2' R2' U2 R2 U2 R2' U2' R2 U R2' U2 R2\",\n    \"R2' U2 R2 U2 R2' U R2 U2' R2' U' R2 U2' R2' U2 R2 U' R2' U2 R2\",\n    \"R2' U2 R2 U2 R2' U R2' U2' R2 U' R2' U2' R2 U2 R2 U' R2' U2 R2\",\n    \"R2' U2 R2 U2 R2' U R' U2' R U' R2 U2' R2' U2' R2 U2' R2 U2 R2'\",\n    \"R2' U2 R2 U2 R2' U' R2 U2 R2 U2' R2' U' R2 U2' R2' U R2' U2 R2\",\n    \"R2' U2 R2 U2 R2' U' R2 U2 R2' U2' R2 U' R2' U2' R2 U R2' U2 R2\",\n    \"R2' U2 R2 U2' R2' U' R2 U' R2 U' R2 U' R2' U2 R U R U2' R\",\n    \"R2' U2 R2' U2 R2 U2' R2 U2' R2' U2' R2 U' R U2' R' U R2' U2 R2\",\n    \"R2' U2 R' U' R U R2 U2' R2' U' R' U R U' R2 U R2' U' R2\",\n    \"R2' U2' R2 U2' R2' U R2 U2' R2 U2 R2' U R2 U2 R2' U' R2' U2' R2\",\n    \"R2' U2' R2 U2' R2' U R2 U2' R2' U2 R2 U R2' U2 R2 U' R2' U2' R2\",\n    \"R2' U2' R2 U2' R2' U' R2 U2 R2' U R2 U2 R2' U2' R2 U R2' U2' R2\",\n    \"R2' U2' R2 U2' R2' U' R2 U2 R2' U2' R2 U2' R2' U2 R2 U' R2' U2' R2\",\n    \"R2' U2' R2 U2' R2' U' R2' U2 R2 U R2' U2 R2 U2' R2 U R2' U2' R2\",\n    \"R2' U2' R2 U' R2' U R2 U' R U R' U' R2' U2' R2 U R U' R'\",\n    \"R2' U2' R2 U' R2' U' R2 U' R2' U2' R2 U2' R2' U' R2 U' R2' U' R2\",\n    \"R2' U' R U2' R U R U2 R2' U' R2 U' R2 U' R2 U' R2' U2' R2\",\n    \"R' U2' R U2' R' U R U R' U2 R U2 R' U R U R' U2' R\",\n    \"R U R' U R2 U2' R' U' R' U' R2 U' R' U2' R' U2 R U R'\",\n    \"R U2 R U2' R' U2' R' U' R2 U' R2' U2 R U' R' U R2 U2' R2'\",\n    \"R U2 R U2' R' U' R U2' R2 U2 R2 U2 R2' U R U R U2' R'\",\n    \"R U2 R' U2' R' U' R2 U' R' U' R' U2' R2 U R' U R U R'\",\n    \"R2 U2 R U2 R2' U' R2' U R2 U' R2' U' R' U R U2 R U2' R2\",\n    \"R2 U2 R2' U R' U2 R2 U2' R U' R' U2' R U' R2 U2' R2' U2 R2'\",\n    \"R2 U2 R2' U R' U2 R2' U R' U2 R U R' U2 R2' U2' R2' U2 R2'\",\n    \"R2 U' R' U2' R' U2 R U R' U R U R' U R2 U2' R' U' R'\",\n    \"R2 U' R' U' R U R U' R' U' R U R U2 R U' R U' R\",\n    \"R2' U2 R' U2' R' U' R U R2 U R2' U' R2 U R2 U2' R' U2' R2'\",\n    \"R2' U' R2' U' R U' R U2 R U R U' R' U' R U R U' R\",\n    \"R' U R' U R' U2' R' U' R' U R U R' U' R' U R U R2'\",\n    \"R' U R' U' R' U R U R' U' R' U2' R' U R' U R2 U R2\",\n    \"R' U2 R2' U2 R2 U R2' U R2' U R2' U R2 U2 R2' U2 R' U R2'\",\n    \"R' U2 R' U' R' U2' R2 U R2' U R2' U R2' U R2 U2 R2' U2' R2\",\n    \"R' U2 R' U' R' U2' R2 U R2' U R2' U R2' U2' R2 U2' R2' U2 R2\",\n    \"R U R U2 R2' U' R U' R' U' R U' R' U2' R U2 R U R2'\",\n    \"R U2 R2' U2' R2 U R2' U R' U R2 U R U' R2 U' R2' U' R'\",\n    \"R U2 R' U' R' U' R2 U2' R2' U2' R2' U2 R' U R U2 R' U2' R'\",\n    \"R2 U R2' U R2 U R2' U2 R2 U2 R2' U R2 U R2' U R2 U2 R2'\",\n    \"R2 U2 R2' U R2 U2' R2' U2 R2 U2 R2' U2' R2 U R2' U2 R2 U2 R2'\",\n    \"R2 U2 R2' U R2 U2' R2' U' R2 U2' R2' U2 R2 U' R2' U2 R2 U2 R2'\",\n    \"R2 U2 R2' U R2' U2' R2 U' R2' U2' R2 U2 R2 U' R2' U2 R2 U2 R2'\",\n    \"R2 U2 R2' U R' U2' R U' R2 U2' R2' U2' R2 U2' R2 U2 R2' U2 R2'\",\n    \"R2 U2 R2' U' R U R' U2' R2 U R2' U R U2 R U2 R' U2' R'\",\n    \"R2 U2 R2' U' R2 U2 R2 U2' R2' U' R2 U2' R2' U R2' U2 R2 U2 R2'\",\n    \"R2 U2 R2' U' R2 U2 R2' U2' R2 U' R2' U2' R2 U R2' U2 R2 U2 R2'\",\n    \"R2 U2 R' U2 R U2' R U2 R' U' R2 U R U R2 U2' R' U' R2\",\n    \"R2 U2' R U R2' U' R2 U' R2' U R2' U R U R2 U2' R' U' R2\",\n    \"R2 U2' R2 U2 R2 U2' R U' R' U2' R U' R2 U2' R U' R2 U2' R2'\",\n    \"R2 U2' R2 U2 R2' U R' U2 R U R' U2 R2' U2' R U' R2 U2' R2'\",\n    \"R2 U2' R2' U' R2 U' R2 U' R2 U' R2' U2 R U R U2' R U' R2'\",\n    \"R2 U2' R' U' R2 U R2' U R2 U' R U R U R2 U2' R' U' R2\",\n    \"R2 U' R U2' R' U2 R' U2' R U R2 U R U R2 U2' R' U' R2\",\n    \"R2' U R U2 R2' U' R' U' R2 U' R2 U R2' U R2 U' R' U2 R2'\",\n    \"R2' U R U2 R2' U' R' U' R2' U R U2' R' U2 R' U2' R U2' R2'\",\n    \"R2' U R U2 R2' U' R' U' R2' U' R' U2 R U2' R U2 R' U R2'\",\n    \"R2' U R U2 R2' U' R' U' R' U R2' U' R2 U' R2' U R U2 R2'\",\n    \"R2' U R2 U R2' U R2 U2 R2' U2 R2 U R2' U R2 U R2' U2 R2\",\n    \"R2' U R2 U' R2' U R' U' R U R2 U2 R2' U' R' U R U2' R2\",\n    \"R2' U2 R2 U R U2' R' U' R2' U2' R2 U R U2 R2 U2 R2' U2' R'\",\n    \"R2' U2 R2 U R2 U2' R2' U' R2 U2' R2' U2 R2' U' R2 U2 R2' U2 R2\",\n    \"R2' U2 R2 U R2' U2' R2 U2 R2' U2 R2 U2' R2' U R2 U2 R2' U2 R2\",\n    \"R2' U2 R2 U R2' U2' R2 U' R2' U2' R2 U2 R2' U' R2 U2 R2' U2 R2\",\n    \"R2' U2 R2 U2' R2 U2' R2' U2' R2 U' R U2' R' U R2' U2 R2 U2 R2'\",\n    \"R2' U2 R2 U' R2' U2 R2 U2' R2' U' R2 U2' R2' U R2 U2 R2' U2 R2\",\n    \"R2' U2 R2 U' R2' U2 R2' U2' R2 U' R2' U2' R2 U R2 U2 R2' U2 R2\",\n    \"R2' U2' R2 U2 R2' U2 R2 U' R2 U' R2 U' R2' U2 R U R U2' R\",\n    \"R' U2 R U' R' U' R U2' R' U2' R U' R' U' R U2 R' U2 R\",\n    \"R' U2 R2 U2 R2 U R U' R' U2' R' U' R U R2 U2 R2 U2 R'\",\n    \"R' U2' R2' U2 R2 U2 R U R2 U2' R2' U' R' U2' R U R2 U2 R2'\",\n    \"R' U' R U R2 U2' R2' U' R' U R U' R2 U R2' U' R2 U2' R2'\",\n    \"R' U' R2' U' R2 U' R U R2 U R' U R2' U R2 U2' R2' U2 R\",\n    \"R U R2 U R2' U R' U' R2' U' R U' R2 U' R2' U2 R2 U2' R'\",\n    \"R U R' U' R2' U2 R2 U R U' R' U R2' U' R2 U R2' U2 R2\",\n    \"R U2 R2 U2' R2' U2' R' U' R2' U2 R2 U R U2 R' U' R2' U2' R2\",\n    \"R U2' R2' U2' R2' U' R' U R U2 R U R' U' R2' U2' R2' U2' R\",\n    \"R U2' R' U R U R' U2 R U2 R' U R U R' U2' R U2' R'\",\n    \"R2 U2' R2' U R2 U2' R2 U2 R2' U R2 U2 R2' U' R2' U2' R2 U2' R2'\",\n    \"R2 U2' R2' U R2 U2' R2' U2 R2 U R2' U2 R2 U' R2' U2' R2 U2' R2'\",\n    \"R2 U2' R2' U2 R2' U2 R2 U2 R2' U R' U2 R U' R2 U2' R2' U2' R2\",\n    \"R2 U2' R2' U' R2 U2 R2' U R2 U2 R2' U2' R2 U R2' U2' R2 U2' R2'\",\n    \"R2 U2' R2' U' R2 U2 R2' U2' R2 U2' R2' U2 R2 U' R2' U2' R2 U2' R2'\",\n    \"R2 U2' R2' U' R2' U2 R2 U R2' U2 R2 U2' R2 U R2' U2' R2 U2' R2'\",\n    \"R2 U2' R2' U' R' U2 R U R2 U2 R2' U' R' U2' R2' U2' R2 U2 R\",\n    \"R2 U' R2' U R2 U' R U R' U' R2' U2' R2 U R U' R' U2 R2'\",\n    \"R2 U' R2' U' R2 U' R2' U2' R2 U2' R2' U' R2 U' R2' U' R2 U2' R2'\",\n    \"R2 U' R' U2' R2 U R U R U' R2 U R2' U R2 U' R' U2' R2\",\n    \"R2 U' R' U2' R2 U R U R2 U R U2' R' U2 R' U2' R U' R2\",\n    \"R2 U' R' U2' R2 U R U R2 U' R' U2 R U2' R U2 R' U2 R2\",\n    \"R2 U' R' U2' R2 U R U R2' U R2' U' R2 U' R2' U R U2' R2\",\n    \"R2' U R' U2 R U2' R U2 R' U' R2' U' R' U' R2' U2 R U R2'\",\n    \"R2' U2 R U R2' U' R2 U' R2' U R' U' R' U' R2' U2 R U R2'\",\n    \"R2' U2 R2 U R2' U R2' U R2' U R2 U2' R' U' R' U2 R' U R2\",\n    \"R2' U2 R' U' R2 U R2' U R2 U' R2 U' R' U' R2' U2 R U R2'\",\n    \"R2' U2' R U2' R' U2 R' U2' R U R2' U' R' U' R2' U2 R U R2'\",\n    \"R2' U2' R2 U R2' U2' R2 U2 R2' U R2 U2 R2' U' R2 U2' R2' U2' R2\",\n    \"R2' U2' R2 U R2' U2' R2' U2 R2 U R2' U2 R2 U' R2 U2' R2' U2' R2\",\n    \"R2' U2' R2 U' R U2 R' U R2' U2 R2 U2 R2' U2 R2' U2' R2 U2' R2\",\n    \"R2' U2' R2 U' R2 U2 R2' U R2 U2 R2' U2' R2' U R2 U2' R2' U2' R2\",\n    \"R2' U2' R2 U' R2' U2 R2 U R2' U2 R2 U2' R2' U R2 U2' R2' U2' R2\",\n    \"R2' U2' R2 U' R2' U2 R2 U2' R2' U2' R2 U2 R2' U' R2 U2' R2' U2' R2\",\n    \"R2' U' R2 U' R2' U' R2 U2' R2' U2' R2 U' R2' U' R2 U' R2' U2' R2\",\n    \"R' U2' R2 U2 R2' U' R2 U' R U' R2' U' R' U R2' U R2 U R\",\n    \"R U2 R' U R U R' U2' R U2 R2' U2' R2 U R' U' R' U2 R2 U R'\",\n    \"R U2 R' U R U R' U2' R2 U2 R' U' R' U R2 U2' R2' U2 R U R'\",\n    \"R U2' R U2 R' U' R2 U R2' U R U2' R2 U2 R2' U2' R' U2 R' U2 R2'\",\n    \"R U2' R U2 R' U' R2 U R2' U R2' U2' R2' U2 R2 U2' R2 U2 R' U2 R2'\",\n    \"R U2' R U' R2 U R U' R2' U2' R U R' U2' R' U2 R2 U R' U2' R2'\",\n    \"R U2' R' U2 R U R' U R U R' U R2 U2' R' U' R' U' R2 U' R2'\",\n    \"R U2' R' U' R U2 R2' U2' R2 U R2' U' R U R U' R2' U2 R2 U R'\",\n    \"R U2' R' U' R2 U2 R2' U' R U R U' R2' U R2 U2' R2' U2 R U R'\",\n    \"R U' R2' U2' R U R U' R2' U2 R2 U2' R' U2 R U' R' U' R U2' R'\",\n    \"R U' R2' U2' R2 U R' U' R' U R2 U' R2' U2 R2 U2' R' U R U2 R'\",\n    \"R U' R' U2' R2 U2 R2' U' R U R U2' R2' U2 R U' R' U' R U2' R'\",\n    \"R U' R' U2' R2 U2 R2' U' R2 U R' U' R' U R2 U2' R2' U R U2 R'\",\n    \"R2 U R U2 R' U2' R' U' R U R2 U R2' U' R2 U R2 U2' R' U2 R2'\",\n    \"R2 U R2' U R U R U2 R2' U' R U' R' U' R U' R' U2' R U2 R'\",\n    \"R2 U2 R U' R2' U2' R U2 R U' R' U2 R2 U R' U' R2' U R' U2 R'\",\n    \"R2 U2 R2 U' R2' U R U2' R' U' R' U2' R2 U R U R2' U R2' U2 R2'\",\n    \"R2 U2' R U2 R U R2 U' R2 U' R2' U R2 U R2' U2' R2' U2 R U2 R2\",\n    \"R2 U2' R U2 R2' U' R2' U R2 U' R2' U' R' U R U2 R U2' R' U' R2'\",\n    \"R2 U2' R U2' R U2 R2 U2' R2' U2 R' U' R2 U' R2' U R U2' R' U2 R'\",\n    \"R2 U2' R U2' R2' U2 R2' U2' R2 U2 R2 U' R2 U' R2' U R U2' R' U2 R'\",\n    \"R2 U2' R2 U' R2 U' R' U' R2' U2 R U R U2 R' U' R2 U R2' U2' R2'\",\n    \"R2' U R' U2 R U2 R2' U' R2' U R2 U' R2' U' R' U R U2 R U2 R2\",\n    \"R2' U2' R2' U R2' U R U R2 U2' R' U' R' U2' R U R2' U' R2 U R2\",\n    \"R2' U2' R' U2' R2 U2 R2 U' R2' U' R2 U R2' U R2' U' R' U2' R' U2 R2'\",\n    \"R2' U2' R' U2' R' U' R U R2 U R2' U' R2 U R2 U2' R' U2' R U' R2\",\n    \"R2' U' R2' U R2 U' R' U2 R U R U2 R2' U' R' U' R2 U' R2 U2 R2\",\n    \"R' U R2' U' R' U' R U R U' R' U' R U R U2 R U' R U2' R\",\n    \"R' U R' U' R2' U' R U' R U2 R U R U' R' U' R U R U2' R\",\n    \"R' U2 R U2 R2' U2' R2 U R2' U' R U R U' R2' U2 R2 U' R' U2 R\",\n    \"R' U2 R U2 R2' U2' R2 U R' U' R' U2 R2 U2' R' U R U R' U R\",\n    \"R' U2 R2 U2 R2' U' R U R U' R2' U R2 U2' R2' U2 R U' R' U2 R\",\n    \"R' U2 R2 U2 R' U' R' U R2 U2' R2' U2 R U2' R' U R U R' U R\",\n    \"R' U2 R' U R' U2' R' U' R' U R U R' U' R' U R U R2 U' R\",\n    \"R' U2 R' U' R' U R U R' U' R' U2' R' U R' U R2 U R U' R\",\n    \"R' U2' R U R2' U2' R2 U R' U' R' U R2 U' R2' U2 R2 U2' R' U2' R\",\n    \"R' U2' R U R' U2' R2 U2 R2' U' R2 U R' U' R' U R2 U2' R2' U2' R\",\n    \"R' U' R U' R' U' R U2 R2' U2' R U R U' R2' U2 R2 U2' R' U2' R\",\n    \"R' U' R U' R' U' R U2 R' U2' R2 U2 R2' U' R U R U2' R2' U2' R\",\n  ],\n  [\n    \"R U2' R' U2' R U2 R' U' R U' R' U R U2' R'\",\n    \"R2 U2 R' U2' R U R U2 R2' U' R2 U' R2 U R2 U R2'\",\n    \"R2 U2 R' U R U2' R2 U2 R2 U2 R2' U R2 U R U' R2'\",\n    \"R U R2' U2 R2 U2 R2' U R U R' U' R U' R' U2 R\",\n    \"R2' U' R U R2 U R2' U2 R2 U2 R2 U2' R U R' U2 R2\",\n    \"R U2 R' U' R U' R' U R U R2' U2 R2 U2 R2' U R\",\n    \"R2' U R2 U R2 U' R2 U' R2' U2 R U R U2' R' U2 R2\",\n    \"R2 U2 R2' U' R2 U R2 U' R2 U' R2' U2 R U R U2' R U2 R2'\",\n    \"R2' U R2' U R2' U R2 U2' R' U' R' U2 R' U R2 U2 R2' U2' R2\",\n    \"R2' U2 R2' U2' R U R U2 R2' U' R2 U' R2 U R2 U2' R U2' R2\",\n    \"R2' U2 R' U' R' U' R2 U2 R2' U R2 U' R2' U' R' U R2 U R2'\",\n    \"R2 U2 R U2 R U2' R' U' R U2' R' U2 R' U R2' U2 R2 U R2'\",\n    \"R2 U2 R U2' R U2 R' U R U2 R' U2' R' U R2' U2 R2 U R2'\",\n    \"R2 U2 R2' U R2 U R2' U2' R2 U2 R2' U R2 U2 R2' U' R2 U R2'\",\n    \"R2 U2 R2' U R2 U R2' U2' R2' U2 R2 U R2' U2 R2 U' R2 U R2'\",\n    \"R2 U2 R2' U R2 U2 R2' U R' U2 R' U2' R U' R' U2' R U2 R\",\n    \"R2 U2 R2' U R2 U2 R2' U R' U2' R' U2 R U R' U2 R U2' R\",\n    \"R2 U2 R2' U R2 U' R2 U2 R2' U R2 U2 R2' U2' R2' U R2 U R2'\",\n    \"R2 U2 R2' U R2 U' R2' U2 R2 U R2' U2 R2 U2' R2' U R2 U R2'\",\n    \"R2 U2 R2' U R2 U' R2' U2 R2 U2' R2' U2' R2 U2 R2' U' R2 U R2'\",\n    \"R2 U2 R2' U2 R2 U' R2' U' R2 U2' R2' U2' R2 U' R2' U' R2 U2 R2'\",\n    \"R2 U2' R2' U R U R2 U R2' U2 R2 U2 R2 U2' R U R U2 R2'\",\n    \"R2 U2' R2' U R2' U R2' U R2 U2' R' U' R' U2 R' U2' R2 U2' R2'\",\n    \"R2' U2 R U2 R U2' R' U' R U2' R' U2 R' U R2 U2 R2' U R2\",\n    \"R2' U2 R U2' R U2 R' U R U2 R' U2' R' U R2 U2 R2' U R2\",\n    \"R2' U2 R2 U R2' U R2 U2' R2 U2 R2' U R2 U2 R2' U' R2' U R2\",\n    \"R2' U2 R2 U R2' U R2 U2' R2' U2 R2 U R2' U2 R2 U' R2' U R2\",\n    \"R2' U2 R2 U R2' U2 R2 U R' U2 R' U2' R U' R' U2' R U2 R\",\n    \"R2' U2 R2 U R2' U2 R2 U R' U2' R' U2 R U R' U2 R U2' R\",\n    \"R2' U2 R2 U R2' U' R2 U2 R2' U R2 U2 R2' U2' R2 U R2' U R2\",\n    \"R2' U2 R2 U R2' U' R2 U2 R2' U2' R2 U2' R2' U2 R2 U' R2' U R2\",\n    \"R2' U2 R2 U R2' U' R2' U2 R2 U R2' U2 R2 U2' R2 U R2' U R2\",\n    \"R2' U2 R2 U2 R2' U' R2 U' R2' U2' R2 U2' R2' U' R2 U' R2' U2 R2\",\n    \"R2 U R2' U2 R2 U2 R2' U R2 U2' R2' U' R2 U' R2' U2 R2 U2 R2'\",\n    \"R2 U R' U R U2' R2' U' R2 U2' R2' U2' R2 U2 R' U' R U2' R2'\",\n    \"R2 U R' U R2 U2' R2 U' R2' U2' R2 U2' R2 U2 R' U' R U2' R2'\",\n    \"R2 U' R' U2 R' U' R U' R' U' R2 U R' U' R' U2' R U2' R'\",\n    \"R2' U R2 U2 R2' U2 R2 U R2' U2' R2 U' R2' U' R2 U2 R2' U2 R2\",\n    \"R2' U R' U' R2' U R2 U R U' R2 U2' R2 U' R2' U2 R2 U R2'\",\n    \"R2' U2 R2 U' R2' U' R' U' R U R2 U2 R2' U' R' U R U2 R2\",\n    \"R2' U2 R2' U2' R2 U' R2 U R U2 R2 U2' R' U2' R2' U R2 U R2'\",\n    \"R' U2 R U2' R2' U' R' U2' R U R' U R U R2 U2' R' U2 R\",\n    \"R' U2 R U' R' U' R2' U' R2 U R U2 R' U' R2' U R2 U2 R\",\n    \"R' U' R2 U2' R2' U R2' U R2 U' R2 U R2' U R2' U' R' U R'\",\n    \"R U2' R2 U2 R2' U R' U' R2' U2 R2 U R U2 R' U' R2' U R2\",\n    \"R U2' R2' U2 R' U R U2 R2 U2' R' U2 R2' U' R2 U2 R2' U R2\",\n    \"R2 U R2' U2 R2 U' R2' U2 R' U2' R2 U2 R U R' U2 R2' U2' R\",\n    \"R2 U R2' U' R' U2 R U R2 U2 R2' U' R' U R2' U2 R2 U2' R\",\n    \"R U R U' R2 U2 R2 U R' U' R' U2' R2 U' R U2 R' U2' R'\",\n    \"R U R2' U R2' U' R' U R2' U' R U' R2 U2 R U2' R' U2 R2\",\n    \"R U R' U R2 U' R U R2 U' R2 U' R2 U2 R U2' R' U2 R2\",\n    \"R U2' R' U2 R U' R2' U' R2 U' R2' U2 R2 U R' U2 R U2' R'\",\n    \"R U' R U2' R' U R2' U2 R U R U' R2' U2' R2' U R' U R'\",\n    \"R U' R' U' R U R' U R U2' R' U2 R U2 R' U' R U2 R'\",\n    \"R2 U R U2 R2' U' R2 U' R2 U R2 U R2' U' R2 U2' R' U2 R'\",\n    \"R2 U R2 U R2 U' R2' U' R' U2' R U2' R U' R' U2' R' U' R'\",\n    \"R2 U R2' U' R2 U2' R2' U2' R2 U' R2' U' R2 U2 R2' U' R2 U2' R2'\",\n    \"R2 U R' U' R U R2' U R2 U' R2' U' R U R U' R' U2 R'\",\n    \"R2 U R' U' R' U R2 U R2' U' R2 U' R' U R U' R' U2 R'\",\n    \"R2 U2 R2 U' R U' R2' U R' U' R2' U R2' U R2' U2' R' U2 R'\",\n    \"R2 U2 R2 U' R2 U' R2 U R U' R2 U R' U R2' U2' R' U2 R'\",\n    \"R2 U2 R2' U R2 U2' R' U2 R' U' R' U2' R2 U R2' U R2' U' R2'\",\n    \"R2 U2 R2' U R2 U' R2' U' R2' U R2' U R2 U2' R' U' R' U2 R'\",\n    \"R2 U2 R2' U' R2 U R' U' R2' U' R2 U2' R2' U2' R2' U2 R' U' R'\",\n    \"R2 U2 R' U R U2' R2 U2 R2' U2 R2 U R2' U2 R' U' R U' R2'\",\n    \"R2 U2 R' U2' R U2 R2 U' R U' R2' U R' U' R2' U R2' U R\",\n    \"R2 U2 R' U2' R U2 R2 U' R2 U' R2 U R U' R2 U R' U R\",\n    \"R2 U2' R U' R2' U2 R2 U R U' R' U' R2' U' R U2 R2 U R\",\n    \"R2' U R U R2 U R2' U2 R2 U2 R2 U2' R U R U2 R2' U2 R2\",\n    \"R2' U R U R2' U' R' U2 R' U2 R' U R U2 R U2' R' U R2'\",\n    \"R2' U R2 U' R2' U2' R2 U2' R2' U' R2 U' R2' U2 R2 U' R2' U2' R2\",\n    \"R2' U R2' U R2' U R2 U2' R' U' R' U2 R' U2' R2 U2' R2' U2 R2\",\n    \"R2' U R' U2' R U2 R U R' U2 R' U2 R' U' R2' U R U R2'\",\n    \"R2' U2' R2' U2 R2' U2 R U2 R U2 R' U R' U2' R' U' R2' U' R'\",\n    \"R' U R2' U2' R U' R2' U2' R2' U R' U2 R U R2 U2' R U2 R2'\",\n    \"R' U R' U R2' U2' R2' U' R U R U2 R2' U R' U2' R U' R\",\n    \"R' U2 R U2 R' U2' R U2 R' U' R U' R' U R U R' U R\",\n    \"R' U2 R U' R' U2 R U2 R' U2' R U R' U R U' R' U' R\",\n    \"R' U2 R U' R' U' R U' R' U' R U R' U R U2' R' U2 R\",\n    \"R' U2 R' U2' R2 U' R2' U R2 U R2 U' R2 U' R2' U2 R U R2\",\n    \"R' U2 R' U2' R2' U R2' U R2' U' R' U R2' U' R U' R2 U2 R2\",\n    \"R' U2 R' U2' R2' U R' U R2 U' R U R2 U' R2 U' R2 U2 R2\",\n    \"R' U2 R' U' R U R U' R2' U' R2 U R2' U R U' R' U R2\",\n    \"R' U2 R' U' R U R' U' R2 U' R2' U R2 U R' U' R' U R2\",\n    \"R' U2 R' U' R' U2' R2 U R2' U R2' U' R2' U' R2 U R2' U2 R2\",\n    \"R' U2' R U R' U2' R2 U R2' U R2 U' R' U R U2' R2' U2' R\",\n    \"R' U2' R U R' U' R U' R2 U' R2 U2' R U2 R2 U R2 U2' R\",\n    \"R' U2' R' U2 R U' R2 U2' R' U' R' U R2 U2 R2 U' R U R\",\n    \"R' U' R' U2 R2' U2' R2' U2' R2 U' R2' U' R' U R2 U' R2' U2 R2\",\n    \"R' U' R' U2' R' U' R U2' R U2' R' U' R2' U' R2 U R2 U R2\",\n    \"R U R2 U2 R U' R2' U' R' U' R U R2 U2 R2' U' R U2' R2\",\n    \"R U R' U R U R' U' R U' R' U2 R U2' R' U2 R U2 R'\",\n    \"R U2' R2 U R2 U2 R U2' R2 U' R2 U' R U' R' U R U2' R'\",\n    \"R U2' R2' U2' R U R U R2' U' R2 U2' R2' U R U' R' U2 R\",\n    \"R U2' R2' U2' R U R' U' R2 U R2' U R2 U2' R' U R U2' R'\",\n    \"R U2' R' U2' R U2 R' U' R' U' R2 U' R2' U R U' R' U2 R\",\n    \"R U' R' U2 R' U' R2 U' R' U2 R U' R' U' R' U R2 U' R'\",\n    \"R2 U R2' U2 R2' U2 R2 U2 R2' U R' U' R U' R2 U' R2' U2 R2\",\n    \"R2 U R' U' R' U' R U2 R' U' R2 U' R' U2 R' U' R U' R'\",\n    \"R2 U2' R2' U' R2 U2 R2' U' R2 U' R2' U2' R2 U2' R2' U' R2 U R2'\",\n    \"R2' U R2 U2 R U2 R' U2 R U R2 U' R2' U' R' U' R U2 R'\",\n    \"R2' U2 R U2' R2 U R U2 R' U R2' U2' R2' U' R U2' R2' U R'\",\n    \"R2' U2' R2 U' R2' U2 R2 U' R2' U' R2 U2' R2' U2' R2 U' R2' U R2\",\n    \"R2' U' R U' R' U2 R2' U R2 U2 R2' U2 R2 U2' R U R' U2 R2\",\n    \"R2' U' R2' U R2' U R2 U2' R' U' R' U2 R' U2' R2 U R2' U2 R2\",\n    \"R' U2' R U2 R' U R2 U2 R2' U' R2 U' R2' U' R U2 R' U2' R\",\n    \"R' U2' R U' R U R2' U R U' R U R2' U R U' R U2' R'\",\n    \"R' U' R2' U' R' U2' R' U R' U2 R U2 R U2 R2' U2 R2' U2' R2'\",\n    \"R' U' R' U2' R2 U' R' U R' U' R U2' R U' R' U2 R' U2' R2\",\n    \"R U2' R' U2' R U R' U' R U' R' U2 R U2' R' U2' R U' R'\",\n    \"R U' R U2' R' U2' R U2 R' U' R U' R' U R U2' R' U2' R'\",\n    \"R2 U2 R2' U2 R U R U2' R2 U2 R2 U2 R2' U R2 U R U R2'\",\n    \"R2 U2 R2' U2' R2 U2' R' U2 R' U' R' U2' R2 U R2' U R2' U R2'\",\n    \"R2 U2' R' U2' R U R' U' R U' R' U2 R U2' R' U2' R U' R2'\",\n    \"R2 U' R U2' R' U2' R U2 R' U' R U' R' U R U2' R' U2' R2'\",\n    \"R2' U2' R' U2' R U R' U' R U' R' U2 R U2' R' U2' R U' R2\",\n    \"R2' U' R U2' R' U2' R U2 R' U' R U' R' U R U2' R' U2' R2\",\n    \"R' U2' R' U2' R U R' U' R U' R' U2 R U2' R' U2' R U' R\",\n    \"R' U' R U2' R' U2' R U2 R' U' R U' R' U R U2' R' U2' R\",\n    \"R' U' R U' R' U2 R' U' R2 U' R' U2 R U' R' U' R' U R2\",\n    \"R' U' R2 U R' U' R' U' R U2 R' U' R2 U' R' U2 R' U' R\",\n    \"R U2 R' U2' R U R' U R U' R' U' R U' R' U' R U2 R'\",\n    \"R U2 R' U' R U R2' U2' R2 U' R2' U R U R U2' R2' U2' R\",\n    \"R U2 R' U' R U R2' U' R2 U' R' U' R' U2 R U2' R' U2' R\",\n    \"R2 U2 R2' U' R2 U' R U' R' U R2' U2 R2 U2 R2' U2 R2' U R2\",\n    \"R2 U2' R' U2 R' U' R U2' R U' R' U R' U' R2 U2' R' U' R'\",\n    \"R' U2 R U' R' U' R2' U' R2 U R U2 R' U2 R U2 R2 U R2'\",\n    \"R U2 R U2' R' U' R U2' R' U2 R' U R2 U2 R2' U R2 U2 R2'\",\n    \"R U2 R U2' R' U' R U2' R' U2 R' U R2' U2 R2 U R2' U2 R2\",\n    \"R U2 R2 U R2' U' R' U2 R U R2 U' R2' U' R' U' R U2 R'\",\n    \"R U2 R' U2' R2 U R U R' U R U2' R' U' R2' U2' R U2 R'\",\n    \"R U2' R U2 R' U R U2 R' U2' R' U R2 U2 R2' U R2 U2 R2'\",\n    \"R U2' R U2 R' U R U2 R' U2' R' U R2' U2 R2 U R2' U2 R2\",\n    \"R2 U R2' U R2 U2' R2 U2 R2' U R2 U2 R2' U' R2' U R2 U2 R2'\",\n    \"R2 U R2' U R2 U2' R2' U2 R2 U R2' U2 R2 U' R2' U R2 U2 R2'\",\n    \"R2 U R2' U2 R2 U R' U2 R' U2' R U' R' U2' R U2 R U2 R2'\",\n    \"R2 U R2' U2 R2 U R' U2' R' U2 R U R' U2 R U2' R U2 R2'\",\n    \"R2 U R2' U' R2 U2 R2' U R2 U2 R2' U2' R2 U R2' U R2 U2 R2'\",\n    \"R2 U R2' U' R2 U2 R2' U2' R2 U2' R2' U2 R2 U' R2' U R2 U2 R2'\",\n    \"R2 U R2' U' R2' U2 R2 U R2' U2 R2 U2' R2 U R2' U R2 U2 R2'\",\n    \"R2 U2 R U R' U' R2' U2 R2 U R U' R' U' R2' U' R2 U2 R2'\",\n    \"R2 U2 R2' U2 R2 U' R2' U' R2 U2' R2' U R2 U2 R2' U2 R2 U R2'\",\n    \"R2 U2 R2' U' R2 U' R2' U2' R2 U2' R2' U' R2 U' R2' U2 R2 U2 R2'\",\n    \"R2 U2' R U2' R2 U R2 U' R2 U' R2' U2 R U R U2' R2' U2 R2'\",\n    \"R2 U2' R2' U2 R2 U R' U2 R' U' R' U2' R2 U R2' U R2' U R2'\",\n    \"R2' U R2 U R2' U2' R2 U2 R2' U R2 U2 R2' U' R2 U R2' U2 R2\",\n    \"R2' U R2 U R2' U2' R2' U2 R2 U R2' U2 R2 U' R2 U R2' U2 R2\",\n    \"R2' U R2 U R2' U2' R' U2' R2 U2 R U R2 U' R2 U2' R2' U2 R2'\",\n    \"R2' U R2 U R' U' R2' U' R2 U R2' U2 R2 U' R' U' R' U2 R2'\",\n    \"R2' U R2 U2 R2' U R' U2 R' U2' R U' R' U2' R U2 R U2 R2\",\n    \"R2' U R2 U2 R2' U R' U2' R' U2 R U R' U2 R U2' R U2 R2\",\n    \"R2' U R2 U2 R2' U' R2 U2' R2 U' R U R2 U R2' U' R' U R2'\",\n    \"R2' U R2 U' R2 U2 R2' U R2 U2 R2' U2' R2' U R2 U R2' U2 R2\",\n    \"R2' U R2 U' R2' U2 R2 U R2' U2 R2 U2' R2' U R2 U R2' U2 R2\",\n    \"R2' U R2 U' R2' U2 R2 U2' R2' U2' R2 U2 R2' U' R2 U R2' U2 R2\",\n    \"R2' U2 R U R U2' R2 U2 R2 U2 R2' U R2 U R U R2' U2' R2\",\n    \"R2' U2 R U2' R U R U2 R2' U' R2 U' R2 U R2 U' R2' U2 R2\",\n    \"R2' U2 R2 U2 R2' U' R2 U' R2' U2' R2 U R2' U2 R2 U2 R2' U R2\",\n    \"R2' U2 R2 U' R2' U' R2 U2' R2' U2' R2 U' R2' U' R2 U2 R2' U2 R2\",\n    \"R2' U2' R U' R' U2 R2 U2' R2 U2' R2' U' R2 U2' R2 U R' U R2\",\n    \"R2' U2' R U' R' U2 R2 U2' R2' U2' R2 U' R2' U2' R U R' U R2\",\n    \"R2' U2' R2 U2' R' U2 R' U' R' U2' R2 U R2' U R2' U R2' U2' R2\",\n    \"R' U R' U' R2' U R2' U R2 U' R2 U R2' U R2' U2' R2 U' R'\",\n    \"R' U2' R U2' R' U' R' U R2 U' R' U' R U' R' U2 R' U' R2\",\n    \"R U R2 U R' U' R2 U2 R U' R U R U2' R2 U' R' U R2' U2 R2\",\n    \"R U2 R2' U2' R2 U2 R2 U R2' U' R U2' R2 U R U R' U2' R2' U2' R\",\n    \"R U2' R2' U2 R2 U2' R2 U2 R U2 R2 U2' R2' U2 R' U' R2 U R2' U R2\",\n    \"R U2' R2' U2 R2 U2' R2 U2 R2' U2 R2' U2' R2 U2 R2 U' R2 U R2' U R2\",\n    \"R U2' R2' U' R2' U2' R2 U2' R2 U' R' U' R U R' U R2 U2' R' U2 R'\",\n    \"R U' R' U R' U' R U' R U R' U R U2 R' U2 R U R2' U2 R\",\n    \"R2 U R' U' R2 U2 R2 U2' R U R2 U' R2 U2' R2 U R U R' U' R2'\",\n    \"R2 U R' U' R2 U2 R2' U R2 U' R2' U' R' U R2 U R U2 R' U2' R2'\",\n    \"R2 U2 R U' R2' U R2' U R2 U2' R' U' R' U2 R' U R2 U2 R2 U2' R2'\",\n    \"R2 U2 R' U2' R U R U' R U2' R2 U' R2' U2' R' U R2 U R2 U R2'\",\n    \"R2 U2 R' U2' R U2 R2' U' R U2 R U2 R' U2 R' U2' R2 U R' U2 R'\",\n    \"R2' U R U R2 U R2' U' R2 U2' R2' U R U R2' U R2' U2 R2 U2' R2\",\n    \"R2' U R U2' R2' U2' R' U2 R2' U' R2 U' R2' U' R U R2' U2' R' U2' R2'\",\n    \"R2' U R U' R2' U2 R' U2' R2' U2' R2 U' R2' U' R U R2' U2' R' U2' R2'\",\n    \"R2' U2 R U' R U' R2' U2 R2 U R2 U' R' U2 R' U2' R' U2 R2 U' R2'\",\n    \"R2' U2 R2 U R U2' R2 U R2 U' R2 U' R2' U2 R U R U2' R U2 R2\",\n    \"R2' U2 R2 U R U' R U2' R U R U2 R2' U' R2 U' R2 U R2 U R2\",\n    \"R2' U2 R2 U R2' U2' R' U2 R' U' R' U2' R2 U R2' U R2' U' R2' U2 R'\",\n    \"R2' U2 R2 U R2' U' R2' U' R2' U R2' U R2 U2' R' U' R' U2 R' U R'\",\n    \"R2' U2 R2 U' R2 U R2 U' R2 U' R2' U2 R U R U2' R U' R U2' R2\",\n  ],\n  [\n    \"R U2 R' U' R U R' U R U2' R' U2 R U2 R'\",\n    \"R2 U R' U' R2' U' R2 U2' R2' U2' R2' U2 R' U' R U2' R2'\",\n    \"R2 U' R2' U' R2' U R2' U R2 U2' R' U' R' U2 R U2' R2'\",\n    \"R' U' R2 U2' R2' U2' R2 U' R' U' R U R' U R U2' R'\",\n    \"R2' U2' R U2 R' U' R' U2' R2 U R2' U R2' U' R2' U' R2\",\n    \"R2' U2' R U' R' U2 R2' U2' R2' U2' R2 U' R2' U' R' U R2\",\n    \"R' U2' R U R' U R U' R' U' R2 U2' R2' U2' R2 U' R'\",\n    \"R U R2 U R U2 R U' R U2' R' U2' R' U2' R2 U2' R2 U2 R2\",\n    \"R U2 R' U2' R U' R2' U2' R2 U R2' U R2 U R' U2' R U2 R'\",\n    \"R2 U R2 U' R2 U' R2' U2 R U R U2' R U2 R2' U' R2 U2' R2'\",\n    \"R2 U R' U R U2' R2 U' R2' U2' R2 U2' R2' U2 R' U' R U2' R2'\",\n    \"R2 U2 R2' U R2 U2' R2' U R2 U R2' U2 R2 U2 R2' U R2 U' R2'\",\n    \"R2 U2' R' U2 R2' U' R' U2' R U' R2 U2 R2 U R' U2 R2 U' R\",\n    \"R2' U2 R2 U R2' U2' R2 U R2' U R2 U2 R2' U2 R2 U R2' U' R2\",\n    \"R' U2 R2 U2 R' U' R U R2' U' R2 U' R2' U2 R U' R' U2 R\",\n    \"R' U2 R2' U' R2' U2' R' U2 R2' U R2' U R' U R U' R' U2 R\",\n    \"R' U' R U' R' U' R U R' U R U2' R' U2 R U2' R' U2' R\",\n    \"R' U' R2' U2' R' U R2 U R U R' U' R2' U2' R2 U R' U2 R2'\",\n    \"R U R U2 R U R' U2 R' U2 R U R2 U R2' U' R2' U' R2'\",\n    \"R U R U2' R2 U2 R2 U2 R2' U R2 U R U' R2' U R2 U2' R2'\",\n    \"R U2 R U2' R' U R2' U2 R U R U' R2' U2' R2' U R' U' R'\",\n    \"R U2' R U R U2 R2' U' R2 U' R2 U R2 U R2' U' R2 U2' R2'\",\n    \"R U2' R U R' U' R U R2' U R2 U' R2' U' R U R U' R2'\",\n    \"R U2' R U R' U' R' U R2 U R2' U' R2 U' R' U R U' R2'\",\n    \"R U2' R U2 R2 U' R U' R2' U R' U' R2' U R2' U R2' U2' R2'\",\n    \"R U2' R U2 R2 U' R2 U' R2 U R U' R2 U R' U R2' U2' R2'\",\n    \"R U2' R U2 R2' U R2 U' R2' U' R2' U R2' U R2 U2' R' U' R2'\",\n    \"R U2' R' U R U2' R' U2' R U2 R' U' R U' R' U R U R'\",\n    \"R U' R U' R2 U2 R2 U R' U' R' U2' R2 U' R U2 R' U R'\",\n    \"R2 U' R U2 R' U2' R' U' R U2' R U2' R U R2 U' R' U' R2\",\n    \"R2 U' R' U' R2 U R U2' R U2' R U' R' U2' R' U2 R U' R2\",\n    \"R2' U2' R U2 R' U2' R2' U R2' U R2' U' R' U R2' U' R U' R'\",\n    \"R2' U2' R U2 R' U2' R2' U R' U R2 U' R U R2 U' R2 U' R'\",\n    \"R2' U2' R2 U R2' U' R U R2 U R2' U2 R2 U2 R2 U2' R U R\",\n    \"R2' U2' R2 U' R2' U R2 U R2 U' R2 U' R2' U2 R U R U2' R\",\n    \"R2' U2' R2' U R2' U R2' U' R' U R2' U' R U' R2 U2 R U2' R\",\n    \"R2' U2' R2' U R' U R2 U' R U R2 U' R2 U' R2 U2 R U2' R\",\n    \"R2' U' R U R U' R2' U' R2 U R2' U R U' R' U R U2' R\",\n    \"R2' U' R U R' U' R2 U' R2' U R2 U R' U' R' U R U2' R\",\n    \"R2' U' R2' U' R2' U R2 U R U2 R' U2 R' U R U2 R U R\",\n    \"R2' U' R' U2' R2 U R2' U R2' U' R2' U' R2 U R2' U2 R U2' R\",\n    \"R' U R U R' U' R U' R' U2 R U2' R' U2' R U R' U2' R\",\n    \"R' U R' U2 R U' R2 U2' R' U' R' U R2 U2 R2 U' R U' R\",\n    \"R' U' R U' R2' U R' U' R2' U R2' U R2' U2' R' U2 R U2' R2'\",\n    \"R' U' R2 U' R2 U R U' R2 U R' U R2' U2' R' U2 R U2' R2'\",\n    \"R' U' R' U R2' U2' R2' U' R U R U2 R2' U R' U2' R U2 R\",\n    \"R2 U2' R' U2 R' U' R' U2' R2 U R2' U R2' U' R2' U R2 U2' R2'\",\n    \"R2 U' R2' U' R U R2 U R2' U' R2 U2' R2' U R U R U2' R2\",\n    \"R2' U2 R2 U2' R2' U' R U2' R U R U2 R2' U' R2 U' R2 U' R2\",\n    \"R2' U2 R' U2 R2' U' R2' U R2' U R2 U2' R' U' R' U2 R2 U2' R2\",\n    \"R' U2' R U2 R' U' R U' R' U R U R' U R U R' U2' R\",\n    \"R2' U2' R2 U2 R2' U2 R U2' R U R U2 R2' U' R2 U' R2 U' R2\",\n    \"R2' U2' R2 U2' R' U' R' U2 R2' U2' R2' U2' R2 U' R2' U' R' U' R2\",\n    \"R U R U2 R2' U R U' R U R' U2 R' U R U2' R U2 R2'\",\n    \"R U2 R' U R' U' R2 U' R' U R' U' R2 U' R' U R' U2 R\",\n    \"R2 U' R2' U2' R' U2' R U2' R' U' R2' U R2 U R U R' U2' R\",\n    \"R2' U' R U R U R' U2' R U R2' U R U2' R U R' U R\",\n    \"R2' U' R2 U2' R2 U2' R2' U2' R2 U' R U R' U R2' U R2 U2' R2'\",\n    \"R' U R U2' R U R2' U R U2' R' U R U R U' R2' U R\",\n    \"R' U2 R U2 R' U2' R U R U R2' U R2 U' R' U R U2' R'\",\n    \"R' U2 R2 U2 R' U' R' U' R2 U R2' U2 R2 U' R' U R U2' R'\",\n  ],\n  [\n    \"R2 U2' R2' U2 R2 U2 R2' U2' R2 U2 R2'\",\n    \"R2' U2' R2 U2 R2' U2 R2 U2' R2' U2 R2\",\n    \"R U2 R2 U2' R2' U' R2 U2' R2' U2 R'\",\n    \"R U2 R2' U2' R2 U' R2' U2' R2 U2 R'\",\n    \"R2 U2 R2 U2' R2' U' R2 U2' R2' U2 R2'\",\n    \"R2 U2 R2' U2' R2 U' R2' U2' R2 U2 R2'\",\n    \"R2' U2 R2 U2' R2' U' R2 U2' R2' U2 R2\",\n    \"R2' U2 R2' U2' R2 U' R2' U2' R2 U2 R2\",\n    \"R' U2 R2 U2' R2' U' R2 U2' R2' U2 R\",\n    \"R' U2 R2' U2' R2 U' R2' U2' R2 U2 R\",\n    \"R2 U2 R2' U2' R2 U2 R2' U2 R2 U2' R2'\",\n    \"R2' U2 R2 U2' R2' U2 R2 U2 R2' U2' R2\",\n    \"R U2 R2 U2' R2' U2 R2 U2 R2' U2' R2 U2 R2\",\n    \"R U2 R2' U2' R2 U2 R2' U2 R2 U2' R2' U2 R\",\n    \"R2 U2 R2 U2' R2' U2 R2 U2 R2' U2' R2 U2 R\",\n    \"R2' U2 R2' U2' R2 U2 R2' U2 R2 U2' R2' U2 R'\",\n    \"R' U2 R2 U2' R2' U2 R2 U2 R2' U2' R2 U2 R'\",\n    \"R' U2 R2' U2' R2 U2 R2' U2 R2 U2' R2' U2 R2'\",\n    \"R2 U2' R2' U' R2' U2' R2 U' R2' U2' R' U2 R2'\",\n    \"R2' U2' R2 U' R2 U2' R2' U' R2 U2' R U2 R2\",\n    \"R2 U2 R U2' R2 U' R2' U2' R2 U' R2 U2' R2'\",\n    \"R2' U2 R' U2' R2' U' R2 U2' R2' U' R2' U2' R2\",\n    \"R2 U R2' U2 R' U2' R2' U2 R2 U' R2' U2' R2 U2 R\",\n    \"R2 U2 R' U' R U2 R2' U2' R2 U' R2' U R U R'\",\n    \"R2 U2' R2' U' R2 U2 R2' U2' R' U2 R2' U R2 U2 R\",\n    \"R2' U R2 U2 R U2' R2 U2 R2' U' R2 U2' R2' U2 R'\",\n    \"R2' U2' R2 U' R2' U2 R2 U2' R U2 R2 U R2' U2 R'\",\n    \"R U R2' U' R2 U2' R2' U2 R U' R' U2 R2 U2 R'\",\n    \"R U R2 U2 R U2' R2 U' R2' U2' R U' R2' U2' R2\",\n    \"R U2' R2 U2 R2' U2' R2 U2 R2' U2' R' U' R2' U2' R2\",\n    \"R U2' R2' U' R2 U2' R U2 R2 U R U' R2 U2' R2'\",\n    \"R2 U R U2 R2 U R2' U2 R' U2' R2' U2' R2 U2' R2'\",\n    \"R2 U R2' U2 R2 U2' R2' U2 R2 U2' R2' U R2 U2' R2'\",\n    \"R2 U2 R2' U2' R' U2 R2' U R2 U2 R U2 R2 U2' R2'\",\n    \"R2 U2 R2' U' R2 U R2' U R2 U' R2' U' R2 U' R2'\",\n    \"R2 U2' R U2 R' U2' R2' U' R2 U2' R U2 R' U2' R2'\",\n    \"R2 U2' R2' U R2 U2' R2' U2 R2 U2' R2' U2 R2 U R2'\",\n    \"R2 U2' R2' U R' U2' R2' U' R2 U2' R U2 R2 U' R2'\",\n    \"R2 U2' R2' U2 R' U2 R2' U R2 U2 R U2' R2 U2 R2'\",\n    \"R2 U2' R2' U2' R2 U2' R U2 R2 U R2' U2 R' U R2'\",\n    \"R2 U2' R2' U' R U2' R2' U' R2 U2' R U2 R2 U R\",\n    \"R2 U2' R2' U' R2 U R U2 R2 U R2' U2 R' U2' R2'\",\n    \"R2 U2' R2' U' R2 U R2' U2 R2 U2' R2' U2 R2 U2' R2'\",\n    \"R2 U2' R2' U' R2 U' R2' U2 R' U2' R2' U' R2 U2' R\",\n    \"R2 U2' R2' U' R' U R2' U2 R' U2' R2' U' R2 U2' R'\",\n    \"R2 U2' R2' U' R' U2' R2' U2 R2 U2' R2' U2 R2 U2' R\",\n    \"R2 U' R2' U2 R' U2' R2' U' R2 U2' R U R2 U2' R2'\",\n    \"R2 U' R2' U' R2 U' R2' U R2 U R2' U' R2 U2 R2'\",\n    \"R2' U R2 U2 R2' U2' R2 U2 R2' U2' R2 U R2' U2' R2\",\n    \"R2' U R' U2 R2' U R2 U2 R U2' R2 U2' R2' U2' R2\",\n    \"R2' U2 R2 U2' R U2 R2 U R2' U2 R' U2 R2' U2' R2\",\n    \"R2' U2 R2 U' R2' U R2 U R2' U' R2 U' R2' U' R2\",\n    \"R2' U2' R2 U R U2' R2 U' R2' U2' R' U2 R2' U' R2\",\n    \"R2' U2' R2 U R2' U2' R2 U2 R2' U2' R2 U2 R2' U R2\",\n    \"R2' U2' R2 U2 R U2 R2 U R2' U2 R' U2' R2' U2 R2\",\n    \"R2' U2' R2 U2' R2' U2' R' U2 R2' U R2 U2 R U R2\",\n    \"R2' U2' R2 U' R U R2 U2 R U2' R2 U' R2' U2' R\",\n    \"R2' U2' R2 U' R U2' R2 U2 R2' U2' R2 U2 R2' U2' R'\",\n    \"R2' U2' R2 U' R2' U R2 U2 R2' U2' R2 U2 R2' U2' R2\",\n    \"R2' U2' R2 U' R2' U R' U2 R2' U R2 U2 R U2' R2\",\n    \"R2' U2' R2 U' R2' U' R2 U2 R U2' R2 U' R2' U2' R'\",\n    \"R2' U2' R2 U' R' U2' R2 U' R2' U2' R' U2 R2' U R'\",\n    \"R2' U2' R' U2 R U2' R2 U' R2' U2' R' U2 R U2' R2\",\n    \"R2' U' R2 U2 R U2' R2 U' R2' U2' R' U R2' U2' R2\",\n    \"R2' U' R2 U' R2' U' R2 U R2' U R2 U' R2' U2 R2\",\n    \"R' U R2' U2 R' U2' R2' U' R2 U2' R' U' R2 U2' R2'\",\n    \"R' U2' R2 U' R2' U2' R' U2 R2' U R' U' R2' U2' R2\",\n    \"R' U2' R2' U2 R2 U2' R2' U2 R2 U2' R U' R2 U2' R2'\",\n    \"R U2' R2 U' R2' U2' R' U2 R2' U' R2 U' R2' U2' R2\",\n    \"R2 U2 R2' U R2 U2 R2' U2 R2 U2 R2' U R2 U2 R2'\",\n    \"R2 U2 R2' U R2 U2 R2' U2 R2' U2 R2 U R2' U2 R2\",\n    \"R2 U2' R2' U2 R2 U2' R2' U2 R2 U R2' U' R2 U2' R2'\",\n    \"R2' U2 R2 U R2' U2 R2 U2 R2 U2 R2' U R2 U2 R2'\",\n    \"R2' U2 R2 U R2' U2 R2 U2 R2' U2 R2 U R2' U2 R2\",\n    \"R2' U2' R2 U2 R2' U2' R2 U2 R2' U R2 U' R2' U2' R2\",\n    \"R' U2' R2' U' R2 U2' R U2 R2 U' R2' U' R2 U2' R2'\",\n    \"R U2 R2 U R2' U2 R' U2' R2' U2 R2 U' R2' U2' R2\",\n    \"R U2 R2 U2' R2' U' R2 U2 R2' U2' R' U2 R2' U R2\",\n    \"R' U R U R2' U' R2 U2' R2' U2 R U' R' U2 R2\",\n    \"R' U2 R2 U2 R' U' R U2 R2' U2' R2 U' R2' U R\",\n    \"R' U2 R2' U R2 U2 R U2' R2 U2 R2' U' R2 U2' R2'\",\n    \"R' U2 R2' U2' R2 U' R2' U2 R2 U2' R U2 R2 U R2'\",\n    \"R2 U2' R U2 R2 U R2' U2 R' U R2' U' R2 U2' R2'\",\n    \"R2' U2' R' U2 R2' U R2 U2 R U R2 U' R2' U2' R2\",\n    \"R U2' R' U' R2' U2' R2 U R2' U2 R2' U2' R' U2 R2' U' R2\",\n    \"R U2' R' U' R2' U2' R2 U R2' U2' R2' U2 R' U2' R2' U2' R2\",\n    \"R2 U R2' U2 R U2' R2 U2 R2' U' R2 U' R' U' R' U2 R'\",\n    \"R2 U R2' U2 R2 U2' R2 U2 R2' U2' R2 U R2' U2' R2 U2 R\",\n    \"R2 U R2' U2 R' U2' R2' U2 R2 U2 R2' U2 R2 U2' R2' U2 R2'\",\n    \"R2 U R2' U2 R' U2' R2' U' R' U2' R2' U' R2 U2' R2' U2 R\",\n    \"R2 U2 R U2' R2 U2 R2 U2' R2' U2' R2 U' R U2' R' U2 R2'\",\n    \"R2 U2 R2' U2' R' U2 R2' U R2 U2 R2' U2 R2' U2' R2 U2 R2'\",\n    \"R2 U2 R' U' R U2 R2 U2' R2' U' R2 U2' R U2' R U R'\",\n    \"R2 U2 R' U' R' U2 R2 U2' R2' U2 R2 U2 R2' U R U R'\",\n    \"R2 U2' R2 U2 R2' U R2 U2 R U2' R2 U R2' U2' R2 U2 R2'\",\n    \"R2 U2' R2' U R2 U2' R U2 R2 U R2' U2 R2 U2' R2 U2 R2'\",\n    \"R2 U2' R2' U R2 U2' R2' U2 R2 U2' R2 U2 R2' U R2 U2 R\",\n    \"R2 U2' R2' U2 R2 U2 R2 U2' R2' U' R2 U2' R U2 R2 U2' R2'\",\n    \"R2 U2' R2' U2 R2 U2 R2' U2 R2 U2' R U2 R2 U R2' U2 R2\",\n    \"R2 U2' R2' U2 R2 U2' R2' U2 R' U2' R2' U' R2 U2' R2' U2 R2'\",\n    \"R2 U2' R2' U2 R2' U2 R2 U R2' U2 R' U2' R2' U2 R2 U2 R2'\",\n    \"R2 U2' R2' U' R2 U2' R U2 R2 U2' R2' U2 R2 U2' R2' U2 R2\",\n    \"R2 U2' R2' U' R2 U2' R U' R2 U2' R U2 R2 U R2' U2 R'\",\n    \"R2 U2' R2' U' R2 U2' R2 U2 R2' U R2 U2 R U2' R2 U' R2'\",\n    \"R2 U2' R2' U' R2 U2' R' U2 R2 U R2' U2 R' U2' R2' U' R2\",\n    \"R2' U R2 U2 R U2' R2 U2 R2' U2 R2 U2 R2' U2' R2 U2 R2\",\n    \"R2' U R2 U2 R U2' R2 U' R U2' R2 U' R2' U2' R2 U2 R'\",\n    \"R2' U R2 U2 R2 U2' R2 U2 R2' U' R2 U' R' U' R' U2 R2'\",\n    \"R2' U R2 U2 R2' U2' R2' U2 R2 U2' R2' U R2 U2' R2' U2 R'\",\n    \"R2' U2 R2 U2' R U2 R2 U R2' U2 R2 U2 R2 U2' R2' U2 R2\",\n    \"R2' U2' R2 U R2' U2' R2 U2 R2' U2' R2' U2 R2 U R2' U2 R'\",\n    \"R2' U2' R2 U R2' U2' R' U2 R2' U R2 U2 R2' U2' R2' U2 R2\",\n    \"R2' U2' R2 U2 R2 U2 R2' U R2 U2 R U2' R2 U2 R2' U2 R2\",\n    \"R2' U2' R2 U2 R2' U2 R2 U2 R2' U2' R' U2 R2' U R2 U2 R2'\",\n    \"R2' U2' R2 U2 R2' U2 R2' U2' R2 U' R2' U2' R' U2 R2' U2' R2\",\n    \"R2' U2' R2 U2 R2' U2' R2 U2 R U2' R2 U' R2' U2' R2 U2 R2\",\n    \"R2' U2' R2 U' R2' U2' R U2 R2' U R2 U2 R U2' R2 U' R2'\",\n    \"R2' U2' R2 U' R2' U2' R2' U2 R2 U R2' U2 R' U2' R2' U' R2\",\n    \"R2' U2' R2 U' R2' U2' R' U2 R2' U2' R2 U2 R2' U2' R2 U2 R2'\",\n    \"R2' U2' R2 U' R2' U2' R' U' R2' U2' R' U2 R2' U R2 U2 R\",\n    \"R2' U2' R2' U2 R2 U R2' U2 R' U2' R2' U R2 U2' R2' U2 R2\",\n    \"R' U2' R U' R2 U2' R2' U2' R2 U2 R2 U2' R U2 R2 U2 R2'\",\n    \"R' U2' R U' R2 U2' R2' U2' R2 U2' R2 U2 R U2' R2 U R2'\",\n    \"R' U' R' U' R2 U' R2' U2 R2 U2' R U2 R2' U R2 U2 R'\",\n    \"R' U' R' U' R2 U' R2' U2 R2 U2' R2 U2 R2 U R2' U2 R2'\",\n    \"R2 U2 R U2' R2 U' R2' U2' R2 U2 R2 U2 R2' U2' R2 U2 R2'\",\n    \"R2' U2 R' U2' R2' U' R2 U2' R2' U2 R2' U2 R2 U2' R2' U2 R2\",\n    \"R2' U2' R' U2 R2' U2' R2' U R2 U2' R2' U' R' U2' R U2 R2\",\n    \"R U R2 U2 R2' U' R' U R2' U' R2' U R2 U2' R2' U' R'\",\n    \"R2 U2' R U2 R2 U R2' U2 R U2' R2' U' R2 U2' R2' U2 R2'\",\n    \"R2 U2' R U2 R2 U R2' U2 R2 U2' R2 U' R2' U2' R2 U2 R2'\",\n    \"R2 U' R U2 R U2' R' U' R U2' R' U2 R2 U R2 U R2'\",\n    \"R2 U' R U2' R U2 R' U R U2 R' U2' R2 U R2 U R2'\",\n    \"R2' U2 R' U2' R2' U2 R2' U R2 U2' R2' U' R' U2' R U2 R2\",\n    \"R2' U2' R2 U R2' U' R2' U R' U' R2' U2 R2 U R U' R'\",\n    \"R2' U2' R' U2 R2' U R2 U2 R2' U2' R2' U' R2 U2' R2' U2 R2\",\n    \"R2' U2' R' U2 R2' U R2 U2 R' U2' R2 U' R2' U2' R2 U2 R2\",\n    \"R2' U' R U2 R U2' R' U' R U2' R' U2 R U R2' U R2\",\n    \"R2' U' R U2' R U2 R' U R U2 R' U2' R U R2' U R2\",\n    \"R U R U R2' U' R2 U2' R2' U2 R U' R' U2 R2 U2 R2'\",\n    \"R U2 R2 U2 R' U' R U2 R2' U2' R2 U' R2' U R U R2'\",\n    \"R U2 R2 U2' R2' U' R2' U2' R2 U' R2' U2' R' U2 R2' U2' R'\",\n    \"R U2 R2' U R2 U2 R U2' R2 U2 R2' U' R2 U2' R2' U2 R2'\",\n    \"R U2 R2' U2' R2 U' R2 U2' R2' U' R2 U2' R U2 R2 U2' R'\",\n    \"R U2 R2' U2' R2 U' R2' U2 R2 U2' R U2 R2 U R2' U2 R2'\",\n    \"R U2' R2 U2 R U2' R2 U' R2' U2' R2 U' R2 U2' R2' U2 R'\",\n    \"R U2' R2' U2 R' U2' R2' U' R2 U2' R2' U' R2' U2' R2 U2 R'\",\n    \"R2 U R U R2' U' R2 U2' R2' U2 R U' R' U2 R2 U2 R2\",\n    \"R2 U2 R2 U R2' U2 R' U2' R2' U2 R2 U' R2' U2' R2 U2 R'\",\n    \"R2 U2 R2 U2 R' U' R U2 R2' U2' R2 U' R2' U R U R2\",\n    \"R2 U2 R2 U2' R2' U' R2 U2 R2' U2' R' U2 R2' U R2 U2 R'\",\n    \"R2 U2 R2 U2' R2' U' R2' U2' R2 U' R2' U2' R' U2 R2' U2' R2'\",\n    \"R2 U2 R2' U R2 U2 R U2' R2 U2 R2' U' R2 U2' R2' U2 R2\",\n    \"R2 U2 R2' U2' R2 U' R2 U2' R2' U' R2 U2' R U2 R2 U2' R2'\",\n    \"R2 U2 R2' U2' R2 U' R2' U2 R2 U2' R U2 R2 U R2' U2 R2\",\n    \"R2 U2' R2 U2 R U2' R2 U' R2' U2' R2 U' R2 U2' R2' U2 R2'\",\n    \"R2 U2' R2' U2 R' U2' R2' U' R2 U2' R2' U' R2' U2' R2 U2 R2'\",\n    \"R2' U R U R2' U' R2 U2' R2' U2 R U' R' U2 R2 U2 R\",\n    \"R2' U2 R2 U R2' U2 R' U2' R2' U2 R2 U' R2' U2' R2 U2 R2'\",\n    \"R2' U2 R2 U2 R' U' R U2 R2' U2' R2 U' R2' U R U R\",\n    \"R2' U2 R2 U2' R2' U' R2 U2 R2' U2' R' U2 R2' U R2 U2 R2'\",\n    \"R2' U2 R2 U2' R2' U' R2' U2' R2 U' R2' U2' R' U2 R2' U2' R2\",\n    \"R2' U2 R2' U R2 U2 R U2' R2 U2 R2' U' R2 U2' R2' U2 R\",\n    \"R2' U2 R2' U2' R2 U' R2 U2' R2' U' R2 U2' R U2 R2 U2' R2\",\n    \"R2' U2 R2' U2' R2 U' R2' U2 R2 U2' R U2 R2 U R2' U2 R\",\n    \"R2' U2' R2 U2 R U2' R2 U' R2' U2' R2 U' R2 U2' R2' U2 R2\",\n    \"R2' U2' R2' U2 R' U2' R2' U' R2 U2' R2' U' R2' U2' R2 U2 R2\",\n    \"R' U2 R2 U R2' U2 R' U2' R2' U2 R2 U' R2' U2' R2 U2 R2\",\n    \"R' U2 R2 U2' R2' U' R2 U2 R2' U2' R' U2 R2' U R2 U2 R2\",\n    \"R' U2 R2 U2' R2' U' R2' U2' R2 U' R2' U2' R' U2 R2' U2' R\",\n    \"R' U2 R2' U2' R2 U' R2 U2' R2' U' R2 U2' R U2 R2 U2' R\",\n    \"R' U2' R2 U2 R U2' R2 U' R2' U2' R2 U' R2 U2' R2' U2 R\",\n    \"R' U2' R2' U2 R' U2' R2' U' R2 U2' R2' U' R2' U2' R2 U2 R\",\n    \"R U R2' U2 R2 U2 R2' U2' R2 U2 R' U' R' U2 R2 U2 R'\",\n    \"R U2' R U2' R2 U' R2' U2' R2 U2 R U' R' U2 R2 U2 R'\",\n    \"R2 U R2 U2 R' U2' R U' R' U2' R U2 R U' R2 U' R2'\",\n    \"R2 U R2 U2' R' U2 R U R' U2 R U2' R U' R2 U' R2'\",\n    \"R2 U2' R U2 R2 U2' R2 U2' R2' U2' R2 U' R U2' R' U2 R2'\",\n    \"R2' U R U2 R' U2' R U' R' U2' R U2 R U' R2' U' R2\",\n    \"R2' U R U2' R' U2 R U R' U2 R U2' R U' R2' U' R2\",\n    \"R U R2 U R' U R2' U' R2 U' R2 U' R2' U R' U' R2\",\n    \"R U2 R2 U2' R2' U2 R2 U2' R2' U2 R2 U R2 U' R2' U2' R2\",\n    \"R U2 R2' U R2 U2 R U2' R2 U' R2' U R2' U' R2 U2' R2'\",\n    \"R U2 R' U2' R2' U' R2 U2' R U2 R2 U' R2 U' R2' U2' R2\",\n    \"R U2' R2' U2 R2 U2' R2 U2 R2' U2 R2 U R U2 R2 U2' R'\",\n    \"R U2' R' U2 R2' U R2 U2 R U2' R2 U2 R2 U' R2' U2' R2\",\n    \"R U' R2 U2' R U2 R2 U R2' U2 R' U R2 U' R2' U2' R2\",\n    \"R2 U R2 U2 R2' U2' R2 U2 R2' U2' R2 U2 R U' R2 U2' R2'\",\n    \"R2 U R2 U' R2' U2' R' U2 R2' U R2 U2 R' U' R2 U2' R2'\",\n    \"R2 U R2' U' R2 U2' R U2 R2 U R2' U2 R2 U' R2 U2' R2'\",\n    \"R2 U R' U2 R2' U R2 U2 R U2' R2 U' R U' R2 U2' R2'\",\n    \"R2 U2 R U R2 U' R U R2 U' R U R2 U' R2' U2' R2'\",\n    \"R2 U2 R2 U2' R U2 R2 U R2' U2 R' U2' R U' R2 U2' R2'\",\n    \"R2 U2 R2' U R2 U2 R U2' R2 U' R2' U R2 U' R2' U2' R2\",\n    \"R2 U2 R' U R U2' R' U2 R' U2' R U R' U' R2 U' R2'\",\n    \"R2 U2 R' U' R' U2 R U2' R U2 R' U' R' U' R2 U' R2'\",\n    \"R2 U2' R U R2 U2 R U2' R2 U' R2' U2' R' U R2 U2' R2'\",\n    \"R2 U2' R U2 R2 U2' R2' U2 R2 U2' R2' U2 R2 U2 R2 U2' R2'\",\n    \"R2 U2' R U2 R' U2' R2' U' R2 U2' R2' U' R2' U2' R' U2 R2'\",\n    \"R2 U2' R U2' R2 U2 R2' U2' R2 U2 R2' U2' R2 U R2 U2' R2'\",\n    \"R2 U2' R U2' R' U2 R2' U R2 U2 R U2' R2 U2' R2 U2' R2'\",\n    \"R2 U2' R U' R2 U2' R U2 R2 U R2' U2 R' U2 R2 U2' R2'\",\n    \"R2 U2' R2 U2 R2' U R2 U2 R U2' R2 U' R2' U2 R2 U2' R2'\",\n    \"R2 U2' R2 U2 R2' U2' R2' U2 R2 U2 R2' U R' U2 R2' U2' R2'\",\n    \"R2 U2' R2 U2' R2' U' R2 U2' R U2 R2 U R2' U R2 U2' R2'\",\n    \"R2 U2' R2 U' R2' U R' U' R2' U R' U' R2' U R' U2 R2'\",\n    \"R2 U2' R2' U R U2' R2 U' R2' U2' R' U2 R2' U R' U2' R2'\",\n    \"R2 U2' R2' U R2 U R2' U2 R' U2' R2' U' R2 U2' R2' U2' R2'\",\n    \"R2 U2' R2' U R2' U R2 U2 R U2' R2 U' R2' U2' R U2' R2'\",\n    \"R2 U2' R2' U R2' U2' R2 U2 R2' U2' R2 U2 R2' U2' R' U2' R2'\",\n    \"R2 U2' R2' U2 R U2 R2 U R2' U2 R' U2' R2' U' R' U2' R2'\",\n    \"R2 U2' R2' U2 R2 U2 R2' U2' R2' U2 R2 U R2' U2 R' U2' R2'\",\n    \"R2 U2' R2' U2 R2 U' R2' U2' R' U2 R2' U R2 U2 R2' U2' R2'\",\n    \"R2 U2' R2' U2 R2' U2 R2 U2' R2' U2 R2 U2 R2' U2' R' U2 R2'\",\n    \"R2 U2' R2' U2 R2' U2 R2 U2' R2' U2 R2 U2' R2' U2 R' U2' R2'\",\n    \"R2 U2' R2' U2 R2' U' R2 U2' R U2 R2 U R2' U2 R U2' R2'\",\n    \"R2 U2' R2' U2 R' U2 R2' U R2 U2 R2' U2' R2' U2 R2 U2' R2'\",\n    \"R2 U2' R2' U2' R2' U2' R' U2 R2' U R2 U2 R U2' R' U2' R2'\",\n    \"R2 U2' R2' U' R U2 R2' U R2 U2 R U2' R2 U' R2' U R2'\",\n    \"R2 U2' R2' U' R2 U R2 U2 R2' U2' R2 U2 R2' U2' R2 U2 R\",\n    \"R2 U2' R2' U' R2 U R2 U' R2' U2' R' U2 R2' U R2 U2 R'\",\n    \"R2 U2' R2' U' R2 U R2' U' R2 U2' R U2 R2 U R2' U2 R2\",\n    \"R2 U2' R2' U' R2 U R' U2 R2' U R2 U2 R U2' R2 U' R\",\n    \"R2 U2' R2' U' R2 U2 R2 U2' R U2 R2 U R2' U2 R' U2' R\",\n    \"R2 U2' R2' U' R2 U2' R U R2 U2 R U2' R2 U' R2' U2' R'\",\n    \"R2 U2' R2' U' R2 U2' R U2 R' U2' R2' U' R2 U2' R U2 R2\",\n    \"R2 U2' R2' U' R2 U2' R U2' R2 U2 R2' U2' R2 U2 R2' U2' R2\",\n    \"R2 U2' R2' U' R2 U2' R U2' R' U2 R2' U R2 U2 R U2' R2\",\n    \"R2 U2' R2' U' R2 U2' R2 U2' R2' U' R2 U2' R U2 R2 U R2'\",\n    \"R2 U2' R2' U' R2 U2' R' U2' R2 U' R2' U2' R' U2 R2' U R2\",\n    \"R2 U2' R2' U' R2 U' R2 U2 R U2' R2 U' R2' U2' R' U2 R\",\n    \"R2 U2' R2' U' R2' U2 R2 U R2' U2 R' U2' R2' U' R2 U R2'\",\n    \"R2 U2' R2' U' R' U2 R U2' R2 U' R2' U2' R' U2 R2' U' R2'\",\n    \"R2 U2' R2' U' R' U2 R2' U2' R2 U2 R2' U2' R2 U2 R2' U R2'\",\n    \"R2 U2' R2' U' R' U2' R U2 R2 U R2' U2 R' U2' R2' U2 R2'\",\n    \"R2 U2' R2' U' R' U' R2' U2' R' U2 R2' U R2 U2 R U R2'\",\n    \"R2 U2' R' U2 R2 U R2' U2 R' U2' R2' U' R2 U2 R2 U2' R2'\",\n    \"R2 U2' R' U2' R2 U' R2' U2' R' U2 R2' U R2 U R2 U2' R2'\",\n    \"R2 U' R2 U2 R U2' R2 U' R2' U2' R' U2 R U' R2 U2' R2'\",\n    \"R2 U' R' U R2' U' R2 U' R2 U' R2' U R' U R2 U R\",\n    \"R2' U R U2 R2 U R2' U2 R' U2' R2' U' R' U' R2' U2' R2\",\n    \"R2' U R2 U' R2' U2' R' U2 R2' U R2 U2 R2' U' R2' U2' R2\",\n    \"R2' U R2' U2 R2 U2' R2' U2 R2 U2' R2' U2 R' U' R2' U2' R2\",\n    \"R2' U R2' U' R2 U2' R U2 R2 U R2' U2 R U' R2' U2' R2\",\n    \"R2' U2 R2 U R2' U2 R' U2' R2' U' R2 U R2' U' R2 U2' R2'\",\n    \"R2' U2 R2' U2' R' U2 R2' U R2 U2 R U2' R' U' R2' U2' R2\",\n    \"R2' U2 R' U R2' U' R' U R2' U' R' U R2' U' R2 U2' R2\",\n    \"R2' U2' R U2 R2' U R2 U2 R U2' R2 U' R2' U2 R2' U2' R2\",\n    \"R2' U2' R U2' R2' U' R2 U2' R U2 R2 U R2' U R2' U2' R2\",\n    \"R2' U2' R2 U R2 U R2' U2 R' U2' R2' U' R2 U2' R' U2' R2\",\n    \"R2' U2' R2 U R2 U2' R2' U2 R2 U2' R2' U2 R2 U2' R U2' R2\",\n    \"R2' U2' R2 U R2' U R2 U2 R U2' R2 U' R2' U2' R2 U2' R2\",\n    \"R2' U2' R2 U R' U2' R2' U' R2 U2' R U2 R2 U R U2' R2\",\n    \"R2' U2' R2 U2 R U2 R2 U R2' U2 R2 U2' R2 U2 R2' U2' R2\",\n    \"R2' U2' R2 U2 R2 U2 R2' U2' R2 U2 R2' U2 R2 U2' R U2 R2\",\n    \"R2' U2' R2 U2 R2 U2 R2' U2' R2 U2 R2' U2' R2 U2 R U2' R2\",\n    \"R2' U2' R2 U2 R2 U' R2' U2' R' U2 R2' U R2 U2 R' U2' R2\",\n    \"R2' U2' R2 U2 R2' U2 R2 U2' R2 U2 R2' U R2 U2 R U2' R2\",\n    \"R2' U2' R2 U2 R2' U' R2 U2' R U2 R2 U R2' U2 R2 U2' R2\",\n    \"R2' U2' R2 U2 R' U2 R2' U R2 U2 R U2' R2 U' R U2' R2\",\n    \"R2' U2' R2 U2' R2 U2' R U2 R2 U R2' U2 R' U2' R U2' R2\",\n    \"R2' U2' R2 U' R U2 R2 U2' R2' U2 R2 U2' R2' U2 R2 U R2\",\n    \"R2' U2' R2 U' R U2 R' U2' R2' U' R2 U2' R U2 R2 U' R2\",\n    \"R2' U2' R2 U' R U2' R' U2 R2' U R2 U2 R U2' R2 U2 R2\",\n    \"R2' U2' R2 U' R U' R2 U2' R U2 R2 U R2' U2 R' U R2\",\n    \"R2' U2' R2 U' R2 U2 R2' U R2 U2 R U2' R2 U' R2' U R2\",\n    \"R2' U2' R2 U' R2' U R U2 R2 U R2' U2 R' U2' R2' U' R'\",\n    \"R2' U2' R2 U' R2' U R2 U' R2' U2' R' U2 R2' U R2 U2 R2'\",\n    \"R2' U2' R2 U' R2' U R2' U2 R2 U2' R2' U2 R2 U2' R2' U2 R'\",\n    \"R2' U2' R2 U' R2' U R2' U' R2 U2' R U2 R2 U R2' U2 R\",\n    \"R2' U2' R2 U' R2' U2 R2' U2' R' U2 R2' U R2 U2 R U2' R'\",\n    \"R2' U2' R2 U' R2' U2' R U2' R2' U' R2 U2' R U2 R2 U R2'\",\n    \"R2' U2' R2 U' R2' U2' R2' U2' R2 U' R2' U2' R' U2 R2' U R2\",\n    \"R2' U2' R2 U' R2' U2' R' U R2' U2 R' U2' R2' U' R2 U2' R\",\n    \"R2' U2' R2 U' R2' U2' R' U2 R U2' R2 U' R2' U2' R' U2 R2'\",\n    \"R2' U2' R2 U' R2' U2' R' U2' R U2 R2 U R2' U2 R' U2' R2'\",\n    \"R2' U2' R2 U' R2' U2' R' U2' R2' U2 R2 U2' R2' U2 R2 U2' R2'\",\n    \"R2' U2' R2 U' R2' U' R2' U2 R' U2' R2' U' R2 U2' R U2 R'\",\n    \"R2' U2' R2 U' R' U2 R2 U R2' U2 R' U2' R2' U' R2 U R2\",\n    \"R2' U2' R2' U2 R2 U R2' U2 R' U2' R2' U' R2 U2 R2' U2' R2\",\n    \"R2' U2' R2' U2' R2 U' R2' U2' R' U2 R2' U R2 U R2' U2' R2\",\n    \"R2' U2' R2' U' R2 U R U' R2 U R U' R2 U R U2 R2\",\n    \"R2' U2' R' U R2' U2 R' U2' R2' U' R2 U2' R U R2' U2' R2\",\n    \"R2' U2' R' U2 R U2' R2 U' R2' U2' R2 U' R2 U2' R U2 R2\",\n    \"R2' U2' R' U2 R2' U2' R2 U2 R2' U2' R2 U2 R2' U2 R2' U2' R2\",\n    \"R2' U2' R' U2' R U2 R2 U R2' U2 R' U2' R2' U2' R2' U2' R2\",\n    \"R2' U2' R' U2' R2' U2 R2 U2' R2' U2 R2 U2' R2' U R2' U2' R2\",\n    \"R2' U2' R' U' R2' U2' R' U2 R2' U R2 U2 R U2 R2' U2' R2\",\n    \"R2' U' R2 U' R' U R U2' R' U2 R' U2' R U R' U2 R2\",\n    \"R2' U' R2 U' R' U' R' U2 R U2' R U2 R' U' R' U2 R2\",\n    \"R2' U' R2' U2 R' U2' R2' U' R2 U2' R U2 R' U' R2' U2' R2\",\n    \"R' U2 R U2' R2 U' R2' U2' R' U2 R2' U' R2' U' R2 U2' R2'\",\n    \"R' U2 R2 U R2' U2 R' U2' R2' U' R2 U R2 U' R2' U2' R2\",\n    \"R' U2 R2' U2' R2 U2 R2' U2' R2 U2 R2' U R2' U' R2 U2' R2'\",\n    \"R' U2' R U2 R2 U R2' U2 R' U2' R2' U2 R2' U' R2 U2' R2'\",\n    \"R' U2' R U' R' U2' R2 U2' R2' U' R2 U2' R' U2 R' U R\",\n    \"R' U2' R U' R' U2' R2' U2' R2 U' R2' U2' R2' U2 R' U R\",\n    \"R' U2' R2 U2 R2' U2' R' U2 R2' U2 R2 U R U2 R2 U2' R'\",\n    \"R' U2' R2 U2' R2' U2 R' U2' R2' U R2 U R U2 R2 U2' R'\",\n    \"R' U2' R2' U2 R2 U2' R U2 R2 U2 R2' U R' U2 R2' U2' R2'\",\n    \"R' U2' R2' U2' R2 U2 R U2' R2 U R2' U R' U2 R2' U2' R2'\",\n    \"R' U' R2' U2' R' U2 R2' U R2 U2 R U R2' U' R2 U2' R2'\",\n  ],\n  [\n    \"R U2' R2 U2 R2' U R2 U2 R2' U2' R'\",\n    \"R U2' R2' U2 R2 U R2' U2 R2 U2' R'\",\n    \"R2 U2' R2 U2 R2' U R2 U2 R2' U2' R2'\",\n    \"R2 U2' R2' U2 R2 U R2' U2 R2 U2' R2'\",\n    \"R2' U2' R2 U2 R2' U R2 U2 R2' U2' R2\",\n    \"R2' U2' R2' U2 R2 U R2' U2 R2 U2' R2\",\n    \"R' U2' R2 U2 R2' U R2 U2 R2' U2' R\",\n    \"R' U2' R2' U2 R2 U R2' U2 R2 U2' R\",\n    \"R2 U2 R2' U2' R2 U2' R2' U2 R2 U2' R2'\",\n    \"R2' U2 R2 U2' R2' U2' R2 U2 R2' U2' R2\",\n    \"R2 U2' R2' U2 R2 U2' R2' U2' R2 U2 R2'\",\n    \"R2' U2' R2 U2 R2' U2' R2 U2' R2' U2 R2\",\n    \"R U2' R2 U2 R2' U2' R2 U2' R2' U2 R2 U2' R2\",\n    \"R U2' R2' U2 R2 U2' R2' U2' R2 U2 R2' U2' R\",\n    \"R2 U2' R2 U2 R2' U2' R2 U2' R2' U2 R2 U2' R\",\n    \"R2' U2' R2' U2 R2 U2' R2' U2' R2 U2 R2' U2' R'\",\n    \"R' U2' R2 U2 R2' U2' R2 U2' R2' U2 R2 U2' R'\",\n    \"R' U2' R2' U2 R2 U2' R2' U2' R2 U2 R2' U2' R2'\",\n    \"R2 U2' R U2 R2 U R2' U2 R2 U R2 U2 R2'\",\n    \"R2' U2' R' U2 R2' U R2 U2 R2' U R2' U2 R2\",\n    \"R2 U2 R2' U R2' U2 R2 U R2' U2 R' U2' R2'\",\n    \"R2' U2 R2 U R2 U2 R2' U R2 U2 R U2' R2\",\n    \"R2 U2 R2' U R2 U2' R2' U2 R' U2' R2' U' R2 U2' R\",\n    \"R2 U' R2' U2' R' U2 R2' U2' R2 U R2' U2 R2 U2' R\",\n    \"R2' U2 R2 U R2' U2' R2 U2 R U2' R2 U' R2' U2' R'\",\n    \"R2' U2' R U R' U2' R2 U2 R2' U R2 U' R' U' R\",\n    \"R2' U' R2 U2' R U2 R2 U2' R2' U R2 U2 R2' U2' R'\",\n    \"R' U' R2 U R2' U2 R2 U2' R' U R U2' R2' U2' R\",\n    \"R U2' R2 U2 R2' U R2 U2' R2' U2 R' U2' R2' U' R2\",\n    \"R U2' R2 U' R2' U2' R' U2 R2' U2' R2 U R2' U2 R2\",\n    \"R U2' R2' U2' R U R' U2' R2 U2 R2' U R2 U' R'\",\n    \"R U' R' U' R2 U R2' U2 R2 U2' R' U R U2' R2'\",\n    \"R' U2' R2' U2 R2 U R2' U2' R2 U2 R U2' R2 U' R2'\",\n    \"R' U2' R2' U' R2 U2' R U2 R2 U2' R2' U R2 U2 R2'\",\n    \"R U2 R2 U R2' U2 R' U2' R2' U R2 U R2' U2 R2\",\n    \"R2 U2 R2' U2' R2 U2 R2' U2' R2 U' R2' U R2 U2 R2'\",\n    \"R2 U2' R2' U' R2 U2' R2' U2' R2 U2' R2' U' R2 U2' R2'\",\n    \"R2 U2' R2' U' R2 U2' R2' U2' R2' U2' R2 U' R2' U2' R2\",\n    \"R2' U2 R2 U2' R2' U2 R2 U2' R2' U' R2 U R2' U2 R2\",\n    \"R2' U2' R2 U' R2' U2' R2 U2' R2 U2' R2' U' R2 U2' R2'\",\n    \"R2' U2' R2 U' R2' U2' R2 U2' R2' U2' R2 U' R2' U2' R2\",\n    \"R' U2 R2' U R2 U2 R U2' R2 U R2' U R2 U2 R2'\",\n    \"R U2 R2 U2' R2' U2 R2 U2' R2' U2 R' U R2' U2 R2\",\n    \"R U2 R2' U R2 U2 R U2' R2 U' R U R2 U2 R2'\",\n    \"R U' R2 U2' R U2 R2 U R2' U2 R U R2' U2 R2\",\n    \"R2 U R2' U R2 U R2' U' R2 U' R2' U R2 U2' R2'\",\n    \"R2 U R2' U2' R' U2 R2' U R2 U2 R U' R2 U2 R2'\",\n    \"R2 U2 R U2' R' U2 R2' U R2 U2 R U2' R' U2 R2'\",\n    \"R2 U2 R2' U R U2 R2' U R2 U2 R U2' R2 U' R\",\n    \"R2 U2 R2' U R2 U R2' U2' R' U2 R2' U R2 U2 R\",\n    \"R2 U2 R2' U R2 U' R U2' R2 U' R2' U2' R' U2 R2'\",\n    \"R2 U2 R2' U R2 U' R2' U2' R2 U2 R2' U2' R2 U2 R2'\",\n    \"R2 U2 R2' U R' U2 R2' U2' R2 U2 R2' U2' R2 U2 R\",\n    \"R2 U2 R2' U R' U' R2' U2' R' U2 R2' U R2 U2 R'\",\n    \"R2 U2 R2' U2 R2 U2 R U2' R2 U' R2' U2' R' U' R2'\",\n    \"R2 U2 R2' U2' R' U2' R2' U' R2 U2' R U2 R2 U2' R2'\",\n    \"R2 U2 R2' U' R2 U2 R2' U2' R2 U2 R2' U2' R2 U' R2'\",\n    \"R2 U2 R2' U' R' U2 R2' U R2 U2 R U2' R2 U R2'\",\n    \"R2 U2' R2' U R2 U' R2' U' R2 U R2' U R2 U R2'\",\n    \"R2 U2' R2' U2 R' U2' R2' U' R2 U2' R U2' R2 U2 R2'\",\n    \"R2 U' R U2' R2 U' R2' U2' R' U2 R2' U2 R2 U2 R2'\",\n    \"R2 U' R2' U2' R2 U2 R2' U2' R2 U2 R2' U' R2 U2 R2'\",\n    \"R2' U R2 U R2' U R2 U' R2' U' R2 U R2' U2' R2\",\n    \"R2' U R2 U2' R U2 R2 U R2' U2 R' U' R2' U2 R2\",\n    \"R2' U2 R2 U R U2 R2 U2' R2' U2 R2 U2' R2' U2 R'\",\n    \"R2' U2 R2 U R U' R2 U2' R U2 R2 U R2' U2 R\",\n    \"R2' U2 R2 U R2' U R2 U2' R U2 R2 U R2' U2 R'\",\n    \"R2' U2 R2 U R2' U' R2 U2' R2' U2 R2 U2' R2' U2 R2\",\n    \"R2' U2 R2 U R2' U' R' U2' R2' U' R2 U2' R U2 R2\",\n    \"R2' U2 R2 U R' U2 R2 U R2' U2 R' U2' R2' U' R'\",\n    \"R2' U2 R2 U2 R2' U2 R' U2' R2' U' R2 U2' R U' R2\",\n    \"R2' U2 R2 U2' R U2' R2 U' R2' U2' R' U2 R2' U2' R2\",\n    \"R2' U2 R2 U' R U2 R2 U R2' U2 R' U2' R2' U R2\",\n    \"R2' U2 R2 U' R2' U2 R2 U2' R2' U2 R2 U2' R2' U' R2\",\n    \"R2' U2 R' U2' R U2 R2 U R2' U2 R' U2' R U2 R2\",\n    \"R2' U2' R2 U R2' U' R2 U' R2' U R2 U R2' U R2\",\n    \"R2' U2' R2 U2 R U2' R2 U' R2' U2' R' U2' R2' U2 R2\",\n    \"R2' U' R2 U2' R2' U2 R2 U2' R2' U2 R2 U' R2' U2 R2\",\n    \"R2' U' R' U2' R2' U' R2 U2' R U2 R2 U2 R2' U2 R2\",\n    \"R' U2 R2 U R2' U2 R' U2' R2' U' R' U R2' U2 R2\",\n    \"R' U2 R2' U2' R2 U2 R2' U2' R2 U2 R U R2 U2 R2'\",\n    \"R' U' R2' U2' R' U2 R2' U R2 U2 R' U R2 U2 R2'\",\n    \"R2 U2 R U2' R2 U' R2' U2' R' U' R2' U R2 U2 R2'\",\n    \"R2' U2 R' U2' R2' U' R2 U2' R U' R2 U R2' U2 R2\",\n    \"R U2 R2 U2' R U2 R2 U R2' U2 R2 U R2 U2 R2' U2' R'\",\n    \"R U2 R2' U2' R' U2 R2' U R2 U2 R2' U R2' U2 R2 U2' R'\",\n    \"R U2' R2 U2 R2' U R2' U2 R2 U R2' U2 R' U2' R2' U2 R'\",\n    \"R U2' R2' U2 R2 U R2 U2 R2' U R2 U2 R U2' R2 U2 R'\",\n    \"R U2' R2' U2 R2 U R2' U2' R2 U2 R U2' R2 U' R2' U2' R2'\",\n    \"R U2' R2' U' R2 U2' R U2 R2 U2' R2' U R2 U2 R2' U2' R2'\",\n    \"R2 U2 R2 U2' R U2 R2 U R2' U2 R2 U R2 U2 R2' U2' R2'\",\n    \"R2 U2 R2' U2' R' U2 R2' U R2 U2 R2' U R2' U2 R2 U2' R2'\",\n    \"R2 U2' R2 U2 R2' U R2 U2' R2' U2 R' U2' R2' U' R2 U2' R'\",\n    \"R2 U2' R2 U2 R2' U R2' U2 R2 U R2' U2 R' U2' R2' U2 R2'\",\n    \"R2 U2' R2 U' R2' U2' R' U2 R2' U2' R2 U R2' U2 R2 U2' R'\",\n    \"R2 U2' R2' U2 R2 U R2 U2 R2' U R2 U2 R U2' R2 U2 R2'\",\n    \"R2 U2' R2' U2 R2 U R2' U2' R2 U2 R U2' R2 U' R2' U2' R2\",\n    \"R2 U2' R2' U2' R U R' U2' R2 U2 R2' U R2 U' R' U' R'\",\n    \"R2 U2' R2' U' R2 U2' R U2 R2 U2' R2' U R2 U2 R2' U2' R2\",\n    \"R2 U' R' U' R2 U R2' U2 R2 U2' R' U R U2' R2' U2' R'\",\n    \"R2' U2 R2 U2' R U2 R2 U R2' U2 R2 U R2 U2 R2' U2' R2\",\n    \"R2' U2 R2' U2' R' U2 R2' U R2 U2 R2' U R2' U2 R2 U2' R2\",\n    \"R2' U2' R2 U2 R2' U R2 U2' R2' U2 R' U2' R2' U' R2 U2' R2'\",\n    \"R2' U2' R2 U2 R2' U R2' U2 R2 U R2' U2 R' U2' R2' U2 R2\",\n    \"R2' U2' R2 U' R2' U2' R' U2 R2' U2' R2 U R2' U2 R2 U2' R2'\",\n    \"R2' U2' R2' U2 R2 U R2 U2 R2' U R2 U2 R U2' R2 U2 R2\",\n    \"R2' U2' R2' U2 R2 U R2' U2' R2 U2 R U2' R2 U' R2' U2' R\",\n    \"R2' U2' R2' U2' R U R' U2' R2 U2 R2' U R2 U' R' U' R2'\",\n    \"R2' U2' R2' U' R2 U2' R U2 R2 U2' R2' U R2 U2 R2' U2' R\",\n    \"R2' U' R' U' R2 U R2' U2 R2 U2' R' U R U2' R2' U2' R2'\",\n    \"R' U2 R2 U2' R U2 R2 U R2' U2 R2 U R2 U2 R2' U2' R\",\n    \"R' U2 R2' U2' R' U2 R2' U R2 U2 R2' U R2' U2 R2 U2' R\",\n    \"R' U2' R2 U2 R2' U R2 U2' R2' U2 R' U2' R2' U' R2 U2' R2\",\n    \"R' U2' R2 U2 R2' U R2' U2 R2 U R2' U2 R' U2' R2' U2 R\",\n    \"R' U2' R2 U' R2' U2' R' U2 R2' U2' R2 U R2' U2 R2 U2' R2\",\n    \"R' U2' R2' U2 R2 U R2 U2 R2' U R2 U2 R U2' R2 U2 R\",\n    \"R' U2' R2' U2' R U R' U2' R2 U2 R2' U R2 U' R' U' R2\",\n    \"R' U' R' U' R2 U R2' U2 R2 U2' R' U R U2' R2' U2' R2\",\n  ],\n  [\n    \"R2' U' R U' R U' R U R2' U R' U R2 U2' R U' R'\",\n    \"R' U2' R U' R U R U' R2 U2' R U2 R2 U R' U' R'\",\n    \"R' U2' R U' R' U2' R' U2 R2' U R2 U2 R2 U2' R U' R'\",\n    \"R U R' U' R2 U R2 U2 R2' U2 R2 U R U2 R U2' R'\",\n    \"R U2 R U2' R U2 R2' U R2 U2 R2' U R U2 R' U2' R'\",\n    \"R U2 R U2' R2 U2 R2 U R2' U2 R2 U R U2 R' U2' R'\",\n    \"R U' R' U2' R U' R U R2' U2 R U2' R U' R' U' R'\",\n    \"R2 U2 R2' U2 R2' U2 R2' U2' R' U' R U2' R2 U2 R' U2 R2'\",\n    \"R2 U' R' U2' R U' R U R2' U2 R U2' R U' R' U' R2'\",\n    \"R2' U' R' U2' R U' R U R2' U2 R U2' R U' R' U' R2\",\n    \"R' U' R' U2' R U' R U R2' U2 R U2' R U' R' U' R\",\n    \"R2' U' R2' U R2' U R2' U R2 U' R2 U' R' U R2' U2' R'\",\n    \"R2 U R U' R' U R2' U2 R2 U2 R2' U2 R2' U R' U' R2'\",\n    \"R2' U2 R2' U2 R2' U2' R' U' R U2' R2 U2 R' U2 R2' U2 R2\",\n    \"R U2 R' U2' R' U2 R2 U2 R2' U R2 U2 R' U2 R U2' R'\",\n    \"R U2 R' U2' R' U2 R2' U2 R2 U R2' U2 R2' U2 R U2' R'\",\n    \"R2 U R2 U2 R U2' R2 U' R2' U2 R U R2' U2 R U2' R U' R'\",\n    \"R' U2' R U' R U R2' U2 R' U R2 U2 R U2' R2 U' R2' U2 R'\",\n    \"R' U2' R U' R U R' U2 R U2' R' U2 R' U2' R U2 R U2 R'\",\n    \"R' U2' R U' R U2' R2' U2' R2 U2 R2' U2' R2 U2 R' U2' R U' R'\",\n    \"R' U2 R U R' U2 R U R2' U2 R2' U R2 U2 R2 U2' R U' R'\",\n    \"R' U2 R U R' U2 R U R' U2 R2 U R2' U2 R U2' R U' R'\",\n    \"R U2 R2 U R2' U2' R U2 R2 U2' R2 U2 R' U' R2 U' R U' R'\",\n    \"R2' U' R U' R U R U2' R2 U2' R2' U' R2' U' R U2' R' U2 R\",\n    \"R' U R2' U R2 U' R2 U' R' U R2' U2' R' U2' R2' U' R2' U R'\",\n    \"R U R' U R' U' R2 U' R' U' R U2 R2' U R U' R U2' R'\",\n    \"R U2' R2 U2 R2' U2 R2 U2 R' U2' R' U' R U2' R U' R2' U2' R'\",\n    \"R U2' R2 U' R U2' R2 U2 R2 U' R U2 R2 U2' R2' U2 R' U2' R2\",\n    \"R U2' R2 U' R U2' R2 U2 R2 U' R2' U2 R2' U2' R2 U2 R2 U2' R2\",\n    \"R U2' R2' U2 R2 U2 R2' U2 R2' U2' R' U' R U2' R2 U' R2 U2' R'\",\n    \"R2 U' R2' U2' R' U2 R2' U R2' U' R U R2' U2 R U2' R U' R'\",\n    \"R' U R' U2' R2' U2 R2' U' R2 U2' R2' U' R' U2' R U2' R2 U R'\",\n    \"R' U' R2 U2' R U2 R2 U2' R2 U R2' U2 R2 U R U2 R' U2' R'\",\n    \"R2 U R2 U' R U2' R' U2' R2' U R' U' R' U2' R U2' R U R2'\",\n    \"R2' U R2 U2 R U R U2 R2 U2' R2 U2 R' U' R2 U' R U' R'\",\n    \"R' U2 R2' U2 R U2' R U R2 U' R' U2 R2' U' R U R2 U R\",\n    \"R' U' R' U2' R2' U R' U R2 U' R' U R' U2' R2 U2 R U R\",\n    \"R U' R U R2' U' R' U' R' U R U' R U2' R2' U2 R2 U2' R\",\n    \"R U' R U R2' U' R' U' R' U R U' R' U2' R2 U2 R2' U2' R2'\",\n    \"R2 U R2' U2 R2 U2 R2' U R2 U R2' U R2 U R2' U2' R2 U' R2'\",\n    \"R2 U R2' U2 R2 U' R2' U R U2' R U' R' U R' U' R U2' R'\",\n    \"R2 U2 R2' U' R2 U2 R2' U' R2 U2' R2' U R2 U R2' U2 R2 U2 R2'\",\n    \"R2 U2' R U' R U R' U R2 U' R' U R' U' R U' R2' U2' R2'\",\n    \"R2 U2' R' U2' R2 U R2' U2 R2' U2' R2' U2 R' U2 R2' U2 R U2 R2'\",\n    \"R2 U' R2' U2 R2 U2 R2' U2 R2 U2' R2' U R2 U2 R2' U R2 U R2'\",\n    \"R2 U' R2' U2 R2 U' R2' U2' R2 U2 R2' U' R2 U2 R2' U R2 U R2'\",\n    \"R2' U R2 U2 R2' U2 R2 U R2' U R2 U R2' U R2 U2' R2' U' R2\",\n    \"R2' U2 R2 U' R2' U2 R2 U' R2' U2' R2 U R2' U R2 U2 R2' U2 R2\",\n    \"R2' U2 R2' U R' U' R2' U R2 U2 R2' U R2 U2' R U' R2 U2' R2\",\n    \"R2' U2 R' U R2' U' R2' U R2 U2 R2' U' R' U' R2' U2' R2' U2 R2\",\n    \"R2' U' R2 U2 R2' U2 R2 U2 R2' U2' R2 U R2' U2 R2 U R2' U R2\",\n    \"R2' U' R2 U2 R2' U' R2 U2' R2' U2 R2 U' R2' U2 R2 U R2' U R2\",\n    \"R' U2' R U2 R' U2 R U R2' U2 R U2' R U2 R' U2 R' U2' R2\",\n    \"R' U2' R U2' R U2' R' U2' R U' R' U R' U2 R U2 R' U' R\",\n    \"R' U2' R U' R U R2' U2 R2 U R' U2 R U R' U2 R U R'\",\n    \"R' U2' R U' R U2 R2 U' R2' U' R' U R2' U R2 U2' R' U2' R\",\n    \"R' U2' R U' R' U2' R2 U2' R' U' R U2' R U2 R2' U R2 U2 R2'\",\n    \"R' U2' R U' R' U2' R2 U2' R' U' R U2' R2 U2 R2 U R2' U2 R2\",\n  ],\n  [\n    \"R U2 R' U R U2 R U2' R2 U' R2' U2' R2' U2 R' U R\",\n    \"R U2 R' U R' U' R' U R2' U2 R' U2' R2' U' R U R\",\n    \"R2 U R' U R' U R' U' R2 U' R U' R2' U2 R' U R\",\n    \"R' U2' R' U2 R2' U2' R2' U' R2 U2' R2' U' R' U2' R U2 R\",\n    \"R' U2' R' U2 R' U2' R2 U' R2' U2' R2 U' R' U2' R U2 R\",\n    \"R' U' R U R2' U' R2' U2' R2 U2' R2' U' R' U2' R' U2 R\",\n    \"R' U2' R U2 R U2' R2 U2' R2' U' R2 U2' R2 U2' R' U2 R\",\n    \"R' U2' R U2 R U2' R2' U2' R2 U' R2' U2' R U2' R' U2 R\",\n    \"R2 U2' R2 U2' R2 U2 R U R' U2 R2' U2' R U2' R2 U2' R2'\",\n    \"R2' U' R' U R U' R2 U2' R2' U2' R2 U2' R2 U' R U R2\",\n    \"R2 U R2 U' R2 U' R2 U' R2' U R2' U R U' R2 U2 R\",\n    \"R U R U2 R' U R' U' R2 U2' R' U2 R' U R U R'\",\n    \"R2 U R U2 R' U R' U' R2 U2' R' U2 R' U R U R2'\",\n    \"R2' U R U2 R' U R' U' R2 U2' R' U2 R' U R U R2\",\n    \"R2' U2' R2 U2' R2 U2' R2 U2 R U R' U2 R2' U2' R U2' R2\",\n    \"R' U R U2 R' U R' U' R2 U2' R' U2 R' U R U R\",\n    \"R U2 R' U R' U2 R2 U2 R2' U2' R2 U2 R2' U2' R U2 R' U R\",\n    \"R U2 R' U R' U' R U2' R' U2 R U2' R U2 R' U2' R' U2' R\",\n    \"R U2 R' U R' U' R2 U2' R U' R2' U2' R' U2 R2' U R2 U2' R\",\n    \"R2' U' R2' U2' R' U2 R2' U R2 U2' R' U' R2 U2' R' U2 R' U R\",\n    \"R U R U2 R2 U' R U' R2' U R U' R U2 R2' U2' R' U' R'\",\n    \"R U2' R2 U2' R' U2 R' U' R2' U R U2' R2 U R' U' R2' U' R'\",\n    \"R2 U' R2' U2' R' U' R' U2' R2' U2 R2' U2' R U R2' U R' U R\",\n    \"R2' U' R2' U R' U2 R U2 R2 U' R U R U2 R' U2 R' U' R2\",\n    \"R U R2' U2 R' U2' R2' U2 R2' U' R2 U2' R2' U' R' U2' R U2 R\",\n    \"R U' R U2 R2 U2' R2 U R2' U2 R2 U R U2 R' U2 R2' U' R\",\n    \"R2' U R2 U2 R U2' R2 U' R2 U R' U' R2 U2' R' U2 R' U R\",\n    \"R' U2 R2 U2' R2' U2' R2 U2' R2 U2 R U R' U2 R2' U R2' U2 R\",\n    \"R' U2 R2' U R' U2 R2' U2' R2' U R2 U2' R2 U2 R2' U2' R2' U2 R2'\",\n    \"R' U2 R2' U R' U2 R2' U2' R2' U R' U2' R2' U2 R2 U2' R U2 R2'\",\n    \"R' U2 R2' U2' R2 U2' R2' U2' R U2 R U R' U2 R' U R2 U2 R\",\n    \"R' U' R U' R U R2' U R U R' U2' R2 U' R' U R' U2 R\",\n    \"R U' R2 U' R2' U R2' U R U' R2 U2 R U2 R2 U R2 U' R\",\n    \"R2 U R' U R' U' R' U2 R2' U2 R2 U R2 U R' U2 R U2' R'\",\n    \"R' U2' R2' U' R2 U2 R' U2' R2' U2 R2' U2' R U R2' U R' U R\",\n    \"R U2' R' U' R U2' R' U' R U2' R2' U' R2 U2' R' U2 R' U R\",\n    \"R U2' R' U' R U2' R' U' R2 U2' R2 U' R2' U2' R2' U2 R' U R\",\n    \"R U2 R' U R U2 R2' U2 R U R' U2 R2' U2' R2' U' R2 U2' R2'\",\n    \"R U2 R' U R U2 R2' U2 R U R' U2 R' U2' R2 U' R2' U2' R2\",\n    \"R U2 R' U R' U2' R2' U R2 U R U' R2 U' R2' U2 R U2 R'\",\n    \"R U2 R' U R' U' R2 U2' R2' U' R U2' R' U' R U2' R' U' R\",\n    \"R U2 R' U2 R' U2 R U2 R' U R U' R U2' R' U2' R U R'\",\n    \"R U2 R' U2' R U2' R' U' R2 U2' R' U2 R' U2' R U2' R U2 R2'\",\n    \"R2 U R2' U2' R2 U R2' U2 R2 U2' R2' U R2 U2' R2' U' R2 U' R2'\",\n    \"R2 U R2' U2' R2 U2' R2' U2' R2 U2 R2' U' R2 U2' R2' U' R2 U' R2'\",\n    \"R2 U2' R U' R2 U R2 U' R2' U2' R2 U R U R2 U2 R2 U2' R2'\",\n    \"R2 U2' R2 U' R U R2 U' R2' U2' R2 U' R2' U2 R' U R2' U2 R2'\",\n    \"R2 U2' R2' U R2 U2' R2' U R2 U2 R2' U' R2 U' R2' U2' R2 U2' R2'\",\n    \"R2 U' R2' U2' R2 U2' R2' U' R2 U' R2' U' R2 U' R2' U2 R2 U R2'\",\n    \"R2' U R2 U2' R2' U R2 U2 R2' U2' R2 U R2' U2' R2 U' R2' U' R2\",\n    \"R2' U R2 U2' R2' U2' R2 U2' R2' U2 R2 U' R2' U2' R2 U' R2' U' R2\",\n    \"R2' U2 R U2 R2' U' R2 U2' R2 U2 R2 U2' R U2' R2 U2' R' U2' R2\",\n    \"R2' U2 R' U R' U' R U' R2' U R U' R U R' U R2 U2 R2\",\n    \"R2' U2' R2 U R2' U2' R2 U R2' U2 R2 U' R2' U' R2 U2' R2' U2' R2\",\n    \"R2' U' R2 U2' R2' U R2 U' R' U2 R' U R U' R U R' U2 R\",\n    \"R2' U' R2 U2' R2' U2' R2 U' R2' U' R2 U' R2' U' R2 U2 R2' U R2\",\n    \"R' U R' U' R2 U R U R U' R' U R U2 R2' U2' R2 U2 R2\",\n    \"R' U R' U' R2 U R U R U' R' U R' U2 R2 U2' R2' U2 R'\",\n  ],\n  [\n    \"R U R U' R2' U2' R' U2 R2' U R' U' R' U R' U2 R\",\n    \"R U R' U2 R2' U2' R2' U' R2 U2' R U2 R U R' U2 R\",\n    \"R U R' U2 R2' U' R U' R2 U' R' U R' U R' U R\",\n    \"R U2 R U2' R' U' R2 U2' R2' U' R2 U2' R' U2 R' U2' R\",\n    \"R U2 R U2' R' U' R2' U2' R2 U' R2' U2' R2' U2 R' U2' R\",\n    \"R U2 R' U2' R' U' R2' U2' R2 U2' R2' U' R2' U R U' R\",\n    \"R2 U R U' R2 U2' R2 U2' R2' U2' R2 U' R U R' U' R\",\n    \"R U2 R2 U' R U R2' U R2' U' R2 U' R2 U' R2 U R\",\n    \"R U2 R' U2' R U2' R2' U' R2 U2' R2' U2' R U2 R U2' R\",\n    \"R U2 R' U2' R2 U2' R2 U' R2' U2' R2 U2' R U2 R U2' R\",\n    \"R2 U2' R U2' R2' U2 R' U R U2 R2 U2' R2 U2' R2 U2' R\",\n    \"R U R U R' U2 R' U2' R2 U' R' U R' U2 R U R\",\n    \"R2 U R U R' U2 R' U2' R2 U' R' U R' U2 R U R\",\n    \"R2' U R U R' U2 R' U2' R2 U' R' U R' U2 R U R\",\n    \"R2' U2' R2 U2' R U2' R2' U2 R' U R U2 R2 U2' R2 U2' R\",\n    \"R' U R U R' U2 R' U2' R2 U' R' U R' U2 R U R\",\n    \"R U R' U2 R U2' R2' U2 R2 U2' R2' U2 R2 U2 R' U R' U2 R\",\n    \"R U R' U2 R' U2' R2 U' R' U2' R2 U R2' U2 R' U2' R2' U' R\",\n    \"R U2' R2 U R2' U2 R' U2' R2' U' R U2' R2 U' R' U R' U2 R\",\n    \"R U2' R' U2' R' U2 R U2' R U2 R' U2' R U' R' U R' U2 R\",\n    \"R U2 R' U R U' R U R' U2 R' U' R2 U R2' U2' R2 U' R\",\n    \"R2 U R2' U2 R2 U' R2' U' R2 U' R2' U' R2 U2' R2' U2' R2 U' R\",\n    \"R2' U R2 U2 R2' U' R2 U' R2' U' R2 U' R2' U2' R2 U2' R2' U' R\",\n    \"R2 U2 R2 U2' R2' U2 R U R' U' R U R U R2 U' R' U R\",\n    \"R2 U2' R2' U2' R2 U' R2' U' R2 U2 R2' U R2 U2' R2' U R2 U2' R\",\n    \"R2' U2 R2' U R' U2 R2' U' R2 U2' R2' U' R2 U R U' R2 U2' R\",\n    \"R2' U2' R2 U2' R2' U' R2 U' R2' U2 R2 U R2' U2' R2 U R2' U2' R\",\n    \"R' U2 R2' U2' R2 U2 R' U R' U' R U R U R2 U' R' U R\",\n    \"R U' R' U2' R U' R' U2' R U' R2' U2' R2 U' R' U R' U2 R\",\n    \"R2 U2 R2 U R' U R U' R U R2' U' R U' R' U R' U2 R\",\n    \"R2 U2' R2' U' R2 U2' R' U2 R' U R U2 R2' U2 R U R' U2 R\",\n    \"R2 U2' R' U2' R2 U2' R U2' R2 U2 R2 U2' R2 U' R2' U2 R U2 R\",\n    \"R2 U' R2' U' R2 U2' R2' U R2 U2' R2' U2 R2 U R2' U2' R2 U R\",\n    \"R2 U' R2' U' R2 U2' R2' U' R2 U2 R2' U2' R2 U2' R2' U2' R2 U R\",\n    \"R2' U2 R U2' R U2' R' U2 R' U2' R2 U' R' U2' R U2' R' U2 R\",\n    \"R2' U2' R2 U' R2' U2' R2' U2 R' U R U2 R2' U2 R U R' U2 R\",\n    \"R2' U' R2 U' R2' U2' R2 U R2' U2' R2 U2 R2' U R2 U2' R2' U R\",\n    \"R2' U' R2 U' R2' U2' R2 U' R2' U2 R2 U2' R2' U2' R2 U2' R2' U R\",\n    \"R' U R U2' R' U2' R U' R U R' U2 R U2 R' U2 R' U2 R\",\n    \"R' U2 R U2 R2' U' R2 U' R U R2 U R2' U2' R' U R' U2 R\",\n    \"R2' U2' R2 U2 R2 U R U R2 U2' R2' U' R2 U R2 U' R U2' R\",\n    \"R U R' U R2' U R U2' R2' U2 R2' U2' R' U2 R2 U' R2' U2' R\",\n    \"R U R' U R2' U R U2' R2' U2 R2' U2' R' U' R' U2' R2' U' R\",\n    \"R U R' U2 R2' U2' R2' U' R2 U2' R2 U' R' U2' R U' R' U2' R\",\n    \"R U R' U2 R' U2' R2 U' R2' U2' R U' R' U2' R U' R' U2' R\",\n    \"R U R' U2 R' U2' R2 U' R' U R2 U' R2 U2' R U2 R2 U R\",\n    \"R U2 R U2' R' U' R2' U2' R2 U' R2' U2 R2' U2' R' U2 R2' U R\",\n    \"R U2 R2 U R' U2 R' U R U2 R U2' R2' U2' R2 U2' R2' U2 R\",\n    \"R U2 R2' U R2' U2 R' U R U2 R2 U2' R2 U2' R2' U2' R2 U2 R\",\n    \"R U2 R' U R' U' R2 U2' R' U R U R2' U R U' R U' R\",\n    \"R U' R2 U R2 U2 R U2 R2 U' R U R2' U R2' U' R2 U' R\",\n    \"R U' R2' U2 R' U2 R U R2 U2 R2' U R2 U2' R2 U2 R U' R\",\n    \"R2 U' R' U2 R' U2 R U R U' R2 U2 R U2 R' U R2' U' R\",\n    \"R2' U2 R U2' R2 U2 R2' U2' R' U R2' U2' R2' U2 R' U R2' U2 R\",\n    \"R2' U2 R2' U2' R2' U2 R2 U2' R2 U R2' U2' R2' U2 R' U R2' U2 R\",\n    \"R' U2' R U2 R' U R2 U R2 U2 R2' U2 R' U' R' U R' U R\",\n    \"R' U' R2' U' R' U R2 U2' R U R2' U' R' U2 R' U2' R2 U2' R\",\n    \"R' U' R' U2' R2' U2 R U' R U R2' U' R U' R2 U2 R U R\",\n  ],\n  [\n    \"R' U' R U2' R2 U R' U R2' U R U' R U' R U' R\",\n    \"R' U' R U2' R2 U2 R2 U R2' U2 R' U2' R' U' R U2' R\",\n    \"R' U' R' U R2 U2 R U2' R2 U' R U R U' R U2' R\",\n    \"R' U2' R U2 R U R2 U2 R2' U2 R2 U R2 U' R' U R\",\n    \"R' U2' R' U2 R U R2 U2 R2' U R2 U2 R2 U2' R U2 R\",\n    \"R' U2' R' U2 R U R2' U2 R2 U R2' U2 R U2' R U2 R\",\n    \"R U' R' U' R U2' R U2 R2' U R U' R U2' R' U' R\",\n    \"R2 U2 R2' U2 R' U2 R2 U2' R U' R' U2' R2' U2 R2' U2 R\",\n    \"R2 U' R' U' R U2' R U2 R2' U R U' R U2' R' U' R\",\n    \"R2' U' R' U' R U2' R U2 R2' U R U' R U2' R' U' R\",\n    \"R' U' R' U' R U2' R U2 R2' U R U' R U2' R' U' R\",\n    \"R2' U2 R' U2 R2 U2' R U' R' U2' R2' U2 R2' U2 R2' U2 R\",\n    \"R' U2' R U2 R2' U2 R2' U R2 U2 R2' U2 R' U2' R' U2 R\",\n    \"R' U2' R U2 R' U2 R2 U R2' U2 R2 U2 R' U2' R' U2 R\",\n    \"R' U2' R2' U R' U' R2 U' R2 U R2' U R2' U R2' U' R\",\n    \"R2' U' R' U R2' U2 R2' U2 R2 U2 R2' U R' U' R U R\",\n    \"R' U2 R U2 R U2' R' U2 R' U2' R U2 R' U R U' R U2' R\",\n    \"R' U2 R2' U' R2 U2' R U2 R2 U R' U2 R2' U R U' R U2' R\",\n    \"R' U' R U2' R U2 R2' U R U2 R2' U' R2 U2' R U2 R2 U R\",\n    \"R' U' R U2' R' U2 R2 U2' R2' U2 R2 U2' R2' U2' R U' R U2' R\",\n    \"R2 U2 R2' U2' R2' U' R' U' R2' U2 R2 U R2' U' R2' U R' U2 R\",\n    \"R U2' R' U2' R2 U R2' U R' U' R2' U' R2 U2 R U' R U2' R\",\n    \"R U' R' U2 R U2 R' U R' U' R U2' R' U2' R U2' R U2' R\",\n    \"R2 U R2' U R2 U2 R2' U R2 U2' R2' U2 R2 U2 R2' U2 R2 U' R\",\n    \"R2 U R2' U R2 U2 R2' U' R2 U2 R2' U2' R2 U' R2' U2 R2 U' R\",\n    \"R2 U2 R2' U R2 U2 R2 U2' R U' R' U2' R2 U2' R' U' R U2' R\",\n    \"R2 U2' R' U2 R' U2 R U2' R U2 R2' U R U2 R' U2 R U2' R\",\n    \"R2' U R2 U R2' U2 R2 U R2' U2' R2 U2 R2' U2 R2 U2 R2' U' R\",\n    \"R2' U R2 U R2' U2 R2 U' R2' U2 R2 U2' R2' U' R2 U2 R2' U' R\",\n    \"R2' U2 R U2 R2' U2 R' U2 R2' U2' R2' U2 R2' U R2 U2' R' U2' R\",\n    \"R2' U2 R2 U R2' U2 R U2' R U' R' U2' R2 U2' R' U' R U2' R\",\n    \"R2' U2' R2' U' R U' R' U R' U' R2 U R' U R U' R U2' R\",\n    \"R' U R U2 R' U R U2 R' U R2 U2 R2' U R U' R U2' R\",\n    \"R U2' R2 U2 R2' U2' R U' R U R' U' R' U' R2' U R U' R\",\n    \"R2 U2 R2' U2 R2 U R2' U R2 U2' R2' U' R2 U2 R2' U' R2 U2 R\",\n    \"R2 U2' R2 U' R U2' R2 U R2' U2 R2 U R2' U' R' U R2' U2 R\",\n    \"R2' U2 R2 U2 R2' U R2 U R2' U2' R2 U' R2' U2 R2 U' R2' U2 R\",\n    \"R2' U2' R2' U2 R2 U2' R' U' R U R' U' R' U' R2' U R U' R\",\n    \"R2 U' R2' U2' R2 U R2' U R2 U R2' U R2 U2 R2' U2 R2 U R\",\n    \"R2' U' R2 U2' R2' U R2 U R2' U R2 U R2' U2 R2 U2 R2' U R\",\n    \"R' U2' R U' R' U R' U' R U2' R U R2' U' R2 U2 R2' U R\",\n    \"R U R U2 R2 U2' R' U R' U' R2 U R' U R2' U2' R' U' R\",\n    \"R U R2 U R U' R2' U2 R' U' R2 U R U2' R U2 R2' U2 R\",\n    \"R U2 R' U2' R U' R2' U' R2' U2' R2 U2' R U R U' R U' R\",\n    \"R2 U2' R2 U2 R2 U2' R2' U2 R2' U' R2 U2 R2 U2' R U' R2 U2' R\",\n    \"R2 U2' R' U2 R2' U2' R2 U2 R U' R2 U2 R2 U2' R U' R2 U2' R\",\n    \"R2' U R U2' R U2' R' U' R' U R2' U2' R' U2' R U' R2 U R\",\n    \"R' U R2 U2' R U2' R' U' R2' U2' R2 U' R2' U2 R2' U2' R' U R\",\n    \"R' U R2' U' R2' U2' R' U2' R2' U R' U' R2 U' R2 U R2' U R\",\n    \"R' U2' R U' R U R2' U2 R U' R' U' R2 U' R' U R' U R\",\n    \"R' U2' R2 U' R2 U2' R U' R' U2' R2' U2 R2' U2 R2 U2 R2' U2' R\",\n    \"R' U2' R2' U' R U2' R U' R' U2' R' U2 R2 U2 R2' U2 R2 U2' R\",\n    \"R' U2' R' U2 R U R2 U2 R2' U R2 U2' R2 U2 R U2' R2 U' R\",\n    \"R' U' R U2' R U2 R2' U R U' R2' U R2' U2 R' U2' R2' U' R\",\n    \"R' U' R U2' R U2 R2' U R2 U2 R' U R U2 R' U R U2 R\",\n    \"R' U' R U2' R2 U2 R2 U R2' U2 R2' U R U2 R' U R U2 R\",\n    \"R' U' R U' R2 U' R' U2 R2 U2' R2 U2 R U R U2 R2 U R\",\n    \"R' U' R U' R2 U' R' U2 R2 U2' R2 U2 R U2' R2' U R2 U2 R\",\n  ],\n  [\n    \"R U2' R2 U2' R2' U' R2 U2' R2 U2' R U2' R' U' R U2' R\",\n    \"R U2' R2 U2' R2' U' R2 U2' R2 U' R U2 R' U R U2 R\",\n    \"R U2' R2' U2' R2 U' R2' U2' R U2' R U2' R' U' R U2' R\",\n    \"R U2' R2' U2' R2 U' R2' U2' R U' R U2 R' U R U2 R\",\n    \"R U R U2' R U2 R' U2' R' U R U2 R U2' R2 U' R2 U2' R\",\n    \"R U R U2' R U2 R' U2' R' U R' U' R2 U2' R U2 R' U2' R\",\n    \"R U2 R U2' R U R2' U2 R' U2' R2' U' R' U2 R2' U' R U' R\",\n    \"R U2 R U2' R' U2' R' U' R2 U2' R2' U2 R2 U2' R2' U R U' R\",\n    \"R U2 R' U2 R U2 R U2' R2' U2' R2 U' R' U2 R' U2' R U' R\",\n    \"R U2 R' U2 R U2 R U2' R' U2 R' U R U2' R' U' R2 U2' R\",\n    \"R U2 R' U' R U2' R U2 R' U2' R' U2' R U2' R' U' R2 U2' R\",\n    \"R U2' R' U' R' U' R U2 R2' U' R' U' R' U R U R2' U2 R\",\n    \"R U' R U2 R U2' R' U2 R' U' R U2 R U2' R2 U' R2 U2' R\",\n    \"R U' R U2 R U2' R' U2 R' U' R' U' R2 U2' R U2 R' U2' R\",\n    \"R2 U R U2' R U2 R' U2' R' U R U2 R U2' R U' R2' U2' R\",\n    \"R2 U2 R' U2 R U2 R U2' R' U2 R' U R U2' R2' U' R2' U2' R\",\n    \"R2 U2 R' U2' R U2 R' U2' R' U R U2' R U2 R' U2' R U2' R\",\n    \"R2 U2 R' U' R U2' R U2 R' U2' R' U2' R U2' R2' U' R2' U2' R\",\n    \"R2 U' R U2 R U2' R' U2 R' U' R U2 R U2' R U' R2' U2' R\",\n    \"R2' U2 R2' U2' R U2 R' U2' R' U R U2' R U2 R' U2' R2 U2' R\",\n    \"R2' U2 R' U2' R' U R U2' R U2 R' U2' R' U R' U' R2 U2' R\",\n    \"R2' U2 R' U2' R' U' R U2 R U2' R' U2 R' U' R' U' R2 U2' R\",\n    \"R2' U' R2 U' R' U R U' R' U' R' U2' R U2' R U2' R' U2 R\",\n    \"R' U2 R' U2' R' U R U2' R U2 R' U2' R' U R2' U' R2' U2' R\",\n    \"R' U2 R' U2' R' U' R U2 R U2' R' U2 R' U' R2' U' R2' U2' R\",\n    \"R' U' R2 U2' R U2 R2 U R2 U2' R' U2 R2 U2 R2' U' R U' R\",\n    \"R2' U' R U' R' U2 R2' U2' R2' U2' R U R U2' R' U R' U2' R\",\n    \"R U2 R U2' R2' U2' R U R U2' R2' U2' R U R' U' R U' R\",\n    \"R U2' R U2 R' U2' R' U2 R U R' U2 R2 U2 R2' U' R U' R\",\n    \"R U R2' U' R2 U' R2' U2 R U' R' U2 R2 U2 R' U' R' U2 R\",\n    \"R U2 R' U' R' U2 R2 U2 R2 U2' R U R' U R2 U2' R' U2' R\",\n    \"R2' U R2 U R U' R2 U' R2 U2 R2 U2 R2' U' R U R U2' R\",\n    \"R U2 R2' U R2' U' R' U R2' U' R U2' R2 U2' R U2 R' U2' R\",\n    \"R U2 R' U R2 U' R U R2 U' R2 U2' R2 U2' R U2 R' U2' R\",\n    \"R U2' R' U2' R U2' R' U' R U2' R' U R2' U2 R2' U R2 U2 R\",\n    \"R U2' R' U2' R U2' R' U' R U2' R' U R' U2 R2 U R2' U2 R\",\n    \"R U2' R' U' R U2 R' U R U2 R' U2 R2' U2 R2' U R2 U2 R\",\n    \"R U2' R' U' R U2 R' U R U2 R' U2 R' U2 R2 U R2' U2 R\",\n    \"R U' R' U R2 U2' R2' U2' R U2 R U2 R' U2' R' U' R U2' R\",\n    \"R2' U2 R U R2' U2 R2 U2' R2' U' R' U2 R2' U2' R U2 R U' R\",\n    \"R2' U2 R U2' R2' U2' R2 U2 R2' U2 R' U2 R2' U2' R U2 R U' R\",\n    \"R2' U' R' U2' R' U2 R2 U2' R U R2 U2 R2' U2' R2 U' R' U R\",\n    \"R2' U' R' U2' R' U2 R2 U2' R U2' R2 U2' R2' U2 R2 U2 R' U R\",\n    \"R' U2' R' U2 R2' U2 R2' U R2' U' R' U R2' U' R U2' R2 U2' R\",\n    \"R' U2' R' U2 R2' U2 R' U R2 U' R U R2 U' R2 U2' R2 U2' R\",\n    \"R' U' R U R2 U2' R' U2 R' U2 R U2 R2' U R2' U2 R' U R\",\n    \"R U2 R' U2' R' U2 R U R' U2 R2 U2 R2' U' R U' R' U2 R\",\n    \"R U' R' U2' R2 U R' U2 R U2 R2' U' R U2' R' U2' R U' R\",\n    \"R2' U2 R' U2' R' U' R U2 R' U2' R2 U2' R2' U2' R2 U2 R' U2' R\",\n    \"R' U2 R U R2 U2 R2' U2' R2' U2' R2 U2' R2' U' R' U2' R2 U2 R\",\n    \"R' U2 R U R' U' R U R U2' R' U2' R' U2 R2 U2 R2' U2 R\",\n    \"R' U2 R U2 R' U' R2 U R U R2 U R2' U2' R2 U2 R2 U2 R\",\n    \"R' U2 R' U2 R U R' U2 R2 U2' R U R2' U R2 U2' R2' U R\",\n    \"R' U2' R' U2 R2' U2 R' U' R2' U2 R2' U2 R2' U' R U' R' U2' R\",\n    \"R' U2' R' U2' R2 U R U R2' U2 R2 U2 R2' U R' U2 R U2 R\",\n    \"R U2' R U2 R U2' R' U2' R' U2 R2 U2 R2' U' R U' R' U2 R\",\n    \"R U2' R' U2' R' U2 R2' U2 R' U' R2' U2 R2' U2 R2' U' R U' R\",\n    \"R2 U2 R2' U2 R U R2 U R2' U2 R2 U2 R2 U2' R U R U2 R\",\n    \"R2 U2 R2' U2 R2' U R2' U R2 U2' R' U' R' U2 R' U2' R2 U2' R\",\n    \"R2 U2' R U2 R U2' R' U2' R' U2 R2 U2 R2' U' R U' R' U2 R\",\n    \"R2' U2' R U2 R U2' R' U2' R' U2 R2 U2 R2' U' R U' R' U2 R\",\n    \"R' U2' R U2 R U2' R' U2' R' U2 R2 U2 R2' U' R U' R' U2 R\",\n    \"R' U2' R U' R' U2' R2 U R' U2 R U2 R2' U' R U2' R' U2' R\",\n    \"R U2 R U R' U R2' U' R' U' R' U R U R2' U' R' U2 R\",\n    \"R U2 R U R' U' R' U2' R U2 R U' R2' U2 R U2' R U' R\",\n    \"R U2 R U2 R U R U R' U' R' U R' U R U2 R2' U2' R\",\n    \"R U2 R2 U2' R2 U R2' U R U2 R2 U2 R2' U2 R U R' U2' R\",\n    \"R U2 R' U2 R U' R U2' R' U' R' U' R U R U2' R' U R\",\n    \"R2 U' R' U2' R' U2 R U' R U2' R' U' R' U' R U R U' R\",\n    \"R2' U' R U2' R2 U R' U' R' U2 R' U2 R2 U R U' R2 U' R\",\n    \"R' U R U2 R U2 R2' U2 R U R U2' R' U' R' U2' R2 U2' R\",\n    \"R' U R' U' R2 U2 R U2' R U' R' U R' U2 R' U2' R2' U R\",\n    \"R' U2 R2 U2 R2' U R U2 R U2' R' U2' R U' R' U2 R U R\",\n    \"R' U2 R2 U2 R2' U R U2 R' U R U2' R U2 R' U R' U2' R\",\n    \"R' U2' R2 U R2 U' R2 U' R2' U R2' U' R2' U R' U R U R\",\n    \"R U R2 U2 R' U2 R2 U' R2 U' R U2' R2' U2' R2' U R2 U2' R\",\n    \"R U2' R2 U' R U2' R2 U2' R2' U R2 U' R2' U' R U R2' U R\",\n    \"R U2' R2' U2' R U R U2' R2' U2' R U R' U' R U' R' U2 R\",\n    \"R2 U2 R2' U' R2 U2 R2' U' R2 U2' R2' U' R2 U2 R2' U' R2 U' R\",\n    \"R2 U' R2' U2 R U2' R U' R' U R' U' R U2' R' U2' R2 U R\",\n    \"R2' U2 R U R2 U R2' U2 R2 U2 R2 U2' R U R U2 R2' U R\",\n    \"R2' U2 R2 U' R2' U2 R2 U' R2' U2' R2 U' R2' U2 R2 U' R2' U' R\",\n    \"R2' U2 R2' U R2' U R2 U2' R' U' R' U2 R' U2' R2 U2' R2' U R\",\n    \"R U R U2 R2' U2' R2 U R2' U R2 U2 R' U2' R' U2 R2 U2 R' U2' R\",\n    \"R U R U2 R2' U' R U2' R2 U R U R U' R' U' R2 U R U' R\",\n    \"R U R U2 R2' U' R2 U2 R' U2' R' U R2 U2' R' U2 R' U R U R\",\n    \"R U R2 U2 R2' U' R U R U' R' U R2' U' R2' U' R' U R' U2' R\",\n    \"R U R' U R2' U2 R2' U2' R2' U2' R2 U2' R2' U' R' U2' R2 U' R U' R\",\n    \"R U R' U2 R U2' R U2 R2 U' R2' U' R2 U2 R2 U2' R' U R U2' R\",\n    \"R U R' U2 R U2' R2' U2 R2 U2 R2' U2' R U2 R U2' R2' U2' R2 U' R\",\n    \"R U R' U2' R' U2 R U2' R U R' U' R U R2' U2 R2 U2 R2' U2' R\",\n    \"R U2 R U R2 U' R2' U2' R' U2 R2' U R U2 R2 U2 R2' U' R U' R\",\n    \"R U2 R U R2 U' R' U' R' U' R' U2 R2' U2' R2' U2' R2' U' R' U2' R\",\n    \"R U2 R U R2' U2 R2 U2 R2 U2' R2' U R2 U R2' U2' R2' U2 R U2' R\",\n    \"R U2 R U R' U2 R' U2' R U2 R U2' R' U2 R U2 R2' U' R U' R\",\n    \"R U2 R U2' R U R2' U2 R' U2 R' U R2' U' R2' U2 R' U' R2 U' R\",\n    \"R U2 R U2' R' U2' R U2 R2' U2' R2 U2 R2' U2' R2 U' R2' U' R U' R\",\n    \"R U2 R U2' R' U2' R2' U2 R2' U R2 U2 R U2' R2 U R2' U' R U' R\",\n    \"R U2 R U2' R' U2' R' U R2 U2' R U2 R2 U R2' U2 R2 U' R U' R\",\n    \"R U2 R U2' R' U2' R' U2 R2 U' R U2' R2 U' R2' U2' R' U2 R' U' R\",\n    \"R U2 R U2' R' U2' R' U2 R2' U2 R2 U R2' U2 R' U2' R2' U2' R U' R\",\n    \"R U2 R U' R' U R U R' U2' R2 U2 R2 U' R2' U' R' U R' U2' R\",\n    \"R U2 R2 U R' U2 R2 U2 R2 U2' R U R U R U R U' R2' U2' R\",\n    \"R U2 R2' U R2' U2 R' U2' R2' U' R2 U R' U2 R2 U2 R2' U' R U' R\",\n    \"R U2 R2' U2 R U R U R' U' R' U2 R U R U' R' U R U2' R\",\n    \"R U2 R' U2' R' U' R U2 R U R2 U' R2' U2' R2 U2 R U' R' U2 R\",\n    \"R U2 R' U2' R' U' R' U2' R2 U R' U' R' U2 R U R U R U2' R\",\n    \"R U2' R U' R U R2 U' R' U' R U2 R2' U' R' U' R' U2 R' U2 R\",\n    \"R U2' R2 U2 R2' U2' R' U' R2 U2' R2' U R2 U R U2' R2' U2 R2 U2' R\",\n    \"R U2' R2 U2 R2' U2' R' U' R2 U2' R2' U R2 U R' U2' R2 U2 R2' U2' R\",\n    \"R U2' R2 U' R2' U' R U2 R2' U' R2 U' R U R2' U' R' U R U2' R\",\n    \"R U2' R2' U R' U2' R' U R2' U' R2 U R' U R2 U2 R U' R2' U2 R\",\n    \"R U2' R' U' R2 U' R2 U' R U R2 U R2' U' R U' R2' U2 R2 U2' R\",\n    \"R U2' R' U' R' U2 R U2 R U' R2' U2 R U2' R U' R' U2' R U2' R\",\n    \"R U' R U2 R' U2' R2 U2' R2' U2' R2 U2 R' U2' R2' U2 R2' U2 R' U2' R\",\n    \"R U' R' U2 R' U2' R U2 R U' R' U' R U R2' U2 R2 U2 R2' U2' R\",\n    \"R2 U R U R' U' R2' U R2 U R U' R2 U' R2 U2 R2' U' R2 U2' R\",\n    \"R2 U R U2' R U2 R' U2' R' U2' R U2' R U2 R' U2' R2 U' R2 U2' R\",\n    \"R2 U2 R U R2 U' R2 U2' R2 U2 R2' U2' R2' U R2 U R2 U' R' U' R\",\n    \"R2 U2 R U R2 U' R' U2' R2' U2 R2 U2' R U R2 U R2 U' R' U' R\",\n    \"R2 U2 R2 U2 R U2 R U2' R' U2 R' U R U2' R U2 R' U2 R2 U2' R\",\n    \"R2 U2 R2 U2' R' U R U2' R U2 R' U2' R' U R U2 R U2 R2 U2' R\",\n    \"R2 U2 R2 U2' R' U' R U2 R U2' R' U2 R' U' R U2 R U2 R2 U2' R\",\n    \"R2 U2 R2 U' R U2' R U2 R' U2' R' U2' R U2' R U2 R' U2 R2 U2' R\",\n    \"R2 U2 R2' U R2' U R2' U R' U' R2' U' R2 U R U' R' U2' R2 U2' R\",\n    \"R2 U2 R2' U2' R U2 R U2' R' U2 R' U' R U2' R U2 R' U2' R U2' R\",\n    \"R2 U2 R2' U' R U R' U' R2' U R2 U R U' R2 U' R2 U R2 U2' R\",\n    \"R2 U2 R' U2' R U2 R' U2' R' U' R U2 R U2' R' U2 R' U2' R2 U2' R\",\n    \"R2 U2 R' U2' R' U2 R' U2 R U2 R U2' R' U2 R' U R U2 R2 U2' R\",\n    \"R2 U2 R' U2' R' U2 R' U' R U2' R U2 R' U2' R' U2' R U2 R2 U2' R\",\n    \"R2 U2' R2' U R2' U R' U' R2' U' R2 U R U' R' U' R2' U' R2 U2' R\",\n    \"R2 U2' R2' U' R2 U R2 U' R U R2 U2 R' U2 R' U' R' U R2 U2' R\",\n    \"R2 U' R U2 R U2' R' U2 R' U R U2' R U2 R' U2' R2 U' R2 U2' R\",\n    \"R2' U R U R' U' R2' U R2 U R U' R2 U' R2 U2 R2 U' R2' U2' R\",\n    \"R2' U R U2' R U2 R' U2' R' U2' R U2' R U2 R' U2' R U' R2' U2' R\",\n    \"R2' U R2' U R U R' U2' R2 U2 R2 U2' R2' U' R2' U R U R' U2' R\",\n    \"R2' U R2' U R2' U' R2' U R' U' R2' U R2 U R' U' R' U' R2 U' R\",\n    \"R2' U R2' U R' U' R2 U R U' R2 U R2' U R' U' R' U' R2 U' R\",\n    \"R2' U R2' U2 R U2 R2' U2' R' U' R U2' R2 U2' R2' U' R' U' R2 U' R\",\n    \"R2' U R' U R U R2 U2' R2' U' R2 U R2 U' R U R2 U R2' U2' R\",\n    \"R2' U R' U2 R2' U' R U' R2 U R' U2' R2 U R' U R2 U' R2' U' R\",\n    \"R2' U2 R U2 R U2 R U2' R' U2 R' U R U2' R U2 R' U2 R2' U2' R\",\n    \"R2' U2 R U2' R' U R U2' R U2 R' U2' R' U R U2 R U2 R2' U2' R\",\n    \"R2' U2 R U2' R' U2 R' U2 R U2 R U2' R' U2 R' U' R2' U' R2 U2' R\",\n    \"R2' U2 R U2' R' U2 R' U' R U2' R U2 R' U2' R' U R2' U' R2 U2' R\",\n    \"R2' U2 R U2' R' U' R U2 R U2' R' U2 R' U' R U2 R U2 R2' U2' R\",\n    \"R2' U2 R U' R U2' R U2 R' U2' R' U2' R U2' R U2 R' U2 R2' U2' R\",\n    \"R2' U2 R2 U R2' U R2' U R' U' R2' U' R2 U R U' R' U2' R2' U2' R\",\n    \"R2' U2 R2 U R2' U R' U R2' U' R2' U' R2 U2' R2' U2' R' U' R U R\",\n    \"R2' U2 R2 U R2' U' R2' U2' R' U' R U2' R2 U2 R' U' R2' U2' R2 U2' R\",\n    \"R2' U2 R2 U2' R U2 R U2' R' U2 R' U' R U2' R U2 R' U2' R2 U2' R\",\n    \"R2' U2 R2 U2' R2 U R2' U2' R2' U2' R2' U' R2' U' R2 U R' U' R2' U2 R\",\n    \"R2' U2 R2 U' R U R' U' R2' U R2 U R U' R2 U' R2 U R2' U2' R\",\n    \"R2' U2 R2' U2' R U2 R' U2' R' U' R U2 R U2' R' U2 R' U2' R2' U2' R\",\n    \"R2' U2 R2' U2' R' U2 R' U2 R U2 R U2' R' U2 R' U R U2 R2' U2' R\",\n    \"R2' U2 R2' U2' R' U2 R' U' R U2' R U2 R' U2' R' U2' R U2 R2' U2' R\",\n    \"R2' U2' R U2 R U2 R' U2' R' U2 R U R U R2' U' R2 U2' R2' U2' R\",\n    \"R2' U2' R U' R' U2' R U2 R U2' R' U2' R U R2' U' R2 U2' R2' U2' R\",\n    \"R2' U2' R2 U R2' U2' R U R' U' R U R U R2' U R2 U R' U2' R\",\n    \"R2' U2' R2 U2 R2' U' R2 U' R2' U R' U' R U' R2 U' R2' U2 R' U R\",\n    \"R2' U2' R2 U2 R2' U' R' U' R U R2 U' R2' U' R' U R2' U2' R2' U2' R\",\n    \"R2' U2' R2 U' R2 U2' R2 U2 R2' U2' R2' U R' U' R2' U R U R U2' R\",\n    \"R2' U2' R2 U' R2' U R U R U' R' U' R' U2' R U' R U2 R' U2' R\",\n    \"R2' U2' R2 U' R' U2' R2' U2 R2 U2' R U R' U' R2' U R U R U2' R\",\n    \"R2' U2' R2' U R2' U R' U' R2' U' R2 U R U' R' U' R2 U' R2' U2' R\",\n    \"R2' U2' R2' U2 R2 U2' R2 U' R2 U2' R2' U R2 U R U2' R2' U2 R2 U2' R\",\n    \"R2' U2' R2' U2 R2 U2' R2 U' R2 U2' R2' U R2 U R' U2' R2 U2 R2' U2' R\",\n    \"R2' U2' R2' U2 R2 U' R2' U' R' U2 R2 U2' R U' R' U2' R2' U R2' U2' R\",\n    \"R2' U' R U2 R U2' R' U2 R' U R U2' R U2 R' U2' R U' R2' U2' R\",\n    \"R2' U' R' U2' R2' U2 R U2 R2 U' R2' U' R2 U2' R2 U2' R2' U' R' U2' R\",\n    \"R' U2 R U R' U R2 U R2' U R2 U2' R2' U2 R2 U R' U2 R U2 R\",\n    \"R' U2 R U R' U R2 U R2' U' R2 U2 R2' U2' R2 U2' R' U2 R U2 R\",\n    \"R' U2 R U2' R' U2 R' U2 R U2 R U2' R' U2 R' U' R2 U' R2' U2' R\",\n    \"R' U2 R U2' R' U2 R' U' R U2' R U2 R' U2' R' U R2 U' R2' U2' R\",\n    \"R' U' R2' U2' R2' U R' U R2 U2' R2' U2' R U2 R U2 R' U2 R2 U2' R\",\n    \"R U R' U R2' U2' R2 U2 R2' U2 R2 U' R U' R2 U R2 U2' R2' U2' R\",\n    \"R U R' U2 R' U2' R2 U R' U2' R' U2' R U R U2 R' U' R U2' R\",\n    \"R U R' U2' R2' U' R U R2 U2 R2' U2 R2 U R' U' R U2 R2 U R\",\n    \"R U R' U' R2' U R2 U R U' R2 U' R2 U' R2 U2' R2' U' R2 U2' R\",\n    \"R U R' U' R2' U R2 U R U' R2 U' R2 U' R2' U2' R2 U' R2' U2' R\",\n    \"R U R' U' R2' U2 R2 U2' R2' U' R2 U' R U' R2 U R2 U2' R2' U2' R\",\n    \"R U2 R2' U2' R U2 R U R' U2 R' U2' R2' U2 R' U R U2 R' U2' R\",\n    \"R U2' R U2 R' U2' R' U R U2 R U2' R' U2 R U2' R2' U' R2 U2' R\",\n    \"R U2' R U2 R' U2' R' U R U2 R U2' R' U2 R2 U2' R2 U' R2' U2' R\",\n    \"R2 U R U2' R2' U2 R' U R U2 R2 U R2 U' R2' U2' R2 U' R2 U2' R\",\n    \"R2 U' R U R2 U R2' U' R' U R U R2 U2' R2' U2 R2 U' R2' U2' R\",\n    \"R2 U' R U R2 U R2' U' R' U R U' R2 U2 R2' U2' R2 U R2' U2' R\",\n    \"R2' U R U' R2 U' R2' U2 R U R U2' R2 U' R' U R2' U R2 U2' R\",\n    \"R2' U R2 U' R' U2 R U2 R' U2' R' U2 R U R' U2 R2 U' R2' U2' R\",\n    \"R2' U R2 U' R' U' R' U2' R U2 R U2' R' U2' R' U2 R2 U' R2' U2' R\",\n    \"R2' U' R2' U R' U R2' U R2 U2 R2' U2' R2 U R U' R' U2' R2' U2' R\",\n    \"R2' U' R2' U R' U R2' U2' R2 U2' R2' U2 R2 U' R U' R' U2' R2' U2' R\",\n    \"R2' U' R' U R2' U R2' U R2 U2 R2' U2' R2 U2' R2' U2' R' U' R U R\",\n    \"R2' U' R' U R2' U R2' U2' R2 U2' R2' U2 R2 U R2' U2' R' U' R U R\",\n    \"R2' U' R' U R2' U' R2 U2 R U R2 U2 R2' U' R2 U2 R2 U2 R U R\",\n    \"R2' U' R' U2' R U R2 U' R2 U2 R2' U' R2' U R U2' R' U2' R U' R\",\n    \"R' U' R' U' R2 U2 R' U' R' U2 R U R U R' U R' U2 R U R\",\n    \"R U R' U2 R2 U2 R' U R U2 R' U2' R' U2 R U2 R' U' R U' R\",\n    \"R U R' U2 R2 U2 R' U2' R' U2' R U2 R U2' R' U' R' U' R U' R\",\n    \"R U R' U' R2' U R2 U R' U R2 U2' R' U' R' U2 R U2 R2' U2' R\",\n    \"R U2 R' U R U' R U R' U2 R U2 R2' U' R2 U R2' U2 R2 U2 R\",\n    \"R U2' R U R U2 R2' U' R U' R2' U' R2 U R U' R2 U2 R2 U2' R\",\n    \"R U2' R U2 R' U2 R' U2' R U' R' U2' R U' R U2 R2' U' R U' R\",\n    \"R U2' R' U2 R' U2 R U2 R U2' R' U2 R' U R2' U2' R2' U' R2 U2' R\",\n    \"R U2' R' U2 R' U2 R U2 R U2' R' U2 R' U R' U2' R2 U' R2' U2' R\",\n    \"R U2' R' U2 R' U' R U2' R U2 R' U2' R' U2' R2' U2' R2' U' R2 U2' R\",\n    \"R U2' R' U2 R' U' R U2' R U2 R' U2' R' U2' R' U2' R2 U' R2' U2' R\",\n    \"R U2' R' U2' R U2 R U R U2 R2' U' R U R U2' R2 U R2 U2' R\",\n    \"R U2' R' U2' R' U2 R2 U2 R2' U' R U' R2 U2 R2 U R U' R2 U2' R\",\n    \"R2 U R2' U R' U' R U R2 U2' R2' U2 R2 U R2' U R' U R2' U2 R\",\n    \"R2 U R2' U R' U' R U' R2 U2 R2' U2' R2 U2' R2' U R' U R2' U2 R\",\n    \"R2 U R2' U2 R2 U2 R' U R U2 R' U2' R' U2 R U2 R' U' R2 U' R\",\n    \"R2 U R2' U2 R2 U2 R' U2' R' U2' R U2 R U2' R' U' R' U' R2 U' R\",\n    \"R2 U R' U R U2' R2' U2' R U R U2' R2' U2' R U R' U' R2 U' R\",\n    \"R2 U R' U2 R U2 R' U2' R' U2 R U R' U2 R2 U2 R2' U' R2 U' R\",\n    \"R2 U R' U' R' U2' R U2 R U2' R' U2' R' U2 R2 U2 R2' U' R2 U' R\",\n    \"R2 U2 R2 U2 R2' U2' R U2 R' U2' R U2 R2 U2' R U2 R' U2' R U2' R\",\n    \"R2 U2 R2 U' R2' U' R2 U2 R2' U2' R2' U2' R2 U' R' U2' R' U' R U2' R\",\n    \"R2 U2 R' U2 R' U2' R U2 R2 U2' R U2 R' U2' R U2 R2' U2' R' U2' R\",\n    \"R2 U2 R' U2 R' U2' R U2 R' U2' R2 U2 R' U2' R U2 R' U2' R U2' R\",\n    \"R2' U R2 U2 R U2' R2 U' R' U2' R' U2' R' U2 R2 U2 R2' U' R U' R\",\n    \"R2' U R2 U2 R2 U2' R2' U' R2 U R2 U2 R U R' U2 R2' U2' R U' R\",\n    \"R2' U R' U' R2' U R2 U R' U R2 U2' R' U' R' U2 R' U2 R2 U2' R\",\n    \"R2' U2 R U2 R U2' R' U2 R U2' R2' U2 R U2' R' U2 R U2' R' U2' R\",\n    \"R2' U2 R U2 R U2' R' U2 R2' U2' R' U2 R U2' R' U2 R2 U2' R U2' R\",\n    \"R2' U2 R2' U2 R2 U2' R' U2 R U2' R' U2 R2' U2' R' U2 R U2' R' U2' R\",\n    \"R2' U2 R' U R U2' R' U' R' U R U R' U' R' U2' R U R2 U' R\",\n    \"R2' U2' R U2 R' U2' R U2 R2' U2' R2 U R U2' R U2 R' U2' R U2' R\",\n    \"R2' U2' R2' U2 R' U2' R' U' R U2 R' U2' R2 U2' R2' U2' R' U' R2' U2' R\",\n    \"R2' U' R U2' R U2 R' U' R2 U R U' R2' U R U R U2' R2 U2 R\",\n    \"R' U R' U2 R U R U R' U' R' U' R2 U R2' U2 R2 U' R' U2' R\",\n    \"R' U R' U2 R2' U R2' U2 R U2 R' U2 R U R U' R' U R2' U2 R\",\n    \"R' U R' U' R U R U' R' U2 R' U R U2 R U' R' U2' R' U2 R\",\n    \"R' U2 R U2 R U2' R' U2 R' U R U2' R U2 R U2' R2' U' R2 U2' R\",\n    \"R' U2 R U2 R U2' R' U2 R' U R U2' R U2 R2 U2' R2 U' R2' U2' R\",\n    \"R' U2 R U2' R U2 R' U' R' U R U' R' U2 R2 U2 R' U' R' U2 R\",\n    \"R' U2' R U R U2 R2' U' R U' R2' U' R2 U R U' R' U2 R2' U2' R\",\n    \"R' U2' R U R U' R2' U2 R U R U2 R U2' R' U2' R' U R2 U2' R\",\n    \"R' U2' R U2 R U R2 U' R2 U' R U R2 U R U2 R2 U2 R2' U2' R\",\n    \"R' U2' R U2 R' U2' R2 U2 R2 U2' R2' U R U2' R U2 R' U2' R2 U2' R\",\n    \"R' U2' R' U R U2' R U2 R' U2' R' U R U2 R2' U2' R2' U' R2 U2' R\",\n    \"R' U2' R' U R U2' R U2 R' U2' R' U R U2 R' U2' R2 U' R2' U2' R\",\n    \"R' U2' R' U' R U2 R U2' R' U2 R' U' R U2 R2' U2' R2' U' R2 U2' R\",\n    \"R' U2' R' U' R U2 R U2' R' U2 R' U' R U2 R' U2' R2 U' R2' U2' R\",\n    \"R' U' R U2' R U2 R' U2' R' U2' R U2' R U2 R U2' R2' U' R2 U2' R\",\n    \"R' U' R U2' R U2 R' U2' R' U2' R U2' R U2 R2 U2' R2 U' R2' U2' R\",\n    \"R' U' R' U' R U2 R2' U' R2 U' R' U R2 U2' R U2 R' U2' R U2' R\",\n    \"R U R2 U' R' U R2' U R2 U2' R' U R2 U R2' U2 R' U' R U2' R\",\n    \"R U R2 U' R' U R2' U R2 U2' R' U' R' U2 R2' U R2 U R U2' R\",\n    \"R U R' U R U2' R' U2 R U2 R' U' R U2 R2 U2' R2' U' R2 U2' R\",\n    \"R U R' U R U2' R' U2 R U2 R' U' R U2 R2' U2' R2 U' R2' U2' R\",\n    \"R U R' U R U2' R' U2 R U2' R2' U' R2 U2' R2' U2 R U' R' U2 R\",\n    \"R U R' U R U2' R' U2 R2 U2' R2 U' R2' U2' R2 U2 R U' R' U2 R\",\n    \"R U R' U' R' U2 R U2' R U2 R U2' R2' U' R2 U2' R2' U R' U2 R\",\n    \"R U R' U' R' U2 R U2' R U2 R2 U2' R2 U' R2' U2' R2 U R' U2 R\",\n    \"R U R' U' R' U2' R U R U' R' U' R' U2' R2 U2' R' U' R U2' R\",\n    \"R U2 R U2 R' U2' R' U' R' U2' R2 U R' U' R' U2 R U2 R2 U2' R\",\n    \"R U2 R2' U2 R2 U2 R2' U2' R U2 R U2' R' U R' U2 R U R U' R\",\n    \"R U2 R2' U2' R2' U R2 U R2' U2' R' U2 R' U2' R U' R' U' R U2' R\",\n    \"R U2 R2' U' R2 U' R2' U R U R2 U2' R2' U' R2 U2' R2' U R' U2 R\",\n    \"R U2 R2' U' R2 U' R2' U R U R2' U2' R2 U' R2' U2' R2 U R' U2 R\",\n    \"R U2 R2' U' R2' U2' R2 U2 R2 U' R2' U R U R2 U2' R2' U2' R' U2 R\",\n    \"R U' R2 U R2 U' R2' U2' R2 U R U R' U R2' U2' R2 U R2' U2' R\",\n    \"R2 U R2 U' R' U R2' U R2 U2' R' U' R' U2 R2' U R U R2 U2' R\",\n    \"R2 U R2' U' R U R2 U R2' U2 R2' U R' U2' R2' U2 R U' R' U2 R\",\n    \"R2 U2 R U R' U2 R2' U2' R U R2 U R2' U2' R2 U2 R2 U' R2' U2' R\",\n    \"R2 U' R U R2' U2 R' U' R' U2' R2 U R2' U R' U' R2 U2' R2 U2' R\",\n    \"R2 U' R2 U R U R' U' R2' U R2' U R U2' R' U2' R' U R2 U2' R\",\n    \"R2 U' R' U2' R' U R2 U R2' U R U R U' R' U R' U2' R2 U2 R\",\n    \"R2' U R2 U R U' R2 U2 R2 U2' R' U2 R2' U2' R2' U2 R U2 R2' U2 R\",\n    \"R2' U R2 U R U' R2 U' R2 U' R' U2' R U R U' R2' U2 R2 U2' R\",\n    \"R2' U R2' U R' U' R2' U' R2 U R U' R' U R2 U2' R2' U' R2 U2' R\",\n    \"R2' U R2' U R' U' R2' U' R2 U R U' R' U R2' U2' R2 U' R2' U2' R\",\n    \"R2' U2 R U R U' R' U R U' R' U R' U' R2' U R2 U2 R2' U2 R\",\n    \"R2' U2 R U2' R U2' R' U2' R' U2 R U2' R2 U R2' U2 R2 U2 R2' U2' R\",\n    \"R2' U2 R2 U2' R2' U R2 U' R2' U R' U' R U' R2 U' R2' U2 R' U R\",\n    \"R2' U2 R2 U2' R2' U R' U' R U R2 U' R2' U' R' U R2' U2' R2' U2' R\",\n    \"R2' U2 R2 U' R U' R' U' R2' U2 R2 U R2' U' R2' U R' U R2' U2' R\",\n    \"R2' U2 R2 U' R2' U' R U' R' U R U R' U' R2 U2' R2' U R U2 R\",\n    \"R2' U2 R' U' R' U R2 U2' R' U' R' U2' R' U2 R U2 R' U2 R2 U2' R\",\n    \"R2' U' R2 U2' R U R U2 R2' U' R2 U' R U R2' U' R' U R U2' R\",\n    \"R2' U' R2 U' R' U' R' U R U' R' U2 R2 U' R2' U2 R2 U' R' U2' R\",\n    \"R2' U' R' U R2' U' R2' U R2 U2 R2' U' R' U' R U' R2 U' R2' U2' R\",\n    \"R' U2' R U' R2' U2 R U R U2 R2' U' R2' U R' U2 R U2 R2 U R\",\n    \"R' U' R2 U R2' U R2 U' R2' U R U' R' U2 R2 U2 R' U' R' U2 R\",\n    \"R' U' R2 U R2' U2 R2 U' R' U R U2' R' U2 R U2 R' U' R' U2 R\",\n    \"R' U' R2 U2' R U R U2 R2' U' R2 U' R U R2' U' R2' U R2 U2' R\",\n    \"R' U' R2' U' R U2 R2' U2' R2' U2' R2 U2 R2 U2 R2 U R U2 R2' U R\",\n    \"R' U' R' U2' R U R U' R2' U2 R U R U2 R U2' R' U' R U2' R\",\n    \"R U R2' U2 R' U2' R2' U R2' U R2' U' R' U R2' U' R U2' R2 U2' R\",\n    \"R U R2' U2 R' U2' R2' U R' U R2 U' R U R2 U' R2 U2' R2 U2' R\",\n    \"R U2 R U2' R2 U' R2 U2' R' U2' R U2' R U2 R2' U' R' U R2 U2' R\",\n    \"R U2 R U2' R' U2 R' U' R U2 R U2' R' U2 R U2' R2' U' R2 U2' R\",\n    \"R U2 R U2' R' U2 R' U' R U2 R U2' R' U2 R2 U2' R2 U' R2' U2' R\",\n    \"R U2 R2' U R2' U' R' U R2' U' R U' R2 U2 R U2' R2 U' R2 U2' R\",\n    \"R U2 R' U R2 U' R U R2 U' R2 U' R2 U2 R U2' R2 U' R2 U2' R\",\n    \"R U2' R U' R U R' U2 R U2' R U2 R2' U2' R2 U2 R2 U2 R' U R\",\n    \"R U2' R U' R U R' U2 R U2' R' U2 R2 U2' R2' U2 R' U2 R' U R\",\n    \"R U2' R U' R U2' R U2' R2 U2 R2' U2' R U2 R' U2' R U' R' U R\",\n    \"R U2' R U' R U2' R2' U2' R2' U2 R2 U2' R' U2 R' U2' R U' R' U R\",\n    \"R U2' R2 U2 R U2' R' U2 R2' U2 R2' U R2' U' R' U R2' U' R U R\",\n    \"R U2' R2 U2 R U2' R' U2 R2' U2 R' U R2 U' R U R2 U' R2 U R\",\n    \"R U2' R2' U2' R2 U' R' U' R2' U2 R U2' R U2' R' U2' R' U2 R U R\",\n    \"R U2' R2' U2' R' U' R2 U2' R2' U2' R2' U2 R' U2' R' U' R U2 R' U R\",\n    \"R U2' R2' U' R U2' R' U R U2 R U2' R2 U2 R2 U2 R2' U R U2 R\",\n    \"R U2' R2' U' R' U2' R U2 R U2 R' U2 R' U2' R2 U R U R2' U2 R\",\n    \"R U2' R' U R2' U' R2 U' R' U R2 U R2' U' R2 U2 R2' U2 R' U R\",\n    \"R U2' R' U2 R' U2' R U R' U R U' R' U2 R2 U2 R' U' R' U2 R\",\n    \"R U' R' U R2 U2' R2' U2' R2' U R2' U R' U' R2' U' R2 U R2 U2' R\",\n    \"R2 U R' U2 R2' U2' R U' R U2' R2' U2' R' U R U R2 U2' R U2 R\",\n    \"R2 U2 R' U2' R2 U2 R U R2 U2 R' U2' R U' R' U2' R' U2 R U R\",\n    \"R2 U2' R' U R' U R2 U2' R2' U2' R U2 R U2 R' U2' R' U' R2 U2' R\",\n    \"R2 U2' R' U2' R2' U2 R2 U2 R' U2 R U2' R U2 R' U R2' U2' R2 U2 R\",\n    \"R2 U2' R' U2' R2' U2 R2 U' R U2' R' U2 R' U2' R U2' R2' U2' R2 U2 R\",\n    \"R2' U R U R' U2' R2' U2 R U R' U' R' U2' R2 U2' R U2' R' U2 R\",\n    \"R2' U R U2 R2 U2 R' U2' R' U2' R U2 R U R2 U' R2 U' R U' R\",\n    \"R2' U R U2 R' U2 R2' U2 R U R U' R' U2' R2 U2 R U' R' U2 R\",\n    \"R2' U R2 U' R2' U R2 U2 R2' U R' U' R U R2 U2' R2' U' R' U R\",\n    \"R2' U R2' U2' R U2 R2 U2 R U2' R' U2' R U R2 U2 R U2' R2' U' R\",\n    \"R2' U R2' U2' R U2 R2 U2 R U2' R' U2' R2' U2' R U2 R2 U R U' R\",\n    \"R2' U R2' U' R2 U2' R2 U2' R U2' R' U' R U2' R' U R U2 R2 U2' R\",\n    \"R2' U R2' U' R2 U2' R2 U' R U2 R' U R U2 R' U2 R U2 R2 U2' R\",\n    \"R2' U2 R U R2 U R2' U' R2' U' R2 U2 R2 U2' R' U R U2 R2' U2' R\",\n    \"R2' U2' R2' U R' U R2 U2' R2' U2' R U2 R U2 R' U2' R' U' R2' U2' R\",\n    \"R2' U2' R2' U2 R2 U2 R U R2 U R2' U' R2' U' R2 U2 R2 U2' R' U R\",\n    \"R2' U2' R' U2 R2' U R U R U2' R U2 R' U2' R' U R' U' R2 U2' R\",\n    \"R2' U2' R' U2 R2' U R U' R U2 R U2' R' U2 R' U' R' U' R2 U2' R\",\n    \"R2' U2' R' U' R U2 R2' U2' R2' U R2 U R2 U' R2' U' R' U2' R2' U2' R\",\n    \"R' U R2 U R U' R' U R2' U' R2' U R2' U' R2 U2 R U2 R' U2' R\",\n    \"R' U R2 U' R2' U2' R U2' R U2' R' U' R U2' R' U R U2 R2' U2' R\",\n    \"R' U R2 U' R2' U2' R U' R U2 R' U R U2 R' U2 R U2 R2' U2' R\",\n    \"R' U2 R U R2' U' R2' U R2 U' R' U R' U' R U R U2 R2 U2' R\",\n    \"R' U2' R2 U R' U R2 U2' R2' U2' R U2 R U2 R' U2' R' U' R' U2' R\",\n    \"R' U2' R2 U2 R2' U2 R U R2' U' R2' U R2 U' R' U R' U' R U R\",\n    \"R' U2' R2 U' R U2' R2 U' R2 U2' R' U2' R U2' R U2 R2' U' R' U' R\",\n    \"R' U2' R' U2 R U R2 U R U' R' U R2' U' R2' U R2' U' R2 U2 R\",\n    \"R' U2' R' U2' R2' U R2 U' R2 U R2 U' R U R' U' R2' U' R' U2' R\",\n    \"R' U2' R' U' R' U R U' R U R2' U' R2 U R2 U' R' U2' R2 U2' R\",\n    \"R' U' R U R2 U2' R' U2 R' U2 R U2 R U2' R' U2 R2' U R2 U2' R\",\n    \"R' U' R U' R' U R U2' R U2 R' U2' R' U R U R' U R2 U2' R\",\n    \"R' U' R U' R' U' R U2 R U2' R' U2 R' U' R U R' U R2 U2' R\",\n    \"R' U' R2 U2 R' U R' U2' R U' R' U2' R U2' R U2' R2' U R2 U2' R\",\n    \"R' U' R2 U2 R' U2 R' U2 R U R' U2 R U' R U2' R2' U R2 U2' R\",\n    \"R' U' R2 U2' R U2 R' U2' R' U2' R U2' R U2 R2' U' R' U R2 U2' R\",\n    \"R' U' R2' U2 R2' U R' U2' R U' R' U2' R U2' R2 U2' R2 U R2' U2' R\",\n    \"R' U' R2' U2 R2' U2 R' U2 R U R' U2 R U' R2 U2' R2 U R2' U2' R\",\n    \"R U R U2 R2' U' R U' R2' U' R2 U R U' R2 U2 R2 U2' R2' U2 R\",\n    \"R U R U2 R2' U' R U' R2' U' R2 U R U' R' U2 R2' U2' R2 U2 R\",\n    \"R U R U2' R U2 R' U2' R' U R' U' R2 U2' R2' U' R2' U2' R' U2 R\",\n    \"R U R U' R2' U2 R U R U2 R U2' R' U2' R' U R2 U2' R2' U2 R\",\n    \"R U R2 U R2 U2' R' U2 R U R U' R' U R' U2 R U2 R2' U' R\",\n    \"R U R2 U2' R' U2 R2' U' R' U2 R2 U' R' U2' R2 U R' U' R2' U2 R\",\n    \"R U R2' U2 R' U2' R2' U R' U' R2' U2 R2' U2 R2' U' R U' R' U2' R\",\n    \"R U R' U R2' U R' U2 R2' U' R' U2' R2' U R2 U R' U' R2' U' R\",\n    \"R U R' U2 R U2 R2' U R U2 R' U2' R' U' R2 U' R2' U2 R U2' R\",\n    \"R U2 R U R2 U' R2 U' R U R2 U R U2 R2 U2 R2' U2' R U2 R\",\n    \"R U2 R U2 R' U2' R2 U2 R2 U' R2' U R2' U R2 U2 R2 U2' R2 U' R\",\n    \"R U2 R U2 R' U2' R2 U2 R2 U' R2' U' R U2 R2 U R U' R2 U2' R\",\n    \"R U2 R2 U R2' U R' U2' R' U2 R U R2 U2 R2' U2' R U' R2' U2' R\",\n    \"R U2 R' U2 R U R2 U R U' R2 U R U R U2' R U R U' R\",\n    \"R U2 R' U2 R U2 R' U' R2' U R' U' R2' U2 R U2' R U R U' R\",\n    \"R U2 R' U2 R' U2' R U' R' U2' R U' R U2 R2' U' R U' R' U2 R\",\n    \"R U2 R' U2' R U2 R2' U2' R2 U R U2' R U2 R' U2' R U2' R2' U2 R\",\n    \"R U2 R' U2' R2 U2 R2 U2' R2' U R U2' R U2 R' U2' R2 U2' R2 U2 R\",\n    \"R U2 R' U' R' U' R U2' R U R2' U2 R U2' R U' R' U' R U R\",\n    \"R U2' R2 U2' R' U' R2 U2 R U R2 U2' R' U2 R' U' R' U2' R' U2' R\",\n    \"R U2' R2' U2 R2 U2 R2 U' R U R U2 R U2 R2' U2' R' U2 R U2 R\",\n    \"R U2' R2' U' R2 U R2 U' R U2' R2 U2 R2 U R2' U R2' U R2 U' R\",\n    \"R U2' R' U2 R2 U2 R2' U' R U R U R' U2 R' U R U2 R U2' R\",\n    \"R U2' R' U2' R2 U2 R2 U' R2' U' R' U' R' U R U R2' U R2 U2' R\",\n    \"R U2' R' U' R' U' R U2 R2' U' R' U' R' U R' U2' R' U2 R2' U R\",\n    \"R U' R U2 R U2' R' U2 R' U' R' U' R2 U2' R2' U' R2' U2' R' U2 R\",\n    \"R U' R U2 R' U2' R2 U2' R2' U2' R2 U2 R' U2' R2' U R2' U2' R' U2 R\",\n    \"R U' R2' U2' R U R2 U2' R2 U2' R U R U' R U' R2' U2 R U2' R\",\n    \"R U' R2' U2' R' U' R' U' R2 U2 R2' U' R' U' R2' U' R2 U2' R2 U2' R\",\n    \"R U' R' U2 R U2' R U R' U2 R U2 R U' R2' U' R' U R2' U R\",\n    \"R2 U R U R' U R2' U2' R2 U R2' U2' R2 U2' R U' R2 U R2 U' R\",\n    \"R2 U2 R2' U R U' R' U R2 U2' R U' R2 U' R U R2 U R' U' R\",\n    \"R2 U2 R2' U R2 U2' R2 U R U' R2 U' R U2' R2 U R' U' R' U2 R\",\n    \"R2 U2 R2' U R2 U2' R' U2 R2' U' R U R U2' R U' R2' U' R' U R\",\n    \"R2 U2 R2' U2 R' U' R U' R U R2' U R U' R U' R' U R2 U2 R\",\n    \"R2 U2' R U2' R' U' R U R2' U2' R2 U' R2 U' R U2' R' U2' R U2' R\",\n    \"R2 U2' R U' R2' U' R U' R2 U R2 U2' R' U2' R2 U R U2 R2' U2 R\",\n    \"R2 U2' R2' U2' R2 U R2 U2' R2' U2 R2 U R U R2 U2' R2' U' R' U2' R\",\n    \"R2 U2' R2' U2' R2 U' R2 U2 R2' U2' R2 U2' R U R2 U2' R2' U' R' U2' R\",\n    \"R2 U2' R' U' R2 U2 R2' U' R2 U' R' U R' U2 R U' R' U' R U R\",\n    \"R2 U' R U2' R2 U2' R U R2 U2' R' U2' R' U' R' U2' R U R U R\",\n    \"R2 U' R2 U R U R' U2 R U2 R U2' R' U2 R2' U' R' U R' U R\",\n    \"R2' U2 R2 U R2' U2' R2' U R' U' R2' U' R U2' R U R U' R2' U2 R\",\n    \"R2' U2 R2 U R2' U2' R' U2 R' U' R' U R2 U2' R U' R2 U' R U R\",\n    \"R2' U2 R2 U2 R' U' R U' R U R2' U R U' R U' R' U R2' U2 R\",\n    \"R2' U2 R2' U2 R2 U2' R' U2' R U' R' U' R' U2 R U R U2' R' U2' R\",\n    \"R2' U2 R' U2' R' U' R U2 R' U2' R2 U R2' U2 R2 U2' R2' U2 R U2' R\",\n    \"R2' U2 R' U2' R' U' R U2 R' U2' R2 U2' R2' U2' R' U' R2' U2' R' U2 R\",\n    \"R2' U2' R2 U R2 U' R2 U' R2' U2 R2 U2' R U2 R' U2' R' U2' R U2' R\",\n    \"R2' U2' R2 U R2' U2' R U' R2' U' R U' R' U2 R U' R U2 R' U2 R\",\n    \"R2' U2' R2' U R2' U2' R2' U' R' U' R2 U R U2' R2 U' R2 U R' U2' R\",\n    \"R2' U2' R2' U R' U2 R' U2' R U' R2 U2' R2' U2 R U' R2' U' R2 U' R\",\n    \"R2' U2' R' U' R' U2' R U2' R2 U2' R2 U' R2 U R2' U2' R2' U' R2 U' R\",\n    \"R' U R U2' R U2 R' U2' R' U R U2 R2' U2' R2' U' R2 U2' R2' U2 R\",\n    \"R' U R U2' R U2 R' U2' R' U R U2 R' U2' R2 U' R2' U2' R2 U2 R\",\n    \"R' U R2 U2' R2' U2 R U' R U' R2' U2' R U R U R' U R' U2 R\",\n    \"R' U R' U R2' U2 R U' R2' U' R2' U R2 U R U2 R U' R2 U2' R\",\n    \"R' U R' U2' R U' R' U2' R U' R U2' R U R2' U R2 U2' R2' U R\",\n    \"R' U2 R U R U R U R2' U R2 U2' R2' U2 R U2 R' U2' R' U2 R\",\n    \"R' U2 R U R U R U R2' U R2 U2' R2' U' R' U2' R U2 R U2' R\",\n    \"R' U2 R U R U2 R2' U' R2' U R U R' U' R' U' R2 U R2 U2' R\",\n    \"R' U2 R U R U2' R U2 R' U2' R' U R' U2' R2 U2' R U2 R' U2' R\",\n    \"R' U2 R U R2' U2 R2 U' R2' U' R' U2' R2 U2 R U' R' U2 R2' U2' R\",\n    \"R' U2 R U2 R' U' R2 U R U R2 U' R2' U2 R2 U2' R2' U2 R' U2 R\",\n    \"R' U2 R U2' R2 U2' R2' U2 R2 U2' R U2' R2 U2' R2' U' R' U2' R2 U2 R\",\n    \"R' U2 R U2' R2 U2' R' U2' R U' R' U' R' U2' R U R' U' R' U2 R\",\n    \"R' U2 R U2' R2' U2' R2' U2 R2 U R2' U2' R2 U2 R2' U2 R' U2' R' U2 R\",\n    \"R' U2 R U2' R2' U2' R2' U2 R2 U' R2' U2 R2 U2' R2' U' R' U2' R' U2 R\",\n    \"R' U2 R U2' R' U2' R2 U2 R2' U R2 U2' R2' U2 R2 U2 R' U2' R' U2 R\",\n    \"R' U2 R U2' R' U2' R2 U2 R2' U' R2 U2 R2' U2' R2 U' R' U2' R' U2 R\",\n    \"R' U2 R U' R U2 R U2' R' U2 R' U' R' U2' R2 U2' R U2 R' U2' R\",\n    \"R' U2 R U' R2 U R2' U2 R U' R' U' R U2 R' U2' R2 U' R2 U' R\",\n    \"R' U2 R U' R2' U' R2 U2' R' U2 R U' R' U' R U2 R2' U R U' R\",\n    \"R' U2 R U' R' U' R U R U' R' U2' R' U2 R U' R U2 R2' U2 R\",\n    \"R' U2 R' U2 R U2 R U2' R' U2 R' U R2' U2' R2' U' R2 U2' R2' U2 R\",\n    \"R' U2 R' U2 R U2 R U2' R' U2 R' U R' U2' R2 U' R2' U2' R2 U2 R\",\n    \"R' U2 R' U' R U2' R U2 R' U2' R' U2' R2' U2' R2' U' R2 U2' R2' U2 R\",\n    \"R' U2 R' U' R U2' R U2 R' U2' R' U2' R' U2' R2 U' R2' U2' R2 U2 R\",\n    \"R' U2 R' U' R U2' R' U2 R' U' R2' U' R2 U2 R U R2 U' R' U2' R\",\n    \"R' U2' R U2 R U R U2 R2' U' R U R U2' R2 U R2 U2' R2' U2 R\",\n    \"R' U2' R U2 R' U2 R U2 R' U' R' U2' R2 U R2' U R2 U2 R' U2' R\",\n    \"R' U2' R2' U' R' U2' R2' U2' R2' U2 R2 U2 R' U2 R2' U2' R U2 R2' U R\",\n    \"R' U2' R' U R U' R' U' R2 U2' R2' U R U2 R U' R' U R' U2' R\",\n    \"R' U2' R' U2 R2 U2 R2' U' R U' R2 U2 R2 U R U' R2 U2' R2' U2 R\",\n    \"R' U' R U2 R U2' R' U2 R' U' R U2 R2' U2' R2' U' R2 U2' R2' U2 R\",\n    \"R' U' R U2 R U2' R' U2 R' U' R U2 R' U2' R2 U' R2' U2' R2 U2 R\",\n    \"R' U' R U' R U R2' U R U' R U' R' U2 R2 U2 R2' U R2 U2 R\",\n    \"R' U' R U' R U R2' U R U' R U' R' U2 R2' U2 R2 U R2' U2 R\",\n    \"R' U' R U' R' U2 R2' U2 R' U' R' U2 R' U2' R2 U R2' U R2' U2 R\",\n    \"R' U' R' U2' R2 U' R' U2' R U2' R' U2' R U R' U2' R' U2' R U' R\",\n  ],\n  [\n    \"R' U2 R2 U2 R2' U R2 U2 R' U R' U2' R U' R' U2' R\",\n    \"R' U2 R2 U2 R2' U R2 U2 R' U2 R' U2 R U R' U2 R\",\n    \"R' U2 R2' U2 R2 U R2' U2 R2' U R' U2' R U' R' U2' R\",\n    \"R' U2 R2' U2 R2 U R2' U2 R2' U2 R' U2 R U R' U2 R\",\n    \"R U R2' U2 R' U2' R2' U' R2' U2 R U2' R2' U2' R2 U R' U R\",\n    \"R U2' R U2 R U R' U2' R' U2 R U2' R U R2 U R2 U2 R\",\n    \"R U2' R U2 R U' R' U2 R' U2' R U2 R U' R2 U R2 U2 R\",\n    \"R2 U R2' U R U' R' U R U R U2 R' U2 R' U2 R U2' R\",\n    \"R2 U2' R U2 R U R' U2' R' U2 R U2' R U R U R2' U2 R\",\n    \"R2 U2' R U2 R U' R' U2 R' U2' R U2 R U' R U R2' U2 R\",\n    \"R2 U2' R2 U2 R' U2' R U2 R U' R' U2 R' U2' R U2 R2' U2 R\",\n    \"R2' U R' U2' R' U2 R U2' R U R' U2' R' U2 R' U R2 U2 R\",\n    \"R2' U2' R U R' U2 R' U2' R U2 R U2 R' U2 R2 U R2 U2 R\",\n    \"R2' U2' R U2 R' U2' R U2 R U' R' U2 R' U2' R U2 R' U2 R\",\n    \"R2' U2' R U2' R' U2' R' U2 R U2' R U' R' U2 R2 U R2 U2 R\",\n    \"R2' U' R' U2 R' U2' R U2 R U' R' U2' R' U2 R' U R2 U2 R\",\n    \"R' U R' U2' R' U2 R U2' R U R U R2' U2 R' U2' R U2 R\",\n    \"R' U R' U2' R' U2 R U2' R U R' U2' R' U2 R2' U R2' U2 R\",\n    \"R' U2 R U R U R' U2' R2 U R U R U' R' U' R2 U2' R\",\n    \"R' U2' R U R' U2 R' U2' R U2 R U2 R' U2 R U R2' U2 R\",\n    \"R' U2' R U2' R' U2' R' U2 R U2' R U' R' U2 R U R2' U2 R\",\n    \"R' U2' R U2' R' U2' R' U2 R2 U2 R2' U R U2' R U2 R' U R\",\n    \"R' U2' R' U2 R U2 R U R2' U2 R2 U2' R2' U2 R2 U' R' U R\",\n    \"R' U2' R' U2 R' U' R2 U2' R U2 R2 U R U2' R2 U R' U R\",\n    \"R' U' R' U2 R' U2' R U2 R U' R U R2' U2 R' U2' R U2 R\",\n    \"R' U' R' U2 R' U2' R U2 R U' R' U2' R' U2 R2' U R2' U2 R\",\n    \"R U R' U' R2' U2 R U2' R U2' R' U2' R2 U' R2 U2' R U' R\",\n    \"R U2 R U2' R2 U2' R U' R2' U R' U' R2' U R2' U2 R2' U2 R\",\n    \"R U2 R U2' R2 U2' R2 U' R2 U R U' R2 U R' U2 R2' U2 R\",\n    \"R2 U R U2 R U2' R2' U2 R' U2 R2' U2 R2 U2' R2' U2' R U' R\",\n    \"R2 U R U2 R U2' R2' U2 R' U' R2' U2' R2 U2 R2' U R U' R\",\n    \"R2 U2' R' U2 R2 U2 R2' U2' R2 U2' R U2' R2 U2 R' U2' R' U R\",\n    \"R2 U2' R' U' R2 U2' R2' U2 R2 U R U2' R2 U2 R' U2' R' U R\",\n    \"R' U R U' R2' U2 R2 U2 R' U2' R' U2' R U2 R U R' U2 R\",\n    \"R' U2 R U R' U2' R U' R' U2' R U2' R U2' R2' U' R2 U2' R\",\n    \"R' U2 R U R' U2' R U' R' U2' R U2' R2 U2' R2 U' R2' U2' R\",\n    \"R' U2 R U2 R' U2 R U R' U2 R U' R U2' R2' U' R2 U2' R\",\n    \"R' U2 R U2 R' U2 R U R' U2 R U' R2 U2' R2 U' R2' U2' R\",\n    \"R' U2' R U' R2' U R' U' R2' U R2' U2 R2' U2 R' U2' R U2 R\",\n    \"R' U2' R2 U' R2 U R U' R2 U R' U2 R2' U2 R' U2' R U2 R\",\n    \"R2 U' R2' U' R' U R2' U R2' U2' R2' U2' R2 U R' U' R' U2 R\",\n    \"R' U2' R U R U2' R2' U2' R2' U2 R' U' R U' R2' U2 R U2 R\",\n    \"R' U' R2 U R2' U R2 U2' R' U R U2' R2' U2' R U R U2' R\",\n    \"R' U2 R' U2' R U2 R U2' R' U' R U2' R2' U2' R2 U R' U R\",\n    \"R' U2' R' U2 R2 U2 R' U' R' U2 R2 U2 R' U' R U R' U R\",\n    \"R2 U R' U R U2' R2 U2 R2 U2 R' U' R' U2 R U' R U2 R\",\n    \"R U2 R U2' R2 U2' R U R2 U2' R2 U2' R2 U R' U R U2 R\",\n    \"R U2' R U2' R' U' R U2' R2' U2 R' U' R2 U' R2' U2 R2 U' R\",\n    \"R U2' R' U2' R U R2' U' R' U' R2' U' R2 U2 R2' U2' R2' U2' R\",\n    \"R U2' R' U' R U R' U' R' U2 R U2 R U2' R2' U2' R2 U2' R\",\n    \"R U2' R' U' R2' U2' R2 U2 R2 U2 R2' U2 R2 U R U2 R2' U2' R\",\n    \"R2 U2' R U2 R U R' U2' R U2 R2' U2 R2 U2 R2' U2' R U2 R\",\n    \"R' U R U2 R2' U' R U2' R' U2' R2 U R' U2 R U2 R' U R\",\n    \"R' U2' R U2 R U2' R' U' R U2' R2' U2' R2 U R' U R U2' R\",\n    \"R2 U2' R2 U' R2 U' R2' U2 R U R U2' R U2 R2' U2 R2 U' R\",\n    \"R2 U2' R2' U R2 U2' R2' U R2 U2 R2' U R2 U2' R2' U R2 U R\",\n    \"R2 U2' R' U' R2' U' R2 U2' R2' U2' R2' U2 R' U' R' U2' R2 U' R\",\n    \"R2' U R2 U2' R' U2 R' U R U' R U R' U2 R U2 R2' U' R\",\n    \"R2' U2' R2 U R2' U2' R2 U R2' U2 R2 U R2' U2' R2 U R2' U R\",\n    \"R' U2 R2 U2 R' U' R' U2 R2 U2 R' U' R U R' U R U2' R\",\n    \"R' U2 R2' U R' U2 R2' U2 R2 U' R2' U R2 U R' U' R2 U' R\",\n    \"R' U' R2' U2' R U2' R2' U R2' U R' U2 R2 U2 R2 U' R2' U2 R\",\n    \"R U2 R2' U' R2' U R2' U R2 U' R2 U R2 U' R U' R' U' R\",\n    \"R U2' R2' U2' R2 U' R' U2' R U' R' U2 R' U2' R U' R U2 R\",\n    \"R U2' R2' U2' R2 U' R' U2' R' U2 R U2 R' U R U2' R' U' R\",\n    \"R U' R U R2' U2' R' U2 R' U R U' R U2' R U2 R2 U' R\",\n    \"R U' R' U2' R' U2' R2 U2' R' U' R' U2 R U R U2 R2' U2 R\",\n    \"R2 U R' U2 R2' U' R U R U2' R U2' R2' U' R' U R2' U R\",\n    \"R2' U R U2 R U2' R' U R' U2 R U R U R' U' R' U R\",\n    \"R' U2' R U2' R' U R' U2 R U R U R' U' R' U2 R U' R\",\n    \"R' U2' R2' U2 R2' U' R2 U' R' U2' R2' U2' R2 U2' R' U' R U2 R\",\n    \"R' U2' R' U2' R' U' R' U' R U R U' R U' R' U2' R2 U2 R\",\n    \"R' U2' R' U' R U R U2 R' U2' R' U R2 U2' R' U2 R' U R\",\n    \"R' U2' R' U' R U' R2 U R U R U' R' U' R2 U R U2' R\",\n    \"R U2 R' U R U2 R2' U' R U2' R' U2' R2 U R' U2 R U2 R\",\n    \"R U2 R' U2' R' U2 R U2 R U2' R2' U2' R2 U R' U R U2' R\",\n    \"R2 U2 R' U2' R' U2 R U2 R U2' R2' U2' R2 U R' U R U2' R\",\n    \"R2' U2 R' U2' R' U2 R U2 R U2' R2' U2' R2 U R' U R U2' R\",\n    \"R2' U2' R2 U2' R2 U' R2 U' R2' U2 R U R U2' R U2 R2' U2 R\",\n    \"R2' U2' R2 U2' R' U' R2' U' R2 U2' R2' U2' R2' U2 R' U' R' U2' R\",\n    \"R' U2 R U2 R U2' R2 U2' R U R2 U2' R2 U2' R2 U R' U R\",\n    \"R' U2 R' U2' R' U2 R U2 R U2' R2' U2' R2 U R' U R U2' R\",\n    \"R U2 R U2 R2' U' R' U' R2 U2' R2' U2' R2 U' R U2' R' U2' R\",\n    \"R U R2 U2 R2 U' R U' R2' U2 R2 U2 R' U2' R' U2' R U2' R2' U2 R\",\n    \"R U2' R' U2 R U2' R U R' U2 R' U2' R U2 R U' R2' U R2 U2 R\",\n    \"R U2' R' U2 R U2' R U2' R' U2' R' U2 R U2' R U R2' U R2 U2 R\",\n    \"R U2' R' U' R U' R2' U' R2 U R2' U2' R2 U2 R2' U2 R U2' R' U2' R\",\n    \"R U2' R' U' R U' R2' U' R2 U' R2' U2 R2 U2' R2' U' R U2' R' U2' R\",\n    \"R2 U R U2 R2 U2' R' U2' R2' U R2 U R2' U2 R2' U2 R2 U R U2 R\",\n    \"R2 U R' U2' R' U2 R U2' R U' R' U2 R' U2' R U2 R' U R2 U2 R\",\n    \"R2 U2 R2 U2' R2' U R2 U R U2' R2' U2 R' U R U2 R2 U' R2 U2 R\",\n    \"R2 U2 R2 U2' R2' U2 R2' U R2' U2 R2 U' R2' U' R U2 R2' U2' R2 U2 R\",\n    \"R2 U2 R2 U2' R2' U2 R2' U R2' U2 R2 U' R2' U' R' U2 R2 U2' R2' U2 R\",\n    \"R2 U2 R2 U' R2 U' R U R2 U R2' U' R' U R U R2' U R2 U2 R\",\n    \"R2 U2 R2' U R U2 R2 U2' R2' U2 R' U' R U R2 U' R' U' R' U2 R\",\n    \"R2 U2 R2' U R2 U' R' U' R' U R U R U2 R' U R' U2' R U2 R\",\n    \"R2 U2 R2' U R2' U2 R2' U2' R2 U2 R2 U' R U R2 U' R' U' R' U2 R\",\n    \"R2 U2 R2' U2' R2 U R U R' U' R2' U R2 U R U' R2 U2 R2 U2 R\",\n    \"R2 U2 R2' U2' R2 U R2' U R2 U' R U R' U R2' U R2 U2' R U' R\",\n    \"R2 U2 R2' U' R2 U2 R' U' R U R' U' R' U' R2 U' R2' U' R U2 R\",\n    \"R2 U2 R' U R U2 R' U2' R' U2 R U2 R' U' R2 U R2' U2 R2 U2 R\",\n    \"R2 U2 R' U2' R' U2' R U2 R U2' R' U' R' U' R2 U R2' U2 R2 U2 R\",\n    \"R2 U2' R2 U2 R U2' R U R' U2 R' U2' R U2 R U2 R' U2' R2 U2 R\",\n    \"R2 U2' R2 U2 R U2' R U2' R' U2' R' U2 R U2' R U' R' U2' R2 U2 R\",\n    \"R2 U2' R2 U2 R' U2' R U2 R U R' U2' R' U2 R U2' R U2 R2 U2 R\",\n    \"R2 U2' R2' U R' U' R U R2 U' R2' U' R' U R2' U R2' U' R2 U2 R\",\n    \"R2 U2' R2' U2 R2' U' R2 U2 R2 U2 R2 U R2 U R2' U' R U R2 U2' R\",\n    \"R2 U2' R2' U2 R' U2' R' U2 R U2' R U R' U2 R' U2' R U2 R2' U2 R\",\n    \"R2 U2' R2' U' R2 U R2 U2 R U R' U2 R2' U2' R U R2 U2 R2' U2 R\",\n    \"R2 U2' R2' U' R2 U' R U' R2 U R2 U R2' U2 R2 U2 R U R' U' R\",\n    \"R2 U2' R2' U' R2 U' R2 U' R U R2 U R2' U' R' U R U2 R2 U2 R\",\n    \"R2 U2' R' U R' U2 R' U2' R U2 R U2 R' U2 R' U2' R U2' R2 U2 R\",\n    \"R2 U2' R' U2 R U R' U2' R' U2 R U2' R U R' U2' R' U2' R2 U2 R\",\n    \"R2 U2' R' U2 R U2' R U R' U2 R' U2' R U2 R U' R2 U R2' U2 R\",\n    \"R2 U2' R' U2 R U2' R U2' R' U2' R' U2 R U2' R U R2 U R2' U2 R\",\n    \"R2 U2' R' U2 R U' R' U2 R' U2' R U2 R U' R' U2' R' U2' R2 U2 R\",\n    \"R2 U2' R' U2' R' U2' R' U2 R U2' R U' R' U2 R' U2' R U2' R2 U2 R\",\n    \"R2 U' R U2' R2 U R' U R2' U' R U2 R2' U' R U' R2' U R2 U R\",\n    \"R2 U' R U' R' U' R2' U2 R2 U R2' U' R2' U R' U' R2' U' R2 U2 R\",\n    \"R2 U' R2 U2' R' U2' R2 U2 R U R' U2 R2' U2 R2 U R U R2' U R\",\n    \"R2 U' R2 U' R U R2' U' R' U R2' U' R2 U' R U R U R2' U R\",\n    \"R2 U' R2 U' R2 U R2 U' R U R2 U' R2' U' R U R U R2' U R\",\n    \"R2 U' R2 U' R' U' R U2 R2' U2' R2' U2 R2 U R2 U' R' U' R U2 R\",\n    \"R2 U' R' U2 R' U2' R U2 R U2 R' U2 R' U2' R U2 R' U R2 U2 R\",\n    \"R2 U' R' U' R U R2 U' R2' U' R' U R2' U R2' U2' R2' U R2 U2 R\",\n    \"R2' U R' U2' R' U2 R U2' R U' R' U2 R' U2' R U2 R2' U R2' U2 R\",\n    \"R2' U2 R2 U R2' U' R2' U R' U' R2' U2' R U2' R U R U' R2' U2 R\",\n    \"R2' U2 R2 U' R2 U' R U R2 U R2' U' R' U R U R2 U R2' U2 R\",\n    \"R2' U2' R U2 R U2' R U R' U2 R' U2' R U2 R U2 R' U2' R2' U2 R\",\n    \"R2' U2' R U2 R U2' R U2' R' U2' R' U2 R U2' R U' R' U2' R2' U2 R\",\n    \"R2' U2' R U2 R' U2' R U2 R U R' U2' R' U2 R U2' R U2 R2' U2 R\",\n    \"R2' U2' R2 U R' U' R U R2 U' R2' U' R' U R2' U R2' U' R2' U2 R\",\n    \"R2' U2' R2 U2 R' U2' R' U2 R U2' R U R' U2 R' U2' R U2 R' U2 R\",\n    \"R2' U2' R2 U' R2 U' R2 U' R U R2 U R2' U' R' U R U2 R2' U2 R\",\n    \"R2' U2' R2' U R' U2 R' U2' R U2 R U2 R' U2 R' U2' R U2' R2' U2 R\",\n    \"R2' U2' R2' U2 R U R' U2' R' U2 R U2' R U R' U2' R' U2' R2' U2 R\",\n    \"R2' U2' R2' U2 R U' R' U2 R' U2' R U2 R U' R' U2' R' U2' R2' U2 R\",\n    \"R2' U2' R2' U2' R' U2' R' U2 R U2' R U' R' U2 R' U2' R U2' R2' U2 R\",\n    \"R2' U2' R' U' R2' U R U2 R2 U2' R2' U2 R' U' R2' U' R2' U R U R\",\n    \"R2' U2' R' U' R2' U R2' U2 R2' U2' R2 U2 R2 U' R2' U' R2' U R U R\",\n    \"R2' U' R' U2 R' U2' R U2 R U2 R' U2 R' U2' R U2 R2' U R2' U2 R\",\n    \"R2' U' R' U' R U R2 U' R2' U' R' U R2' U R2' U2' R2 U R2' U2 R\",\n    \"R' U R U2' R U2 R' U2' R' U R U R' U' R2 U2' R2' U2' R2 U2 R\",\n    \"R' U R' U2' R U2 R2' U2 R2 U2 R2' U2' R U2 R2 U2' R2 U2' R U2 R\",\n    \"R' U2 R U R U2' R' U2' R' U R2 U2' R' U2 R' U R U2 R' U2 R\",\n    \"R' U2 R U R2' U R2' U R' U' R2' U' R2 U R' U R2 U2' R2' U2 R\",\n    \"R' U2 R2 U' R U2 R U' R2 U R2' U' R U' R2' U2' R' U R2 U2' R\",\n    \"R' U2 R2' U R2 U R' U2' R2 U R2' U R' U' R2 U R U' R' U2 R\",\n    \"R' U2 R2' U2' R2 U2 R U R2' U2 R2 U' R2' U' R U2 R2' U2' R2 U2 R\",\n    \"R' U2 R2' U2' R2 U2 R U R2' U2 R2 U' R2' U' R' U2 R2 U2' R2' U2 R\",\n    \"R' U2 R' U R' U' R2' U R U R' U2' R2 U R U R U2' R U2' R\",\n    \"R' U2' R U2 R U R U2 R2' U' R U R U2' R' U' R' U' R' U2 R\",\n    \"R' U2' R U2 R U R' U2' R' U' R2' U R2 U2 R2' U2' R' U R U2' R\",\n    \"R' U2' R2 U2' R' U' R' U' R U R U2' R' U' R' U R U' R' U2 R\",\n    \"R' U2' R2 U' R2 U2' R U2 R2 U R2' U' R U2' R2' U2' R2 U R' U R\",\n    \"R' U2' R2' U' R U2' R2' U2' R2' U2 R' U' R' U' R' U' R' U R2 U2 R\",\n    \"R' U2' R' U R U' R' U' R U2 R2' U2' R2' U R2 U R U' R U2 R\",\n    \"R' U2' R' U2 R U2 R U2' R2 U2' R2' U' R2 U2' R U2 R2 U2 R' U R\",\n    \"R' U2' R' U2 R U2 R U2' R2' U R' U2 R2' U R2 U2 R U2' R U R\",\n    \"R' U2' R' U2 R U2 R U' R2' U2 R' U2' R2' U' R2 U2' R2' U R' U R\",\n    \"R' U2' R' U2 R U2 R2 U2' R2 U' R2' U2' R' U2 R2' U' R2 U R' U R\",\n    \"R' U2' R' U2 R U2 R' U2' R2 U2 R2' U2' R2 U2 R2' U R2 U R' U R\",\n    \"R' U2' R' U2 R' U' R2 U2' R U2' R U' R2 U R2 U2' R U R2' U R\",\n    \"R' U2' R' U' R U2' R U2 R' U2' R' U2 R U2' R' U2' R2 U R' U R\",\n    \"R' U2' R' U' R2 U2' R2' U2' R2' U2 R2 U' R2' U' R2 U2 R2 U2' R' U2 R\",\n    \"R' U2' R' U' R2' U R U R U R U2' R2 U2 R2 U2 R2 U R U2 R\",\n    \"R' U2' R' U' R2' U R2 U2 R U2' R2 U' R' U2' R2' U2' R2 U R' U R\",\n    \"R' U' R U2 R U2' R' U2 R' U' R U R' U' R2 U2' R2' U2' R2 U2 R\",\n    \"R' U' R U2' R' U2 R2 U2' R2' U2' R2 U2 R' U2' R' U2 R2 U2 R2' U R\",\n    \"R' U' R U2' R' U2 R' U2' R2' U R2 U R2' U2' R2' U2 R U' R' U2 R\",\n    \"R' U' R U' R2 U2' R2 U2 R2 U2 R2' U2 R2 U R U2 R2' U R' U R\",\n    \"R' U' R2' U2' R2 U R' U' R' U R U' R2 U R2 U R U' R U2 R\",\n    \"R' U' R' U2' R2 U R2' U2' R U2 R U' R2' U2 R U2' R U' R' U' R\",\n    \"R' U' R' U2' R2 U R' U2 R2' U' R' U' R' U R U R2' U' R' U R\",\n    \"R' U' R' U2' R2 U2 R2' U' R2 U' R2' U2' R U2 R U2' R2' U2' R U2 R\",\n    \"R U R2 U2' R2 U2' R U2' R' U' R U2' R' U R2' U2 R2' U' R2 U2 R\",\n    \"R U R2 U2' R2 U' R U2 R' U R U2 R' U2 R2' U2 R2' U' R2 U2 R\",\n    \"R U R2' U2 R' U2' R U2 R U2 R' U2 R' U2' R2 U R U' R2' U2 R\",\n    \"R U R2' U2' R U2' R U2' R' U' R U2' R' U R' U2 R2 U' R2' U2 R\",\n    \"R U R2' U2' R U' R U2 R' U R U2 R' U2 R' U2 R2 U' R2' U2 R\",\n    \"R U R' U R U R' U2' R' U2 R U2' R U R' U' R U' R2' U2 R\",\n    \"R U R' U R U' R' U2 R' U2' R U2 R U' R' U' R U' R2' U2 R\",\n    \"R U R' U' R2' U2 R U2' R U2' R' U2' R' U2 R U2' R2 U' R2' U2 R\",\n    \"R U2 R U R U' R' U R' U' R2 U R2' U' R2' U R U2 R2' U2 R\",\n    \"R U2 R U2 R2 U' R2' U R2' U' R2' U R' U' R U R2 U R U2 R\",\n    \"R U2 R U2' R' U' R2' U' R' U R U' R2 U R2 U' R2 U R2' U2' R\",\n    \"R U2 R2' U R' U2 R2' U R2' U2 R U2 R' U2 R' U2' R2 U R U R\",\n    \"R U2 R2' U2' R2 U2' R' U' R2 U R2 U' R2' U R U' R U R' U' R\",\n    \"R U2 R2' U' R U' R2' U2 R2 U2 R' U2' R' U2' R U2 R U R U2 R\",\n    \"R U2' R' U' R2 U R2 U' R2' U R U' R U R' U' R' U2' R2' U2 R\",\n    \"R U' R2' U R2 U2 R' U R' U2' R U' R' U2' R U2' R' U2' R2 U2 R\",\n    \"R U' R2' U R2 U2 R' U2 R' U2 R U R' U2 R U' R' U2' R2 U2 R\",\n    \"R U' R2' U' R' U R U' R2 U R2 U' R2 U R2' U2' R' U2' R U2 R\",\n    \"R2 U2 R U R' U2' R2 U2 R2 U' R2' U' R2' U R2 U R U2 R2 U2 R\",\n    \"R2 U2 R U2' R2 U' R' U R' U2' R' U2 R U2' R U R U R2' U2 R\",\n    \"R2 U2 R U2' R2 U' R' U' R' U2 R' U2' R U2 R U' R U R2' U2 R\",\n    \"R2 U2 R2 U2' R2' U2' R' U' R2' U' R2 U R2 U R2' U2' R2' U2 R U' R\",\n    \"R2 U2 R2 U' R U' R2' U2 R2 U2 R' U2' R' U2' R U2 R U R2 U2 R\",\n    \"R2 U2' R' U' R2' U' R2 U R2 U R2' U2' R2' U2 R U' R' U2' R2 U2 R\",\n    \"R2 U' R2 U R2' U2 R2' U R' U2' R U' R' U2' R U2' R' U2' R2' U2 R\",\n    \"R2 U' R2 U R2' U2 R2' U2 R' U2 R U R' U2 R U' R' U2' R2' U2 R\",\n    \"R2 U' R2 U2 R' U2' R2' U2' R' U2 R U2 R2 U2 R' U2' R2' U' R' U R\",\n    \"R2 U' R2 U2 R' U2' R2' U2' R' U2 R U2 R' U' R2' U2' R' U2 R2 U R\",\n    \"R2 U' R2' U R2 U' R2' U2' R2 U' R U R' U' R2' U2 R2 U R U' R\",\n    \"R2 U' R' U2' R U2' R2 U2' R' U' R' U R U2 R2' U2' R' U R U2' R\",\n    \"R2 U' R' U2' R2' U2' R U2 R U2 R' U2' R' U' R2' U R2' U R' U R\",\n    \"R2 U' R' U' R U2 R2 U2' R' U' R U R U2 R2' U2 R' U2 R U2' R\",\n    \"R2' U2 R U2 R2 U2' R2' U R' U2 R U2' R U2 R' U2 R2 U2 R2' U2' R\",\n    \"R2' U2 R U2 R2 U2' R2' U2' R U2' R' U2 R' U2' R U' R2 U2 R2' U2' R\",\n    \"R2' U2 R U' R U' R2' U2 R2 U2 R' U2' R' U2' R U2 R U R2' U2 R\",\n    \"R2' U2' R U2 R2' U2' R' U' R2' U2' R U2 R' U R U2 R U2' R' U' R\",\n    \"R2' U' R U2' R2 U2 R' U R' U2 R2 U2 R U' R' U' R2' U2 R' U2' R\",\n    \"R' U R U' R2' U2 R2 U2 R2 U' R2 U' R U R2 U R2' U' R2' U2 R\",\n    \"R' U2 R U2' R U2 R' U' R U' R' U R U2' R2' U2' R U R U2' R\",\n    \"R' U2 R U' R2 U R2' U R U' R2' U' R2 U R2' U2' R2 U2' R U' R\",\n    \"R' U2 R2 U R U2 R' U2' R' U2' R U2' R U2 R2' U' R' U' R2 U2' R\",\n    \"R' U2 R2 U R' U2 R U' R' U2' R' U2 R2' U2' R2' U2' R2 U' R' U2' R\",\n    \"R' U2 R2 U2 R U R2' U2 R2 U2 R2 U2' R U2 R U R' U2' R U' R\",\n    \"R' U2 R2 U2 R2' U R U R2 U2' R' U2 R' U2 R U2 R U2' R' U' R\",\n    \"R' U2 R2' U2' R' U2 R U2' R2 U2' R U' R2' U R' U' R2' U R2' U' R\",\n    \"R' U2 R2' U2' R' U2 R U2' R2 U2' R2 U' R2 U R U' R2 U R' U' R\",\n    \"R' U2 R' U R' U2 R2 U2 R2 U2' R2' U2 R U2' R U2 R' U R U' R\",\n    \"R' U2 R' U R' U2 R' U2 R2' U2' R2 U2 R' U2' R U2 R' U R U' R\",\n    \"R' U2 R' U R' U' R U2' R' U2 R U2' R2' U2 R2 U2' R U2' R U' R\",\n    \"R' U2 R' U R' U' R U2' R' U2 R' U2' R2 U2 R2' U2' R2' U2' R U' R\",\n    \"R' U2' R U' R2' U R' U' R2' U R2' U R2' U2' R' U2 R2' U R2' U2 R\",\n    \"R' U2' R2 U' R2 U R U' R2 U R' U R2' U2' R' U2 R2' U R2' U2 R\",\n    \"R' U2' R' U2 R U2' R U R' U2' R' U2 R U2' R2' U2 R2' U R2 U2 R\",\n    \"R' U2' R' U2 R U2' R U R' U2' R' U2 R U2' R' U2 R2 U R2' U2 R\",\n    \"R' U2' R' U2 R2' U R2' U2 R U2 R' U2 R' U2' R2 U R U' R2' U2 R\",\n    \"R' U' R2 U2' R U2 R2 U' R U' R2' U R' U' R2' U R2' U2 R2' U2 R\",\n    \"R' U' R2 U2' R U2 R2 U' R2 U' R2 U R U' R2 U R' U2 R2' U2 R\",\n    \"R U R U2 R' U' R' U R2 U2' R' U' R' U2' R' U2 R U R' U2 R\",\n    \"R U R2 U R' U2' R2 U2 R2 U2 R2' U2' R2' U2' R2' U' R' U2' R2 U' R\",\n    \"R U R2' U2 R' U' R' U2' R2 U R2' U R' U' R2 U R2 U' R2' U2 R\",\n    \"R U R2' U' R2 U2' R2' U R U' R' U2 R U2' R' U2' R U R U2' R\",\n    \"R U R2' U' R2 U' R2' U R2 U' R' U R U2' R2' U2' R U R U2' R\",\n    \"R U2 R' U R2 U2' R' U' R' U2' R2 U R2 U' R U2' R' U2' R2' U' R\",\n    \"R2 U R U' R2 U R2 U' R2' U2' R2 U R U R' U R2' U R2 U2 R\",\n    \"R2 U R2' U R U R U' R' U R U2' R2' U R2 U2' R2' U R U2 R\",\n    \"R2 U R2' U2 R' U' R' U2' R2 U R2' U R' U' R2 U R U' R' U2 R\",\n    \"R2 U2' R U R U' R2' U2 R U R U2 R U2' R' U2' R U2' R2' U2 R\",\n    \"R2 U2' R2' U R2 U R' U R U' R' U' R U R2' U2 R2 U' R' U2' R\",\n    \"R2 U2' R2' U R' U R U R2 U2' R2' U' R2 U R2 U' R U' R2 U2 R\",\n    \"R2 U2' R2' U2 R2 U' R U R' U' R2' U R2 U R U' R2 U2 R2 U2 R\",\n    \"R2 U2' R2' U2 R2 U' R2' U R2 U' R U R' U R2' U R2 U2' R U' R\",\n    \"R2 U2' R' U2 R' U2 R U2 R U2' R' U2 R2' U' R2 U2' R2' U2' R2 U2 R\",\n    \"R2 U2' R' U' R' U R U' R' U R U' R U R2 U' R2' U2' R2 U2' R\",\n    \"R2 U' R2 U' R U R2 U R2' U' R' U R U' R2 U2 R2' U R2 U2 R\",\n    \"R2 U' R2 U' R U R2 U R2' U' R' U R U' R2' U2 R2 U R2' U2 R\",\n    \"R2 U' R2' U' R' U R2' U R2' U R U2 R' U' R' U R2 U2' R2' U2 R\",\n    \"R2 U' R2' U' R' U R2' U2' R2' U2 R U2' R2 U2 R2 U2' R' U2' R2 U2' R\",\n    \"R2' U R U2 R U' R2' U' R2 U' R' U' R' U R U' R U2 R2' U2' R\",\n    \"R2' U R2' U' R' U' R U R2 U' R2 U' R' U2 R U2 R U' R2' U2 R\",\n    \"R2' U R' U' R2 U2' R U R U2 R2' U' R2 U' R U R2' U2 R2' U2 R\",\n    \"R2' U2' R' U' R U2' R2 U2 R' U' R2' U' R2 U2 R2' U2' R2' U R2 U2 R\",\n    \"R2' U' R2 U R' U' R2' U' R2 U2' R2 U' R U2 R2 U2' R' U R U2' R\",\n    \"R2' U' R2' U R U' R2 U' R2' U2 R U R U2' R2 U' R' U' R2' U2 R\",\n    \"R' U R2' U' R2' U R2 U2 R2' U' R' U' R U' R2 U2 R2' U' R2 U2 R\",\n    \"R' U2' R2 U R2 U2 R2' U2' R2' U R2 U' R' U' R2' U2 R2 U2 R U2' R\",\n    \"R' U2' R2 U R2' U R2 U' R' U' R2 U2 R2' U R2 U2 R2' U' R U2' R\",\n    \"R' U2' R2 U R2' U R2 U' R' U' R2' U2 R2 U R2' U2 R2 U' R U2' R\",\n    \"R' U2' R2 U2 R2 U' R2' U' R2 U2 R U2' R U2 R' U R U R' U2 R\",\n    \"R' U2' R2 U2' R2' U2' R2 U2 R' U2' R' U2 R U' R U2' R' U' R' U R\",\n    \"R' U2' R' U2' R U2 R U R U2 R2' U' R U R U2' R' U2' R2' U2 R\",\n    \"R' U' R U R U2 R' U' R' U R U R U2 R2' U2 R U R' U2 R\",\n    \"R' U' R U R U2' R' U2 R' U2' R2' U2 R2' U R2 U2 R2' U' R U2' R\",\n    \"R' U' R U R U2' R' U2 R' U2' R' U2 R2 U R2' U2 R2 U' R U2' R\",\n    \"R' U' R U' R' U2 R U2' R2' U2 R2' U R2 U2 R2' U2' R' U R U2' R\",\n    \"R' U' R U' R' U2 R U2' R' U2 R2 U R2' U2 R2 U2' R' U R U2' R\",\n    \"R' U' R U' R' U2 R U2' R' U2' R U R' U2' R2 U2 R2' U R2 U2 R\",\n    \"R' U' R U' R' U2 R U2' R' U2' R U R' U2' R2' U2 R2 U R2' U2 R\",\n    \"R' U' R2' U R U' R2 U' R2' U2 R U R U2' R2 U' R2' U' R' U2 R\",\n    \"R' U' R2' U R U' R2 U' R2' U2 R U' R2' U' R2 U2' R U R' U2 R\",\n    \"R U R U R' U2' R2 U R2' U R U' R2' U2 R' U2' R U2 R' U2 R\",\n    \"R U R' U2 R' U2' R U2 R U2 R' U2 R' U2' R2' U2 R2' U R2 U2 R\",\n    \"R U R' U2 R' U2' R U2 R U2 R' U2 R' U2' R' U2 R2 U R2' U2 R\",\n    \"R U2 R U R' U2' R' U2 R U2' R U R' U2' R U2 R2' U R2 U2 R\",\n    \"R U2 R U R' U2' R' U2 R U2' R U R' U2' R2 U2 R2 U R2' U2 R\",\n    \"R U2 R U' R' U2 R' U2' R U2 R U' R' U2' R U2 R2' U R2 U2 R\",\n    \"R U2 R U' R' U2 R' U2' R U2 R U' R' U2' R2 U2 R2 U R2' U2 R\",\n    \"R U2 R' U2' R U2 R2' U2' R2' U2 R2 U' R' U2 R' U2' R U2 R2' U2 R\",\n    \"R U2 R' U2' R' U' R2' U R2' U R' U' R2' U' R' U2' R2' U2' R2 U2 R\",\n    \"R U2 R' U' R' U R2 U2' R' U' R' U2' R' U2 R U2 R U' R2' U2 R\",\n    \"R U2 R' U' R' U2' R2 U R' U R2 U R2' U' R' U R U2' R2 U2 R\",\n    \"R U2' R' U2 R' U2' R U R U' R' U R U2' R2' U2' R U R U2' R\",\n    \"R U2' R' U2' R' U2 R U2' R U' R' U2 R' U2' R2' U2 R2' U R2 U2 R\",\n    \"R U2' R' U2' R' U2 R U2' R U' R' U2 R' U2' R' U2 R2 U R2' U2 R\",\n    \"R U' R U R' U' R' U R U2' R U' R' U2' R' U R U2 R U2' R\",\n    \"R U' R U2' R2 U' R2 U2' R' U2' R U2' R' U' R' U R U' R2 U2' R\",\n    \"R U' R U2' R' U' R' U' R U R U R2' U' R2 U2' R2' U R U2 R\",\n    \"R2 U R' U2 R' U2' R U R2' U' R' U R2 U' R' U' R' U2 R2' U2' R\",\n    \"R2 U2 R2 U2' R U2 R U R' U2' R U2 R2' U2 R2 U2 R U R2 U2 R\",\n    \"R2 U2 R' U2' R U2 R' U2' R2 U2 R2' U' R' U2 R' U2' R U2 R' U2 R\",\n    \"R2 U2' R U' R' U2 R U R U' R' U' R U R U2 R' U' R2' U R\",\n    \"R2 U2' R2 U2' R2' U2 R U2' R' U2 R U2' R2 U2 R U2' R' U2 R U2 R\",\n    \"R2 U2' R' U2' R' U2 R U2' R2 U2 R U2' R' U2 R U2' R2' U2 R' U2 R\",\n    \"R2 U2' R' U2' R' U2 R U2' R' U2 R2 U2' R' U2 R U2' R' U2 R U2 R\",\n    \"R2 U' R U R2 U' R2' U' R U' R2' U2 R U R U2' R U2' R2' U2 R\",\n    \"R2 U' R2' U2' R2' U2 R2 U R2' U' R2' U2' R' U' R U2' R2 U2 R' U R\",\n    \"R2 U' R2' U2' R' U2 R2' U R U2 R U2 R U2' R2' U2' R2 U R' U R\",\n    \"R2' U2' R U2' R U2 R' U2' R U2 R2' U2' R U2 R' U2' R U2 R' U2 R\",\n    \"R2' U2' R U2' R U2 R' U2' R2' U2 R' U2' R U2 R' U2' R2 U2 R U2 R\",\n    \"R2' U2' R2' U R2 U R2' U2' R2 U2 R2 U2 R2' U R U2 R U R' U2 R\",\n    \"R2' U2' R2' U2' R2 U2 R' U2' R U2 R' U2' R2' U2 R' U2' R U2 R' U2 R\",\n    \"R2' U' R U R U2 R' U2' R' U2 R U2 R U2' R2' U2' R2 U R2' U R\",\n    \"R2' U' R U2' R' U2' R U2 R U2' R' U' R U2' R2' U2' R2 U R2' U R\",\n    \"R2' U' R U' R' U2 R2 U2 R' U' R' U2 R2 U2 R' U' R U R2' U R\",\n    \"R2' U' R2 U2' R2' U2' R U2 R U2 R' U2' R' U2 R U R U R2' U R\",\n    \"R2' U' R2 U2' R2' U2' R U' R' U2' R U2 R U2' R' U2' R U R2' U R\",\n    \"R2' U' R2 U' R U R' U R2' U2' R2 U2 R2' U2 R2 U' R U' R2 U2' R\",\n    \"R2' U' R2 U' R U R' U' R2' U2 R2 U2' R2' U' R2 U' R U' R2 U2' R\",\n    \"R' U2 R U2 R U2' R2' U2' R2 U R' U R2' U2' R2' U' R' U R2' U2 R\",\n    \"R' U2 R U2 R' U2' R' U' R' U2' R2 U R' U' R' U2 R2' U' R2' U2 R\",\n    \"R' U2 R U2' R U R' U2 R' U2' R U2 R U2 R U2 R2' U R2 U2 R\",\n    \"R' U2 R U2' R U R' U2 R' U2' R U2 R U2 R2 U2 R2 U R2' U2 R\",\n    \"R' U2 R U2' R U2' R' U2' R' U2 R U2' R U' R U2 R2' U R2 U2 R\",\n    \"R' U2 R U2' R U2' R' U2' R' U2 R U2' R U' R2 U2 R2 U R2' U2 R\",\n    \"R' U2 R' U2' R U2' R U2 R' U R U2 R' U R' U2' R2 U R' U R\",\n    \"R' U2 R' U' R' U2' R2 U R' U R2 U R2' U' R' U R2' U2' R2' U2 R\",\n    \"R' U2' R U' R' U R' U' R U2' R' U2' R2 U R2' U' R2 U2' R2' U2' R\",\n    \"R' U' R U R2 U' R2' U' R U' R2' U2 R U R U2' R' U2' R2 U2 R\",\n    \"R' U' R U2' R2' U2' R U2 R U2 R' U2' R' U2 R U R U R' U R\",\n    \"R' U' R U2' R2' U2' R U' R' U2' R U2 R U2' R' U2' R U R' U R\",\n    \"R U R U R2' U2' R U R U2' R' U' R' U' R U' R U2' R' U' R\",\n    \"R2 U R U2 R' U' R2' U R2' U2' R2 U R2 U' R' U2 R U2 R' U R\",\n    \"R2 U R U' R2 U R2' U2' R' U' R2' U2' R2 U R2' U2' R2' U2' R' U' R\",\n    \"R2 U R U' R2 U' R2 U2 R2' U2 R2 U2' R2' U' R2 U2 R U R' U' R\",\n    \"R2 U R U' R2 U' R2 U' R2' U2' R2 U2 R2' U2 R2 U2 R U R' U' R\",\n    \"R2 U R2 U' R U' R2 U2 R2' U2 R2 U2' R2' U R' U R U2 R2 U2 R\",\n    \"R2 U R2 U' R U' R2 U' R2' U2' R2 U2 R2' U' R' U R U2 R2 U2 R\",\n    \"R2 U' R2' U R U R U2 R' U2' R' U2 R U2 R U2' R2' U R2 U2 R\",\n    \"R2 U' R2' U R U2' R' U2' R U2 R U2' R' U' R U2' R2' U R2 U2 R\",\n    \"R2 U' R' U R2' U R2 U2' R' U' R' U2 R2' U R U' R2 U' R2' U2 R\",\n    \"R2' U R' U' R2' U' R2 U R U' R' U R2' U2' R2 U2 R2' U' R2 U2 R\",\n    \"R2' U R' U' R2' U' R2 U R U' R' U' R2' U2 R2 U2' R2' U R2 U2 R\",\n    \"R2' U' R' U2 R2 U2' R U' R' U2' R2' U' R2' U R2 U2 R2' U R2' U2 R\",\n    \"R' U2 R' U2' R U2 R U' R' U2' R' U2 R U2' R2' U2 R2' U R2 U2 R\",\n    \"R' U2 R' U2' R U2 R U' R' U2' R' U2 R U2' R' U2 R2 U R2' U2 R\",\n    \"R' U2' R2 U2 R' U2' R' U' R U2' R U2 R2 U2' R U' R' U2' R U2 R\",\n    \"R' U' R U R2 U2' R2' U2 R2 U R2' U R' U R2' U' R2' U2 R2 U2 R\",\n    \"R' U' R U R2 U' R2' U' R' U R2' U R2' U R2 U2 R2' U R2 U2 R\",\n    \"R' U' R U R2 U' R2' U' R' U R2' U R2' U R2' U2 R2 U R2' U2 R\",\n    \"R' U' R U2 R2 U R' U' R2' U2' R2 U2' R2' U' R U R' U2' R2' U' R\",\n    \"R' U' R U2' R U2 R2' U' R U2 R U2 R' U' R' U2' R U R' U2 R\",\n    \"R' U' R U' R2 U2 R2' U2' R2 U2' R2' U R' U R2' U' R2' U2 R2 U2 R\",\n    \"R U R U2 R2' U R U2 R' U2 R U2 R' U' R U2 R U2 R' U R\",\n    \"R U R' U R U2' R2 U2' R U R U2' R U2 R2' U' R2 U' R2 U2' R\",\n    \"R U R' U R' U' R2 U' R' U R' U R U2' R2 U2' R2' U' R2 U2' R\",\n    \"R U R' U R' U' R2 U' R' U R' U R U2' R2' U2' R2 U' R2' U2' R\",\n    \"R U R' U2' R' U2 R U2' R U R' U2' R U2 R2' U R2 U2 R2' U2' R\",\n    \"R U R' U2' R' U2 R U2' R U R' U2' R2 U2 R2 U R2' U2 R2 U2' R\",\n    \"R U2 R U2' R2' U2' R2 U R' U R2' U2' R2' U' R' U R2' U2 R2 U2' R\",\n    \"R U2 R U' R' U R U R2' U2 R2 U' R' U2' R' U R U' R U2 R\",\n    \"R U2 R2 U R U2 R2 U2 R2 U2' R2' U2' R U2' R2 U2 R' U2' R2 U' R\",\n    \"R U2 R' U2' R U2' R' U2' R U R U2 R2' U' R2 U' R2' U2' R U2 R\",\n    \"R U2 R' U2' R' U' R' U2' R2 U R' U' R' U2 R2' U' R2' U2 R2 U2' R\",\n    \"R U2' R U R' U2 R U2' R U R2 U R2' U2' R' U' R2' U R U2 R\",\n    \"R U2' R U R' U2 R' U2' R U2 R U2 R U2 R2' U R2 U2 R2' U2' R\",\n    \"R U2' R U R' U2 R' U2' R U2 R U2 R2 U2 R2 U R2' U2 R2 U2' R\",\n    \"R U2' R U2' R' U2' R' U2 R U2' R U' R U2 R2' U R2 U2 R2' U2' R\",\n    \"R U2' R U2' R' U2' R' U2 R U2' R U' R2 U2 R2 U R2' U2 R2 U2' R\",\n    \"R U2' R' U R U R' U' R' U R U2 R U2' R' U R' U2' R2 U2' R\",\n    \"R U2' R' U R2 U R2' U2 R U2' R' U R U R' U2' R2 U' R' U R\",\n    \"R U2' R' U R2' U' R2 U2' R' U R U R' U2' R U2 R2' U R2' U R\",\n    \"R U2' R' U R' U2' R' U2 R U2' R U R U2 R2' U2 R' U2' R U2 R\",\n    \"R U2' R' U2 R U2 R2' U2' R2 U R2' U2' R2 U2 R2' U R U2 R U2' R\",\n    \"R U2' R' U2 R U2 R2' U2' R2 U' R2' U2 R2 U2' R2' U2' R U2 R U2' R\",\n    \"R U2' R' U2 R2 U2 R2 U2' R2' U R2 U2' R2' U2 R2 U R U2 R U2' R\",\n    \"R U2' R' U2 R2 U2 R2 U2' R2' U' R2 U2 R2' U2' R2 U2' R U2 R U2' R\",\n    \"R U2' R' U2 R2' U2 R U2 R' U R U R U2 R' U' R U R U2' R\",\n    \"R U2' R' U2 R2' U2 R2 U2' R2' U2 R' U2 R2' U2 R2 U R U2 R2' U2' R\",\n    \"R U2' R' U2' R U R2' U' R' U' R2' U R2 U2' R2' U2 R2 U2' R U2' R\",\n    \"R U2' R' U' R2 U2' R2' U R2 U R U2 R2' U2' R' U R U2' R2 U2 R\",\n    \"R U2' R' U' R' U2 R' U2' R U2 R U' R U2 R2' U2 R' U2' R U2 R\",\n    \"R U2' R' U' R' U2' R2 U R2 U' R' U' R U R U R2' U' R2' U2 R\",\n    \"R U2' R' U' R' U' R' U' R2 U' R2' U2 R2 U R U2 R' U2' R' U2 R\",\n    \"R U2' R' U' R' U' R' U' R2 U' R2' U2 R2 U2' R' U2' R U2 R U2' R\",\n    \"R U' R U2 R' U R U2 R' U R' U2 R' U' R2 U' R2' U2 R2 U' R\",\n    \"R U' R U' R2 U2' R' U R2 U R2 U' R2' U' R' U2' R' U R2' U2 R\",\n    \"R U' R2' U2 R2 U2' R' U R' U R2 U2 R' U' R' U' R U' R U2' R\",\n    \"R U' R' U2 R' U2' R U2 R U' R' U2' R U2 R2' U R2 U2 R2' U2' R\",\n    \"R U' R' U2 R' U2' R U2 R U' R' U2' R2 U2 R2 U R2' U2 R2 U2' R\",\n    \"R2 U2 R U R U2 R' U2 R2' U2 R2' U R2' U' R2 U2 R2 U R2' U R\",\n    \"R2 U2 R2 U' R U2' R U2 R' U R2' U2 R2 U2' R' U R2 U R2' U R\",\n    \"R2 U2 R2 U' R2 U2 R2 U R U R2' U' R' U2 R2' U R2' U' R U2 R\",\n    \"R2 U2 R2' U' R2 U2 R' U R2 U R' U R U2' R' U R' U2' R U2' R\",\n    \"R2 U2 R2' U' R2' U R2' U R2 U2' R2' U2 R' U2' R U2 R U2 R' U2 R\",\n    \"R2 U2' R U2 R U R' U2' R U2 R2' U2 R2 U2 R U R2 U2 R U2' R\",\n    \"R2 U2' R U2 R U R' U2' R U2 R2' U' R2 U2' R2' U2 R2 U2' R' U2 R\",\n    \"R2 U2' R2 U2' R2' U2 R U2 R' U R U R U2' R' U' R' U2 R U2 R\",\n    \"R2 U2' R2' U2' R U R' U R' U' R2 U' R' U R' U R U' R2 U2' R\",\n    \"R2 U2' R2' U' R2 U2 R U2' R U R U' R2' U2 R' U R2' U R' U' R\",\n    \"R2 U2' R2' U' R2 U2 R2 U' R U R2 U R' U2 R' U' R' U R2 U2' R\",\n    \"R2' U R2' U' R' U' R U2' R' U2' R' U2 R U2' R2 U R U' R U' R\",\n    \"R2' U R' U2 R2' U2 R' U' R2' U2 R U2 R U R U2 R' U' R' U' R\",\n    \"R2' U2 R U R2' U2' R2 U R2' U R U' R U2' R' U R U R' U' R\",\n    \"R2' U2 R2 U2 R2' U R2' U2' R2 U2 R2' U2 R' U' R2' U2 R2 U R U2 R\",\n    \"R2' U2 R2 U2 R2' U' R2' U2 R2 U2' R2' U' R' U' R2' U2 R2 U R U2 R\",\n    \"R2' U2 R' U R2 U R' U R2' U' R2' U2 R U2 R2' U' R' U2' R2 U2' R\",\n    \"R2' U2 R' U2 R U R' U' R2 U2 R2' U R2' U R' U2 R U2 R' U2 R\",\n    \"R2' U2' R2 U2' R U R' U R' U' R2 U' R' U R' U R U' R2' U2' R\",\n    \"R2' U2' R2 U' R2' U2 R U2' R2 U R' U' R' U2 R' U R2 U R U' R\",\n    \"R2' U2' R2 U' R2' U2 R2' U' R' U R2' U R' U2 R2' U' R U R U2' R\",\n    \"R2' U2' R2 U' R' U R U' R2' U2 R' U R2' U R' U' R2' U' R U R\",\n    \"R2' U' R' U' R U' R2 U2 R2' U' R2 U2 R2' U2 R' U R2' U' R2' U R\",\n    \"R' U R U2' R' U2 R' U' R U2' R' U2' R' U R2 U R U' R2 U' R\",\n    \"R' U R2 U2 R U R U R2' U2' R2 U R U R2 U R2' U2 R2' U2 R\",\n    \"R' U R2 U2 R' U' R2' U2 R2' U2 R' U' R' U R' U R2 U2' R' U2 R\",\n    \"R' U R' U2' R U2 R2' U2 R2 U2 R2' U2' R U2 R2 U' R2 U2 R U2' R\",\n    \"R' U R' U2' R' U2 R U2' R U R U R2' U2 R2 U R2 U2 R U2' R\",\n    \"R' U2 R U R U R' U2' R2 U R U R U' R U2 R U2' R2 U' R\",\n    \"R' U2 R U2 R2' U2' R2' U R2 U R U R U' R' U' R2 U' R2' U2 R\",\n    \"R' U2 R U2' R2' U2' R2 U R' U' R' U' R U2' R U' R' U2' R' U2 R\",\n    \"R' U2 R2 U R2' U' R2' U R' U2 R2' U2' R2' U' R2 U' R2 U' R2' U R\",\n    \"R' U2 R2 U2' R2' U2' R2' U R' U' R' U2' R' U2' R2 U2 R U2' R' U2' R\",\n    \"R' U2 R2' U2 R U R2' U2' R' U' R2' U2 R U2' R U R U2 R U2 R\",\n    \"R' U2' R U R U R' U2 R' U' R2 U2' R' U2 R' U R U R' U' R\",\n    \"R' U2' R U2 R2' U2' R2' U2 R2 U' R' U2 R' U2' R U2 R2' U2 R2' U2' R\",\n    \"R' U2' R U2 R' U2' R2 U2 R2' U' R' U2 R' U2' R U2 R' U2 R2 U2' R\",\n    \"R' U2' R U2' R U2 R' U R U2 R' U R' U2' R2 U R' U R U2' R\",\n    \"R' U2' R U2' R' U2' R U R2 U' R U R2 U2' R' U2 R' U' R' U R\",\n    \"R' U2' R U2' R' U' R2' U' R' U R2' U' R' U' R' U2 R' U' R' U R\",\n    \"R' U2' R2' U' R2 U' R U2 R U2' R' U' R2' U2' R2 U2 R' U R2 U2 R\",\n    \"R' U2' R' U2' R U2 R2' U2' R2' U R2 U R' U2' R2' U' R' U R2' U2 R\",\n    \"R' U2' R' U2' R U2 R2' U2' R2' U R2 U' R2 U' R2' U2' R2' U2 R2' U R\",\n    \"R' U2' R' U' R2' U R2' U R' U' R2' U' R' U2' R2' U2' R2 U2 R' U2' R\",\n    \"R' U' R U2' R' U2' R2 U' R' U2' R U2 R U R2' U R2 U2' R' U2 R\",\n    \"R' U' R U' R2 U' R U2' R2 U R U2 R2 U' R2' U' R U R2 U R\",\n    \"R' U' R2 U2' R U2 R2 U' R U R2 U2' R2 U2' R2 U R' U R U2 R\",\n    \"R' U' R2' U2 R U2' R2 U R U2' R2' U R U2 R2' U' R U R2 U2' R\",\n    \"R' U' R2' U' R2' U2 R U2' R' U' R' U R U' R U2' R' U2' R2 U R\",\n    \"R' U' R' U R2 U2' R' U' R' U2' R' U2 R U2 R U' R2' U2 R2 U2' R\",\n    \"R' U' R' U2 R' U2' R U2 R U' R U R2' U2 R2 U R2 U2 R U2' R\",\n    \"R' U' R' U2' R2 U R' U R2 U R2' U' R' U R U2' R2 U2 R2' U2' R\",\n    \"R' U' R' U2' R2 U R' U R2 U R2' U' R' U R2' U2' R2' U2 R2 U2' R\",\n  ],\n  [\n    \"R U2' R' U' R U2' R' U R2' U2 R2' U R2 U2 R2' U2 R\",\n    \"R U2' R' U' R U2' R' U R' U2 R2 U R2' U2 R2 U2 R\",\n    \"R U2 R' U R U2 R' U2 R2' U2 R2' U R2 U2 R2' U2 R\",\n    \"R U2 R' U R U2 R' U2 R' U2 R2 U R2' U2 R2 U2 R\",\n    \"R U R' U R2 U2' R U R2 U2 R U2' R2 U' R' U2 R' U2' R\",\n    \"R U R' U R2 U2' R2' U2' R U2 R2' U' R2' U2' R' U2 R2' U R\",\n    \"R U R' U2 R U2' R U R2' U2 R2 U2 R' U2' R' U2' R U2' R\",\n    \"R U R' U' R2 U2 R2' U2' R2 U2 R2' U R U2 R U2 R' U2' R\",\n    \"R U2' R2 U' R' U' R U R U R2 U2' R' U R U R U2 R\",\n    \"R2 U2 R U2' R' U2 R2' U R U R U2' R U2 R' U2' R' U R\",\n    \"R2 U2 R U2' R' U2 R2' U R U' R U2 R U2' R' U2 R' U' R\",\n    \"R2 U2 R2' U R U R U2' R U2 R' U2' R' U R U2 R U2' R\",\n    \"R2 U2 R2' U R U2 R' U2 R U2 R U2' R' U2 R' U R U2' R\",\n    \"R2 U2 R2' U R U2 R' U' R U2' R U2 R' U2' R' U2' R U2' R\",\n    \"R2 U2 R2' U R U' R U2 R U2' R' U2 R' U' R U2 R U2' R\",\n    \"R2 U2 R2' U R2' U2 R' U2' R' U R U2' R U2 R' U2' R' U R\",\n    \"R2 U2 R2' U R2' U2 R' U2' R' U' R U2 R U2' R' U2 R' U' R\",\n    \"R2 U2 R' U2 R U2' R' U2 R' U' R U2 R U2' R' U2 R U2' R\",\n    \"R2' U2 R2 U R2 U R U2' R U2 R' U2' R' U R U2 R U2' R\",\n    \"R2' U2 R2 U R2 U2 R' U2 R U2 R U2' R' U2 R' U R U2' R\",\n    \"R2' U2 R2 U R2 U2 R' U' R U2' R U2 R' U2' R' U2' R U2' R\",\n    \"R2' U2 R2 U R2 U' R U2 R U2' R' U2 R' U' R U2 R U2' R\",\n    \"R2' U2 R2 U R' U2 R' U2' R' U R U2' R U2 R' U2' R' U R\",\n    \"R2' U2 R2 U R' U2 R' U2' R' U' R U2 R U2' R' U2 R' U' R\",\n    \"R2' U2 R2' U2 R U2' R' U2 R' U' R U2 R U2' R' U2 R2 U2' R\",\n    \"R' U2' R U2 R' U2 R' U2 R U R U R' U' R U R2' U R\",\n    \"R U R' U2 R U2 R' U R2 U2' R' U2' R U' R2' U2 R U R\",\n    \"R' U2 R U R' U R2 U2' R2 U2' R2 U R U2' R2 U2' R U2 R\",\n    \"R' U2' R U R' U R2 U2' R2' U2' R U' R' U2' R U2 R U2' R\",\n    \"R2 U2 R U2' R2' U2 R2 U2 R2' U2 R U2' R' U R U2 R U2' R\",\n    \"R U2' R2' U2' R2' U2 R2 U' R2' U' R' U' R2' U R U2' R' U2' R\",\n    \"R' U2' R2 U2' R2' U2' R U2 R U2 R' U' R' U R U' R' U2' R\",\n    \"R' U2' R2' U2 R U R2 U2 R2' U2 R2 U2 R2 U2' R2' U' R' U2' R\",\n    \"R' U' R2 U2 R2' U' R2 U' R' U2 R2' U2' R U' R' U2' R U2' R\",\n    \"R U R' U R U' R' U2 R2 U2 R' U' R' U2 R2 U2 R' U2' R\",\n    \"R U R' U R2 U2' R2' U2' R U' R' U2' R U2 R U2' R' U2 R\",\n    \"R U2 R' U R U2 R U2' R' U2' R' U2 R2 U2 R2' U' R U R\",\n    \"R U' R U2' R2 U' R2 U2' R' U2' R U2' R U2 R2' U' R' U R\",\n    \"R2 U2 R' U' R' U R2 U2' R2' U2' R2' U R2' U R' U' R2' U' R\",\n    \"R2' U R' U2' R' U2 R2 U2' R U R2 U2 R2' U2' R2 U' R' U2' R\",\n    \"R2' U R' U2' R' U2 R2 U2' R U2' R2 U2' R2' U2 R2 U2 R' U2' R\",\n    \"R2' U2 R U2' R' U2 R2' U2 R2' U R2' U' R' U R2' U' R U2' R\",\n    \"R2' U2 R U2' R' U2 R2' U2 R' U R2 U' R U R2 U' R2 U2' R\",\n    \"R2' U2 R2' U2 R2' U R2' U' R' U R2' U' R U2' R2 U2' R U2 R\",\n    \"R2' U2 R2' U2 R' U R2 U' R U R2 U' R2 U2' R2 U2' R U2 R\",\n    \"R2' U2' R2' U' R2 U2' R2 U2' R U2' R' U' R U2' R' U R U2 R\",\n    \"R2' U2' R2' U' R2 U2' R2 U' R U2 R' U R U2 R' U2 R U2 R\",\n    \"R2' U' R U R2' U2 R2 U2' R2' U' R' U2 R2' U2' R U2 R U R\",\n    \"R2' U' R U2' R2' U2' R2 U2 R2' U2 R' U2 R2' U2' R U2 R U R\",\n    \"R' U2 R U2 R2' U' R U' R' U2 R2' U2' R2' U2' R U R U2' R\",\n    \"R' U2 R U' R U2 R' U' R' U2 R2 U2 R2 U2' R U R' U R\",\n    \"R' U2' R U R U2' R2' U2' R U R' U2' R2 U R2' U R2 U' R\",\n    \"R' U2' R2 U' R2' U2' R U2' R U2' R' U' R U2' R' U R U2 R\",\n    \"R' U2' R2 U' R2' U2' R U' R U2 R' U R U2 R' U2 R U2 R\",\n    \"R U2 R2' U' R2 U2 R2 U2 R' U R2' U R2' U2' R U2' R2' U' R\",\n    \"R2 U2 R2' U2 R U2' R U R U2 R2' U' R2 U' R2 U2' R2 U2' R\",\n    \"R2 U2' R' U' R' U2 R2' U2' R2' U2' R2 U' R2' U' R' U2' R2 U2' R\",\n    \"R2' U' R2 U' R' U R2 U R2' U' R2 U2 R2' U2 R' U R2' U2 R\",\n    \"R' U2' R' U2' R U' R2 U2' R2' U2' R2 U' R' U' R2' U2 R U2 R\",\n    \"R U2' R U R' U R2 U2' R2' U2' R U2 R U2 R' U2' R' U2 R\",\n    \"R2 U2' R U R' U R2 U2' R2' U2' R U2 R U2 R' U2' R' U2 R\",\n    \"R2' U2' R U R' U R2 U2' R2' U2' R U2 R U2 R' U2' R' U2 R\",\n    \"R2' U' R2 U2 R2' U2 R U2' R U R U2 R2' U' R2 U' R2 U2' R\",\n    \"R2' U' R2 U2' R' U' R' U2 R2' U2' R2' U2' R2 U' R2' U' R' U2' R\",\n    \"R' U2' R U R' U R U' R' U2 R2 U2 R' U' R' U2 R2 U2 R\",\n    \"R' U2' R U R' U R2 U2' R2' U2' R U2 R U2 R' U2' R' U2 R\",\n    \"R U2' R U R2 U' R' U' R U R U R2 U' R U' R' U2' R\",\n    \"R U' R U2 R' U' R' U R U R U2 R' U R' U2' R U2' R\",\n    \"R U' R' U2' R U R' U2 R U2 R' U2' R' U' R2 U2' R2' U2' R\",\n    \"R2 U R' U2 R' U2' R2 U R' U2' R' U2 R U R U' R' U2' R\",\n    \"R2 U R' U' R' U R U R U2 R' U R' U2' R U2 R U R\",\n    \"R2 U' R2' U2 R U2 R' U R U' R U R' U2 R' U2' R2 U R\",\n    \"R2' U R2' U R' U' R2' U2' R U2' R U R U' R2' U2 R' U R\",\n    \"R2' U' R2 U2 R U2' R U' R U R' U2 R' U2' R2' U R U' R\",\n    \"R' U2 R U2 R' U R2 U2' R' U2' R U' R2' U2 R U R' U2 R\",\n    \"R' U2 R U' R U2' R' U2 R' U' R U2' R' U' R2 U2' R2' U2' R\",\n    \"R' U2 R U' R' U2' R2 U2' R2' U2' R' U' R2 U' R2' U2 R2' U2' R\",\n    \"R' U' R' U' R U' R2 U R2 U' R2 U R2' U R2' U' R2' U2 R\",\n    \"R U R' U R2 U2' R2 U2' R2 U R U2' R2 U2' R U2 R U2 R\",\n    \"R U2 R2 U2' R' U' R U' R U R U' R' U' R' U2' R' U2' R\",\n    \"R U2 R2' U2 R U R U2 R' U' R' U2' R2 U2' R' U2' R' U' R\",\n    \"R2 U R2' U R2 U2' R2' U R2 U2 R2' U R2 U2' R2' U R2 U2' R\",\n    \"R2' U R2 U R2' U2' R2 U R2' U2 R2 U R2' U2' R2 U R2' U2' R\",\n    \"R U R U2' R U2 R2 U R2' U2 R' U R2' U2' R U2 R U2 R' U2' R\",\n    \"R U R2' U2 R2 U2 R' U2' R' U2 R2 U2' R2' U2' R2 U2 R' U2' R U' R\",\n    \"R U R' U R2 U R2' U2 R2 U2' R2' U2 R2 U2' R' U2 R U2 R' U2' R\",\n    \"R U R' U R2 U2' R2' U2' R U' R2' U R2 U2 R U2' R2 U' R2 U2' R\",\n    \"R U R' U R2 U2' R2' U2' R' U' R2 U2' R U2 R2 U R2' U' R' U2' R\",\n    \"R U R' U R2 U2' R' U2' R U2 R' U2' R' U2 R U2' R U' R' U2' R\",\n    \"R U R' U R2 U' R2' U2 R' U2' R2' U' R2 U2' R2 U2 R U2 R' U2' R\",\n    \"R U R' U R2' U2 R U R2 U2 R2' U2 R2 U2 R2 U2' R2 U' R U' R\",\n    \"R U R' U R2' U2' R2 U' R2' U2' R' U2 R2' U' R U2 R U2 R' U2' R\",\n    \"R U R' U2 R2 U2 R U2' R2 U' R2' U2' R2 U2' R U2 R U2 R' U2' R\",\n    \"R U R' U' R2' U R U R' U' R' U' R2' U2 R' U R2 U2' R' U' R\",\n    \"R U2 R U R2 U2 R2 U2 R2 U2' R U R U R U R2' U' R' U2' R\",\n    \"R U2 R U2' R2' U2' R U2 R U2' R2' U' R2 U' R2' U2 R2 U2' R' U' R\",\n    \"R U2 R U' R U R2 U R2 U' R U R' U' R' U R2 U2' R2' U' R\",\n    \"R U2 R U' R U R2 U R2' U2' R2' U2 R U' R' U' R U R' U2' R\",\n    \"R U2 R U' R' U' R2 U R2 U2 R2' U2' R2' U2 R U' R' U' R2 U' R\",\n    \"R U2 R2 U R' U' R' U' R' U' R' U2 R2' U2' R2' U2' R U' R2' U2' R\",\n    \"R U2 R2 U2' R2' U2 R U' R2' U' R2 U2 R2' U R U2 R2 U2' R2' U2 R\",\n    \"R U2 R2 U2' R2' U2 R U' R2' U' R2 U2 R2' U R2' U2 R2' U2' R2 U2 R\",\n    \"R U2 R2' U2' R2 U R' U R2 U' R2' U' R' U R2' U R2' U R U2 R\",\n    \"R U2 R2' U' R U R U2' R U2' R2' U' R' U R2' U' R2' U R2 U2 R\",\n    \"R U2 R' U2 R U R' U2 R' U2' R2 U R' U2' R' U2' R U R U2 R\",\n    \"R U2 R' U2' R2 U2 R2 U' R2' U' R2 U2 R2' U2' R2' U2' R2 U' R' U2' R\",\n    \"R U2 R' U' R U R2 U' R' U R2' U R2 U2' R' U R2 U R2' U2 R\",\n    \"R U2 R' U' R U R' U' R' U2' R U R U' R' U' R' U2' R2 U2' R\",\n    \"R U2 R' U' R U2 R2' U2' R2' U R2 U R2' U2' R' U2 R' U2' R U' R\",\n    \"R U2 R' U' R' U' R' U2' R U R U' R2' U2 R U R U2 R U2' R\",\n    \"R U2' R U2' R U R U R2 U2' R' U R U R2' U' R' U R' U2 R\",\n    \"R U2' R2 U R U' R2' U R2 U R2 U2 R2 U2 R2 U' R2' U2 R2' U2' R\",\n    \"R U2' R' U2' R U2 R2' U2 R2 U2' R2' U R2 U' R2' U' R U' R' U2' R\",\n    \"R U2' R' U2' R U' R2' U2' R2 U2 R2' U' R2 U' R2' U' R U' R' U2' R\",\n    \"R U' R' U' R U2' R U2 R2' U' R U2 R U2' R2' U R2 U2' R' U' R\",\n    \"R2 U2 R U R2 U2 R2' U2 R2' U R2 U R2' U2' R' U2' R2 U2 R U R\",\n    \"R2 U2 R U2' R2 U2' R2 U2 R U2' R2' U2 R2 U2 R2' U2 R U2' R' U R\",\n    \"R2 U2 R2' U R2 U R U R' U' R2' U R2 U R U' R2 U' R2 U2 R\",\n    \"R2 U2 R2' U R2 U R U2' R U2 R' U2' R' U2' R U2' R U2 R' U2' R\",\n    \"R2 U2 R2' U R2 U2' R2' U R2' U R' U' R2' U' R2 U R U' R' U' R\",\n    \"R2 U2 R2' U R2 U' R U2 R U2' R' U2 R' U R U2' R U2 R' U2' R\",\n    \"R2 U2 R2' U R2' U2 R U2' R' U2 R' U2 R U2 R U2' R' U2 R' U' R\",\n    \"R2 U2 R2' U R2' U2 R U2' R' U2 R' U' R U2' R U2 R' U2' R' U R\",\n    \"R2 U2 R2' U2 R U R' U' R2' U R2 U R U' R2 U' R2 U' R2 U2' R\",\n    \"R2 U2 R2' U2 R U2' R U2 R' U2' R' U R U2 R U2' R' U2 R U2' R\",\n    \"R2 U2 R2' U2 R2 U R U2' R2' U2 R' U R U2 R2 U R2 U' R2' U2' R\",\n    \"R2 U2 R2' U2' R U2' R' U2 R' U2 R U2 R U2' R' U2 R' U R2' U2' R\",\n    \"R2 U2 R2' U2' R U2' R' U2 R' U' R U2' R U2 R' U2' R' U2' R2' U2' R\",\n    \"R2 U2 R2' U2' R U2' R' U2' R' U2 R2 U2 R2' U' R U' R2 U2 R2 U R\",\n    \"R2 U2 R2' U2' R' U2 R U2 R U2' R' U2 R' U R U2' R U2 R U2' R\",\n    \"R2 U2 R2' U2' R' U2' R' U R U2' R U2 R' U2' R' U R U2 R2' U2' R\",\n    \"R2 U2 R2' U2' R' U2' R' U' R U2 R U2' R' U2 R' U' R U2 R2' U2' R\",\n    \"R2 U2 R2' U2' R' U' R U2' R U2 R' U2' R' U2' R U2' R U2 R U2' R\",\n    \"R2 U2 R2' U' R2' U R2' U R' U' R2' U' R2 U R U' R' U R2 U2' R\",\n    \"R2 U2 R' U2 R U2' R' U2 R' U R U2' R U2 R' U2' R' U2 R2 U2' R\",\n    \"R2 U' R U2' R2 U R2' U R' U R U' R2 U R2' U R2 U2' R2' U2 R\",\n    \"R2' U R U R2' U' R2' U' R2 U2 R2 U2' R2' U2 R2' U R2' U' R' U2' R\",\n    \"R2' U R U R2' U' R2' U' R' U2 R2' U2' R2 U2 R U R2' U' R' U2' R\",\n    \"R2' U R2' U R U R U' R2 U' R2' U R' U' R2' U R U' R2 U' R\",\n    \"R2' U R2' U R U R U' R2' U' R2 U R U' R2 U R2 U' R2 U' R\",\n    \"R2' U R2' U R U R2 U2 R2' U2 R' U R U2 R2 U2' R' U2' R2 U' R\",\n    \"R2' U R2' U R U2' R2 U R2 U' R U2' R U2' R2 U' R' U2 R' U2' R\",\n    \"R2' U2 R2 U R2' U R U R' U' R2' U R2 U R U' R2 U' R2 U2 R\",\n    \"R2' U2 R2 U R2' U R U2' R U2 R' U2' R' U2' R U2' R U2 R' U2' R\",\n    \"R2' U2 R2 U R2' U2' R2' U R2' U R' U' R2' U' R2 U R U' R' U' R\",\n    \"R2' U2 R2 U R2' U' R U2 R U2' R' U2 R' U R U2' R U2 R' U2' R\",\n    \"R2' U2 R2 U R' U2 R U2' R' U2 R' U2 R U2 R U2' R' U2 R' U' R\",\n    \"R2' U2 R2 U R' U2 R U2' R' U2 R' U' R U2' R U2 R' U2' R' U R\",\n    \"R2' U2 R2 U2 R U R' U' R2' U R2 U R U' R2 U' R2 U' R2' U2' R\",\n    \"R2' U2 R2 U2 R U2' R U2 R' U2' R' U R U2 R U2' R' U2 R2 U2' R\",\n    \"R2' U2 R2 U2 R2 U' R U R2 U R2' U' R' U R U R2 U2' R2' U2 R\",\n    \"R2' U2 R2 U2 R2' U R2 U' R' U2 R U2 R' U2' R' U2 R U R' U2 R\",\n    \"R2' U2 R2 U2 R2' U R2 U' R' U' R' U2' R U2 R U2' R' U2' R' U2 R\",\n    \"R2' U2 R2 U2' R U2' R' U2 R' U2 R U2 R U2' R' U2 R' U R' U2' R\",\n    \"R2' U2 R2 U2' R U2' R' U2 R' U' R U2' R U2 R' U2' R' U2' R' U2' R\",\n    \"R2' U2 R2 U2' R' U2 R U2 R U2' R' U2 R' U R U2' R U2 R2 U2' R\",\n    \"R2' U2 R2 U2' R' U2' R' U R U2' R U2 R' U2' R' U R U2 R' U2' R\",\n    \"R2' U2 R2 U2' R' U2' R' U' R U2 R U2' R' U2 R' U' R U2 R' U2' R\",\n    \"R2' U2 R2 U2' R' U' R U2' R U2 R' U2' R' U2' R U2' R U2 R2 U2' R\",\n    \"R2' U2 R2 U' R2 U2 R U R' U2 R2' U2' R U R2 U R2' U2' R2 U2 R\",\n    \"R2' U2 R2 U' R2' U R2' U R' U' R2' U' R2 U R U' R' U R2' U2' R\",\n    \"R2' U2 R2 U' R2' U' R' U R2' U' R2' U R2 U2 R2' U' R' U' R U' R\",\n    \"R2' U2 R2' U2 R U2' R' U2 R' U R U2' R U2 R' U2' R' U2 R2' U2' R\",\n    \"R2' U2 R2' U2' R2 U2 R' U' R2' U' R2 U2 R2' U R U2 R2 U2' R2' U2 R\",\n    \"R2' U2 R2' U2' R2 U2 R' U' R2' U' R2 U2 R2' U R2' U2 R2' U2' R2 U2 R\",\n    \"R2' U2' R U R' U2' R2' U2 R2 U R2' U' R' U2' R' U R U2 R U2' R\",\n    \"R2' U' R' U R U2 R2 U2 R2' U R2 U R2 U' R U' R2 U' R2' U2' R\",\n    \"R' U R2 U R2' U' R U' R2' U2 R U' R2' U R' U R2 U2' R U' R\",\n    \"R' U2 R U2' R' U R' U2 R U R U R' U' R' U' R2 U R2' U2 R\",\n    \"R' U2 R U' R2' U' R2 U' R' U' R' U R U' R' U2 R2 U' R2' U2 R\",\n    \"R' U2 R2 U2' R2' U2' R2 U' R' U R U R' U2' R' U2 R U2' R U R\",\n    \"R' U2 R2 U2' R2' U2' R2 U' R' U R U' R' U2 R' U2' R U2 R U' R\",\n    \"R' U2 R' U' R' U' R2 U R U' R2 U2 R2 U2' R2' U2 R2' U R2' U2 R\",\n    \"R' U2 R' U' R' U' R2 U R U' R' U2 R2' U2' R2 U2 R U R2' U2 R\",\n    \"R' U2' R2 U R' U2' R2' U' R U' R2' U R2 U' R U2 R U' R2 U2 R\",\n    \"R U2 R2 U R' U2 R2 U2' R2' U' R' U2' R U2 R U' R2 U' R2' U2' R\",\n    \"R U2 R2' U' R2 U' R' U' R U R U R2 U R2' U2' R2' U2 R U2 R\",\n    \"R2 U2 R' U2' R' U' R U2' R U' R' U' R' U R2 U2' R2' U2' R U2 R\",\n    \"R2 U2' R2 U2' R' U' R2' U2 R U2 R2' U' R2' U R' U R2 U R' U2 R\",\n    \"R2 U' R U' R U R2 U2' R U2 R' U2' R' U2' R U' R' U' R2' U R\",\n    \"R2' U R2 U2' R' U2' R U' R U R' U' R' U2' R U2 R2' U' R2' U' R\",\n    \"R2' U R2' U R2 U R' U2' R2 U2 R2' U R' U2 R U2' R U' R2 U2 R\",\n    \"R' U R2' U R2' U2 R U2' R' U R U R' U2' R2 U' R2' U R' U2' R\",\n    \"R' U R' U' R2 U2' R' U R U R' U2' R U2 R2' U R2 U R' U2' R\",\n    \"R' U2 R U R2 U2 R2' U' R' U2 R2' U2 R2 U2' R2' U R2' U2 R2 U2 R\",\n    \"R' U2 R U R2 U2 R2' U' R' U' R2' U2' R2 U2 R2' U' R2' U2 R2 U2 R\",\n    \"R' U2 R U2' R2' U' R2 U' R2' U2 R U R U2' R' U2' R U2' R' U2 R\",\n    \"R' U2 R2' U R' U' R2' U2' R' U R2 U R2' U2' R2' U2 R U2' R' U2' R\",\n    \"R U2 R' U2' R' U2 R U R2 U2 R2' U' R2 U' R' U' R' U' R' U2' R\",\n    \"R U2' R2 U2 R2' U R2 U2 R2 U2' R' U R U2' R U2 R' U2' R' U R\",\n    \"R U2' R2 U2 R2' U R2 U2 R2 U2' R' U' R U2 R U2' R' U2 R' U' R\",\n    \"R U2' R2 U2 R2' U' R U2 R U2 R' U2' R' U' R' U2' R2 U R' U' R\",\n    \"R U2' R2' U2 R2 U R2' U2 R U2' R' U R U2' R U2 R' U2' R' U R\",\n    \"R U2' R2' U2 R2 U R2' U2 R U2' R' U' R U2 R U2' R' U2 R' U' R\",\n    \"R U2' R2' U2 R2 U2' R U R' U' R2' U R2 U R' U R2 U2' R' U' R\",\n    \"R U2' R2' U2 R2' U2 R U2' R' U2 R' U' R2 U2 R2' U2' R2' U2 R U2' R\",\n    \"R U2' R' U2 R2 U2' R2' U2' R' U' R2' U' R' U R2' U R2' U' R' U2' R\",\n    \"R2 U R2' U' R2' U R' U2 R2' U2 R2 U' R2' U2 R2 U' R U' R' U' R\",\n    \"R2 U2' R U2 R2 U R U2 R2 U2 R2' U2 R U2' R' U R U2 R U2' R\",\n    \"R2 U2' R2 U2 R' U2 R U2' R' U2 R' U' R2' U2 R2 U2' R' U2 R U2' R\",\n    \"R2' U' R2 U' R U R2 U R' U2' R' U2' R U' R' U2 R' U2' R U R\",\n    \"R' U2 R U R2' U' R' U2' R2' U R2 U R U2' R U2 R' U R U2' R\",\n    \"R' U2 R U R' U R2 U2' R2 U2' R2 U R U' R2 U2 R U2' R2 U' R\",\n    \"R' U2 R' U2 R U2 R U2' R' U2 R2' U2' R2 U R2' U R2' U' R2' U2 R\",\n    \"R' U2' R U R' U R2 U2' R' U R' U2 R U R' U2 R U2' R U2' R\",\n    \"R' U2' R2 U2 R2' U R2 U2 R2 U2 R U2 R U2' R' U2 R' U R U2' R\",\n    \"R' U2' R2 U2 R2' U R2 U2 R2 U' R U2' R U2 R' U2' R' U2' R U2' R\",\n    \"R' U2' R2 U2 R2' U R' U' R2' U2' R2' U R' U R2 U2' R2' U2' R U2 R\",\n    \"R' U2' R2 U2 R2' U2' R2' U R' U' R2' U R2 U R' U R2 U2' R' U' R\",\n    \"R' U2' R2 U2 R2' U' R2' U2 R' U' R' U R2 U2' R' U' R' U2' R' U2 R\",\n    \"R' U2' R2' U2 R2 U R2' U2 R U2 R U2 R U2' R' U2 R' U R U2' R\",\n    \"R' U2' R2' U2 R2 U R2' U2 R U' R U2' R U2 R' U2' R' U2' R U2' R\",\n    \"R U R2' U R2 U2 R2 U' R2' U R2' U2 R2' U2 R' U2 R U R U2 R\",\n    \"R U R2' U' R2 U' R2 U' R2' U2' R2' U2 R' U R2' U' R2' U R2 U2 R\",\n    \"R U2 R U2' R' U2 R2' U2 R U R U2' R U2 R' U2' R' U R' U2' R\",\n    \"R U2 R U2' R' U2 R2' U2 R U' R U2 R U2' R' U2 R' U' R' U2' R\",\n    \"R U2 R2' U R' U2' R' U' R2' U' R2 U R2 U R' U2' R2 U' R U' R\",\n    \"R U2 R' U2 R U2 R' U R2' U R2' U2 R2 U' R' U R U2 R' U2 R\",\n    \"R U' R' U R U R' U2 R' U2' R2 U' R' U2 R' U R U R U2' R\",\n    \"R2 U R2' U2 R2' U2' R2' U' R2 U' R2 U R2' U2' R2' U2 R U2' R' U2' R\",\n    \"R2 U2 R U2 R' U' R' U2' R U R U R' U2 R U2 R2' U2' R2 U2' R\",\n    \"R2 U2 R U' R2' U R2' U2 R' U' R2' U R U R2 U2 R2 U' R2 U2 R\",\n    \"R2 U2 R2 U2' R U R' U2' R2' U2 R U R2 U R2' U2' R2 U' R' U2' R\",\n    \"R2 U2 R' U2' R2 U2 R2' U2' R2 U' R2' U2 R U2' R' U R U2 R U2' R\",\n    \"R2 U' R' U R U R' U2' R U' R U R2' U R2 U2' R2' U R U2 R\",\n    \"R2' U R' U' R' U2 R' U2' R2 U R U' R2 U R U2' R' U2' R U2' R\",\n    \"R2' U R' U' R' U2 R' U' R' U' R2' U R' U' R2' U' R' U2' R U2' R\",\n    \"R2' U2 R U2 R U R U2' R U2 R2' U' R' U2' R2' U R U2 R2' U2 R\",\n    \"R2' U2 R U' R U R' U2' R' U' R2 U2 R2' U R U R' U' R U2 R\",\n    \"R2' U2 R2' U2 R2' U R2 U R U R2 U2' R2' U R U R U2 R2 U R\",\n    \"R2' U' R2 U2' R U2 R U' R U R U R2 U2' R' U R U R U2 R\",\n    \"R U R2 U R U' R2' U' R2 U2 R U R2 U2' R U' R2 U' R U' R\",\n    \"R U2 R2' U' R2' U R U R U' R' U' R2 U R2 U2' R' U' R' U2' R\",\n    \"R U2 R' U2' R2 U R' U R' U' R' U2 R2' U2 R2' U' R' U2 R2 U R\",\n    \"R U2' R U2' R2 U2 R2' U2' R2 U R2' U' R' U' R2' U R U2' R' U2' R\",\n    \"R U2' R2 U R U' R2' U2 R U R2' U2' R U R2 U2' R U2 R2' U' R\",\n    \"R U' R' U R2' U R' U2 R2' U' R U R U2' R U2 R2 U' R2' U2' R\",\n    \"R2 U R U' R2' U' R' U R2' U R' U2 R2' U' R U R' U' R2 U2' R\",\n    \"R2 U2' R U2 R2 U R2 U2 R2' U R U R U2' R U2 R' U2' R' U R\",\n    \"R2 U2' R U2 R2 U R2 U2 R2' U R U' R U2 R U2' R' U2 R' U' R\",\n    \"R2 U2' R U2 R2 U' R2 U2 R U2' R2' U2 R2 U2 R2' U2 R U2' R' U R\",\n    \"R2 U2' R2 U' R2 U' R2' U2 R U2' R U R U2' R2 U2' R U R' U R\",\n    \"R2 U2' R2' U' R U R' U R' U' R2 U' R' U R' U R U2' R2 U2' R\",\n    \"R2 U2' R2' U' R2 U2' R2' U2' R U R' U R' U' R2 U' R' U R' U R\",\n    \"R2 U' R2 U2' R' U2 R2 U2' R U2' R2' U2' R2 U2 R2 U2 R U R2 U2 R\",\n    \"R2 U' R' U' R' U2 R U R U2 R U2 R2' U' R' U2 R2' U2 R' U R\",\n    \"R2' U2' R U R U' R2' U2 R' U R2' U R' U' R2' U2 R2' U' R2 U2' R\",\n    \"R2' U2' R U2' R' U R' U2' R U R' U R2 U R' U2 R2 U' R2' U2 R\",\n    \"R2' U2' R2 U' R U R' U R' U' R2 U' R' U R' U R U2' R2' U2' R\",\n    \"R2' U2' R2 U' R2' U2' R2 U2' R U R' U R' U' R2 U' R' U R' U R\",\n    \"R' U R' U2 R U2 R U' R' U2 R U2 R' U2 R U R2' U2 R U R\",\n    \"R' U2 R' U2' R2 U R2' U R U2 R U2' R' U' R2 U2' R' U2' R U' R\",\n    \"R' U2' R U R U' R' U2 R U R U R' U2 R U2 R2' U2 R' U2' R\",\n    \"R' U2' R U2 R U R2 U2 R2' U2' R2 U R2' U2' R2 U2 R2 U2 R' U2' R\",\n    \"R' U2' R U2 R U R2' U2 R2 U2' R2' U R2 U2' R2' U2 R U2 R' U2' R\",\n    \"R' U2' R U2 R U2' R2 U2' R2' U2 R2 U' R2' U2' R2 U2 R2 U2 R' U2' R\",\n    \"R' U2' R U2 R U2' R2' U2' R2 U2 R2' U' R2 U2' R2' U2 R U2 R' U2' R\",\n    \"R' U2' R U2 R U2' R' U2' R2 U2 R2' U' R2 U' R' U' R' U' R' U2' R\",\n    \"R' U2' R U' R U' R' U' R' U2 R2 U R' U R' U2' R2 U2 R2' U' R\",\n    \"R' U2' R2 U R' U' R' U2 R' U R2 U R U' R2 U2 R2 U' R2' U2' R\",\n    \"R' U2' R2 U2' R' U R' U2' R U2 R U R' U' R' U R U R' U2' R\",\n    \"R' U2' R2' U2 R U R2 U2 R2' U2 R' U2 R2' U2' R2 U2 R2' U2 R' U2' R\",\n    \"R' U2' R' U2' R U2 R2 U2' R' U2' R' U' R' U R2' U2' R2' U2' R2 U2 R\",\n    \"R' U' R U R2 U R' U2 R' U' R' U R2 U2' R U2 R2' U' R2 U2' R\",\n    \"R' U' R2 U2 R2' U' R2 U' R' U2 R' U R' U2 R U R' U2 R U' R\",\n    \"R U R' U R U R U2 R' U2' R' U2 R U2 R U2' R2' U2' R U' R\",\n    \"R U R' U R U2' R' U2' R U2 R U2' R' U' R U2' R2' U2' R U' R\",\n    \"R U R' U R2 U2' R2' U2' R U2 R U2 R U R2' U2 R' U2' R2' U' R\",\n    \"R U R' U R2 U2' R' U R' U2 R U R' U2 R U2' R U2' R' U2 R\",\n    \"R U R' U R2' U R2' U' R' U2' R' U2 R U2 R U2' R2' U2' R' U' R\",\n    \"R U R' U' R' U2' R U' R U2 R' U2' R' U2 R2 U2' R2' U2' R2 U2' R\",\n    \"R U2 R U2' R' U' R U2' R2 U2 R U2' R U' R' U2' R' U2 R2 U2' R\",\n    \"R U2 R2 U R U2 R2 U2 R2' U2 R U2' R' U R U2 R U2' R2 U2 R\",\n    \"R U2 R2 U2 R U R2 U R2' U' R2' U' R2 U2 R2 U2' R' U R U2 R\",\n    \"R U2 R2 U2' R' U' R U2 R2' U2' R2' U R2 U R2 U' R2' U' R' U2' R\",\n    \"R U2 R2' U2 R U R2' U' R2' U R2 U' R' U R' U' R U R U2 R\",\n    \"R U2 R2' U2' R2 U R' U' R' U2 R U R2' U R2' U R' U' R2' U' R\",\n    \"R U2 R2' U2' R' U' R' U R U' R U R2' U' R2 U R2 U' R' U2' R\",\n    \"R U2 R2' U' R U R2 U2' R' U2 R' U2 R U2 R U2' R' U2 R2' U R\",\n    \"R U2 R2' U' R U R2 U2' R' U2 R' U2 R U2 R2' U R2' U2 R' U2' R\",\n    \"R U2 R2' U' R U2 R U2 R' U' R2 U' R2 U R U' R' U' R2' U R\",\n    \"R U2 R2' U' R U' R' U R U2' R U2 R' U2' R' U R U R' U R\",\n    \"R U2 R2' U' R U' R' U' R U2 R U2' R' U2 R' U' R U R' U R\",\n    \"R U2 R2' U' R2 U2 R' U R' U2' R U' R' U2' R U2' R U2' R2' U R\",\n    \"R U2 R2' U' R2 U2 R' U2 R' U2 R U R' U2 R U' R U2' R2' U R\",\n    \"R U2 R2' U' R2 U2' R U2 R' U2' R' U2' R U2' R U2 R2' U' R' U R\",\n    \"R U2 R' U R U R' U2 R U2' R U2 R2 U' R2' U' R2 U2 R2 U2' R\",\n    \"R U2 R' U R U2 R U R2' U2 R2 U2 R2 U2' R2' U R2 U R2' U2' R\",\n    \"R U2 R' U R U2 R2' U2 R U R U R' U' R' U2 R U R U' R\",\n    \"R U2 R' U R U2 R' U2' R' U' R' U2' R2 U R' U' R' U2 R U R\",\n    \"R U2 R' U R U2' R2 U' R2' U' R U2 R2' U' R2 U' R U R2' U' R\",\n    \"R U2 R' U R U2' R' U' R' U2 R U2 R U' R2' U2 R U2' R U' R\",\n    \"R U2 R' U' R U R2 U' R' U R2' U R2 U2' R' U' R' U2 R2' U R\",\n    \"R U2 R' U' R2' U' R2 U2' R U R U2 R2' U' R2 U' R U R2' U' R\",\n    \"R U2' R2 U2' R2' U' R2 U R U' R U R' U' R U R' U' R' U2' R\",\n    \"R U2' R2 U2' R' U2' R2 U2 R2 U2' R U2 R2' U2' R2' U R' U' R2' U' R\",\n    \"R U2' R2' U2 R2 U2 R' U2 R U2' R U2 R' U R2' U2' R2 U2 R U2 R\",\n    \"R U2' R2' U2 R2 U' R U2' R' U2 R' U2' R U2' R2' U2' R2 U2 R U2 R\",\n    \"R U2' R2' U2 R' U' R' U' R2 U R' U' R2' U R U2' R' U2 R' U R\",\n    \"R U' R2' U R2' U' R' U R2' U' R U2' R2 U2' R U2 R' U2' R2' U2 R\",\n    \"R U' R' U R2 U' R U R2 U' R2 U2' R2 U2' R U2 R' U2' R2' U2 R\",\n    \"R2 U R2' U R U R U2 R' U2' R' U2 R U2 R U2' R2' U2' R2 U' R\",\n    \"R2 U R2' U R U2' R' U2' R U2 R U2' R' U' R U2' R2' U2' R2 U' R\",\n    \"R2 U R2' U R U' R' U2 R2 U2 R' U' R' U2 R2 U2 R' U' R U' R\",\n    \"R2 U R2' U R2 U2' R2' U2' R U2 R U2 R' U2' R' U2 R U R U' R\",\n    \"R2 U R2' U R2 U2' R2' U2' R U' R' U2' R U2 R U2' R' U2' R U' R\",\n    \"R2 U2 R U2 R2 U2' R' U2 R U2' R' U2 R2' U2' R' U2 R U2' R U2' R\",\n    \"R2 U2 R2 U' R2' U2 R2' U R' U2' R U' R' U2' R U2' R2 U2' R2 U R\",\n    \"R2 U2 R2 U' R2' U2 R2' U2 R' U2 R U R' U2 R U' R2 U2' R2 U R\",\n    \"R2 U2 R2' U R U R U2' R U2 R' U2' R' U R' U' R2 U2' R U2 R\",\n    \"R2 U2 R2' U R U2 R U2' R' U2' R' U2 R2 U2 R2' U' R U' R U2 R\",\n    \"R2 U2 R2' U R U' R U2 R U2' R' U2 R' U' R' U' R2 U2' R U2 R\",\n    \"R2 U2 R2' U R2 U2 R2 U2 R U2 R U2' R' U2 R' U R U2' R U2 R\",\n    \"R2 U2 R2' U R2 U2 R2 U2' R' U R U2' R U2 R' U2' R' U R U2 R\",\n    \"R2 U2 R2' U R2 U2 R2 U2' R' U' R U2 R U2' R' U2 R' U' R U2 R\",\n    \"R2 U2 R2' U R2 U2 R2 U' R U2' R U2 R' U2' R' U2' R U2' R U2 R\",\n    \"R2 U2 R2' U R2 U2 R2' U R2' U R2' U R' U' R2' U' R2 U R U' R\",\n    \"R2 U2 R2' U R2 U2 R2' U' R U R' U' R2' U R2 U R U' R2 U' R\",\n    \"R2 U2 R2' U R2 U2 R' U2' R U2 R' U2' R' U R U2' R U2 R' U2' R\",\n    \"R2 U2 R2' U R2 U2 R' U2' R U2 R' U2' R' U' R U2 R U2' R' U2 R\",\n    \"R2 U2 R2' U R2 U2 R' U2' R' U2 R' U2 R U2 R U2' R' U2 R' U R\",\n    \"R2 U2 R2' U R2 U2 R' U2' R' U2 R' U' R U2' R U2 R' U2' R' U2' R\",\n    \"R2 U2 R2' U R2' U2 R2 U R2' U' R2' U2' R' U' R U2' R2 U2 R' U' R\",\n    \"R2 U2 R2' U R' U' R2' U2' R2' U R' U R2 U2' R2' U2' R U2 R U2 R\",\n    \"R2 U2 R2' U2 R2' U R U' R2 U' R2' U2 R U R U2' R2 U' R' U R\",\n    \"R2 U2 R2' U2' R U2' R U R U2 R2' U' R U' R2' U' R2 U R U' R\",\n    \"R2 U2 R2' U2' R U2' R' U2' R U2 R U R U2 R2' U' R U R U2' R\",\n    \"R2 U2 R2' U2' R2' U R' U' R2' U R2 U R' U R2 U2' R' U' R' U2 R\",\n    \"R2 U2 R2' U2' R' U2' R U R U' R2' U2 R U R U2 R U2' R' U2' R\",\n    \"R2 U2 R2' U' R U2 R U2 R' U2' R' U' R' U2' R2 U R' U' R' U2 R\",\n    \"R2 U2 R2' U' R2 U R2 U' R' U R2' U R2 U2' R' U' R' U2 R2' U R\",\n    \"R2 U2 R2' U' R2 U' R U R2' U2 R' U' R' U2' R2 U R2' U R' U' R\",\n    \"R2 U2 R2' U' R2' U R2 U R U' R2 U' R2 U2 R2 U2 R2' U' R U R\",\n    \"R2 U2 R2' U' R2' U2 R' U' R' U R2 U2' R' U' R' U2' R' U2 R U2 R\",\n    \"R2 U2 R2' U' R' U' R2 U2' R U R U2 R2' U' R2 U' R U R2' U' R\",\n    \"R2 U2 R' U2 R U2' R' U2 R U2' R2' U2 R U2' R' U2 R U2' R U2' R\",\n    \"R2 U2 R' U2 R U2' R' U2 R2' U2' R' U2 R U2' R' U2 R2 U2' R2' U2' R\",\n    \"R2 U2 R' U2 R U2' R' U2 R2' U' R U R2' U R2 U2' R' U R U R\",\n    \"R2 U2 R' U2 R U2' R' U2 R' U' R2' U2 R2 U2' R' U2 R U2' R' U2 R\",\n    \"R2 U2' R2 U' R U' R2 U2 R2' U2 R2 U2' R2' U R' U R U' R2 U' R\",\n    \"R2 U2' R2 U' R U' R2 U' R2' U2' R2 U2 R2' U' R' U R U' R2 U' R\",\n    \"R2 U2' R2' U2 R U' R U R' U' R' U' R2 U' R2' U' R U2 R U R\",\n    \"R2 U2' R2' U2' R2 U' R2' U R2 U2' R' U2' R U' R' U R' U' R U2' R\",\n    \"R2 U' R U R2 U2 R2' U' R' U R U' R2 U2' R2' U' R2 U R2' U' R\",\n    \"R2 U' R U R' U2 R U2' R U2 R2' U2' R2 U2 R2 U2 R' U R' U2 R\",\n    \"R2 U' R U R' U2 R U2' R' U2 R2 U2' R2' U2 R' U2 R' U R' U2 R\",\n    \"R2 U' R U2 R2' U2' R2' U R2 U R2 U' R2' U' R' U2' R2' U2' R2 U2 R\",\n    \"R2 U' R U2' R U2' R2 U2 R2' U2' R U2 R' U2' R U' R' U R' U2 R\",\n    \"R2 U' R U2' R2 U R2' U R' U R U' R2 U R2' U' R2 U2 R2' U2' R\",\n    \"R2 U' R U2' R2' U2' R2' U2 R2 U2' R' U2 R' U2' R U' R' U R' U2 R\",\n    \"R2 U' R2 U2' R' U' R2' U2' R2' U2' R2' U2 R2 U2 R2 U2' R' U R2 U R\",\n    \"R2' U R2' U' R' U2 R U R U' R' U' R U R U2 R' U' R U2' R\",\n    \"R2' U R' U2 R2 U2' R U' R' U2' R2' U' R2' U R2 U2 R2' U2' R2' U' R\",\n    \"R2' U2 R U R2 U R U' R' U R2' U' R2' U R2' U' R2 U2 R U2 R\",\n    \"R2' U2 R U2 R' U2' R U2 R2 U2' R U2 R' U2' R U2 R2' U2' R2 U2' R\",\n    \"R2' U2 R U2 R' U2' R U2 R' U2' R2 U2 R' U2' R U2 R' U2' R' U2' R\",\n    \"R2' U2 R U2' R' U2' R2' U R2 U' R2 U R2 U' R U R' U' R2' U' R\",\n    \"R2' U2 R2 U R U2 R U2' R' U2' R' U2 R2 U2 R2' U' R U' R2 U2 R\",\n    \"R2' U2 R2 U R2' U R' U R U R2 U2' R2' U' R2 U R2 U' R U R\",\n    \"R2' U2 R2 U R2' U2 R U2 R U2 R U2' R' U2 R' U R U2' R U2 R\",\n    \"R2' U2 R2 U R2' U2 R U2' R' U R U2' R U2 R' U2' R' U R U2 R\",\n    \"R2' U2 R2 U R2' U2 R U2' R' U' R U2 R U2' R' U2 R' U' R U2 R\",\n    \"R2' U2 R2 U R2' U2 R U' R U2' R U2 R' U2' R' U2' R U2' R U2 R\",\n    \"R2' U2 R2 U R2' U2 R2 U R2' U R2' U R' U' R2' U' R2 U R U' R\",\n    \"R2' U2 R2 U R2' U2 R2 U' R U R' U' R2' U R2 U R U' R2 U' R\",\n    \"R2' U2 R2 U R2' U2 R2' U2' R U2 R' U2' R' U R U2' R U2 R' U2' R\",\n    \"R2' U2 R2 U R2' U2 R2' U2' R U2 R' U2' R' U' R U2 R U2' R' U2 R\",\n    \"R2' U2 R2 U R2' U2 R2' U2' R' U2 R' U2 R U2 R U2' R' U2 R' U R\",\n    \"R2' U2 R2 U R2' U2 R2' U2' R' U2 R' U' R U2' R U2 R' U2' R' U2' R\",\n    \"R2' U2 R2 U R2' U2' R U2 R U2 R' U2' R' U2 R U R U R2' U' R\",\n    \"R2' U2 R2 U R2' U2' R U' R' U2' R U2 R U2' R' U2' R U R2' U' R\",\n    \"R2' U2 R2 U R2' U2' R2 U2 R2' U' R' U' R U R2 U' R2' U' R' U R\",\n    \"R2' U2 R2 U R2' U2' R2' U2 R2 U' R2' U' R' U2 R2 U2' R U' R' U2' R\",\n    \"R2' U2 R2 U2 R U R' U R2' U2' R2 U2 R2' U2 R2 U' R U' R2 U R\",\n    \"R2' U2 R2 U2 R U R' U' R2' U2 R2 U2' R2' U' R2 U' R U' R2 U R\",\n    \"R2' U2 R2 U2 R2 U' R U R2 U R2' U' R' U R U' R2 U2 R2' U2' R\",\n    \"R2' U2 R2 U2 R2' U' R2' U R' U R2' U R2 U2 R2' U2' R2 U R U' R\",\n    \"R2' U2 R2 U2 R2' U' R2' U R' U R2' U2' R2 U2' R2' U2 R2 U' R U' R\",\n    \"R2' U2 R2 U2' R U R' U' R2' U R2 U R' U R2 U2' R' U' R' U2 R\",\n    \"R2' U2 R2 U2' R' U2' R U R U2 R2' U' R U' R2' U' R2 U R U' R\",\n    \"R2' U2 R2 U' R U' R2 U R2 U' R2' U2' R2 U R U R' U R2' U2' R\",\n    \"R2' U2 R2 U' R2' U2 R2 U2' R2' U R' U' R U R2 U' R2' U' R' U R\",\n    \"R2' U2 R2 U' R2' U2 R2 U' R U' R' U' R2' U2 R2 U R2' U' R2' U R\",\n    \"R2' U2 R2' U R2 U2 R2' U2' R' U R U2' R' U2' R U2 R' U' R U' R\",\n    \"R2' U2 R2' U R2' U2 R' U2' R2' U R2' U R2' U' R' U R2' U' R U2' R\",\n    \"R2' U2 R2' U R2' U2 R' U2' R2' U R' U R2 U' R U R2 U' R2 U2' R\",\n    \"R2' U2 R2' U2 R U2' R' U2 R' U' R2 U2 R2' U2' R2' U2 R U2' R' U2 R\",\n    \"R2' U2 R2' U2 R2' U R2' U' R' U R2' U' R U' R2 U2 R U2' R2 U' R\",\n    \"R2' U2 R2' U2 R' U R2 U' R U R2 U' R2 U' R2 U2 R U2' R2 U' R\",\n    \"R2' U2 R2' U2' R' U2' R U2' R' U' R U2' R' U R2' U2 R2' U R2 U' R\",\n    \"R2' U2 R2' U2' R' U' R U2 R' U R U2 R' U2 R2' U2 R2' U R2 U' R\",\n    \"R2' U2 R' U2 R2' U2' R U2 R' U2' R U2 R2 U2' R U2 R' U2' R' U2' R\",\n    \"R2' U2' R U R' U2' R2 U2 R U' R2 U2' R2 U' R2' U' R' U R2 U' R\",\n    \"R2' U2' R U R' U2' R2' U2 R U R' U' R' U2' R2 U2' R U2' R' U' R\",\n    \"R2' U2' R U2 R U R' U2' R' U' R U2' R U R' U' R' U R U' R\",\n    \"R2' U2' R U2 R' U2 R2' U2 R U R U' R' U2' R2 U2 R U' R' U' R\",\n    \"R2' U2' R2 U' R U R' U' R' U2' R U2' R' U2' R2 U' R2 U2' R U' R\",\n    \"R2' U2' R2' U R2 U' R2 U R2 U' R U R' U' R2' U' R' U2' R U2 R\",\n    \"R2' U' R U2' R2 U2' R2' U R2 U' R2' U' R U R2' U R2 U' R U2 R\",\n    \"R2' U' R2' U2' R' U R U' R2' U2' R2 U2' R2' U' R' U R2 U2 R U' R\",\n    \"R2' U' R2' U2' R' U2' R U' R2 U R2 U2' R' U' R' U2' R2 U R' U2 R\",\n    \"R2' U' R' U R U2 R2 U2 R2' U2 R2 U2' R2' U' R2 U' R2 U' R U R\",\n    \"R2' U' R' U R U2 R2 U' R2' U2' R2 U2 R2' U2 R2 U' R2 U' R U R\",\n    \"R2' U' R' U R U' R U R2' U' R2 U R2 U' R' U2' R2 U2' R2' U2 R\",\n    \"R2' U' R' U2' R U2 R U R' U2 R U2' R2' U' R' U2' R2' U2 R U2' R\",\n    \"R2' U' R' U2' R2' U2' R2' U R2 U2' R2' U' R' U2' R2' U R2 U' R U R\",\n    \"R' U R U R2 U2' R' U2 R' U2 R U2 R2' U R2' U2 R' U R2' U2 R\",\n    \"R' U R2 U2 R' U2' R2' U' R' U2 R U2 R' U2' R2' U2' R' U2 R2 U' R\",\n    \"R' U R' U2 R U2 R' U' R2 U R2 U2' R2' U R2' U' R' U2 R U R\",\n    \"R' U R' U' R2' U2' R' U2 R2 U2 R U2 R' U2' R2' U2' R' U2 R2 U' R\",\n    \"R' U2 R U R U2 R U2' R' U2' R' U2 R2 U2 R2' U' R U' R2' U2 R\",\n    \"R' U2 R U R2' U2' R2 U R2' U2' R U R' U' R U R U R2' U R\",\n    \"R' U2 R U R2' U2' R2 U' R2' U R U R U' R' U' R' U2' R U' R\",\n    \"R' U2 R2 U R2' U2 R2 U2' R' U R U2' R' U2' R U2 R' U' R U' R\",\n    \"R' U2 R2 U2' R2' U2' R2 U' R2' U2 R' U2' R U2 R U2 R' U2 R' U2' R\",\n    \"R' U2 R2 U2' R2' U2' R' U' R2' U' R' U R2' U R2' U' R' U2' R' U2 R\",\n    \"R' U2 R2 U2' R' U2' R U2' R' U' R U2' R' U R' U2 R2 U R2' U' R\",\n    \"R' U2 R2 U2' R' U' R U2 R' U R U2 R' U2 R' U2 R2 U R2' U' R\",\n    \"R' U2' R U R U2' R2' U2' R U R' U' R U R U2' R' U2 R' U2' R\",\n    \"R' U2' R U R U2' R2' U2' R U R' U' R U' R' U2 R U2' R U2 R\",\n    \"R' U2' R U R U2' R2' U2' R U R' U' R2 U R2' U' R2 U' R2' U R\",\n    \"R' U2' R U R U2' R' U2' R U2 R' U' R U R2' U2' R2 U' R2' U R\",\n    \"R' U2' R U R' U2' R2 U2 R2' U R2 U2 R' U2' R U2 R' U' R U' R\",\n    \"R' U2' R U R' U2' R2' U2 R2 U R2' U2 R2' U2' R U2 R' U' R U' R\",\n    \"R' U2' R U2 R2 U2 R2' U' R' U' R2 U R2' U2' R2' U2 R2 U R2 U2' R\",\n    \"R' U2' R U' R2 U2 R2' U R2 U2 R2' U' R' U' R2 U R2' U R2 U2' R\",\n    \"R' U2' R U' R2 U2 R2' U R2 U2 R' U2' R' U2 R' U2' R U R U' R\",\n    \"R' U2' R U' R2' U2 R2 U R2' U2 R2 U' R' U' R2 U R2' U R2 U2' R\",\n    \"R' U2' R U' R2' U2 R2 U R2' U2 R2' U2' R' U2 R' U2' R U R U' R\",\n    \"R' U2' R2 U' R' U' R2' U2 R U2' R U2' R' U2' R' U2 R U R2 U2 R\",\n    \"R' U2' R' U2 R2' U' R' U' R U2 R2 U2 R' U R' U2 R2 U2' R U' R\",\n    \"R' U2' R' U' R2 U2 R2' U R U' R' U' R U R' U R2 U R2' U2' R\",\n    \"R' U2' R' U' R2 U2' R2' U2' R2' U2 R' U2' R' U' R U2 R' U R2 U2 R\",\n    \"R' U' R U2' R' U R U2 R U2' R2 U2 R2 U2 R2' U R U2 R2 U2 R\",\n    \"R' U' R' U2' R U2 R U2 R' U2 R' U2' R2 U R U R2' U2 R2 U2 R\",\n    \"R' U' R' U2' R U' R U' R' U' R' U2' R U R U2' R2' U R U R\",\n  ],\n  [\n    \"R' U2' R U' R' U2' R U2' R U2' R2' U' R2 U2' R2' U2' R\",\n    \"R' U2' R U' R' U2' R U2' R2 U2' R2 U' R2' U2' R2 U2' R\",\n    \"R' U2 R U R' U2 R U' R U2' R2' U' R2 U2' R2' U2' R\",\n    \"R' U2 R U R' U2 R U' R2 U2' R2 U' R2' U2' R2 U2' R\",\n    \"R U2 R' U2' R U2' R U2' R' U' R' U' R U R' U' R2 U' R\",\n    \"R2 U2' R2 U2' R' U2 R U2' R U R' U2' R' U2 R U2' R2' U2 R\",\n    \"R2 U2' R2' U' R U2' R U2 R U R' U2' R' U2 R U2' R U R\",\n    \"R2 U2' R2' U' R U2' R U2 R U' R' U2 R' U2' R U2 R U' R\",\n    \"R2 U2' R2' U' R2' U R' U2' R' U2 R U2' R U R' U2' R' U2 R\",\n    \"R2 U2' R2' U' R2' U2' R U R' U2 R' U2' R U2 R U2 R' U2 R\",\n    \"R2 U2' R2' U' R2' U2' R U2' R' U2' R' U2 R U2' R U' R' U2 R\",\n    \"R2 U2' R2' U' R2' U' R' U2 R' U2' R U2 R U' R' U2' R' U2 R\",\n    \"R2' U2' R U2' R' U2 R U2' R U R' U2' R' U2 R U2' R' U2 R\",\n    \"R2' U2' R2 U' R2 U2' R U2 R U R' U2' R' U2 R U2' R U R\",\n    \"R2' U2' R2 U' R2 U2' R U2 R U' R' U2 R' U2' R U2 R U' R\",\n    \"R2' U2' R2 U' R' U R' U2' R' U2 R U2' R U R' U2' R' U2 R\",\n    \"R2' U2' R2 U' R' U2' R U R' U2 R' U2' R U2 R U2 R' U2 R\",\n    \"R2' U2' R2 U' R' U2' R U2' R' U2' R' U2 R U2' R U' R' U2 R\",\n    \"R2' U2' R2 U' R' U' R' U2 R' U2' R U2 R U' R' U2' R' U2 R\",\n    \"R2' U2' R' U2 R U2' R2 U' R' U R' U2' R' U2 R U2' R U R\",\n    \"R2' U2' R' U2 R U2' R2 U' R' U' R' U2 R' U2' R U2 R U' R\",\n    \"R' U2 R2' U R U R' U' R' U' R2' U2 R U' R' U' R' U2' R\",\n    \"R' U' R U R2' U2' R2 U2 R2' U2' R2 U' R' U2' R' U2' R U2 R\",\n    \"R' U' R U2' R' U2 R' U' R2 U2' R2' U2' R U2 R U2 R' U2 R\",\n    \"R' U' R U' R2' U2 R2 U2 R' U2' R2 U R2 U2 R U2' R2 U' R\",\n    \"R' U' R U' R2' U2 R' U' R2' U2' R' U2 R2' U R U2' R U2 R\",\n    \"R U R2' U2' R2 U R2' U R U2' R2 U2 R' U R U2 R' U2 R\",\n    \"R U2 R2 U2' R' U' R2' U2' R2 U2' R2' U2' R2' U2 R2 U R U2 R\",\n    \"R U2 R2' U2 R2 U2 R' U2' R' U2' R U R U' R' U R U2 R\",\n    \"R' U2 R2 U2 R2 U2' R2' U R2 U R U R2 U' R' U2 R U2 R\",\n    \"R2' U2' R' U2 R2 U2' R2' U2' R2 U2' R' U2 R U' R' U2' R' U2 R\",\n    \"R U2 R' U' R U' R2' U2 R2 U2 R' U R U2 R' U2' R' U2 R\",\n    \"R U2' R' U' R U' R2' U2 R2' U2 R2' U' R' U2 R2' U2 R' U2' R\",\n    \"R' U' R U2' R' U2' R U' R2' U2 R U2 R' U R2 U2' R' U' R\",\n    \"R U2 R2' U R2 U2 R' U R' U2' R U' R' U2' R U2' R' U2' R\",\n    \"R U2 R2' U R2 U2 R' U2 R' U2 R U R' U2 R U' R' U2' R\",\n    \"R U2 R' U' R' U2 R2 U2 R' U' R U2 R2' U' R2 U' R2' U R\",\n    \"R U2' R' U R' U2' R U R U2' R2' U2' R2' U2 R' U' R U' R\",\n    \"R U2' R' U2' R2 U R' U R U2' R2 U2 R2 U2 R' U' R' U2 R\",\n    \"R2 U R' U2 R2 U2 R2' U2' R2 U2' R U2' R2 U2 R' U2' R' U' R\",\n    \"R2 U R' U' R2 U2' R2' U2 R2 U R U2' R2 U2 R' U2' R' U' R\",\n    \"R2 U2 R2 U R2' U2 R2' U R' U2' R U' R' U2' R U2' R' U2' R\",\n    \"R2 U2 R2 U R2' U2 R2' U2 R' U2 R U R' U2 R U' R' U2' R\",\n    \"R2 U2' R2 U2' R U' R2' U R' U' R2' U R2' U2 R2' U2 R' U2' R\",\n    \"R2 U2' R2 U2' R2 U' R2 U R U' R2 U R' U2 R2' U2 R' U2' R\",\n    \"R2 U2' R' U2 R U2' R2 U2' R U' R2' U R' U' R2' U R2' U2 R\",\n    \"R2 U2' R' U2 R U2' R2 U2' R2 U' R2 U R U' R2 U R' U2 R\",\n    \"R2 U' R U2 R U2' R2' U2 R' U2 R2' U2 R2 U2' R2' U2' R U2 R\",\n    \"R2 U' R U2 R U2' R2' U2 R' U' R2' U2' R2 U2 R2' U R U2 R\",\n    \"R2' U2' R U R U' R2' U2 R2 U2 R2 U' R2 U' R U R2 U R\",\n    \"R' U R' U2 R2' U R2' U2 R U2 R' U2 R' U2' R2 U R U' R\",\n    \"R' U2' R U' R' U2' R' U2 R U2 R U2' R2' U2' R2 U R' U' R\",\n    \"R' U' R U' R2' U2 R2 U2 R' U R U2 R' U2' R' U2 R U2' R\",\n    \"R' U' R U' R' U R U2' R2' U2' R U R U2' R2' U2' R U2 R\",\n    \"R2 U' R2' U' R2 U2 R2' U' R2 U2' R2' U' R2 U2 R2' U' R2 U2 R\",\n    \"R2' U' R2 U' R2' U2 R2 U' R2' U2' R2 U' R2' U2 R2 U' R2' U2 R\",\n    \"R' U2' R2 U2' R' U' R' U2' R U R U2 R2' U2 R U2 R U R\",\n    \"R' U2' R2' U2 R U R' U R' U' R' U R U R U2 R U2 R\",\n    \"R' U' R U' R2' U2 R2' U2 R2' U' R' U2 R2' U2 R' U2' R' U2' R\",\n    \"R U R U R' U R2' U' R2' U R2' U' R2 U' R2 U R2 U2' R\",\n    \"R U2' R' U R U2 R2' U2 R2 U2 R U R2' U R2 U2' R2 U2 R\",\n    \"R U2' R' U R' U2 R U2' R U R' U2 R U R2' U2 R2 U2 R\",\n    \"R U2' R' U2' R U' R2' U2 R U2 R' U R2 U2' R' U' R U2' R\",\n    \"R2 U R2' U2' R' U2 R' U R' U' R U2' R U2 R2 U' R' U R\",\n    \"R2 U' R2 U' R U R2 U2 R' U2 R' U' R' U R2 U2' R U' R\",\n    \"R2' U R2 U2' R' U2' R U' R' U R' U' R U2' R U2 R2' U' R\",\n    \"R2' U' R U R U' R' U' R' U2' R U' R U2 R' U2' R' U' R\",\n    \"R2' U' R U2' R U2 R2' U' R U2 R U2' R' U' R' U R U2 R\",\n    \"R' U R U2 R' U' R U2' R' U2' R U2 R U R2' U2 R2 U2 R\",\n    \"R' U R' U2' R U R U' R' U' R' U2' R U' R U2 R' U2 R\",\n    \"R' U2 R' U' R2' U R U R' U' R' U' R2' U R' U R U2 R\",\n    \"R U2 R' U' R U' R2' U2 R2 U2 R' U2' R' U2' R U2 R U2' R\",\n    \"R U2 R' U' R U' R' U R U2' R2' U2' R U R U2' R2' U2' R\",\n    \"R2 U R2' U2 R U R U2' R2 U2 R2 U2 R2' U R2 U R U2 R\",\n    \"R2 U R2' U2' R2 U2' R' U2 R' U' R' U2' R2 U R2' U R2' U2 R\",\n    \"R2 U2 R' U' R U' R2' U2 R2 U2 R' U2' R' U2' R U2 R U2' R\",\n    \"R2' U2 R' U' R U' R2' U2 R2 U2 R' U2' R' U2' R U2 R U2' R\",\n    \"R' U2 R' U' R U' R2' U2 R2 U2 R' U2' R' U2' R U2 R U2' R\",\n    \"R U2 R U2 R' U R2' U2 R2 U2 R2' U R U R2 U2' R' U2' R\",\n    \"R2 U R2' U R U' R2' U' R2 U R2' U2' R2 U2' R U' R2 U2' R\",\n    \"R2' U2 R U R U2' R2 U2 R2 U2 R2' U R2 U R U2 R2' U2 R\",\n    \"R2' U2' R2 U2' R' U2 R' U' R' U2' R2 U R2' U R2' U2 R2' U2 R\",\n    \"R' U2' R2 U R2' U2' R2' U2' R U' R2 U' R2 U2 R' U2 R2 U R\",\n    \"R U2 R2' U' R U2 R2 U R' U R2 U' R2' U R' U2' R' U R2' U2' R\",\n    \"R U2' R U R U R2' U' R' U R U2' R2 U2 R2' U2' R' U' R2 U2' R\",\n    \"R U2' R U R U R2' U' R' U R2' U2' R2' U2 R2 U2' R2 U' R2 U2' R\",\n    \"R U2' R2' U2 R2 U2 R2' U R U' R' U R U2' R U2 R' U2' R' U R\",\n    \"R U2' R2' U2 R2 U2 R2' U R U' R' U' R U2 R U2' R' U2 R' U' R\",\n    \"R U2' R' U R2 U R2' U R U R U' R' U R U2' R2' U R2 U2' R\",\n    \"R U2' R' U2 R U' R U2' R' U' R' U' R U R U R2' U' R2 U2' R\",\n    \"R U' R2' U' R2 U R' U R2 U2' R' U R2 U' R U' R2' U2 R' U R\",\n    \"R2 U R U' R' U2' R2' U2' R2 U' R2' U' R2' U R' U R2' U R2 U2 R\",\n    \"R2 U2 R' U' R U2 R2 U2' R2' U' R2 U R U2 R U' R' U2' R' U2 R\",\n    \"R2 U2' R2 U2 R2' U2' R U R2 U R2' U2' R2 U' R2 U2' R2 U2 R2' U2' R\",\n    \"R2 U2' R2 U2 R2' U2' R U R2 U R2' U2' R2 U' R' U2' R2' U2 R2 U2' R\",\n    \"R2 U2' R2 U2' R' U2 R U2' R U' R' U2 R' U2' R U2 R U2' R2 U2 R\",\n    \"R2 U2' R2' U R2 U R U' R2 U R2 U' R2' U2' R2 U R U R' U R\",\n    \"R2 U2' R2' U R2 U' R2 U' R U R2 U R2' U' R' U R U' R2 U2 R\",\n    \"R2 U2' R2' U R2' U2' R' U' R U2' R2 U2 R' U' R2' U' R2 U2 R2' U2' R\",\n    \"R2 U2' R2' U2 R U R' U2 R' U2' R U2 R U2 R' U2 R' U2' R2' U2 R\",\n    \"R2 U2' R2' U2 R U2 R U R' U2' R' U2 R U2' R U R' U2' R U2 R\",\n    \"R2 U2' R2' U2 R U2 R U' R' U2 R' U2' R U2 R U' R' U2' R U2 R\",\n    \"R2 U2' R2' U2 R U2' R' U2' R' U2 R U2' R U' R' U2 R' U2' R2' U2 R\",\n    \"R2 U2' R2' U2 R' U2 R U2' R U R' U2 R' U2' R U2 R U2 R U2 R\",\n    \"R2 U2' R2' U2 R' U2 R U2' R U2' R' U2' R' U2 R U2' R U' R U2 R\",\n    \"R2 U2' R2' U2' R2 U' R2' U R U R U2 R' U2' R' U2 R U2 R U2' R\",\n    \"R2 U2' R2' U2' R2 U' R2' U R U2' R' U2' R U2 R U2' R' U' R U2' R\",\n    \"R2 U2' R2' U2' R2' U R' U' R2' U' R2 U R U' R' U' R2' U2 R2 U2' R\",\n    \"R2 U2' R2' U2' R' U2 R' U2' R U2 R U' R' U2' R' U2 R U2' R2' U2 R\",\n    \"R2 U2' R2' U2' R' U' R U R2 U' R2' U' R' U R2' U R2' U R2 U2 R\",\n    \"R2 U2' R2' U' R U2' R' U2 R U2' R U R' U2 R' U2' R U2 R U' R\",\n    \"R2 U2' R2' U' R U2' R' U2 R U2' R U2' R' U2' R' U2 R U2' R U R\",\n    \"R2 U2' R2' U' R2 U R' U2' R' U2 R U2' R U' R' U2 R' U2' R U2 R\",\n    \"R2 U2' R2' U' R2 U2 R2 U' R2 U' R U R2 U R2' U' R' U R U R\",\n    \"R2 U2' R2' U' R2 U' R' U2 R' U2' R U2 R U2 R' U2 R' U2' R U2 R\",\n    \"R2 U2' R2' U' R2 U' R' U' R U R2 U' R2' U' R' U R2' U R2' U2' R\",\n    \"R2 U' R2 U' R' U2 R2' U' R2' U R' U2 R' U2 R2' U R U2' R U2 R\",\n    \"R2 U' R2 U' R' U' R2' U2' R2 U2' R U' R' U2' R2' U2 R U2 R2' U R\",\n    \"R2 U' R2 U' R' U' R' U R2 U R2' U' R' U R2' U' R2' U R2' U R\",\n    \"R2 U' R2 U' R' U' R' U R2' U R2 U' R U R2 U' R' U R2' U R\",\n    \"R2 U' R' U' R2 U R2 U R U2' R2 U2 R2' U2' R' U' R2 U R U2 R\",\n    \"R2 U' R' U' R2 U R2 U R2' U2' R2' U2 R2 U2' R2 U' R2 U R U2 R\",\n    \"R2' U R' U2 R2' U' R2 U' R U' R' U R2' U' R2 U' R2' U2 R2 U2' R\",\n    \"R2' U2' R U2' R' U2 R U2' R U' R' U2 R' U2' R U2 R U2' R2' U2 R\",\n    \"R2' U2' R2 U R2 U' R2 U' R U R2 U R2' U' R' U R U' R2' U2 R\",\n    \"R2' U2' R2 U2 R U R' U2 R' U2' R U2 R U2 R' U2 R' U2' R' U2 R\",\n    \"R2' U2' R2 U2 R U2 R U R' U2' R' U2 R U2' R U R' U2' R2 U2 R\",\n    \"R2' U2' R2 U2 R U2 R U' R' U2 R' U2' R U2 R U' R' U2' R2 U2 R\",\n    \"R2' U2' R2 U2 R U2' R' U2' R' U2 R U2' R U' R' U2 R' U2' R' U2 R\",\n    \"R2' U2' R2 U2 R' U2 R U2 R U2' R2' U2' R2 U R' U R2' U2' R2' U' R\",\n    \"R2' U2' R2 U2 R' U2 R U2' R U R' U2 R' U2' R U2 R U2 R2 U2 R\",\n    \"R2' U2' R2 U2 R' U2 R U2' R U2' R' U2' R' U2 R U2' R U' R2 U2 R\",\n    \"R2' U2' R2 U2' R2' U' R' U2 R2 U2' R U' R' U2' R2' U' R2' U R2 U2 R\",\n    \"R2' U2' R2 U2' R' U2 R' U2' R U2 R U' R' U2' R' U2 R U2' R' U2 R\",\n    \"R2' U2' R2 U2' R' U' R U R2 U' R2' U' R' U R2' U R2' U R2' U2 R\",\n    \"R2' U2' R2 U' R2 U2' R' U2 R U2' R U R' U2 R' U2' R U2 R U' R\",\n    \"R2' U2' R2 U' R2 U2' R' U2 R U2' R U2' R' U2' R' U2 R U2' R U R\",\n    \"R2' U2' R2 U' R2' U R' U2' R' U2 R U2' R U' R' U2 R' U2' R U2 R\",\n    \"R2' U2' R2 U' R2' U2 R2 U' R2 U' R U R2 U R2' U' R' U R U R\",\n    \"R2' U2' R2 U' R2' U' R' U2 R' U2' R U2 R U2 R' U2 R' U2' R U2 R\",\n    \"R2' U2' R2 U' R2' U' R' U' R U R2 U' R2' U' R' U R2' U R2' U2' R\",\n    \"R2' U2' R' U2 R2' U2 R2' U2' R' U2 R2 U2' R2' U2' R2 U2' R' U2 R U' R\",\n    \"R2' U2' R' U' R2' U2' R2 U2' R2 U' R2' U' R2 U2 R U2 R2' U2' R' U' R\",\n    \"R' U R U R' U2 R' U2' R2 U R' U2' R' U2 R2 U' R2' U2 R U R\",\n    \"R' U2 R U2 R' U R2 U2 R2' U2' R2 U R2' U R2 U R' U R U2 R\",\n    \"R' U2 R U2 R' U2' R2 U2' R2' U2 R2 U' R2' U R2 U R' U R U2 R\",\n    \"R' U2 R2' U' R' U R2 U' R2' U' R2' U2' R2' U2' R2' U R2 U2' R2 U2 R\",\n    \"R' U2 R' U2 R' U' R' U' R2' U2 R U' R' U' R2 U R U' R U2' R\",\n    \"R' U2' R U R U R U2 R' U' R' U R2 U2' R' U' R' U2' R' U2 R\",\n    \"R' U2' R U R' U2' R2 U2 R2 U' R2' U' R2 U2 R U2' R U2 R' U R\",\n    \"R' U2' R U R' U' R U R U2 R' U' R' U R U R U2 R2' U2 R\",\n    \"R' U2' R U R' U' R2' U R U' R2 U' R2' U2 R U' R2' U' R2 U2' R\",\n    \"R' U2' R U2 R2' U2' R2' U R2 U R2' U2' R2 U2 R2 U2 R2' U R U2 R\",\n    \"R' U2' R U2' R' U' R U2' R U2 R2' U' R U2 R U2 R' U' R' U2' R\",\n    \"R' U2' R2 U R' U' R' U2 R' U2 R2 U R U' R2 U R2 U' R2' U2' R\",\n    \"R' U2' R2 U2 R2' U' R U' R2' U R2 U R U' R2 U' R2 U' R' U2' R\",\n    \"R' U2' R2' U2 R2 U2' R' U R2 U R2' U2' R2 U' R2 U2' R2 U2 R2' U2' R\",\n    \"R' U2' R2' U2 R2 U2' R' U R2 U R2' U2' R2 U' R' U2' R2' U2 R2 U2' R\",\n    \"R' U2' R2' U' R U R U R U R U2' R2 U2 R2 U2 R' U R2 U2 R\",\n    \"R' U2' R' U R U R2' U' R2' U2' R2 U2 R2 U2' R' U R U R2' U R\",\n    \"R' U2' R' U R' U' R2' U' R2 U2 R2 U2' R' U R U R' U' R U2 R\",\n    \"R' U2' R' U R' U' R2' U' R2' U R' U' R U R U' R2' U2 R2 U R\",\n    \"R' U2' R' U2 R2 U2 R' U2' R' U2 R2 U R2' U R2 U2' R2' U2 R U R\",\n    \"R' U2' R' U' R2' U2' R2' U2' R2' U2 R' U' R' U' R' U' R2 U R U2 R\",\n    \"R' U' R U R2 U' R' U' R U R U R2 U2' R U' R2' U2 R U R\",\n    \"R' U' R U2' R2' U2' R' U2 R2' U R2 U2 R2' U2 R' U2' R' U2' R U2 R\",\n    \"R' U' R U' R2 U2 R2' U R2 U2 R U2' R2 U R' U2' R' U2' R U2 R\",\n    \"R' U' R U' R2 U2' R' U' R2' U2' R2 U2' R2' U2' R2' U2 R2' U R' U R\",\n    \"R' U' R U' R2' U R2 U2' R U2 R2 U R2' U2 R2' U2' R' U2' R U2 R\",\n    \"R' U' R U' R2' U2 R U2 R' U2' R U2 R U2' R' U2 R' U R U2 R\",\n    \"R' U' R U' R2' U2 R2 U2 R U R2' U2 R' U2' R2' U' R2 U R U2 R\",\n    \"R' U' R U' R2' U2 R2 U2 R' U R2 U' R2' U2' R' U2 R2' U R2' U2 R\",\n    \"R' U' R U' R2' U' R2 U2' R2' U2 R2 U2' R2' U2 R U2' R' U2' R U2 R\",\n    \"R' U' R2 U2' R2' U2' R U2 R U2' R2' U2 R2 U2 R2' U2' R U2 R' U R\",\n    \"R' U' R' U2 R' U2' R2' U' R2 U2' R U' R2 U2 R' U2' R' U2' R U2 R\",\n    \"R U R2' U2' R2 U R2' U R U2' R U' R U2' R' U' R U2' R' U R\",\n    \"R U R' U' R2' U' R U2' R U R U' R2' U2 R' U2' R2 U R2' U2 R\",\n    \"R U2 R U2 R' U2' R2' U2 R U2 R U R U' R2 U2 R2 U2 R2' U2' R\",\n    \"R U2 R2 U2' R' U' R2' U2' R2 U2' R U2' R2 U2 R2' U2' R2 U2' R U2 R\",\n    \"R U2 R2' U2 R U' R U2 R' U2' R' U' R U R U' R' U' R U2 R\",\n    \"R U2 R2' U' R U R U2' R U' R2' U' R' U R2' U2' R2' U R2 U2 R\",\n    \"R U2 R' U R' U R U R U2' R2' U' R U' R U2 R2' U2' R2 U R\",\n    \"R U2 R' U2' R' U2 R U2 R2' U2' R2 U R2' U R U R U R U2 R\",\n    \"R U2 R' U2' R' U2 R2 U2 R2' U2' R2 U R2' U2 R2 U2' R' U2' R U2 R\",\n    \"R U2 R' U2' R' U2 R2' U2 R2 U2' R2' U R2 U2 R2' U2' R2' U2' R U2 R\",\n    \"R U2 R' U2' R' U' R2 U2' R2' U2 R2 U' R2' U2 R2 U2' R' U2' R U2 R\",\n    \"R U2 R' U2' R' U' R2' U2' R2 U2 R2' U' R2 U2 R2' U2' R2' U2' R U2 R\",\n    \"R U2 R' U' R' U R U2' R' U' R' U' R U2' R' U2' R2 U2' R U2 R\",\n    \"R U2' R U2 R2' U' R2 U' R' U2' R' U2 R U R2' U2 R U2 R' U R\",\n    \"R U' R U2' R' U2' R' U R U2' R' U2' R U2' R' U' R2 U2' R' U' R\",\n    \"R2 U2 R2' U R2 U2 R2' U2 R' U' R U' R U R2' U R U' R U' R\",\n    \"R2 U2 R2' U R' U' R U' R U R2' U R U' R U' R' U2 R2 U2 R\",\n    \"R2 U2 R' U2 R U' R U2 R' U' R U' R2' U' R U2' R2' U R2 U2' R\",\n    \"R2 U2 R' U' R' U R2 U2' R U' R2 U' R U R2 U2' R2 U R2' U2 R\",\n    \"R2' U R U R U2' R' U' R' U2' R' U2' R2 U R U2' R2 U2' R U' R\",\n    \"R2' U R2' U2 R U2' R2' U2 R' U2 R2 U2 R2' U2' R2' U2' R' U' R2' U2' R\",\n    \"R2' U2 R2 U R2' U2 R2 U2 R' U' R U' R U R2' U R U' R U' R\",\n    \"R2' U2 R2 U R' U' R U' R U R2' U R U' R U' R' U2 R2' U2 R\",\n    \"R2' U2 R2' U R2' U R2 U2' R' U2 R' U' R' U2 R2' U2 R' U' R U' R\",\n    \"R2' U2 R' U2' R2' U R2' U2' R' U2 R2 U2' R2' U2' R2 U2' R' U2 R U' R\",\n    \"R2' U2 R' U2' R2' U' R2' U2' R2 U' R' U R' U2' R' U2 R U2' R U R\",\n    \"R2' U2 R' U2' R2' U' R2' U2' R2 U' R' U' R' U2 R' U2' R U2 R U' R\",\n  ],\n  [\n    \"R2' U R2' U R' U' R2' U' R2 U R U' R\",\n    \"R U R' U' R2' U R2 U R U' R2 U' R\",\n    \"R U2 R U2' R' U2 R' U' R U2' R U2 R' U2' R\",\n    \"R U2' R U2 R' U2' R' U R U2' R U2 R' U2' R\",\n    \"R U2 R U2 R' U2' R' U' R U2' R U2 R' U' R\",\n    \"R2 U2 R U2 R2' U2' R' U' R U2' R2 U2 R' U' R\",\n    \"R U2 R U2' R' U2 R' U R U2' R U2 R' U2' R\",\n    \"R U2 R U2' R' U2 R' U' R U2 R U2' R' U2 R\",\n    \"R U2 R U2' R' U2 R' U2 R U2 R U2' R' U2 R\",\n    \"R U2 R' U2' R' U R U2' R U2 R' U2' R' U R\",\n    \"R U2 R' U2' R' U' R U2 R U2' R' U2 R' U' R\",\n    \"R' U R U2' R U2 R' U2' R' U R U2 R U2' R\",\n    \"R' U2 R' U2 R U2 R U2' R' U2 R' U R U2' R\",\n    \"R' U2 R' U' R U2' R U2 R' U2' R' U2' R U2' R\",\n    \"R' U' R U2 R U2' R' U2 R' U' R U2 R U2' R\",\n    \"R U R U2' R' U2 R' U R U2 R U2' R' U2' R\",\n    \"R U2' R U2 R' U2' R' U R U2 R U2' R' U2 R\",\n    \"R U2' R U2 R' U2' R' U2' R U2' R U2 R' U2' R\",\n    \"R2 U R U2' R2' U2 R' U R U2 R2 U2' R' U2' R\",\n    \"R U2' R U2 R' U2' R' U' R U2 R U2' R' U2 R\",\n    \"R U2' R' U2 R' U2 R U2 R U2' R' U2 R' U R\",\n    \"R U2' R' U2 R' U' R U2' R U2 R' U2' R' U2' R\",\n    \"R' U2 R U2 R U2' R' U2 R' U R U2' R U2 R\",\n    \"R' U2' R' U R U2' R U2 R' U2' R' U R U2 R\",\n    \"R' U2' R' U' R U2 R U2' R' U2 R' U' R U2 R\",\n    \"R' U' R U2' R U2 R' U2' R' U2' R U2' R U2 R\",\n    \"R2' U R' U R2' U' R2' U' R2 U2' R2' U2' R' U' R U2' R\",\n    \"R U2 R U2 R' U2' R' U2 R U R U R2' U' R2 U' R\",\n    \"R U' R' U2' R U2 R U2' R' U2' R U R2' U' R2 U' R\",\n    \"R2 U R2' U' R2' U R' U' R2' U R2 U R U' R' U' R\",\n    \"R2 U R' U R' U R U2' R U' R' U2' R' U2' R U' R\",\n    \"R2 U R' U' R2 U R U' R2 U R2' U R U' R' U' R\",\n    \"R2 U2 R U R' U2 R2' U2' R U R2 U R2' U2' R2 U' R\",\n    \"R2 U2 R2' U' R' U' R U R2 U' R2' U' R' U R2' U' R\",\n    \"R2 U' R' U2' R' U' R U2' R' U2 R' U2' R2' U R2 U R\",\n    \"R2' U R2' U R2 U' R2 U' R2' U R2 U R2' U' R2' U' R\",\n    \"R2' U R2' U R' U R U2' R2 U' R2' U2' R' U2' R U' R\",\n    \"R2' U R2' U R' U' R2 U' R2' U R' U' R2' U R' U' R\",\n    \"R2' U R2' U2' R2' U2 R' U R U2 R2 U2' R' U' R2' U' R\",\n    \"R2' U R' U R2' U R2 U2' R U' R' U2' R2' U2' R2 U' R\",\n    \"R2' U2 R U' R2 U R U' R2 U R U2' R2 U R U' R\",\n    \"R2' U2 R2 U' R2' U' R' U2 R2 U2' R U' R' U2' R2' U2 R\",\n    \"R2' U' R' U R2' U' R2' U R2 U2 R2' U' R' U' R U R\",\n    \"R2' U2 R' U R U2 R2 U2 R2' U R2 U R2 U' R U' R\",\n    \"R U R U R' U' R2' U R2 U R U' R2 U' R2 U' R\",\n    \"R U R U2' R U2 R' U2' R' U R U2 R U2' R' U2 R\",\n    \"R U2 R' U2 R U2 R U2' R' U2 R' U R U2' R U2 R\",\n    \"R U2 R' U' R U2' R U2 R' U2' R' U2' R U2' R U2 R\",\n    \"R U2' R2 U' R' U2' R' U' R U2' R' U2 R' U2' R2' U R\",\n    \"R U2' R2' U R2' U R' U' R2' U' R2 U R U' R' U R\",\n    \"R U' R U2 R U2' R' U2 R' U' R U2 R U2' R' U2 R\",\n    \"R2 U R U R' U' R2' U R2 U R U' R2 U' R2 U' R\",\n    \"R2 U R U2' R U2 R' U2' R' U R U2 R U2' R' U2 R\",\n    \"R2 U R2 U' R U R2 U R2' U' R' U R U R2 U2' R\",\n    \"R2 U R2' U R2 U' R' U2 R U2 R' U2' R' U2 R U R\",\n    \"R2 U R2' U R2 U' R' U' R' U2' R U2 R U2' R' U2' R\",\n    \"R2 U2 R U2' R' U2 R' U2 R U2 R U2' R' U2 R' U R\",\n    \"R2 U2 R U2' R' U2 R' U' R U2' R U2 R' U2' R' U2' R\",\n    \"R2 U2 R' U2 R U2 R U2' R' U2 R' U R U2' R U2 R\",\n    \"R2 U2 R' U2' R' U R U2' R U2 R' U2' R' U R U2 R\",\n    \"R2 U2 R' U2' R' U' R U2 R U2' R' U2 R' U' R U2 R\",\n    \"R2 U2 R' U' R U2' R U2 R' U2' R' U2' R U2' R U2 R\",\n    \"R2 U2' R2 U2 R U R' U2 R2' U2' R U R2 U R2' U2' R\",\n    \"R2 U2' R2' U R2' U R' U' R2' U' R2 U R U' R' U R\",\n    \"R2 U2' R2' U' R' U R2' U' R2' U R2 U2 R2' U' R' U' R\",\n    \"R2 U' R U2 R U2' R' U2 R' U' R U2 R U2' R' U2 R\",\n    \"R2' U R U R' U' R2' U R2 U R U' R2 U' R2 U' R\",\n    \"R2' U R U2' R U2 R' U2' R' U R U2 R U2' R' U2 R\",\n    \"R2' U2 R U2' R' U2 R' U2 R U2 R U2' R' U2 R' U R\",\n    \"R2' U2 R U2' R' U2 R' U' R U2' R U2 R' U2' R' U2' R\",\n    \"R2' U2 R' U2 R U2 R U2' R' U2 R' U R U2' R U2 R\",\n    \"R2' U2 R' U2' R' U R U2' R U2 R' U2' R' U R U2 R\",\n    \"R2' U2 R' U2' R' U' R U2 R U2' R' U2 R' U' R U2 R\",\n    \"R2' U2 R' U' R U2' R U2 R' U2' R' U2' R U2' R U2 R\",\n    \"R2' U2' R2' U R2' U R' U' R2' U' R2 U R U' R' U R\",\n    \"R2' U' R U2 R U2' R' U2 R' U' R U2 R U2' R' U2 R\",\n    \"R' U R U R' U' R2' U R2 U R U' R2 U' R2 U' R\",\n    \"R' U2 R U2' R' U2 R' U2 R U2 R U2' R' U2 R' U R\",\n    \"R' U2 R U2' R' U2 R' U' R U2' R U2 R' U2' R' U2' R\",\n    \"R' U2 R' U2' R' U R U2' R U2 R' U2' R' U R U2 R\",\n    \"R' U2 R' U2' R' U' R U2 R U2' R' U2 R' U' R U2 R\",\n    \"R' U2' R2' U R2' U R' U' R2' U' R2 U R U' R' U R\",\n    \"R U R2 U R2 U' R2' U' R2 U R2' U R2' U' R2 U' R\",\n    \"R U R' U2 R U2 R U R' U2 R' U' R U' R U' R\",\n    \"R U R' U2 R U2 R2 U R2' U2 R' U' R U' R2 U' R\",\n    \"R U R' U' R2' U2 R' U' R2' U R' U' R2' U R' U2' R\",\n    \"R U2 R U2' R2' U2 R2 U R2' U R2 U' R2' U R U2' R\",\n    \"R U2 R U2' R2' U2' R2 U R2' U' R2 U' R2' U2 R U2' R\",\n    \"R U2 R' U2' R2 U R2' U R2 U' R2' U2 R2 U2 R' U2' R\",\n    \"R U2 R' U' R2 U R2' U' R2 U' R2' U2' R2 U2 R' U2' R\",\n    \"R2 U R U R' U' R2 U' R2' U R' U' R2' U R U' R\",\n    \"R2 U R U R' U' R2' U' R2 U R U' R2 U R2 U' R\",\n    \"R2 U R2' U2 R2 U2 R U R' U2 R2' U' R2 U' R U' R\",\n    \"R2 U' R U R2 U R2' U' R' U R U R2 U2' R2' U' R\",\n    \"R2' U R U' R2 U R U' R2 U R2' U R U' R2 U' R\",\n    \"R2' U R2 U R U2 R2' U2' R' U' R U2' R2 U2 R2 U' R\",\n    \"R2' U R2 U' R' U2 R U2 R' U2' R' U2 R U R' U' R\",\n    \"R2' U R2 U' R' U' R' U2' R U2 R U2' R' U2' R' U' R\",\n    \"R2' U' R2 U2 R U2' R U2 R' U R U2 R U R2' U2 R\",\n    \"R' U R U R2 U2' R2' U' R2 U R2 U' R U R2 U2 R\",\n    \"R U R2' U R2' U R' U' R2' U' R2 U R U' R' U' R\",\n    \"R U2 R U2 R U2' R' U2 R' U R U2' R U2 R' U2' R\",\n    \"R U2' R' U R U2' R U2 R' U2' R' U R U2 R U2' R\",\n    \"R U2' R' U' R U2 R U2' R' U2 R' U' R U2 R U2' R\",\n    \"R U' R U R' U' R2' U R2 U R U' R2 U' R2 U2 R\",\n    \"R U' R U2' R U2 R' U2' R' U2' R U2' R U2 R' U2' R\",\n    \"R2 U R2' U R2' U R' U' R2' U' R2 U R U' R' U' R\",\n    \"R2 U2 R U2 R U2' R' U2 R' U R U2' R U2 R' U2' R\",\n    \"R2 U2' R U2 R' U2' R' U R U2' R U2 R' U2' R' U R\",\n    \"R2 U2' R U2 R' U2' R' U' R U2 R U2' R' U2 R' U' R\",\n    \"R2 U2' R' U R U2' R U2 R' U2' R' U R U2 R U2' R\",\n    \"R2 U2' R' U2 R' U2 R U2 R U2' R' U2 R' U R U2' R\",\n    \"R2 U2' R' U2 R' U' R U2' R U2 R' U2' R' U2' R U2' R\",\n    \"R2 U2' R' U' R U2 R U2' R' U2 R' U' R U2 R U2' R\",\n    \"R2 U' R U R' U' R2' U R2 U R U' R2 U' R2 U2 R\",\n    \"R2 U' R U2' R U2 R' U2' R' U2' R U2' R U2 R' U2' R\",\n    \"R2' U R U2 R U2 R' U2' R' U2 R U R U R2' U' R\",\n    \"R2' U R U' R' U2' R U2 R U2' R' U2' R U R2' U' R\",\n    \"R2' U R2 U2 R2' U' R' U' R U R2 U' R2' U' R' U R\",\n    \"R2' U R2' U R2' U R' U' R2' U' R2 U R U' R' U' R\",\n    \"R2' U R2' U2 R2 U' R2' U' R' U2 R2 U2' R U' R' U2' R\",\n    \"R2' U2 R U2 R U2' R' U2 R' U R U2' R U2 R' U2' R\",\n    \"R2' U2' R U2 R' U2' R' U R U2' R U2 R' U2' R' U R\",\n    \"R2' U2' R U2 R' U2' R' U' R U2 R U2' R' U2 R' U' R\",\n    \"R2' U2' R' U R U2' R U2 R' U2' R' U R U2 R U2' R\",\n    \"R2' U2' R' U2 R' U2 R U2 R U2' R' U2 R' U R U2' R\",\n    \"R2' U2' R' U2 R' U' R U2' R U2 R' U2' R' U2' R U2' R\",\n    \"R2' U2' R' U' R U2 R U2' R' U2 R' U' R U2 R U2' R\",\n    \"R2' U' R U R' U' R2' U R2 U R U' R2 U' R2 U2 R\",\n    \"R2' U' R U2' R U2 R' U2' R' U2' R U2' R U2 R' U2' R\",\n    \"R2' U' R' U R U R2 U2' R2' U' R2 U R2 U' R U R\",\n    \"R' U R2' U R2' U R' U' R2' U' R2 U R U' R' U' R\",\n    \"R' U2' R U2 R' U2' R' U R U2' R U2 R' U2' R' U R\",\n    \"R' U2' R U2 R' U2' R' U' R U2 R U2' R' U2 R' U' R\",\n    \"R' U2' R' U2 R' U2 R U2 R U2' R' U2 R' U R U2' R\",\n    \"R' U2' R' U2 R' U' R U2' R U2 R' U2' R' U2' R U2' R\",\n    \"R' U' R U R' U' R2' U R2 U R U' R2 U' R2 U2 R\",\n    \"R' U' R2' U' R2 U2 R U2' R U2 R' U R U2 R U R\",\n    \"R U2 R' U' R U2 R' U' R U2' R' U2' R' U2 R U2 R' U R\",\n    \"R2' U R' U R2' U R U2' R2 U' R2' U2' R2 U2' R' U' R U2' R\",\n    \"R2' U R' U R2' U R2 U2' R U' R' U2' R2 U2' R2' U' R2 U2' R\",\n    \"R2' U' R2' U2' R' U' R U2' R2 U2 R' U' R2' U2' R2 U2' R U2 R\",\n    \"R' U' R U2' R2 U R' U R2 U' R2' U' R' U2 R U R2' U' R\",\n  ],\n  [\n    \"R' U' R U R2 U' R2' U' R' U R2' U R\",\n    \"R2 U' R2 U' R U R2 U R2' U' R' U R\",\n    \"R2' U' R' U2 R2 U2' R U' R' U2' R2' U2 R U2 R\",\n    \"R' U' R' U2 R U2' R U' R' U2' R' U2 R U2 R\",\n    \"R' U2 R' U2' R U2 R U2 R' U2 R' U2' R U2 R\",\n    \"R' U2 R' U2' R U2 R U' R' U2' R' U2 R U2' R\",\n    \"R U R' U2' R' U2 R U2' R U R' U2' R' U2 R\",\n    \"R U2' R U R' U2 R' U2' R U2 R U2 R' U2 R\",\n    \"R U2' R U2' R' U2' R' U2 R U2' R U' R' U2 R\",\n    \"R U' R' U2 R' U2' R U2 R U' R' U2' R' U2 R\",\n    \"R' U2' R U2 R U R' U2' R' U2 R U2' R U R\",\n    \"R' U2' R U2 R U' R' U2 R' U2' R U2 R U' R\",\n    \"R' U2' R' U2 R U2' R U R' U2 R' U2' R U2 R\",\n    \"R' U2' R' U2 R U2' R U2' R' U2' R' U2 R U2' R\",\n    \"R' U2' R' U2 R U2' R U R' U2' R' U2 R U2' R\",\n    \"R' U2' R' U2 R U2' R U' R' U2 R' U2' R U2 R\",\n    \"R2' U2' R' U2' R2 U2 R U R' U2 R2' U2' R U R\",\n    \"R' U2' R' U2' R U2 R U R' U2 R' U2' R U R\",\n    \"R U R' U2 R' U2' R U2 R U2 R' U2 R' U2' R\",\n    \"R U2 R U R' U2' R' U2 R U2' R U R' U2' R\",\n    \"R U2 R U' R' U2 R' U2' R U2 R U' R' U2' R\",\n    \"R U2' R' U2' R' U2 R U2' R U' R' U2 R' U2' R\",\n    \"R' U2 R U2' R U R' U2 R' U2' R U2 R U2 R\",\n    \"R' U2 R U2' R U2' R' U2' R' U2 R U2' R U' R\",\n    \"R' U2 R' U2' R U2 R U R' U2' R' U2 R U2' R\",\n    \"R' U2 R' U2' R U2 R U' R' U2 R' U2' R U2 R\",\n    \"R2 U' R2' U' R' U2' R2 U2 R U R' U2 R2' U2' R2' U R\",\n    \"R2 U' R' U R2' U' R' U R2' U' R2 U' R' U R2' U R\",\n    \"R2' U' R2 U2' R2' U2' R' U' R U2' R2 U R2' U R' U R\",\n    \"R2' U' R' U' R U R2 U R2' U' R' U R2' U' R2' U R\",\n    \"R2' U' R' U' R U R2' U R2 U' R U R2 U' R' U R\",\n    \"R' U' R U R2 U2' R U R2 U' R U R2 U' R U2 R\",\n    \"R' U' R U2' R' U2' R2' U' R2 U2' R U R' U R2' U R\",\n    \"R' U' R U2' R' U2' R' U' R U2' R U R' U R' U R\",\n    \"R' U' R2' U' R2' U R2 U R2' U' R2 U' R2 U R2' U R\",\n    \"R2' U2 R2' U2' R' U' R U2' R2 U2 R' U' R2' U' R2 U2 R\",\n    \"R2' U' R2 U' R2' U R U R U2 R' U2' R' U2 R U2 R\",\n    \"R2' U' R2 U' R2' U R U2' R' U2' R U2 R U2' R' U' R\",\n    \"R2' U' R2' U R' U' R2' U' R2 U R U' R' U' R2' U2 R\",\n    \"R2 U2' R U' R' U2' R2' U2' R2 U' R2' U' R2' U R' U R\",\n    \"R U R2 U R2' U2' R' U2 R' U2' R U' R' U2' R' U' R\",\n    \"R2 U R U' R' U' R2' U2 R2 U R2' U' R2' U R' U' R\",\n    \"R2 U' R2 U2' R2' U R2 U R U2' R2' U2 R' U R U2 R\",\n    \"R U' R' U' R2' U2 R2 U R2' U' R2' U R' U' R2' U2' R\",\n    \"R2 U R2' U2' R' U2 R' U2' R U' R' U2' R' U' R2 U2' R\",\n    \"R2 U' R2' U R U R U2 R' U2' R' U2 R U2 R U R\",\n    \"R2 U' R2' U R U2' R' U2' R U2 R U2' R' U' R U R\",\n    \"R2' U R' U' R2' U' R2 U R U' R' U' R2' U2 R2 U R\",\n    \"R' U2' R U R2' U' R2 U R2' U R2 U2 R2' U2' R U2 R\",\n    \"R' U2' R U2 R2' U' R2 U' R2' U R2 U2' R2' U2' R U2 R\",\n    \"R' U2' R' U2 R2 U2 R2' U' R2 U R2' U R2 U2' R' U2 R\",\n    \"R' U2' R' U2 R2 U2' R2' U' R2 U' R2' U R2 U' R' U2 R\",\n  ],\n  [\n    \"R2 U R2' U2 R2 U2 R2' U R' U2 R2' U R2 U2 R2' U2 R\",\n    \"R2 U R2' U2 R2' U2 R2 U2' R2' U R2 U2 R2' U2' R' U' R\",\n    \"R2 U R2' U' R2' U2' R2 U2 R2' U' R2 U2 R2' U2' R' U' R\",\n    \"R2 U2' R U2' R2 U' R2' U2' R2 U2 R2 U' R2' U2 R2 U2 R\",\n    \"R2 U2' R2 U2' R U' R2 U2' R2' U2' R2 U2' R2 U2 R2' U2 R\",\n    \"R2' U R2 U2 R2 U2 R2' U2' R2 U R2' U2 R2 U2' R U' R\",\n    \"R2' U R2 U2 R2' U2 R2 U R U2 R2 U R2' U2 R2 U2 R\",\n    \"R2' U R2 U' R2 U2' R2' U2 R2 U' R2' U2 R2 U2' R U' R\",\n    \"R2' U2' R' U2' R2' U' R2 U2' R2' U2 R2' U' R2 U2 R2' U2 R\",\n    \"R' U R U2 R2 U2 R2' U2' R2 U R2' U2 R2 U2' R2 U' R\",\n    \"R' U R U2 R2' U2 R2 U2' R2' U R2 U2 R2' U2' R U' R\",\n    \"R' U R U' R2 U2' R2' U2 R2 U' R2' U2 R2 U2' R2 U' R\",\n    \"R' U R U' R2' U2' R2 U2 R2' U' R2 U2 R2' U2' R U' R\",\n    \"R' U R2 U R' U R U2' R' U' R' U' R U2' R' U2 R\",\n    \"R U2 R2 U R2' U2 R2 U2 R2 U2' R2' U R2 U2 R2' U2 R\",\n    \"R U2 R' U' R2 U R2' U R U' R U' R2' U2 R U2 R\",\n    \"R2 U2 R U R' U' R2' U2' R2 U R U' R2 U2' R2 U2 R\",\n    \"R' U2 R2' U R2 U2 R2' U2 R2' U2' R2 U R2' U2 R2 U2 R\",\n    \"R U R' U2 R2' U2 R2 U2' R2' U2' R2 U2' R U' R2 U2' R\",\n    \"R U R' U' R2' U2' R2 U2 R2' U R2 U2' R U' R2 U2' R\",\n    \"R U R' U' R' U2' R U R U R2' U R2 U2 R2' U2' R\",\n    \"R2' U2' R2' U2' R' U' R2' U2' R2 U R U2 R2 U2 R2' U2' R\",\n    \"R' U2 R2 U2 R2' U R2 U2 R' U2 R U2' R' U' R U2' R\",\n    \"R' U2 R2 U2 R2' U R2 U2 R' U2' R U2 R' U R U2 R\",\n    \"R' U2 R2' U2 R2 U R2' U2 R2' U2 R U2' R' U' R U2' R\",\n    \"R' U2 R2' U2 R2 U R2' U2 R2' U2' R U2 R' U R U2 R\",\n    \"R2 U2 R2' U R2 U2 R' U2 R U2' R' U' R U2' R' U2 R\",\n    \"R2 U2 R2' U R2 U2 R' U2' R U2 R' U R U2 R' U2' R\",\n    \"R2' U2 R2 U R2' U2 R2' U2 R U2' R' U' R U2' R' U2 R\",\n    \"R2' U2 R2 U R2' U2 R2' U2' R U2 R' U R U2 R' U2' R\",\n    \"R2' U2 R' U R U' R2 U2' R2' U2' R2 U2' R2 U' R U2' R\",\n    \"R U2' R U R U2 R2 U' R2' U' R2 U R U' R' U2 R2 U2 R\",\n    \"R U' R U2 R2' U2' R2 U' R2' U R U R U' R2' U2 R2 U2 R\",\n    \"R2 U R2' U2 R U2 R2' U2' R2 U R2' U R U R U2' R U' R\",\n    \"R2 U R2' U2 R2 U2 R2' U2' R2 U2' R2' U2' R2 U2 R2' U2' R2 U' R\",\n    \"R2 U R2' U2 R2' U2 R2 U R U2 R2 U R2' U2 R2 U2' R' U' R\",\n    \"R2 U R2' U2 R2' U2 R2 U2' R2' U2' R2 U2' R2' U2 R2 U2' R2 U' R\",\n    \"R2 U R2' U' R2 U2' R2' U2 R2 U R2' U2' R2 U2 R2' U2' R2 U' R\",\n    \"R2 U R2' U' R2 U2' R2' U' R' U2' R2' U' R2 U2' R U' R2 U2 R\",\n    \"R2 U R2' U' R2' U2' R2 U2 R2' U R2 U2' R2' U2 R2 U2' R2 U' R\",\n    \"R2 U R' U R' U R U2' R' U' R' U' R U2' R' U2' R2' U' R\",\n    \"R2 U2 R2' U' R2 U R2' U2' R2 U2 R2' U R2 U R2' U R2 U2 R\",\n    \"R2 U2 R2' U' R2 U' R2' U2 R2 U2' R2' U2' R2 U R2' U R2 U2 R\",\n    \"R2 U2' R U2' R2 U2 R2' U2 R2 U2' R2' U2 R' U' R2' U2 R2 U2 R\",\n    \"R2 U2' R2 U2' R U' R2 U2' R2' U2' R' U2' R2' U2 R2 U2' R2' U' R\",\n    \"R2 U2' R2' U2' R2 U2 R2 U2' R2' U' R2 U2' R2' U R2' U2 R2 U2 R\",\n    \"R2 U2' R2' U2' R2 U2 R2' U2' R2 U' R2' U2' R2 U R2' U2 R2 U2 R\",\n    \"R2' U R2 U2 R U2 R2' U2' R2 U R2' U R U R U2' R2 U' R\",\n    \"R2' U R2 U2 R2 U2 R2' U R' U2 R2' U R2 U2 R2' U2' R U' R\",\n    \"R2' U R2 U2 R2 U2 R2' U2' R2 U2' R2' U2' R2 U2 R2' U2' R2' U' R\",\n    \"R2' U R2 U2 R2' U2 R2 U2' R2' U2' R2 U2' R2' U2 R2 U2' R2' U' R\",\n    \"R2' U R2 U' R2 U2' R2' U2 R2 U R2' U2' R2 U2 R2' U2' R2' U' R\",\n    \"R2' U R2 U' R2' U2' R2 U2 R2' U R2 U2' R2' U2 R2 U2' R2' U' R\",\n    \"R2' U R2 U' R2' U2' R2 U' R U2' R2 U' R2' U2' R' U' R2' U2 R\",\n    \"R2' U R2' U R' U R U2' R' U' R' U' R U2' R' U2' R' U' R\",\n    \"R2' U2 R2 U' R2' U R2 U2' R2' U2 R2 U R2' U R2 U R2' U2 R\",\n    \"R2' U2 R2 U' R2' U' R2 U2 R2' U2' R2 U2' R2' U R2 U R2' U2 R\",\n    \"R2' U2' R2 U2 R2 U2' R2' U2' R2 U' R U2' R' U R2' U2 R2 U2 R\",\n    \"R2' U2' R2 U2' R2' U2 R2 U2' R2' U' R2 U2' R2' U R2 U2 R2' U2 R\",\n    \"R2' U2' R2 U2' R2' U2 R2' U2' R2 U' R2' U2' R2 U R2 U2 R2' U2 R\",\n    \"R2' U2' R' U2' R2' U2 R2 U2 R2' U2' R2 U2 R U' R2 U2 R2' U2 R\",\n    \"R' U R U2 R U2 R2' U2' R2 U R2' U R U R U2' R2' U' R\",\n    \"R' U R U2 R2 U2 R2' U R' U2 R2' U R2 U2 R2' U2' R2 U' R\",\n    \"R' U R U2 R2 U2 R2' U R' U2 R2' U2' R2 U2' R2' U2 R2 U2 R\",\n    \"R' U R U2 R2 U2 R2' U2' R2 U2' R2' U2' R2 U2 R2' U2' R' U' R\",\n    \"R' U R U2 R2' U2 R2 U R U2 R2 U R2' U2 R2 U2' R U' R\",\n    \"R' U R U2 R2' U2 R2 U2' R2' U2' R2 U2' R2' U2 R2 U2' R' U' R\",\n    \"R' U R U' R2 U2' R2' U2 R2 U R2' U2' R2 U2 R2' U2' R' U' R\",\n    \"R' U R U' R2' U2' R2 U2 R2' U R2 U2' R2' U2 R2 U2' R' U' R\",\n    \"R' U R2 U2 R2' U2' R' U' R2' U2' R2 U2' R U2' R2 U2 R2' U2 R\",\n    \"R' U R2' U2 R2 U2' R U' R2 U2' R2' U2' R' U2' R2' U2 R2 U2 R\",\n    \"R U2 R U2' R' U' R U' R U2 R2' U' R2 U' R2 U2 R2 U2 R\",\n    \"R' U2' R2 U R' U' R' U2 R U R U' R U2 R2' U R2 U2 R\",\n    \"R' U2' R2 U R' U' R' U2 R U R U' R2 U2 R2 U R2' U2 R\",\n    \"R U2 R2 U R U' R2' U' R U2 R2' U' R2' U R2' U' R2' U2' R\",\n    \"R U2 R2 U R2' U2 R U2 R2' U2' R2 U R2' U2 R2 U2' R U' R\",\n    \"R U2 R2 U R2' U2 R2 U2 R2 U R U2 R2 U R2' U2 R2 U2 R\",\n    \"R U2 R2 U R2' U2 R' U2 R2' U2' R2 U2 R2' U' R2 U2 R2' U2 R\",\n    \"R U2 R2 U R2' U' R2' U2' R2 U R2' U R U R U2' R2 U' R\",\n    \"R U2 R2' U R2 U2 R2' U2 R U R U2 R2' U R2 U2 R2' U2 R\",\n    \"R U2 R2' U R2 U2 R2' U2 R U R2 U2 R2 U R2' U2 R2 U2 R\",\n    \"R2 U R U R2' U' R' U2 R2' U2' R2' U R2 U' R2 U2 R2 U2 R\",\n    \"R2 U2 R2 U R2' U2 R2 U2 R U R U2 R2' U R2 U2 R2' U2 R\",\n    \"R2 U2 R2 U R2' U2 R2 U2 R U R2 U2 R2 U R2' U2 R2 U2 R\",\n    \"R2 U2 R2' U R2 U2 R' U R' U' R2' U2 R2 U R U' R2 U2' R\",\n    \"R2 U2 R2' U R2' U2 R' U R U2 R2' U2' R' U' R U2' R U2 R\",\n    \"R2' U2 R2 U R2' U2 R2' U R' U' R2' U2 R2 U R U' R2 U2' R\",\n    \"R2' U2 R2 U R' U2 R' U R U2 R2 U2' R' U' R U2' R2 U2 R\",\n    \"R' U2 R2' U R2 U2 R U2 R2 U2' R2' U2 R2 U' R2' U2 R2 U2 R\",\n    \"R' U2 R2' U R2 U2 R2' U2 R2' U R' U2 R2' U R2 U2 R2' U2 R\",\n    \"R' U2 R2' U R2 U2 R' U2 R2 U2' R2' U R2 U2 R2' U2' R' U' R\",\n    \"R2 U R2' U R2 U' R2' U' R2 U' R2' U2 R2 U' R2' U2 R2 U2 R\",\n    \"R2 U2 R2' U R2 U2 R' U R' U R' U' R2 U' R' U R' U R\",\n    \"R2' U R2 U R2' U' R2 U' R2' U' R2 U2 R2' U' R2 U2 R2' U2 R\",\n    \"R2' U2 R2 U R2' U2 R2' U R' U R' U' R2 U' R' U R' U R\",\n    \"R U R2 U2 R2' U2' R' U' R2' U2' R2 U R2' U2 R2' U2 R2 U2' R\",\n    \"R U R2 U2' R' U2' R' U' R' U2' R U2 R2' U' R2' U R' U2' R\",\n    \"R U R' U2 R U2 R' U' R' U' R2 U R2' U2 R2 U2 R2' U2' R\",\n    \"R U R' U2 R' U2 R2 U2' R2' U2' R2 U' R' U' R U' R2' U2' R\",\n    \"R U R' U' R2' U2' R2' U2 R2 U R2' U2 R' U R U' R2 U2' R\",\n    \"R U R' U' R' U2' R U R U R2' U2' R2 U2' R2' U2 R2 U2' R\",\n    \"R U R' U' R' U2' R U R U' R U2 R2 U R2' U2 R2 U2' R\",\n    \"R2 U R2' U2 R2 U2 R2' U2' R2 U R2' U' R2 U2' R2' U2 R2 U2' R\",\n    \"R2 U R2' U2 R' U2 R2 U2' R2' U2' R2 U' R' U' R2 U' R2 U2' R\",\n    \"R2 U R2' U' R2 U2' R2' U R2 U R2' U2' R2 U2' R2' U R2 U' R\",\n    \"R2 U R2' U' R2 U2' R2' U2 R2 U' R2' U' R2 U2' R2' U2 R2 U2' R\",\n    \"R2 U R2' U' R' U2' R U R U R2' U R2 U2' R U' R2 U2' R\",\n    \"R2 U2' R2' U2' R U R' U2' R2 U R2' U R U2 R U2 R' U2' R\",\n    \"R2' U R2 U2 R U2 R' U' R' U' R2 U2' R2' U2' R' U' R2' U2' R\",\n    \"R2' U R2 U2 R2' U2 R2 U2' R2' U R2 U' R2' U2' R2 U2 R2' U2' R\",\n    \"R2' U R2 U' R2' U2' R2 U R2' U R2 U2' R2' U2' R2 U R2' U' R\",\n    \"R2' U R2 U' R2' U2' R2 U2 R2' U' R2 U' R2' U2' R2 U2 R2' U2' R\",\n    \"R2' U2' R2' U2' R' U' R2' U2' R2 U R U' R2 U2' R2' U2 R2 U2' R\",\n    \"R' U2' R U R U R2' U R U2' R' U' R U2' R U2 R2' U2' R\",\n    \"R' U2' R U R2' U R U R U2' R' U2' R U2' R2' U2 R U2' R\",\n    \"R' U2' R' U2 R U2 R2 U R2 U R2' U2' R2' U R U2' R2' U2' R\",\n    \"R U2 R2 U2 R2' U R2 U2 R' U2 R U2' R' U' R U2' R' U2 R\",\n    \"R U2 R2 U2 R2' U R2 U2 R' U2' R U2 R' U R U2 R' U2' R\",\n    \"R U2 R2' U2 R2 U R2' U2 R2' U2 R U2' R' U' R U2' R' U2 R\",\n    \"R U2 R2' U2 R2 U R2' U2 R2' U2' R U2 R' U R U2 R' U2' R\",\n    \"R U' R2 U R2' U2 R2 U2 R2' U2' R2 U R2' U2 R2 U2 R2' U R\",\n    \"R U' R2 U R2' U' R2 U2' R2' U2 R2 U' R2' U2 R2 U2 R2' U R\",\n    \"R U' R2' U R2 U2 R2' U2 R2 U2' R2' U R2 U2 R2' U2 R2 U R\",\n    \"R U' R2' U R2 U' R2' U2' R2 U2 R2' U' R2 U2 R2' U2 R2 U R\",\n    \"R2 U2 R2 U2 R2' U R2 U2 R' U2 R U2' R' U' R U2' R' U2 R\",\n    \"R2 U2 R2 U2 R2' U R2 U2 R' U2' R U2 R' U R U2 R' U2' R\",\n    \"R2 U2 R2' U2 R2 U R2' U2 R2' U2 R U2' R' U' R U2' R' U2 R\",\n    \"R2 U2 R2' U2 R2 U R2' U2 R2' U2' R U2 R' U R U2 R' U2' R\",\n    \"R2 U' R2 U R2' U2 R2 U2 R2' U2' R2 U R2' U2 R2 U2 R2' U R\",\n    \"R2 U' R2 U R2' U' R2 U2' R2' U2 R2 U' R2' U2 R2 U2 R2' U R\",\n    \"R2 U' R2' U R2 U2 R2' U2 R2 U2' R2' U R2 U2 R2' U2 R2 U R\",\n    \"R2 U' R2' U R2 U' R2' U2' R2 U2 R2' U' R2 U2 R2' U2 R2 U R\",\n    \"R2 U' R' U2' R' U2 R U2 R2 U R2 U R2' U2' R2' U R U2' R\",\n    \"R2' U2 R2 U2 R2' U R2 U2 R' U2 R U2' R' U' R U2' R' U2 R\",\n    \"R2' U2 R2 U2 R2' U R2 U2 R' U2' R U2 R' U R U2 R' U2' R\",\n    \"R2' U2 R2' U2 R2 U R2' U2 R2' U2 R U2' R' U' R U2' R' U2 R\",\n    \"R2' U2 R2' U2 R2 U R2' U2 R2' U2' R U2 R' U R U2 R' U2' R\",\n    \"R2' U' R2 U R2' U2 R2 U2 R2' U2' R2 U R2' U2 R2 U2 R2' U R\",\n    \"R2' U' R2 U R2' U' R2 U2' R2' U2 R2 U' R2' U2 R2 U2 R2' U R\",\n    \"R2' U' R2' U R2 U2 R2' U2 R2 U2' R2' U R2 U2 R2' U2 R2 U R\",\n    \"R2' U' R2' U R2 U' R2' U2' R2 U2 R2' U' R2 U2 R2' U2 R2 U R\",\n    \"R' U' R2 U R2' U2 R2 U2 R2' U2' R2 U R2' U2 R2 U2 R2' U R\",\n    \"R' U' R2 U R2' U' R2 U2' R2' U2 R2 U' R2' U2 R2 U2 R2' U R\",\n    \"R' U' R2 U2' R2' U2' R U R' U2' R2 U R2' U R U2 R U2 R\",\n    \"R' U' R2' U R2 U2 R2' U2 R2 U2' R2' U R2 U2 R2' U2 R2 U R\",\n    \"R' U' R2' U R2 U' R2' U2' R2 U2 R2' U' R2 U2 R2' U2 R2 U R\",\n    \"R2 U2' R2' U R U2' R U R U2 R2' U' R2 U' R2 U2' R2 U2' R\",\n    \"R2 U' R2 U' R2 U' R2' U2 R U R U2' R U R2' U2 R2 U2' R\",\n    \"R2 U' R2 U' R2 U' R2' U2 R U R U2' R U2' R2' U2' R2 U2 R\",\n    \"R U2 R2 U R2' U' R' U' R' U' R2 U2' R2' U2' R' U' R2' U2' R\",\n    \"R U2' R' U' R U' R U2 R2' U' R2 U' R2 U2 R2 U2 R2' U R\",\n    \"R2 U2 R U R' U' R2' U2' R2 U R U' R' U2' R2' U2 R2 U2' R\",\n    \"R2 U2 R2' U R2 U2' R2' U R2 U2' R2 U2 R2' U R2 U2 R2' U2 R\",\n    \"R2 U2 R2' U R2 U2' R2' U R2 U2' R2' U2 R2 U R2' U2 R2 U2 R\",\n    \"R2 U2 R2' U R2 U2' R2' U' R2 U2 R2' U R2 U2 R2' U2' R2 U' R\",\n    \"R2 U2 R2' U R2 U2' R2' U' R2 U2 R2' U2' R2 U2' R2' U2 R2 U2 R\",\n    \"R2 U2 R2' U R2 U2' R2' U' R2' U2 R2 U R2' U2 R2 U2' R2 U' R\",\n    \"R2 U2 R2' U2' R' U2' R2' U2' R2 U' R U2 R' U R2' U2 R2 U2 R\",\n    \"R2 U2 R2' U' R2 U' R' U2' R U R U2 R2' U' R2 U' R' U' R\",\n    \"R2' U2 R2 U R2 U2' R2' U2 R2' U2 R2 U2 R2' U R' U2 R U2 R\",\n    \"R2' U2 R2 U R2' U2' R2 U R2' U2' R2 U2 R2' U R2 U2 R2' U2 R\",\n    \"R2' U2 R2 U R2' U2' R2 U R2' U2' R2' U2 R2 U R2' U2 R2 U2 R\",\n    \"R2' U2 R2 U R2' U2' R2 U' R2 U2 R2' U R2 U2 R2' U2' R2' U' R\",\n    \"R2' U2 R2 U R2' U2' R2 U' R2' U2 R2 U R2' U2 R2 U2' R2' U' R\",\n    \"R2' U2 R2 U R2' U2' R2 U' R2' U2 R2 U2' R2' U2' R2 U2 R2' U2 R\",\n    \"R2' U2 R2 U R' U' R' U2' R2 U R' U R2 U2 R2' U' R2 U' R\",\n    \"R2' U2' R' U R2' U2' R2' U2 R' U' R' U' R2 U2' R2 U R U2 R\",\n    \"R2' U2' R' U' R2' U2' R2 U2' R2' U2 R2' U2' R2' U2 R' U R U2 R\",\n    \"R2' U' R U2' R U' R U R U2 R2' U2' R' U' R' U2' R2' U R\",\n    \"R' U R' U2 R2 U2' R U2' R' U2' R U' R' U R2' U2 R U R\",\n    \"R' U2 R U' R U2 R' U2' R' U' R U2' R2' U2' R2' U' R2 U2' R\",\n    \"R' U2 R U' R U2 R' U2' R' U' R U2' R' U2' R2 U' R2' U2' R\",\n    \"R' U2 R2' U R2 U' R2 U2' R2' U2' R2 U' R' U' R2 U' R2 U2' R\",\n    \"R' U2 R2' U' R2' U R2' U R2 U2 R2' U2 R' U R2' U R' U' R\",\n    \"R' U2 R' U R U' R2 U2' R2' U2' R2 U' R' U' R2' U' R U2' R\",\n    \"R2 U R2' U R2 U2' R2' U' R2 U R2' U' R2 U2' R2' U R2 U' R\",\n    \"R2 U R2' U R2' U2' R2 U' R2' U R2 U' R2' U2' R2 U R2 U' R\",\n    \"R2 U2 R2' U' R U R' U R' U' R2 U' R' U R' U R2' U2 R\",\n    \"R2 U2' R' U2 R2' U' R2 U2' R2 U2 R2 U2' R U2' R2 U2' R U2 R\",\n    \"R2' U R2 U R2 U2' R2' U' R2 U R2' U' R2 U2' R2' U R2' U' R\",\n    \"R2' U R2 U R2' U2' R2 U' R2' U R2 U' R2' U2' R2 U R2' U' R\",\n    \"R2' U2 R2 U' R U R' U R' U' R2 U' R' U R' U R' U2 R\",\n    \"R2' U' R U R2' U' R U' R' U R2 U' R' U R2 U' R2 U2 R\",\n    \"R2' U' R U2' R2 U2' R U2' R2 U2 R2 U2' R2 U' R2' U2 R' U R\",\n    \"R2' U' R2' U' R' U R2' U R' U2 R2' U' R U R' U R2 U2 R\",\n    \"R' U2 R2 U R' U' R2 U2 R2' U' R' U2 R2 U2' R U' R' U2 R\",\n    \"R' U' R U2' R' U2' R' U R U' R' U2' R U2' R U2' R2' U' R\",\n    \"R U R U R U2' R U2 R2' U R2 U2 R2' U R U2' R2' U2 R2 U2 R\",\n    \"R U R U R U2' R2 U2 R2 U R2' U2 R2 U R U2' R2' U2 R2 U2 R\",\n    \"R U R U' R' U2 R' U2' R U' R U2' R2' U2 R2 U2 R2' U2' R U2 R\",\n    \"R U R2' U' R' U2 R' U2' R U' R' U2' R' U2 R2' U2 R2 U2' R2 U2 R\",\n    \"R U R' U' R' U2' R U R U' R2' U2 R U2' R2 U2 R2' U R2 U2 R\",\n    \"R U R' U' R' U2' R U R U' R2' U2 R U2' R2' U2 R2 U R2' U2 R\",\n    \"R U2 R U2' R' U2 R' U2 R2 U2 R2' U R2 U2 R' U2 R U2' R' U2 R\",\n    \"R U2 R U2' R' U2 R' U2 R2' U2 R2 U R2' U2 R2' U2 R U2' R' U2 R\",\n    \"R U2 R' U' R2 U' R' U' R U2 R2' U R U' R2 U R2' U2 R2 U2 R\",\n    \"R U2' R U R U R2 U' R2' U R2 U R2' U' R2' U' R' U2 R2 U2 R\",\n    \"R U2' R2 U2' R2' U2' R2 U2 R2 U2' R U R2 U2' R' U R2' U2 R2 U2 R\",\n    \"R U2' R2' U2 R2 U R2' U2' R2 U2 R' U2 R2 U2 R2' U R' U' R2' U2' R\",\n    \"R U2' R2' U2' R' U' R2' U2' R2 U R U' R' U2' R U2 R2 U2' R2' U2 R\",\n    \"R U2' R2' U2' R' U' R2' U2' R2 U R U' R' U2' R2' U2 R2' U2' R2 U2 R\",\n    \"R U' R U2 R2 U2' R2' U' R2 U2' R U2' R U R U' R2' U2 R2 U2 R\",\n    \"R U' R U2 R2' U' R2 U' R' U' R' U2 R U2' R U R2' U2 R2 U2 R\",\n    \"R U' R2 U' R U R2 U2 R2' U' R' U' R2' U2 R2' U2 R2 U2' R2 U2 R\",\n    \"R U' R2' U' R2' U2' R2 U2' R2 U2 R2' U' R2 U' R U' R2 U2' R2 U2 R\",\n    \"R U' R' U2 R2 U2' R2' U2 R2 U2 R2' U R U R U' R2' U2 R2 U2 R\",\n    \"R U' R' U2 R2' U2' R2' U2 R2 U2 R2' U2 R2 U2' R' U R2' U2 R2 U2 R\",\n    \"R U' R' U2 R' U2' R2 U2 R2' U2 R2 U2 R2' U2' R2' U R2' U2 R2 U2 R\",\n    \"R2 U R U2 R' U2' R2' U' R2 U2' R2' U2 R2' U' R2 U2 R2' U2' R' U' R\",\n    \"R2 U R2 U2 R2' U R2 U2 R U2' R2 U R2' U2' R2 U R2' U2 R2 U2 R\",\n    \"R2 U R2' U R2 U2' R U2 R2 U R2' U2 R2 U2' R2 U R2' U2 R2 U2 R\",\n    \"R2 U R2' U2 R U2 R' U' R' U' R2 U2' R2' U2' R2 U2 R' U2' R2 U' R\",\n    \"R2 U R2' U2 R2 U2 R2 U2' R2' U' R2 U2' R U2 R2 U2 R2' U2 R2 U2 R\",\n    \"R2 U R2' U2 R2 U2 R2' U R' U2 R2' U2' R2 U2' R2' U2 R2 U2' R2' U' R\",\n    \"R2 U R2' U2 R2 U2 R2' U2' R2 U R2 U2 R2' U R2 U2 R U2' R2 U R\",\n    \"R2 U R2' U2 R2 U2 R2' U2' R2 U R2' U R2 U2' R U2 R2 U R2' U2 R\",\n    \"R2 U R2' U2 R2 U2' R2' U2 R' U2' R2' U' R2 U2' R2' U R2' U2 R2 U2 R\",\n    \"R2 U R2' U2 R2' U2 R2 U R U2 R2 U2' R2' U2' R2 U2 R2' U2' R U' R\",\n    \"R2 U R2' U2 R2' U2 R2 U R2' U2 R' U2' R2 U2 R2' U R2 U2 R2' U2 R\",\n    \"R2 U R2' U2 R2' U2 R2 U R2' U2 R' U2' R2' U2 R2 U R2' U2 R2 U2 R\",\n    \"R2 U R2' U2 R2' U2 R2 U2' R2' U R2 U2' R2' U2 R' U2' R2' U' R2 U2 R\",\n    \"R2 U R2' U2 R' U2 R2 U2' R2' U2 R2 U' R2' U R U R U2' R U' R\",\n    \"R2 U R2' U2 R' U2 R2 U2' R2' U2' R2 U' R' U' R' U2 R U2' R2 U' R\",\n    \"R2 U R2' U' R2 U2 R2' U2' R' U2 R2' U R2 U2 R2' U' R2' U2 R2 U2 R\",\n    \"R2 U R2' U' R2 U2' R2 U2 R2' U R2 U2 R U R2 U2 R2' U2' R2 U' R\",\n    \"R2 U R2' U' R2 U2' R2 U2 R2' U R2 U2 R U2' R2 U2' R2' U2 R2 U2 R\",\n    \"R2 U R2' U' R2 U2' R2' U2 R2 U2' R2' U2' R' U2 R2' U R2 U2 R2' U2 R\",\n    \"R2 U R2' U' R2 U2' R2' U2 R2 U' R2 U2 R2' U R2 U2 R U2' R2 U R\",\n    \"R2 U R2' U' R2 U2' R2' U2 R2 U' R2' U R2 U2' R U2 R2 U R2' U2 R\",\n    \"R2 U R2' U' R2' U2' R2 U2 R2' U' R2 U2' R2' U2 R' U2' R2' U' R2 U2 R\",\n    \"R2 U R2' U' R2' U2' R2 U' R U2' R2 U' R2' U2' R' U' R2' U2' R' U' R\",\n    \"R2 U R2' U' R2' U2' R2 U' R2' U2' R' U2 R2' U2' R2 U' R2' U2 R2 U2 R\",\n    \"R2 U R2' U' R2' U2' R2' U2 R2 U R2' U2 R' U R2' U2 R2 U2' R2 U' R\",\n    \"R2 U R2' U' R' U2' R U R U R2' U R2 U2' R2' U2 R U2' R2 U' R\",\n    \"R2 U R' U R' U R U2' R' U' R' U' R U R2 U' R2' U2' R' U2 R\",\n    \"R2 U R' U2 R2' U2' R' U' R2' U2' R2 U2' R U2' R2 U2 R2' U2' R2' U' R\",\n    \"R2 U R' U2 R2' U2' R' U' R2' U2' R2 U2' R2' U2' R2' U2 R2 U2' R U' R\",\n    \"R2 U R' U2 R' U2 R2 U2 R' U2' R' U2' R U R U' R' U2' R U' R\",\n    \"R2 U R' U' R' U2' R' U2 R U' R U2 R' U2' R' U' R U R2 U' R\",\n    \"R2 U2 R2' U' R2 U R2' U2' R2 U2 R2' U R2 U' R U2 R2 U R2' U2 R\",\n    \"R2 U2 R2' U' R2 U R2' U2' R2' U2 R2 U R2' U2 R' U' R2' U R2 U2 R\",\n    \"R2 U2 R2' U' R2 U' R2' U2 R2 U2' R2' U2' R2 U' R U2 R2 U R2' U2 R\",\n    \"R2 U2' R U2' R2 U' R2' U2' R2 U2 R2 U R2' U2' R2 U2 R2' U2' R2 U' R\",\n    \"R2 U2' R U2' R2 U' R2' U2' R2 U' R' U2' R2' U' R2 U2' R U' R2 U2 R\",\n    \"R2 U2' R U2' R2' U2' R2 U' R' U2' R U2' R2' U2' R2 U' R' U' R' U R\",\n    \"R2 U2' R2 U2 R2' U R2 U2' R2' U2 R2' U2 R2 U2 R2' U R' U' R2' U2' R\",\n    \"R2 U2' R2 U2' R U2 R2 U2 R2' U2' R2 U2 R2' U R2 U2' R2 U2 R2' U2 R\",\n    \"R2 U2' R2 U2' R U' R2 U R2' U2 R2 U2' R2' U2 R2 U R2 U2 R2' U2 R\",\n    \"R2 U2' R2 U2' R2' U2 R U2' R2 U' R2' U2' R2 U2' R2 U2' R2 U2 R2' U2 R\",\n    \"R2 U2' R2' U2 R2 U' R U2 R U2' R' U' R U2' R' U2 R2 U2' R2 U2 R\",\n    \"R2 U2' R2' U2 R2 U' R U2' R U2 R' U R U2 R' U2' R2 U2' R2 U2 R\",\n    \"R2 U2' R2' U2' R U2 R2 U2' R2' U' R2 U2' R2' U2 R U' R2' U2 R2 U2 R\",\n    \"R2 U2' R2' U2' R U2 R2' U2' R2 U' R2' U2' R2 U2 R U' R2' U2 R2 U2 R\",\n    \"R2 U2' R2' U2' R2 U2 R2' U2' R2 U' R2' U R' U2 R2' U R2 U2 R2' U2 R\",\n    \"R2 U2' R2' U2' R2' U2 R2 U2' R2' U' R2 U2' R2' U2 R' U' R2' U2 R2 U2 R\",\n    \"R2 U2' R2' U2' R2' U2 R2' U2' R2 U' R2' U2' R2 U2 R' U' R2' U2 R2 U2 R\",\n    \"R2 U2' R2' U2' R' U2 R2 U2' R2' U' R2 U2' R2' U2 R2' U' R2' U2 R2 U2 R\",\n    \"R2 U2' R2' U2' R' U2 R2' U2' R2 U2 R2' U2 R2 U2' R2' U R2' U2 R2 U2 R\",\n    \"R2 U2' R2' U2' R' U2 R2' U2' R2 U' R2' U2' R2 U2 R2' U' R2' U2 R2 U2 R\",\n    \"R2 U' R2 U2 R U2' R2 U R2' U2' R2 U2 R2' U R2 U2' R2 U2 R2' U2 R\",\n    \"R2 U' R2 U2 R U2' R2 U' R2' U2 R2 U2' R2' U2' R2 U2' R2 U2 R2' U2 R\",\n    \"R2 U' R2' U2 R' U2' R2' U2 R2 U2 R2' U2 R2 U2' R2' U R2' U2 R2 U2 R\",\n    \"R2 U' R2' U2 R' U2' R2' U2 R2 U' R2' U2' R2 U2 R2' U' R2' U2 R2 U2 R\",\n    \"R2' U R U R' U' R2 U2' R2 U2 R U2' R2' U2 R2 U2' R2 U R' U R\",\n    \"R2' U R U R' U' R2 U2' R2 U2 R' U2' R2 U2 R2' U2' R' U R' U R\",\n    \"R2' U R2 U R2' U2' R' U2 R2' U R2 U2 R2' U2' R2' U R2 U2 R2' U2 R\",\n    \"R2' U R2 U2 R U2 R2' U2' R2 U R2' U R U' R2' U' R2 U2' R U2 R\",\n    \"R2' U R2 U2 R U2 R' U' R' U' R2 U2' R2' U2' R2 U2 R' U2' R2' U' R\",\n    \"R2' U R2 U2 R U2' R2' U' R2' U' R U2 R2' U' R2' U R2' U' R2' U2' R\",\n    \"R2' U R2 U2 R2 U2 R2' U R2 U2 R U2' R2 U2 R2' U R2 U2 R2' U2 R\",\n    \"R2' U R2 U2 R2 U2 R2' U R2 U2 R U2' R2' U2 R2 U R2' U2 R2 U2 R\",\n    \"R2' U R2 U2 R2 U2 R2' U R' U2 R2' U2' R2 U2' R2' U2 R2 U2' R' U' R\",\n    \"R2' U R2 U2 R2 U2 R2' U2' R2 U R2' U2' R2 U2 R U2' R2 U' R2' U2 R\",\n    \"R2' U R2 U2 R2' U2 R2 U R U2 R2 U2' R2' U2' R2 U2 R2' U2' R2 U' R\",\n    \"R2' U R2 U2 R2' U2 R2 U2' R2' U R2 U R2' U2' R' U2 R2' U R2 U2 R\",\n    \"R2' U R2 U2 R2' U2 R2 U2' R2' U R2' U2 R2 U R2' U2 R' U2' R2' U R\",\n    \"R2' U R2 U2 R2' U2 R2' U2' R2 U' R2' U2' R' U2 R2' U2 R2 U2 R2' U2 R\",\n    \"R2' U R2 U2 R2' U2' R2 U2 R U2' R2 U' R2' U2' R2 U R2 U2 R2' U2 R\",\n    \"R2' U R2 U2 R' U2 R2 U2' R2' U2 R2 U' R2' U R U R U2' R2 U' R\",\n    \"R2' U R2 U2 R' U2 R2 U2' R2' U2' R2 U' R' U' R' U2 R U2' R2' U' R\",\n    \"R2' U R2 U' R2 U2' R2 U2 R2' U R2 U2 R U R2 U2 R2' U2' R2' U' R\",\n    \"R2' U R2 U' R2 U2' R2' U2 R2 U' R2' U2' R2 U2 R U2' R2 U' R2' U2 R\",\n    \"R2' U R2 U' R2 U2' R2' U' R2 U2' R U2 R2 U2' R2' U' R2 U2 R2' U2 R\",\n    \"R2' U R2 U' R2 U2' R2' U' R' U2' R2' U' R2 U2' R U' R2 U2' R U' R\",\n    \"R2' U R2 U' R2' U2 R2 U2' R U2 R2 U R2' U2 R2 U' R2 U2 R2' U2 R\",\n    \"R2' U R2 U' R2' U2' R2 U2 R2' U2' R2 U2' R U2 R2 U R2' U2 R2 U2 R\",\n    \"R2' U R2 U' R2' U2' R2 U2 R2' U' R2 U R2' U2' R' U2 R2' U R2 U2 R\",\n    \"R2' U R2 U' R2' U2' R2 U2 R2' U' R2' U2 R2 U R2' U2 R' U2' R2' U R\",\n    \"R2' U R2 U' R2' U2' R2' U2 R2 U R2' U2 R' U R2' U2 R2 U2' R2' U' R\",\n    \"R2' U R2 U' R2' U2' R2' U2 R2 U R2' U2 R' U2' R2' U2' R2 U2 R2' U2 R\",\n    \"R2' U R2 U' R' U2' R U R U R2' U R2 U2' R2' U2 R U2' R2' U' R\",\n    \"R2' U R2' U2 R2 U R2' U2 R' U2' R2' U R2 U2' R2' U R2 U2 R2' U2 R\",\n    \"R2' U R2' U2 R2' U2' R' U' R2' U2' R2 U2' R U2' R2 U2 R2' U2' R' U' R\",\n    \"R2' U R2' U2 R2' U2' R' U' R2' U2' R2 U2' R2' U2' R2' U2 R2 U2' R2 U' R\",\n    \"R2' U R2' U2 R' U2 R2 U2 R' U2' R' U2' R U R U' R' U2' R2 U' R\",\n    \"R2' U R2' U' R' U2' R' U2 R U' R U2 R' U2' R' U' R U R2' U' R\",\n    \"R2' U R' U2 R U2' R2 U' R2' U2' R2 U2 R2 U' R2' U2 R2 U2' R U' R\",\n    \"R2' U R' U2 R2 U2' R U' R2 U2' R2' U2' R2 U2' R2 U2 R2' U2' R U' R\",\n    \"R2' U R' U2 R2 U2' R U' R2 U2' R2' U2' R' U2' R2' U2 R2 U2' R' U' R\",\n    \"R2' U2 R2 U' R2' U R2 U2' R2 U2 R2' U R2 U2 R U' R2 U R2' U2 R\",\n    \"R2' U2 R2 U' R2' U R2 U2' R2' U2 R2 U R2' U' R' U2 R2' U R2 U2 R\",\n    \"R2' U2 R2 U' R2' U' R2 U2 R2' U2' R2 U2' R2' U' R' U2 R2' U R2 U2 R\",\n    \"R2' U2' R2 U2 R2' U' R U2 R U2' R' U' R U2' R' U2 R U2' R2' U2 R\",\n    \"R2' U2' R2 U2 R2' U' R U2' R U2 R' U R U2 R' U2' R U2' R2' U2 R\",\n    \"R2' U2' R2 U2' R U2 R2 U2' R2' U2 R2 U2 R2' U2' R2 U R2 U2 R2' U2 R\",\n    \"R2' U2' R2 U2' R U2 R2 U2' R2' U' R2 U2' R2' U2 R2 U' R2 U2 R2' U2 R\",\n    \"R2' U2' R2 U2' R U2 R2' U2' R2 U' R2' U2' R2 U2 R2 U' R2 U2 R2' U2 R\",\n    \"R2' U2' R2 U2' R2 U2 R2 U2' R2' U' R2 U2' R2' U2 R U' R2 U2 R2' U2 R\",\n    \"R2' U2' R2 U2' R2 U2 R2' U2' R2 U' R2' U2' R2 U2 R U' R2 U2 R2' U2 R\",\n    \"R2' U2' R2 U2' R2' U2 R2 U2' R2' U' R2 U R U2 R2 U R2' U2 R2 U2 R\",\n    \"R2' U2' R2 U2' R' U2 R2 U2' R2' U' R2 U2' R2' U2 R' U' R2 U2 R2' U2 R\",\n    \"R2' U2' R2 U2' R' U2 R2' U2' R2 U' R2' U2' R2 U2 R' U' R2 U2 R2' U2 R\",\n    \"R2' U2' R2' U2 R2 U' R' U R' U R U2' R2 U2 R' U' R U' R2 U' R\",\n    \"R2' U2' R2' U2' R2 U2 R U2' R2' U' R2 U2' R2' U2' R U2' R2' U2 R2 U2 R\",\n    \"R2' U2' R2' U2' R2 U2 R2 U2' R2 U' R2' U2' R2 U2' R U2' R2' U2 R2 U2 R\",\n    \"R2' U2' R2' U2' R' U' R2' U2' R2 U R U2 R2 U2' R2' U2 R' U2' R2' U' R\",\n    \"R2' U2' R2' U2' R' U' R2' U2' R2 U R2' U2 R2' U2' R2 U2 R2 U2' R2' U' R\",\n    \"R2' U2' R' U2 R2' U2' R2 U2 R2' U R2 U' R U2' R' U R2' U2 R2 U2 R\",\n    \"R2' U2' R' U2' R2' U' R2 U2' R2' U2 R2' U R2 U2' R2' U2 R2 U2' R2' U' R\",\n    \"R2' U2' R' U2' R2' U' R2 U2' R2' U' R U2' R2 U' R2' U2' R' U' R2' U2 R\",\n    \"R2' U' R2 U2 R U2' R2 U2 R2' U2 R2 U2 R2' U2' R2 U R2 U2 R2' U2 R\",\n    \"R2' U' R2 U2 R U2' R2 U2 R2' U' R2 U2' R2' U2 R2 U' R2 U2 R2' U2 R\",\n    \"R' U R U2 R U2 R' U' R' U' R2 U2' R2' U2' R2 U2 R' U2' R' U' R\",\n    \"R' U R U2 R2 U2 R2' U R2 U2 R2 U2' R2 U2 R2' U R2 U2 R2' U2 R\",\n    \"R' U R U2 R2 U2 R2' U R2 U2 R2 U2' R2' U2 R2 U R2' U2 R2 U2 R\",\n    \"R' U R U2 R2 U2 R2' U2' R2 U R2' U2 R U2' R2' U' R2 U2' R U2 R\",\n    \"R' U R U2 R2' U2 R2 U R U2 R2 U2' R2' U2' R2 U2 R2' U2' R2' U' R\",\n    \"R' U R U2 R2' U2 R2 U R2' U2 R U2' R2 U2 R2' U R2 U2 R2' U2 R\",\n    \"R' U R U2 R2' U2 R2 U R2' U2 R U2' R2' U2 R2 U R2' U2 R2 U2 R\",\n    \"R' U R U2 R' U2 R2 U2' R2' U2 R2 U' R2' U R U R U2' R2' U' R\",\n    \"R' U R U2 R' U2 R2 U2' R2' U2' R2 U' R' U' R' U2 R U2' R' U' R\",\n    \"R' U R U' R2 U2' R2 U2 R2' U R2 U2 R U R2 U2 R2' U2' R' U' R\",\n    \"R' U R U' R2 U2' R2' U2 R2 U' R2' U2 R U2' R2' U' R2 U2' R U2 R\",\n    \"R' U R U' R2 U2' R2' U' R' U2' R2' U' R2 U2' R U' R2 U2' R2 U' R\",\n    \"R' U R U' R2' U2' R2 U' R U2' R2 U' R2' U2' R' U' R2' U2' R U' R\",\n    \"R' U R U' R2' U2' R2' U2 R2 U R2' U2 R' U R2' U2 R2 U2' R' U' R\",\n    \"R' U R U' R' U2' R U R U R2' U R2 U2' R2' U2 R U2' R' U' R\",\n    \"R' U R2 U R' U R U2' R' U R' U R U2 R' U R U2 R' U2' R\",\n    \"R' U R2 U R' U R U2' R' U' R' U' R2' U R2' U2 R' U2' R2' U' R\",\n    \"R' U R2 U2 R2' U2' R' U' R2' U2' R2 U2' R2' U2' R2' U2 R2 U2' R2' U' R\",\n    \"R' U R2 U2 R' U2 R2 U2 R' U2' R' U2' R U R U' R' U2' R2' U' R\",\n    \"R' U R2 U' R' U2' R' U2 R U' R U2 R' U2' R' U' R U R' U' R\",\n    \"R' U R2' U2 R U2' R2 U' R2' U2' R2 U2 R2 U' R2' U2 R2 U2' R2 U' R\",\n    \"R' U R2' U2 R2 U2' R U' R2 U2' R2' U2' R2 U2' R2 U2 R2' U2' R2 U' R\",\n    \"R' U R' U2 R' U2' R2' U' R2 U2' R2' U2 R2' U' R2 U2 R2' U2' R U' R\",\n    \"R' U2' R2 U2 R2' U' R2' U R' U R U2' R2' U2 R' U' R U' R U' R\",\n    \"R' U2' R2 U2' R2' U2 R U2' R2' U' R2 U2' R2' U2' R U2' R2 U2 R2' U2 R\",\n    \"R' U2' R2 U2' R2' U2 R2 U2' R2 U' R2' U2' R2 U2' R U2' R2 U2 R2' U2 R\",\n    \"R' U2' R2' U R2 U2 R U2' R2 U R2' U2' R2 U R2' U2 R2 U2' R2 U' R\",\n    \"R' U2' R2' U2' R2 U2 R2' U2' R2' U' R2 U2' R2' U2' R' U2' R2' U2 R2 U2 R\",\n    \"R' U2' R2' U2' R2 U2 R' U2' R2 U' R2' U2' R2 U2' R' U2' R2' U2 R2 U2 R\",\n    \"R U2 R2 U2 R2' U R2 U2 R' U2' R U2 R' U R2' U' R2' U2' R' U2 R\",\n    \"R U2 R2' U2 R2 U R2' U2 R2' U2' R U2 R' U R2' U' R2' U2' R' U2 R\",\n    \"R U2' R2' U' R U R U2 R' U2 R U2 R2' U R2 U2' R' U2 R U2 R\",\n    \"R2 U R' U2 R U2' R2' U' R U2' R' U R U' R U2 R' U2' R U2 R\",\n    \"R2 U2 R U2' R2 U' R2' U R2 U' R2' U2' R2 U2 R2 U' R2' U2 R2 U2 R\",\n    \"R2' U2 R' U2' R2' U2 R2 U2 R2' U R2 U' R U2' R' U R2' U2 R2 U2 R\",\n    \"R2' U2 R' U2' R2' U' R2 U R2' U' R2 U2' R2' U2 R2' U' R2 U2 R2' U2 R\",\n    \"R2' U' R' U2' R2' U' R' U R2' U' R2 U2' R U' R U2 R2' U2' R U2 R\",\n    \"R2' U' R' U2' R2' U' R' U2' R U2' R2 U' R2' U2 R U2 R2' U2' R U2 R\",\n    \"R' U2 R2' U2' R2' U2 R2 U2 R2' U R2 U' R2 U2' R2' U R2' U2 R2 U2 R\",\n    \"R' U2 R' U2' R2 U2 R2' U2 R2 U R2' U' R U2' R' U R2 U2 R2' U2 R\",\n    \"R' U' R2' U R2' U' R2' U2' R U R U2' R2' U2' R' U' R2' U' R' U2 R\",\n    \"R U2 R U2' R2 U2' R2 U' R' U R' U2 R2 U R' U2 R2 U2 R' U2' R\",\n    \"R U2 R2' U' R U' R' U2 R U R2 U2 R2' U' R2 U' R2' U2 R U2 R\",\n    \"R U2' R U2 R' U2' R' U' R2 U2 R2' U R2 U2 R' U2 R U2' R' U2 R\",\n    \"R U2' R U2 R' U2' R' U' R2' U2 R2 U R2' U2 R2' U2 R U2' R' U2 R\",\n    \"R U2' R U2 R' U' R' U R2 U2' R2' U2' R U' R U2 R2' U R2 U2 R\",\n    \"R U2' R U2 R' U' R' U R2 U2' R2' U2' R U' R2 U2 R2 U R2' U2 R\",\n    \"R U2' R2 U2 R2' U' R' U' R2' U2 R2 U R U2 R2 U' R2 U R2' U2 R\",\n    \"R U2' R2' U2' R2 U R' U' R U R2' U' R U R U2' R' U R' U2 R\",\n    \"R2 U2' R U2 R2 U R2' U2' R' U' R2' U2' R2 U R U' R2 U2' R2 U2 R\",\n    \"R U R' U2 R U2' R U2 R' U' R U R' U' R U' R2' U2 R U2 R\",\n    \"R U R' U2 R2 U2 R2' U' R' U R2' U2' R' U2 R2' U2' R U' R' U2 R\",\n    \"R U R' U2 R2 U2 R2' U' R' U2 R2' U2 R' U2' R2' U2 R U' R' U2 R\",\n    \"R U2 R U R2' U' R2 U' R2' U R2 U R' U' R U' R2' U2 R U2 R\",\n    \"R U2 R U R' U' R2' U2' R2 U R2' U R U' R2 U' R2' U2' R U2 R\",\n    \"R U2 R2 U R2' U2 R U2 R2' U R' U2 R2' U R2 U2 R2' U2' R U' R\",\n    \"R U2 R2 U R2' U2 R U2 R2' U2' R2 U2' R2' U2' R2 U2 R2' U2' R2' U' R\",\n    \"R U2 R2 U R2' U2 R2 U2 R2 U2' R2' U2' R2 U2' R2' U2 R2 U2' R2' U' R\",\n    \"R U2 R2 U R2' U2 R' U2 R2 U2' R2' U2 R2 U' R2' U2 R2 U2' R U' R\",\n    \"R U2 R2 U R2' U' R2' U2' R2 U R2' U R U' R2' U' R2 U2' R U2 R\",\n    \"R U2 R2 U R2' U' R' U' R' U' R2 U2' R2' U2' R2 U2 R' U2' R2' U' R\",\n    \"R U2 R2 U2' R2' U2' R2 U2 R2' U2' R2 U' R2 U2' R2' U R2 U2 R2' U2 R\",\n    \"R U2 R' U2 R' U2 R2' U R2 U2 R U' R U' R U' R2' U2 R U2 R\",\n    \"R U2 R' U' R2' U' R' U2 R2' U R U' R U2' R U R2 U2 R U2 R\",\n    \"R U2 R' U' R' U2 R2' U2 R2' U R U' R U2' R2' U2' R' U2 R2 U2 R\",\n    \"R U2' R U2' R' U2 R' U2' R U R U R' U' R U' R2' U2 R U2 R\",\n    \"R U' R U2 R' U2' R2 U R' U' R2' U2' R2 U2' R U2 R2' U2' R U2 R\",\n    \"R2 U2 R U R2 U2 R' U2' R2' U' R2 U2' R2' U R U' R2 U2' R2 U2 R\",\n    \"R2 U2 R U R' U2 R2' U2 R2 U2' R2' U2 R2 U' R U' R2 U2' R2 U2 R\",\n    \"R2 U2 R U R' U' R2' U2' R2 U R2' U2 R U2' R2 U' R2' U2' R U2 R\",\n    \"R2 U2 R U R' U' R2' U' R' U' R2' U R' U' R2' U R' U2 R2 U2 R\",\n    \"R2 U2 R U2' R' U2 R2' U R2 U2' R U2 R2' U2' R' U' R U2' R U2 R\",\n    \"R2 U2 R2' U R2 U2' R2' U' R2 U2 R2' U R2 U2 R2 U2' R2' U' R2 U2' R\",\n    \"R2 U2 R2' U R2 U2' R2' U' R2' U2 R2 U R2' U2 R U2' R2' U' R2 U2' R\",\n    \"R2 U2 R2' U R2' U2 R2 U' R2' U R' U' R2' U R2 U R U2 R' U2 R\",\n    \"R2 U2 R2' U R2' U2 R2' U' R2 U R U' R2 U R2' U R U2 R' U2 R\",\n    \"R2 U2 R2' U2' R2 U R U2 R U2' R' U' R U2' R' U2 R2 U2' R2 U2 R\",\n    \"R2 U2 R2' U2' R2 U R U2' R U2 R' U R U2 R' U2' R2 U2' R2 U2 R\",\n    \"R2 U2 R' U R2 U2' R' U R' U2' R2' U2 R U2' R U R2' U2 R' U2 R\",\n    \"R2' U2 R2 U R U2' R' U' R2 U' R2' U R' U' R2' U R2 U2' R2 U2 R\",\n    \"R2' U2 R2 U R U2' R' U' R2' U' R2 U R U' R2 U R2' U2' R2 U2 R\",\n    \"R2' U2 R2 U R2' U2' R2 U' R2 U2 R2' U R2 U2 R' U2' R2 U' R2' U2' R\",\n    \"R2' U2 R2 U R2' U2' R2 U' R2' U2 R2 U R2' U2 R2' U2' R2 U' R2' U2' R\",\n    \"R2' U2 R2 U2 R2' U2' R' U2 R2' U' R2 U' R U2' R' U R2' U2 R2 U2 R\",\n    \"R2' U2 R2 U2' R U2 R2' U R' U' R2' U2' R2 U R U' R U2' R2' U2 R\",\n    \"R2' U2 R2 U2' R2' U R U2 R U2' R' U' R U2' R' U2 R U2' R2' U2 R\",\n    \"R2' U2 R2 U2' R2' U R U2' R U2 R' U R U2 R' U2' R U2' R2' U2 R\",\n    \"R2' U2 R2 U2' R2' U2 R' U2' R2' U2' R2 U' R U2' R' U R2' U2 R2 U2 R\",\n    \"R' U2 R U R2 U2 R2' U' R2 U R2 U' R U R' U R2' U2 R2 U2 R\",\n    \"R' U2 R2' U R2 U2 R U2 R2' U2' R2 U2 R2' U' R2 U2 R2' U2' R' U' R\",\n    \"R' U2 R2' U R2 U2 R2 U2 R2' U2' R2 U R2' U R U R U2' R U' R\",\n    \"R' U2 R2' U R2 U2 R2' U2 R2' U2' R2 U2' R2' U2' R2 U2 R2' U2' R2 U' R\",\n    \"R' U2 R2' U R2 U2 R' U2 R2 U R U2 R2 U R2' U2 R2 U2' R' U' R\",\n    \"R' U2 R2' U R2 U2 R' U2 R2 U2' R2' U2' R2 U2' R2' U2 R2 U2' R2 U' R\",\n    \"R' U2 R2' U R2 U' R2 U2' R2' U2 R2 U' R2' U R U R U2' R U' R\",\n    \"R' U2 R2' U R2 U' R2 U2' R2' U2' R2 U' R' U' R' U2 R U2' R2 U' R\",\n    \"R' U2 R2' U2' R2 U2' R2' U2 R2 U2' R2' U' R2' U2' R2 U R2' U2 R2 U2 R\",\n    \"R' U2 R2' U' R2 U' R U R2 U' R2 U2 R2' U R2 U2' R2' U2 R2 U2 R\",\n    \"R' U2 R2' U' R2 U' R U R2 U' R2 U2 R2' U' R2 U2 R2' U2' R2 U' R\",\n    \"R U2' R U R' U' R2 U2 R U' R U R' U2' R2 U2' R2 U2 R' U2' R\",\n    \"R U2' R U2' R2 U2 R2' U2 R2 U R2 U R' U R U' R U2' R' U2 R\",\n    \"R U2' R U' R2' U' R U R' U R2 U2 R' U' R' U2' R2 U2 R' U2' R\",\n    \"R U' R2 U R2 U R U' R2 U' R' U2' R2 U2' R2' U' R2 U2' R2 U2 R\",\n    \"R U' R2 U R2 U R U' R2 U' R' U2' R2' U2' R2 U' R2' U2' R U2 R\",\n    \"R2 U R2 U2 R2 U' R' U' R U R' U' R2' U2 R2 U2' R' U' R2 U2 R\",\n    \"R2 U2 R2' U R2 U R' U2 R' U R' U' R2 U2' R U R2' U R' U R\",\n    \"R2' U R U R' U2' R2 U R2' U2' R2 U2 R2' U' R U' R U2' R2' U2 R\",\n    \"R2' U R U R' U2' R2 U' R2' U2 R2 U2' R2' U R U' R U2' R2' U2 R\",\n    \"R' U R2' U' R2 U' R' U R U2 R2 U2' R' U R U' R2' U2 R2 U2 R\",\n    \"R' U R' U2' R' U2' R U' R' U' R' U2' R U R2 U' R U R U R\",\n    \"R' U2 R U2' R U2 R2 U2' R2' U' R2 U2' R2 U' R U' R2' U2 R2 U2 R\",\n    \"R' U2 R U2' R U2 R2' U2' R2 U' R2' U2' R U' R U' R2' U2 R2 U2 R\",\n    \"R' U2 R2' U2' R2' U' R2 U2' R2' U2 R U2' R' U' R U' R2' U2 R2 U2 R\",\n    \"R' U2 R' U2' R2 U' R2' U2' R2 U2 R U2' R' U' R U' R2' U2 R2 U2 R\",\n    \"R' U' R U' R U R2' U R U R2' U' R2 U' R U' R' U2 R2' U R\",\n    \"R' U' R U' R U R2' U R U R' U' R U' R U' R' U2 R' U R\",\n    \"R' U' R2 U2' R2' U2' R2' U2 R' U' R U' R2' U2 R U2' R' U2 R U2 R\",\n    \"R' U' R2' U2 R2 U R2' U2' R2 U2 R2' U2 R' U' R2' U' R U R U R\",\n    \"R' U' R2' U2 R2 U' R2' U2 R2 U2' R2' U' R' U' R2' U' R U R U R\",\n    \"R U R U R2' U2 R U R' U2 R U2' R U R' U2 R' U2 R U2 R\",\n    \"R U R2 U R2' U R' U' R2' U' R2' U R' U R U2' R' U2 R U2 R\",\n    \"R U R2 U R' U2 R' U2' R U' R2' U R U2 R U2' R' U2' R2 U' R\",\n    \"R U R2 U2 R2 U' R2 U R2 U' R2 U R2 U2' R' U R U2' R2 U2 R\",\n    \"R U R2 U2 R2' U2' R' U' R2' U R' U2 R2' U R2 U2 R' U2 R2 U2' R\",\n    \"R U R2 U2 R2' U2' R' U' R2' U2' R2 U R2' U' R2' U2' R2 U2 R2' U2' R\",\n    \"R U R2 U2 R' U2' R2' U' R2 U2' R2' U2 R2' U R2 U2' R U' R2 U2' R\",\n    \"R U R2' U2 R U' R' U2' R' U2 R' U2 R2 U2' R U2' R2' U' R2' U2 R\",\n    \"R U R2' U2' R U R2 U R2' U2 R2 U2 R2 U2' R2 U R' U2' R U' R\",\n    \"R U R' U R U R' U2 R' U2 R U R U R2' U R U' R U2' R\",\n    \"R U R' U2 R U2 R2' U2' R2 U2 R2' U R2 U' R' U' R U' R2' U2' R\",\n    \"R U R' U2 R U2 R' U' R' U2 R' U2 R2' U R2 U2 R2' U2 R2' U2' R\",\n    \"R U R' U2 R U2 R' U' R' U' R2 U R2' U' R2 U2' R2' U2 R2 U2' R\",\n    \"R U R' U2 R2 U2 R2' U R2 U2 R2' U2' R2' U2 R2 U R U' R2 U2' R\",\n    \"R U R' U2 R2 U2 R2' U2' R2 U2' R2' U2' R2 U2 R U2' R2' U' R2 U2' R\",\n    \"R U R' U2 R2 U2 R2' U2' R2 U2' R2' U2' R2 U2 R2 U2' R2 U' R2' U2' R\",\n    \"R U R' U2 R2 U2 R2' U' R U R U2' R U2 R2' U R2 U2 R2' U2' R\",\n    \"R U R' U2 R2 U2 R2' U' R U R U2' R2 U2 R2 U R2' U2 R2 U2' R\",\n    \"R U R' U2 R2' U2 R2 U R2' U2 R2 U2' R2' U2 R2 U R U' R2 U2' R\",\n    \"R U R' U2 R2' U2 R2 U2' R2' U2' R2 U2' R2' U2 R U2' R2 U' R2' U2' R\",\n    \"R U R' U2 R2' U2 R2 U2' R2' U' R2 U2 R U2' R2 U' R2' U2 R2 U2' R\",\n    \"R U R' U' R U2' R2 U2 R2' U2' R2 U2' R2' U2 R' U R U' R2 U2' R\",\n    \"R U R' U' R2 U2' R2' U2 R2 U R2' U2' R2 U2 R U2' R2' U' R2 U2' R\",\n    \"R U R' U' R2 U2' R2' U2 R2 U R2' U2' R2 U2 R2 U2' R2 U' R2' U2' R\",\n    \"R U R' U' R2' U2' R U' R2' U R U' R2 U2' R2 U2 R2' U2' R' U2 R\",\n    \"R U R' U' R2' U2' R U' R2' U R U' R' U2' R2' U2 R2 U2' R2 U2 R\",\n    \"R U R' U' R2' U2' R2 U2 R2' U R2 U2' R2' U2 R U2' R2 U' R2' U2' R\",\n    \"R U R' U' R2' U2' R2 U2 R2' U2 R2 U2 R U2' R2 U' R2' U2 R2 U2' R\",\n    \"R U R' U' R' U2' R U R U' R U2 R2 U2' R2' U2' R2 U2 R2' U2' R\",\n    \"R U2 R2 U2' R' U2 R' U' R' U2 R2 U2 R2' U' R U2 R2 U2 R2' U2' R\",\n    \"R U2' R U2' R2' U' R2 U2' R' U2' R U2' R' U2' R' U R U' R U' R\",\n    \"R U2' R2 U R2' U2 R' U2' R2' U R2 U2' R2' U2' R2 U2' R U' R2 U2' R\",\n    \"R U2' R2 U2 R2' U R2 U2 R2 U' R2' U R2 U R U' R2 U' R2' U' R\",\n    \"R U2' R2 U2 R2' U R2 U2 R' U2' R' U2 R' U R U2 R U2' R' U2 R\",\n    \"R U2' R2 U2 R2' U R2 U2 R' U2' R' U2 R' U2' R U2' R U2 R' U2' R\",\n    \"R U2' R2 U2 R2' U2' R' U R U2 R U2' R' U' R U2' R U2 R2' U2' R\",\n    \"R U2' R2 U2' R2 U' R2' U2' R2' U2' R U2' R' U2' R' U R U' R U' R\",\n    \"R U2' R2 U2' R2' U2 R U2' R2' U' R2 U2' R2' U R2' U2 R2' U2 R2 U2' R\",\n    \"R U2' R2 U2' R2' U2 R2 U2' R2 U' R2' U2' R2 U R2' U2 R2' U2 R2 U2' R\",\n    \"R U2' R2' U2 R2 U R2' U2 R U' R2' U R2 U R U' R2 U' R2' U' R\",\n    \"R U2' R2' U2 R2 U R2' U2 R2' U2' R' U2 R' U R U2 R U2' R' U2 R\",\n    \"R U2' R2' U2 R2 U R2' U2 R2' U2' R' U2 R' U2' R U2' R U2 R' U2' R\",\n    \"R U2' R' U' R U2' R2' U2 R U R' U' R2 U2 R2' U R U2' R U' R\",\n    \"R U' R2' U R2' U2' R' U2 R2' U' R2' U' R2' U2' R2 U2' R' U R U' R\",\n    \"R U' R2' U2 R2' U2 R' U2' R2' U2' R2' U' R2' U2' R2 U2' R' U R U' R\",\n    \"R U' R' U2 R U R2' U2 R U R' U2 R U2' R U2' R' U2 R U2 R\",\n    \"R U' R' U2 R U R' U' R' U2' R U2 R U2 R' U2' R' U2 R2 U2 R\",\n    \"R U' R' U2 R U2' R U R' U2 R' U2' R2 U' R' U2 R' U2' R U R\",\n    \"R U' R' U2 R U2' R U R' U' R' U R U2' R' U' R2 U2' R' U2 R\",\n    \"R U' R' U2 R2' U R' U' R' U2' R U2' R' U2' R2 U2 R2 U' R2' U2' R\",\n    \"R U' R' U' R' U2' R U2 R U' R U R' U2 R U2 R2' U2' R' U2 R\",\n    \"R2 U R2' U R2 U2' R2 U2 R U R2 U2 R2' U' R' U2 R2' U2 R2 U2' R\",\n    \"R2 U R2' U2 R U2 R2' U2' R2 U2 R2' U R2 U' R' U' R2 U' R2 U2' R\",\n    \"R2 U R2' U2 R U2 R' U' R' U' R2 U R2' U2 R2 U2' R U' R2 U2' R\",\n    \"R2 U R2' U2 R2 U2 R U2' R U R2 U' R' U' R U2 R2' U2' R' U2' R\",\n    \"R2 U R2' U2 R2 U2 R U2' R2' U2' R2' U2 R U' R' U' R2 U R2 U2' R\",\n    \"R2 U R2' U2 R2 U2 R2' U2' R2 U R2' U2 R2' U2 R2 U R2' U2 R' U2' R\",\n    \"R2 U R2' U2 R2 U2 R2' U2' R2 U2' R U2' R2 U' R2' U2' R2 U2 R2 U2' R\",\n    \"R2 U R2' U2 R2 U2 R2' U2' R2 U2' R2' U2' R2 U2 R2 U2' R2' U' R2 U2' R\",\n    \"R2 U R2' U2 R2 U2 R2' U2' R2' U2' R2 U2 R2 U2' R2' U2' R2 U' R U2' R\",\n    \"R2 U R2' U2 R2 U' R U R U2 R2 U2' R2 U2 R U2' R U' R' U2' R\",\n    \"R2 U R2' U2 R2' U2 R2 U2' R2' U2' R2 U2' R2' U2 R U2' R2' U' R2 U2' R\",\n    \"R2 U R2' U' R2 U2' R2' U2 R2 U R U2' R2 U' R2' U2' R2 U2 R2 U2' R\",\n    \"R2 U R2' U' R2 U2' R2' U2 R2 U R2' U2' R2 U2 R2 U2' R2' U' R2 U2' R\",\n    \"R2 U R2' U' R2 U2' R2' U2 R2 U' R2' U2 R2' U2 R2 U R2' U2 R' U2' R\",\n    \"R2 U R2' U' R2' U2' R2 U2 R2' U R2 U2' R2' U2 R U2' R2' U' R2 U2' R\",\n    \"R2 U R' U R U' R' U R U2' R' U' R' U2' R U R' U2' R U2 R\",\n    \"R2 U2 R2' U' R2 U' R U2 R' U2' R U2' R2 U R2' U R' U2 R U2' R\",\n    \"R2 U2' R U2' R2 U' R2' U2' R2 U R2 U R2' U2' R2 U2' R2' U R2 U' R\",\n    \"R2 U2' R U2' R2 U' R2' U2' R2 U2 R2 U' R2' U' R2 U2' R2' U2 R2 U2' R\",\n    \"R2 U2' R2 U2 R2' U R2 U2 R' U2' R2' U2 R' U R U2 R2 U2' R' U2 R\",\n    \"R2 U2' R2' U2 R2 U R2' U2 R2' U2' R2' U2 R' U R U2 R2 U2' R' U2 R\",\n    \"R2 U2' R2' U2 R2 U2' R2 U2' R2' U2' R2 U' R U2 R' U R2' U2 R2 U2 R\",\n    \"R2 U2' R2' U2 R2 U2' R2' U2' R2 U2 R' U2 R U2' R' U' R U2' R' U2 R\",\n    \"R2 U2' R2' U2 R2 U2' R2' U2' R2 U2 R' U2' R U2 R' U R U2 R' U2' R\",\n    \"R2 U2' R2' U2' R U' R U2' R' U2' R U2' R2' U R2' U R' U2 R U2 R\",\n    \"R2 U2' R2' U2' R2' U R2' U R2 U2' R' U' R' U2 R U2' R2' U' R2 U2' R\",\n    \"R2 U2' R2' U2' R2' U R2' U R2 U2' R' U' R' U2 R2 U2' R2 U' R2' U2' R\",\n    \"R2 U2' R2' U' R U2 R U2' R U2 R' U' R2 U R U R2 U2' R' U' R\",\n    \"R2 U2' R' U R U R2' U2' R2' U' R U2 R U2' R2 U2 R U2' R U R\",\n    \"R2 U' R2' U' R U2 R U' R' U' R U R2' U2 R U2 R' U' R U' R\",\n    \"R2' U R2 U2 R2 U2 R2' U2' R2 U2' R2' U2' R2 U2 R' U2' R2 U' R2' U2' R\",\n    \"R2' U R2 U2 R2' U2 R2 U2' R2' U R2 U2 R2 U2 R2' U R2 U2 R U2' R\",\n    \"R2' U R2 U2 R2' U2 R2 U2' R2' U2' R2 U2' R2' U2 R2' U2' R2 U' R2' U2' R\",\n    \"R2' U R2 U2 R2' U2 R2 U2' R2' U2' R' U2' R2' U' R2 U2' R2' U2 R2' U2' R\",\n    \"R2' U R2 U2 R2' U' R' U2' R' U2' R2' U2 R2' U2' R' U2 R2 U2' R2 U' R\",\n    \"R2' U R2 U' R2 U2' R2' U2 R2 U R2' U2' R2 U2 R' U2' R2 U' R2' U2' R\",\n    \"R2' U R2 U' R2' U2' R2 U2 R2' U R2 U2' R2' U2 R2' U2' R2 U' R2' U2' R\",\n    \"R2' U R2 U' R2' U2' R2 U2 R2' U R' U2' R2' U' R2 U2' R2' U2 R2' U2' R\",\n    \"R2' U R2 U' R2' U2' R2 U2 R2' U' R2 U2 R2 U2 R2' U R2 U2 R U2' R\",\n    \"R2' U R2 U' R' U2' R U R U R2' U' R2 U2 R2' U2' R' U' R2' U2' R\",\n    \"R2' U R2' U' R2' U2' R U R U2' R2' U2' R' U' R2' U' R' U2 R U R\",\n    \"R2' U2 R U2' R' U2 R2' U2 R2' U2' R2' U2 R2 U2 R2 U R2' U' R U2' R\",\n    \"R2' U2' R U2 R2' U' R' U2 R2' U R' U' R2' U2 R2 U R U R U2' R\",\n    \"R2' U2' R2 U2 R2' U R2 U2' R U2 R2' U2' R' U' R U2' R2 U2 R2 U2' R\",\n    \"R2' U2' R2 U2 R2' U2' R2 U2' R2' U2 R2' U2 R U2' R' U' R U2' R' U2 R\",\n    \"R2' U2' R2 U2 R2' U2' R2 U2' R2' U2 R2' U2' R U2 R' U R U2 R' U2' R\",\n    \"R2' U2' R2 U2' R2 U' R U2' R' U2' R U2' R2 U R' U R' U2 R U2 R\",\n    \"R2' U2' R2' U2 R2 U2' R2 U R U2 R U2' R' U' R U2' R U2 R2' U2' R\",\n    \"R2' U2' R2' U2' R2 U2 R' U2' R2' U' R2 U2' R2' U R U2 R2 U2 R2' U2' R\",\n    \"R2' U2' R2' U2' R' U2 R2' U2 R2 U2' R2' U2 R2 U' R U2 R2 U2 R2' U2' R\",\n    \"R2' U2' R2' U2' R' U' R2' U2' R2 U2' R2' U R2 U2 R U2' R2 U R2' U2' R\",\n    \"R2' U2' R' U2' R2' U' R2 U2' R2' U R2' U R2 U2' R2' U2' R2 U R2' U' R\",\n    \"R2' U2' R' U2' R2' U' R2 U2' R2' U2 R2' U' R2 U' R2' U2' R2 U2 R2' U2' R\",\n    \"R2' U' R2' U2 R' U2' R2' U R2 U2' R2' U2 R2 U' R U2 R2 U2 R2' U2' R\",\n    \"R2' U' R2' U2 R' U2' R2' U' R2 U2 R2' U2' R2 U R U2 R2 U2 R2' U2' R\",\n    \"R' U2' R U R U R2' U2 R U2 R' U R U2 R' U R2 U2 R2' U2' R\",\n    \"R' U2' R U2 R2' U R2 U' R' U' R' U2 R U R U2' R2' U2 R U2' R\",\n    \"R' U2' R U2' R' U2' R U' R U2 R2' U R U' R' U R2 U2 R2' U2' R\",\n    \"R' U2' R2' U' R' U R2' U' R2 U2' R U' R U2 R2' U2' R U2 R2' U R\",\n    \"R' U2' R2' U' R' U2' R U2' R2 U' R2' U2 R U2 R2' U2' R U2 R2' U R\",\n    \"R' U2' R' U' R2' U R2 U2 R U2' R' U R2' U2' R2' U R U2' R2' U2' R\",\n    \"R' U' R U2' R U2 R2' U R U' R U2' R' U R2 U2' R2' U' R2 U2' R\",\n    \"R' U' R U2' R U2 R2' U R U' R U2' R' U R2' U2' R2 U' R2' U2' R\",\n  ],\n  [\n    \"R U' R2' U' R U' R' U2 R U R U R' U2 R U2' R\",\n    \"R U' R' U R2 U2 R2' U2' R2 U R2' U2' R2 U2 R' U R\",\n    \"R U' R' U R2' U2 R2 U2' R2' U R2 U2' R2' U2 R2' U R\",\n    \"R U' R' U2' R2 U2' R2' U2 R2 U' R2' U2' R2 U2 R' U R\",\n    \"R U' R' U2' R2' U2' R2 U2 R2' U' R2 U2' R2' U2 R2' U R\",\n    \"R2 U2 R U2 R2 U R2' U2 R2 U2' R2 U R2' U2' R2 U2' R\",\n    \"R2 U' R2' U R2' U2 R2 U2' R2' U R2 U2' R2' U2 R' U R\",\n    \"R2 U' R2' U2' R2 U2' R2' U' R' U2' R2' U' R2 U2' R2' U2' R\",\n    \"R2 U' R2' U2' R2' U2' R2 U2 R2' U' R2 U2' R2' U2 R' U R\",\n    \"R2' U2 R2' U2 R' U R2' U2 R2 U2 R2' U2 R2' U2' R2 U2' R\",\n    \"R2' U2 R' U2 R2' U R2 U2 R2' U2' R2' U R2 U2' R2' U2' R\",\n    \"R2' U' R2 U R2 U2 R2' U2' R2 U R2' U2' R2 U2 R U R\",\n    \"R2' U' R2 U2' R2 U2' R2' U2 R2 U' R2' U2' R2 U2 R U R\",\n    \"R2' U' R2 U2' R2' U2' R2 U' R U2' R2 U' R2' U2' R2 U2' R\",\n    \"R U2' R2 U' R2' U2' R2 U2' R2 U2 R2' U' R2 U2' R2' U2' R\",\n    \"R2' U2' R' U' R U R2 U2 R2' U' R' U R2' U2 R2' U2' R\",\n    \"R' U2' R U R2' U' R2 U' R' U R' U R2 U2' R' U2' R\",\n    \"R' U2' R2' U' R2 U2' R2' U2' R2' U2 R2 U' R2' U2' R2 U2' R\",\n    \"R2 U2 R2 U2 R U R2 U2 R2' U' R' U2' R2' U2' R2 U2 R\",\n    \"R' U' R U R U2 R' U' R' U' R2 U' R2' U2' R2 U2 R\",\n    \"R' U' R U R2 U2 R2' U2' R2 U' R2' U2 R' U R2' U2 R\",\n    \"R' U' R U2' R2 U2' R2' U2 R2 U2 R2' U2 R' U R2' U2 R\",\n    \"R2 U2' R U' R' U R2' U2 R2 U2 R2' U2 R2' U R' U2 R\",\n    \"R2 U2' R2' U' R2 U2' R2 U2 R' U2' R U' R' U2' R U2 R\",\n    \"R2 U2' R2' U' R2 U2' R2 U2' R' U2 R U R' U2 R U2' R\",\n    \"R2' U2' R2 U' R2' U2' R U2 R' U2' R U' R' U2' R U2 R\",\n    \"R2' U2' R2 U' R2' U2' R U2' R' U2 R U R' U2 R U2' R\",\n    \"R U2' R2 U2' R2' U' R2 U2' R2 U2 R' U2' R U' R' U2' R\",\n    \"R U2' R2 U2' R2' U' R2 U2' R2 U2' R' U2 R U R' U2 R\",\n    \"R U2' R2' U2' R2 U' R2' U2' R U2 R' U2' R U' R' U2' R\",\n    \"R U2' R2' U2' R2 U' R2' U2' R U2' R' U2 R U R' U2 R\",\n    \"R U' R2 U2' R2' U2 R' U R2' U2 R2 U2 R U2 R2 U2' R2' U2' R\",\n    \"R U' R2' U2' R2 U2 R U R2 U2 R2' U2 R' U2 R2' U2' R2 U2' R\",\n    \"R U' R' U R2 U2 R2' U2' R2 U' R2' U2 R2 U2' R2' U2 R U R\",\n    \"R U' R' U R2' U2 R2 U2' R2' U' R2 U2 R2' U2' R2 U2 R U R\",\n    \"R U' R' U2' R2 U2' R2' U2 R2 U2 R2' U2 R2 U2' R2' U2 R U R\",\n    \"R U' R' U2' R2 U2' R2' U' R' U2' R2' U' R2 U2' R2' U2 R' U R\",\n    \"R U' R' U2' R2' U2' R2 U2 R2' U2 R2 U2 R2' U2' R2 U2 R U R\",\n    \"R U' R' U2' R2' U2' R2 U' R U2' R2 U2 R2' U2 R2 U2' R2' U2' R\",\n    \"R U' R' U2' R2' U2' R2 U' R U2' R2 U' R2' U2' R2 U2 R2' U R\",\n    \"R U' R' U2' R' U2' R2 U2 R2' U' R2 U' R' U' R' U2 R2 U R\",\n    \"R2 U2 R U2 R2 U2' R2' U2' R2 U2 R2' U2' R' U R2' U2' R2 U2' R\",\n    \"R2 U2 R2' U2 R2 U2' R2 U2 R2' U R2 U2 R2' U' R2' U2' R2 U2' R\",\n    \"R2 U2 R2' U2 R2 U2' R2' U2 R2 U R2' U2 R2 U' R2' U2' R2 U2' R\",\n    \"R2 U2 R2' U2' R2' U2 R2 U2 R2' U R' U2 R U' R2 U2' R2' U2' R\",\n    \"R2 U2' R2' U R2 U R2' U2' R2 U2 R2' U2 R2 U' R2' U' R2 U2' R\",\n    \"R2 U2' R2' U R2 U' R2' U2 R2 U2' R2' U' R2 U' R2' U' R2 U2' R\",\n    \"R2 U' R2 U' R U' R' U2 R U R U R' U2 R U2 R U R\",\n    \"R2 U' R2' U R2 U2 R2' U R' U2 R2' U R2 U2 R U R2 U2' R\",\n    \"R2 U' R2' U R2 U2 R2' U2' R2 U' R2' U2 R2 U2' R2' U2 R2 U R\",\n    \"R2 U' R2' U R2' U2 R2 U2' R2' U' R2 U2 R2' U2' R2 U2 R2 U R\",\n    \"R2 U' R2' U2' R2 U2' R2' U2 R2 U2 R2' U2 R2 U2' R2' U2 R2 U R\",\n    \"R2 U' R2' U2' R2' U2' R2 U2 R2' U2 R2 U2 R2' U2' R2 U2 R2 U R\",\n    \"R2 U' R2' U2' R2' U2' R2 U' R U2' R2 U' R2' U2' R2 U2 R' U R\",\n    \"R2 U' R2' U2' R' U2' R2 U2 R2' U' R2 U' R' U' R' U2 R2' U R\",\n    \"R2' U2 R2 U2 R2' U2' R2 U2 R2' U R2 U2 R2' U' R2 U2' R2' U2' R\",\n    \"R2' U2 R2 U2 R2' U2' R2' U2 R2 U R2' U2 R2 U' R2 U2' R2' U2' R\",\n    \"R2' U2 R2' U2 R' U R2' U2 R2 U2 R U2 R2 U2' R2' U2 R2 U R\",\n    \"R2' U2 R' U2 R2' U2' R2 U2' R2' U2 R2 U2' R U R2 U2' R2' U2' R\",\n    \"R2' U2' R2 U R2' U R2 U2' R2' U2 R2 U2 R2' U' R2 U' R2' U2' R\",\n    \"R2' U2' R2 U R2' U' R2 U2 R2' U2' R2 U' R2' U' R2 U' R2' U2' R\",\n    \"R2' U' R U' R U' R' U2 R U R U R' U2 R U2 R2 U R\",\n    \"R2' U' R2 U R2 U2 R2' U2' R2 U' R2' U2 R2 U2' R2' U2 R2' U R\",\n    \"R2' U' R2 U R2' U2 R2 U R U2 R2 U R2' U2 R' U R2' U2' R\",\n    \"R2' U' R2 U R2' U2 R2 U2' R2' U' R2 U2 R2' U2' R2 U2 R2' U R\",\n    \"R2' U' R2 U2' R2 U2' R2' U2 R2 U2 R2' U2 R2 U2' R2' U2 R2' U R\",\n    \"R2' U' R2 U2' R2 U2' R2' U' R' U2' R2' U' R2 U2' R2' U2 R U R\",\n    \"R2' U' R2 U2' R2' U2' R2 U2 R2' U2 R2 U2 R2' U2' R2 U2 R2' U R\",\n    \"R2' U' R2 U2' R' U2' R2 U2 R2' U' R2 U' R' U' R' U2 R' U R\",\n    \"R' U R' U2' R2 U2 R2' U R2 U' R' U' R' U R2 U2' R2' U2' R\",\n    \"R' U2 R' U' R' U2' R2' U R2 U R2' U' R' U R U2' R2' U2' R\",\n    \"R2 U2' R2' U' R2 U2' R2 U' R U' R U R2' U R U' R U' R\",\n    \"R2 U' R2' U' R2 U R2' U R2 U R2' U2' R2 U R2' U2' R2 U2' R\",\n    \"R2' U2' R2 U' R2' U2' R U' R U' R U R2' U R U' R U' R\",\n    \"R2' U' R2 U' R2' U R2 U R2' U R2 U2' R2' U R2 U2' R2' U2' R\",\n    \"R U2' R2 U' R2' U2' R U2' R2' U2 R2 U' R2' U2' R2 U2 R U R\",\n    \"R U2' R2 U' R2' U2' R2 U2' R2 U' R U2' R2 U' R2' U2' R2 U2' R\",\n    \"R U2' R2 U' R2' U2' R' U2' R2' U2 R2 U2' R2' U R2 U2' R2' U2' R\",\n    \"R2 U2' R2' U' R U2' R U' R' U2' R2' U2 R U R' U2 R2' U2' R\",\n    \"R2 U2' R2' U' R2 U2' R2 U' R U R2 U2' R2' U' R' U R2' U2 R\",\n    \"R2' U2' R2 U' R2 U2' R U' R' U2' R2 U2 R U R' U2 R' U2' R\",\n    \"R2' U2' R2 U' R2' U2' R U' R U R2 U2' R2' U' R' U R2' U2 R\",\n    \"R2' U2' R2' U' R2 U2' R2' U2' R' U' R2' U2' R2' U' R2 U2' R2' U2' R\",\n    \"R2' U2' R2' U' R2 U2' R2' U2' R' U' R' U2' R2 U' R2' U2' R2 U2' R\",\n    \"R2' U' R' U' R2 U R U2' R2 U2 R2 U' R2' U R2' U2' R2' U2' R\",\n    \"R' U2' R2 U' R2' U2' R2 U2' R' U' R2' U2' R2' U' R2 U2' R2' U2' R\",\n    \"R' U2' R2 U' R2' U2' R2 U2' R' U' R' U2' R2 U' R2' U2' R2 U2' R\",\n    \"R' U2' R2' U' R2 U R2 U2 R2' U' R2 U' R' U' R' U2 R2' U R\",\n    \"R' U2' R2' U' R2 U2' R U2' R2 U2 R2' U2' R2 U R2' U2' R2 U2' R\",\n    \"R' U2' R2' U' R2 U2' R2' U2' R2' U' R' U2' R2' U' R2 U2' R2' U2' R\",\n    \"R' U2' R2' U' R2 U2' R' U2' R2 U2 R2' U' R2 U2' R2' U2 R' U R\",\n    \"R' U2' R2' U' R' U R2 U R' U2' R2 U R2 U' R2 U R2 U2 R\",\n    \"R U2 R2' U' R U R U2' R' U' R' U R2' U2' R2' U' R2 U2' R\",\n    \"R U2 R2' U' R U R U2' R' U' R' U R' U2' R2 U' R2' U2' R\",\n    \"R' U2' R' U2 R U R' U R' U2' R2 U R2' U R2' U2' R2' U2' R\",\n    \"R U2 R U2' R' U2' R2' U' R2' U' R2 U2 R2 U' R' U2 R2 U2 R\",\n    \"R U2 R' U' R2 U' R' U' R' U2 R U2 R' U2 R2 U2' R' U2 R\",\n    \"R U2 R' U' R' U' R2 U' R' U2 R U R' U2 R' U2' R2 U2 R\",\n    \"R2 U2 R2 U2 R U R2 U2 R2' U' R' U R2' U2 R2 U2' R2' U2 R\",\n    \"R2 U' R2' U R2 U2 R2' U2' R2 U R2' U R2 U2 R2' U2' R2 U2 R\",\n    \"R2 U' R2' U R2 U2 R2' U' R2 U' R2' U2 R2 U2 R2' U' R2 U R\",\n    \"R2 U' R2' U2' R2 U2' R2' U2 R2 U' R2' U R2 U2 R2' U2' R2 U2 R\",\n    \"R2 U' R2' U2' R' U2' R U R U R2' U2 R2 U2 R U R2 U2 R\",\n    \"R2' U2 R2 U2 R' U' R U2 R2' U' R2 U' R' U2' R' U2' R U2 R\",\n    \"R2' U' R2 U R U2 R' U' R' U' R2 U' R2' U2 R' U R2' U2 R\",\n    \"R2' U' R2 U R2' U2 R2 U2' R2' U R2 U R2' U2 R2 U2' R2' U2 R\",\n    \"R2' U' R2 U R2' U2 R2 U' R2' U' R2 U2 R2' U2 R2 U' R2' U R\",\n    \"R2' U' R2 U2' R U2' R2' U2 R2 U2 R2' U R U R2' U R2' U2 R\",\n    \"R2' U' R2 U2' R2' U2' R2 U2 R2' U' R2 U R2' U2 R2 U2' R2' U2 R\",\n    \"R' U' R U R U2 R' U' R' U R' U2' R2' U' R2 U2' R2' U2 R\",\n    \"R' U' R U R U2 R' U' R' U' R2 U2 R2' U2 R2 U2' R2' U2 R\",\n    \"R' U' R U R2 U2 R2 U2' R2' U' R2 U2' R U' R' U R2' U2 R\",\n    \"R' U' R U2' R U2' R2' U2 R2 U2 R2' U R U R' U R2 U2 R\",\n    \"R' U' R U2' R' U2' R U R U R2' U' R2 U2' R2' U2' R2 U2 R\",\n    \"R' U' R2' U2 R U2 R U R U2 R' U2' R2 U R2 U' R U2 R\",\n    \"R' U' R2' U2' R2 U2 R U R2 U2 R2' U' R2 U2' R2 U2' R2' U2 R\",\n    \"R U R' U2 R U2 R U' R' U R U2 R' U2 R' U2 R2 U R\",\n    \"R U2' R2' U' R U R2' U2' R2 U R U2' R2' U2 R' U R U2' R\",\n    \"R2 U R2 U R U' R2 U' R U2' R2 U R' U' R U' R2' U2' R\",\n    \"R2 U R' U2 R2' U2 R' U2 R2' U2' R2' U2 R2' U R2 U2' R U' R\",\n    \"R2 U R' U' R2 U R' U R U' R2' U R U' R2' U R2' U2' R\",\n    \"R2 U2' R2' U R' U' R U' R U R2' U R U' R U' R U2' R\",\n    \"R2 U' R2' U' R2 U2 R2' U R2 U' R2' U R2 U2 R2' U' R2 U R\",\n    \"R2 U' R2' U' R2' U2 R2 U R2' U' R2 U R2' U2 R2 U' R2 U R\",\n    \"R2' U2 R U2' R2 U R2' U2 R2' U2' R2' U2 R' U2 R2' U2 R' U2' R\",\n    \"R2' U2' R2 U R' U' R U' R U R2' U R U' R U' R2 U2' R\",\n    \"R2' U' R2 U' R2 U2 R2' U R2 U' R2' U R2 U2 R2' U' R2' U R\",\n    \"R2' U' R2 U' R2' U2 R2 U R2' U' R2 U R2' U2 R2 U' R2' U R\",\n    \"R U2' R U' R' U R2' U2 R2 U2 R2' U R U R2 U R' U2 R\",\n    \"R U2' R2 U R2 U' R2 U' R2' U2' R2 U2' R U' R2 U' R U R\",\n    \"R U2' R2 U' R2' U R2' U2 R2 U2 R2' U R U R2' U R2' U2 R\",\n    \"R U2' R' U R' U2' R U2 R U R' U2 R U2 R2' U R2 U2 R\",\n    \"R U2' R' U R' U2' R U2 R U R' U2 R2 U2 R2 U R2' U2 R\",\n    \"R U' R U2' R2' U2 R' U2 R U2 R' U R U' R2 U2' R' U' R\",\n    \"R2 U R' U2 R' U R' U' R' U2' R2 U2 R U R U2 R2 U' R\",\n    \"R2 U2 R U R2 U2 R2' U2 R2 U2' R2 U2 R2 U2' R U' R' U2' R\",\n    \"R2 U2 R U' R2 U2 R2 U2' R U R U R2' U2 R2' U' R' U2' R\",\n    \"R2 U2' R2' U' R U R U2 R2' U' R U' R2' U2' R2 U R2' U R\",\n    \"R2 U2' R2' U' R2 U2 R2' U R2 U2' R2' U2 R2 U2 R2' U2' R2 U2' R\",\n    \"R2 U2' R2' U' R2 U2 R2' U R2 U2' R2' U' R2 U2' R2' U2 R2 U R\",\n    \"R2 U2' R2' U' R2 U2 R2' U R2' U2' R2 U' R2' U2' R2 U2 R2 U R\",\n    \"R2 U2' R2' U' R2 U2 R2' U' R2 U2 R2 U2' R2' U' R2 U2' R2' U2' R\",\n    \"R2 U2' R2' U' R2 U2 R2' U' R2 U2 R2' U2' R2 U' R2' U2' R2 U2' R\",\n    \"R2 U2' R2' U' R2' U2 R2 U2' R2 U2' R2' U2' R2 U' R U2' R' U2' R\",\n    \"R2' U2' R2 U R2' U R U2 R' U' R' U2' R2 U R2' U R U R\",\n    \"R2' U2' R2 U2 R U2 R2 U2 R2' U R' U2' R U' R2 U2' R2' U2' R\",\n    \"R2' U2' R2 U' R2' U2 R2 U R2 U2' R2' U' R2 U2' R2' U2 R2' U R\",\n    \"R2' U2' R2 U' R2' U2 R2 U R2' U2' R2 U2 R2' U2 R2 U2' R2' U2' R\",\n    \"R2' U2' R2 U' R2' U2 R2 U R2' U2' R2 U' R2' U2' R2 U2 R2' U R\",\n    \"R2' U2' R2 U' R2' U2 R2 U' R2' U2 R2 U2' R2' U' R2 U2' R2' U2' R\",\n    \"R2' U2' R2 U' R2' U2 R2 U' R2' U2 R2' U2' R2 U' R2' U2' R2 U2' R\",\n    \"R2' U2' R' U' R U R2 U2 R2' U' R' U R U2 R2 U2' R2' U2 R\",\n    \"R' U2 R U R' U R' U2' R2 U R2' U R2' U2' R2' U2' R2 U' R\",\n    \"R' U2' R2' U' R2 U R U R U R2' U2 R2 U2 R U R2 U2 R\",\n    \"R2' U R2' U R2' U R2 U2' R' U' R' U2 R' U2 R2 U2 R2' U2' R\",\n    \"R2' U R2' U R2' U R2 U2' R' U' R' U2 R' U' R2 U2' R2' U2 R\",\n    \"R2' U2 R2 U' R' U2 R' U' R' U2' R2 U R2' U R2' U2 R2' U2 R\",\n    \"R U R2 U' R2' U R2 U2 R2' U2' R2 U R2' U2' R2 U2' R2' U' R\",\n    \"R U R2 U' R2' U2' R2 U2' R2' U2 R2 U' R2' U2' R2 U2' R2' U' R\",\n    \"R U R2' U2 R2 U2 R' U' R U2 R2' U' R2 U' R' U2' R' U2' R\",\n    \"R U R2' U' R2 U R2' U2 R2 U2' R2' U R2 U2' R2' U2' R2 U' R\",\n    \"R U R2' U' R2 U2' R2' U2' R2 U2 R2' U' R2 U2' R2' U2' R2 U' R\",\n    \"R2 U R2 U' R2' U R2 U2 R2' U2' R2 U R2' U2' R2 U2' R2' U' R\",\n    \"R2 U R2 U' R2' U2' R2 U2' R2' U2 R2 U' R2' U2' R2 U2' R2' U' R\",\n    \"R2 U R2' U' R2 U R2' U2 R2 U2' R2' U R2 U2' R2' U2' R2 U' R\",\n    \"R2 U R2' U' R2 U2' R2' U2' R2 U2 R2' U' R2 U2' R2' U2' R2 U' R\",\n    \"R2 U2' R2 U2' R2' U' R2 U2' R2 U2 R' U2' R U' R' U2' R U2 R\",\n    \"R2 U2' R2 U2' R2' U' R2 U2' R2 U2' R' U2 R U R' U2 R U2' R\",\n    \"R2 U2' R2' U2' R2 U' R2' U2' R U2 R' U2' R U' R' U2' R U2 R\",\n    \"R2 U2' R2' U2' R2 U' R2' U2' R U2' R' U2 R U R' U2 R U2' R\",\n    \"R2' U R U2 R U2' R' U2' R2' U' R2' U' R2 U2 R2 U' R' U2 R\",\n    \"R2' U R2 U' R2' U R2 U2 R2' U2' R2 U R2' U2' R2 U2' R2' U' R\",\n    \"R2' U R2 U' R2' U2' R2 U2' R2' U2 R2 U' R2' U2' R2 U2' R2' U' R\",\n    \"R2' U R2' U' R2 U R2' U2 R2 U2' R2' U R2 U2' R2' U2' R2 U' R\",\n    \"R2' U R2' U' R2 U2' R2' U2' R2 U2 R2' U' R2 U2' R2' U2' R2 U' R\",\n    \"R2' U2' R2 U2' R2' U' R2 U2' R2 U2 R' U2' R U' R' U2' R U2 R\",\n    \"R2' U2' R2 U2' R2' U' R2 U2' R2 U2' R' U2 R U R' U2 R U2' R\",\n    \"R2' U2' R2' U2' R2 U' R2' U2' R U2 R' U2' R U' R' U2' R U2 R\",\n    \"R2' U2' R2' U2' R2 U' R2' U2' R U2' R' U2 R U R' U2 R U2' R\",\n    \"R' U R2 U' R2' U R2 U2 R2' U2' R2 U R2' U2' R2 U2' R2' U' R\",\n    \"R' U R2 U' R2' U2' R2 U2' R2' U2 R2 U' R2' U2' R2 U2' R2' U' R\",\n    \"R' U R2' U' R2 U R2' U2 R2 U2' R2' U R2 U2' R2' U2' R2 U' R\",\n    \"R' U R2' U' R2 U2' R2' U2' R2 U2 R2' U' R2 U2' R2' U2' R2 U' R\",\n    \"R' U2' R2 U2' R2' U' R2 U2' R2 U2 R' U2' R U' R' U2' R U2 R\",\n    \"R' U2' R2 U2' R2' U' R2 U2' R2 U2' R' U2 R U R' U2 R U2' R\",\n    \"R' U2' R2' U2' R2 U' R2' U2' R U2 R' U2' R U' R' U2' R U2 R\",\n    \"R' U2' R2' U2' R2 U' R2' U2' R U2' R' U2 R U R' U2 R U2' R\",\n    \"R U2 R2 U2 R2' U2' R U2 R2' U R2 U2 R2' U2 R U2 R2 U2' R2' U2' R\",\n    \"R U2 R2 U2 R2' U2' R2 U2 R2 U R2' U2 R2 U2 R U2 R2 U2' R2' U2' R\",\n    \"R U2 R2 U' R2' U2' R' U2 R2' U' R2 U2 R2' U' R2 U2' R2' U2 R2' U R\",\n    \"R U2 R2' U2 R2 U2' R2' U2 R2' U R2 U2 R2' U2 R' U2 R2' U2' R2 U2' R\",\n    \"R U2 R2' U2 R2 U2' R' U2 R2 U R2' U2 R2 U2 R' U2 R2' U2' R2 U2' R\",\n    \"R U2 R2' U2' R2 U R2 U' R U' R' U2 R2 U2' R U R' U R' U R\",\n    \"R U' R U2' R U2 R2 U R2' U2 R2 U2' R2 U R2' U2' R2 U2 R' U R\",\n    \"R U' R2 U2' R2' U2 R' U R2' U2 R2 U2 R2' U2 R2' U2' R2 U2 R2' U R\",\n    \"R U' R2 U2' R' U2 R2' U R2 U2 R2' U2' R2' U R2 U2' R2' U2 R2' U R\",\n    \"R U' R2' U R U2 R U2' R' U R' U2' R U2 R U R' U' R U R\",\n    \"R U' R2' U2' R U2' R2' U2' R U2 R U2 R' U' R' U R U2 R2 U R\",\n    \"R U' R2' U2' R2 U2 R U R2 U2 R2' U2 R2 U2 R2 U2' R2' U2 R2 U R\",\n    \"R U' R2' U' R U' R' U2 R U R U R2 U' R2 U2' R U2 R2 U R\",\n    \"R U' R2' U' R U' R' U2 R U' R U' R' U2' R U' R' U2' R U2 R\",\n    \"R U' R' U R U2 R' U' R' U' R2 U' R2' U2 R2 U2' R' U2 R U R\",\n    \"R U' R' U R2 U2 R2 U2' R2' U' R2 U2' R U' R2 U2' R2' U2 R U R\",\n    \"R U' R' U R2 U2 R2' U R' U2 R2' U R2 U2 R U R2 U2 R' U R\",\n    \"R U' R' U R2' U2 R2 U R U2 R2 U R2' U2 R' U R2' U2 R2' U R\",\n    \"R U' R' U R2' U2 R2 U2' R2' U R2 U2' R' U2 R2 U R2' U2 R' U2' R\",\n    \"R U' R' U R2' U2 R2' U2' R2 U' R2' U2' R' U' R2' U2' R2 U2 R U R\",\n    \"R U' R' U2' R U2' R2' U2 R2 U2 R2' U R U R U2' R' U2 R U R\",\n    \"R U' R' U2' R U2' R2' U2 R2 U2' R2' U R2 U' R' U' R' U2 R2 U R\",\n    \"R U' R' U2' R2 U2' R2' U' R2 U2' R' U2 R2 U2' R2' U' R2 U2' R2' U2' R\",\n    \"R U' R' U2' R2 U2' R2' U' R2 U2' R' U2 R2' U2' R2 U' R2' U2' R2 U2' R\",\n    \"R U' R' U2' R2 U2' R2' U' R' U2' R2' U2 R2 U2 R2' U2' R2 U2 R2 U R\",\n    \"R U' R' U2' R2' U2' R2 U2 R2' U' R2 U2' R' U2 R2 U R2' U2 R' U2' R\",\n    \"R U' R' U2' R2' U2' R2 U' R2' U2' R2' U2 R2 U2' R2' U' R2 U2' R2' U2' R\",\n    \"R U' R' U2' R2' U2' R2 U' R2' U2' R2' U2 R2' U2' R2 U' R2' U2' R2 U2' R\",\n    \"R U' R' U2' R' U2' R U R U R2' U2 R2 U2 R2' U2' R U2 R U R\",\n    \"R2 U R2' U2' R' U2 R2' U2' R2 U R2' U2 R2 U2' R2' U R2' U2' R2 U2' R\",\n    \"R2 U R2' U2' R' U2 R2' U2' R2 U2' R2' U2' R2 U2 R2' U' R2' U2' R2 U2' R\",\n    \"R2 U2 R U2 R2 U R2' U2 R2 U R' U2 R2' U R2 U2 R U R2 U2' R\",\n    \"R2 U2 R U2 R2 U R2' U2 R2 U2' R2 U' R2' U2 R2 U2' R2' U2 R2 U R\",\n    \"R2 U2 R U2' R2 U2 R2' U2' R2 U' R2' U R' U2 R U' R2 U2' R2' U2' R\",\n    \"R2 U2 R2 U2 R U R2 U2 R2' U' R2 U2' R2 U2 R2' U2' R2' U2 R2 U R\",\n    \"R2 U2 R2 U2 R U R2 U2 R2' U' R' U2' R2' U2 R2 U2' R U2 R2 U R\",\n    \"R2 U2 R2 U2 R2' U2' R2' U2 R2' U R2 U2 R2' U2 R' U2 R2 U2' R2' U2' R\",\n    \"R2 U2 R2 U2 R2' U2' R' U2 R2 U R2' U2 R2 U2 R' U2 R2 U2' R2' U2' R\",\n    \"R2 U2 R2 U2' R2' U R U' R U' R' U2 R2' U2' R U R' U R2' U R\",\n    \"R2 U2 R2' U2 R U2' R2 U2 R2' U R2 U2 R2' U2' R U R2' U2' R2 U2' R\",\n    \"R2 U2 R2' U2 R U2' R2' U2 R2 U R2' U2 R2 U2' R U R2' U2' R2 U2' R\",\n    \"R2 U2 R2' U2 R2 U2' R2' U2 R2 U R2' U' R' U2' R2' U' R2 U2' R2' U2' R\",\n    \"R2 U2 R2' U2 R2' U2' R2 U2 R2' U R2 U2 R2' U2' R' U R2' U2' R2 U2' R\",\n    \"R2 U2 R2' U2 R2' U2' R2' U2 R2 U R2' U2 R2 U2' R' U R2' U2' R2 U2' R\",\n    \"R2 U2 R2' U2 R' U2' R2 U2 R2' U R2 U2 R2' U2' R2' U R2' U2' R2 U2' R\",\n    \"R2 U2 R2' U2 R' U2' R2' U2 R2 U R2' U2 R2 U2' R2' U R2' U2' R2 U2' R\",\n    \"R2 U2 R2' U2 R' U2' R2' U2 R2 U2' R2' U2' R2 U2 R2' U' R2' U2' R2 U2' R\",\n    \"R2 U2 R2' U2' R2 U R' U2 R' U2' R U' R' U2' R U2 R' U2 R2 U2' R\",\n    \"R2 U2 R2' U2' R2 U R' U2' R' U2 R U R' U2 R U2' R' U2 R2 U2' R\",\n    \"R2 U2' R2' U R2 U R2' U2' R2 U2 R2' U2 R2 U R U2' R2 U' R2' U2' R\",\n    \"R2 U2' R2' U R2 U' R2' U2 R2 U2' R2' U' R2 U R U2' R2 U' R2' U2' R\",\n    \"R2 U2' R2' U R2 U' R2' U2 R2' U2' R2 U' R2' U2' R' U R2' U' R2 U2' R\",\n    \"R2 U' R U2' R2' U2 R' U R2' U2 R2 U2 R U2 R2 U2' R2' U2 R U R\",\n    \"R2 U' R U2' R2' U2 R' U R2' U2 R2 U2 R2' U2 R2' U2' R2 U2 R' U R\",\n    \"R2 U' R U2' R' U2 R2' U R2 U2 R2' U2' R2' U R2 U2' R2' U2 R' U R\",\n    \"R2 U' R2 U R U2 R U2' R' U R' U2' R U2 R U R' U' R2 U R\",\n    \"R2 U' R2 U2' R U2' R2' U2' R U2 R U2 R' U' R' U R U2 R2' U R\",\n    \"R2 U' R2 U2' R2 U2 R U R2 U2 R2' U2 R2 U2 R2 U2' R2' U2 R2' U R\",\n    \"R2 U' R2 U2' R2 U2 R U R2 U2 R2' U2 R' U2 R2' U2' R2 U2 R U R\",\n    \"R2 U' R2 U2' R2' U' R2 U2' R U2 R2 U' R2' U2 R2 U' R2' U2' R2 U2' R\",\n    \"R2 U' R2' U R U2 R' U' R' U' R2 U' R2' U2 R2 U2' R' U2 R2 U R\",\n    \"R2 U' R2' U R2 U2 R2 U2' R2' U' R2 U2' R U2 R2 U2 R2' U2' R2 U2' R\",\n    \"R2 U' R2' U R2 U2 R2 U2' R2' U' R2 U2' R U' R2 U2' R2' U2 R2 U R\",\n    \"R2 U' R2' U R2 U2 R2' U2' R2 U R2 U2' R2' U' R2 U2' R U2 R2 U' R\",\n    \"R2 U' R2' U R2 U2 R2' U2' R2 U R2' U' R2 U2 R U2' R2 U' R2' U2' R\",\n    \"R2 U' R2' U R2 U2 R2' U2' R2 U2 R2' U2 R' U2' R2' U' R2 U2' R2' U2' R\",\n    \"R2 U' R2' U R2 U2' R2' U2 R' U2' R2' U' R2 U2' R2' U R2' U2' R2 U2' R\",\n    \"R2 U' R2' U R2' U2 R2 U R U2 R2 U R2' U2 R' U R2' U2 R' U R\",\n    \"R2 U' R2' U R2' U2 R2 U R2' U2 R' U2' R2' U2 R2 U R2' U2' R2 U2' R\",\n    \"R2 U' R2' U R2' U2 R2 U2' R2' U R2 U2 R2' U2' R' U2 R2' U R2 U2' R\",\n    \"R2 U' R2' U R2' U2 R2' U2' R2 U' R2' U2' R' U' R2' U2' R2 U2 R2 U R\",\n    \"R2 U' R2' U2' R U2' R2' U2 R2 U2 R2' U R U R U2' R' U2 R2 U R\",\n    \"R2 U' R2' U2' R U2' R2' U2 R2 U2' R2' U R2 U' R' U' R' U2 R2' U R\",\n    \"R2 U' R2' U2' R2 U2 R2' U2' R' U2 R2' U R2 U2 R2' U' R2' U2' R2 U2' R\",\n    \"R2 U' R2' U2' R2 U2' R2 U2 R2' U R2 U2 R U2' R2 U2' R2' U2' R2 U2' R\",\n    \"R2 U' R2' U2' R2 U2' R2' U2 R2 U' R2 U2' R2' U' R2 U2' R U2 R2 U' R\",\n    \"R2 U' R2' U2' R2 U2' R2' U2 R2 U' R2' U' R2 U2 R U2' R2 U' R2' U2' R\",\n    \"R2 U' R2' U2' R2 U2' R2' U' R' U2' R2' U2 R2 U2 R2' U2' R2 U2 R2' U R\",\n    \"R2 U' R2' U2' R2' U2' R2 U2 R2' U' R2 U2 R2' U2' R' U2 R2' U R2 U2' R\",\n    \"R2 U' R2' U2' R2' U2' R2 U' R U2' R2 U2 R2' U2 R2 U2' R2' U2 R U R\",\n    \"R2 U' R2' U2' R2' U2' R2 U' R2' U2' R' U2 R2 U2' R2' U' R2 U2' R2' U2' R\",\n    \"R2 U' R2' U2' R2' U2' R2 U' R2' U2' R' U2 R2' U2' R2 U' R2' U2' R2 U2' R\",\n    \"R2 U' R2' U2' R' U2 R2 U R2 U R' U2' R2 U R2 U' R2 U R2 U2 R\",\n    \"R2 U' R2' U2' R' U2' R U R U R2' U2 R2 U2 R2' U2' R U2 R2 U R\",\n    \"R2 U' R2' U2' R' U2' R2 U2 R2' U' R2 U' R' U R2 U R2' U2 R' U2' R\",\n    \"R2 U' R2' U' R2 U2 R U2' R2 U' R2' U2' R2 U2 R2 U' R2' U2' R2 U2' R\",\n    \"R2 U' R' U' R U R2' U2 R2' U2' R U2 R2' U2' R2 U2 R U' R U' R\",\n    \"R2 U' R' U' R U R2' U2 R2' U2' R' U2 R2 U2' R2' U2 R2' U' R U' R\",\n    \"R2' U R2 U2' R U2 R2 U2' R2' U R2 U2 R2' U2' R2 U R2 U2' R2' U2' R\",\n    \"R2' U R2 U2' R U2 R2 U2' R2' U2' R2 U2' R2' U2 R2 U' R2 U2' R2' U2' R\",\n    \"R2' U R2' U2' R' U2 R2' U R2 U2' R2' U2 R2 U2 R2' U2 R2' U2' R2 U2' R\",\n    \"R2' U R2' U2' R' U2 R2' U' R2 U2 R2' U2' R2 U' R2' U2 R2' U2' R2 U2' R\",\n    \"R2' U2 R2 U2 R U2' R2 U2 R2' U R2 U2 R2' U2' R2 U R2 U2' R2' U2' R\",\n    \"R2' U2 R2 U2 R U2' R2 U2 R2' U2' R2 U2' R2' U2 R2 U' R2 U2' R2' U2' R\",\n    \"R2' U2 R2 U2 R U2' R2' U2 R2 U R2' U2 R2 U2' R2 U R2 U2' R2' U2' R\",\n    \"R2' U2 R2 U2 R2 U2' R2 U2 R2' U R2 U2 R2' U2' R U R2 U2' R2' U2' R\",\n    \"R2' U2 R2 U2 R2 U2' R2' U2 R2 U R2' U2 R2 U2' R U R2 U2' R2' U2' R\",\n    \"R2' U2 R2 U2 R2' U2' R2 U2 R2' U R2 U' R U2' R2 U' R2' U2' R2 U2' R\",\n    \"R2' U2 R2 U2 R' U2' R2 U2 R2' U R2 U2 R2' U2' R' U R2 U2' R2' U2' R\",\n    \"R2' U2 R2 U2 R' U2' R2' U2 R2 U R2' U2 R2 U2' R' U R2 U2' R2' U2' R\",\n    \"R2' U2 R2 U2' R2' U R' U2 R' U2' R U' R' U2' R U2 R2' U2 R2' U2' R\",\n    \"R2' U2 R2 U2' R2' U R' U2' R' U2 R U R' U2 R U2' R2' U2 R2' U2' R\",\n    \"R2' U2 R2' U2 R2 U2' R' U2 R2' U R2 U2 R2' U2 R2' U2 R2' U2' R2 U2' R\",\n    \"R2' U2 R2' U2 R' U R2' U' R2 U2' R2' U2 R2 U2' R2' U' R2' U2' R2 U2' R\",\n    \"R2' U2 R2' U2 R' U2' R2' U2' R2 U2 R2' U2' R2 U' R2' U2 R2' U2' R2 U2' R\",\n    \"R2' U2 R2' U2' R2 U' R2' U2 R2 U2' R2 U2' R2' U2' R2 U' R U R2 U2 R\",\n    \"R2' U2 R' U2 R2 U2 R2' U R U2 R' U2 R2 U2 R2' U R U R U' R\",\n    \"R2' U2 R' U2 R2' U R2 U2 R2' U R U2 R2 U R2' U2 R' U R2' U2' R\",\n    \"R2' U2 R' U2 R2' U R2 U2 R2' U2' R2' U' R2 U2 R2' U2' R2 U2 R2' U R\",\n    \"R2' U2' R2 U R2' U R2 U2' R2' U2 R2 U2 R2' U R' U2' R2' U' R2 U2' R\",\n    \"R2' U2' R2 U R2' U' R2 U2 R2 U2' R2' U' R2 U2' R U R2 U' R2' U2' R\",\n    \"R2' U2' R2 U R2' U' R2 U2 R2' U2' R2 U' R2' U R' U2' R2' U' R2 U2' R\",\n    \"R2' U' R U R U2 R U2' R' U R' U2' R U2 R U R' U' R2' U R\",\n    \"R2' U' R U2' R U2' R2' U2' R U2 R U2 R' U' R' U R U2 R' U R\",\n    \"R2' U' R U2' R2 U2 R U R2 U2 R2' U2 R2 U2 R2 U2' R2' U2 R' U R\",\n    \"R2' U' R U2' R2 U2 R U R2 U2 R2' U2 R' U2 R2' U2' R2 U2 R2 U R\",\n    \"R2' U' R U' R U' R' U2 R U R U R' U' R2' U R2 U2 R U2' R\",\n    \"R2' U' R2 U R U2 R' U' R' U' R2 U' R2' U2 R2 U2' R' U2 R2' U R\",\n    \"R2' U' R2 U R2 U2 R2 U2' R2' U' R2 U2' R U' R2 U2' R2' U2 R2' U R\",\n    \"R2' U' R2 U R2 U2 R2' U R2 U2 R U2' R2 U2 R2' U R2 U2' R2' U2' R\",\n    \"R2' U' R2 U R2 U2 R2' U R' U2 R2' U R2 U2 R U R2 U2 R U R\",\n    \"R2' U' R2 U R2 U2 R2' U2' R2 U R2' U2 R2 U2' R U2 R2 U R2' U2' R\",\n    \"R2' U' R2 U R2' U2 R2 U2' R2' U R2 U' R2' U2 R' U2' R2' U' R2 U2' R\",\n    \"R2' U' R2 U R2' U2 R2 U2' R2' U R2' U2' R2 U' R2' U2' R' U2 R2' U' R\",\n    \"R2' U' R2 U R2' U2 R2 U2' R2' U2 R2 U2 R U2' R2 U' R2' U2' R2 U2' R\",\n    \"R2' U' R2 U R2' U2 R2' U2' R2 U' R2' U2' R' U2 R2' U2 R2 U2' R2' U2' R\",\n    \"R2' U' R2 U R2' U2 R2' U2' R2 U' R2' U2' R' U' R2' U2' R2 U2 R2' U R\",\n    \"R2' U' R2 U R2' U2' R2 U2 R U2' R2 U' R2' U2' R2 U R2 U2' R2' U2' R\",\n    \"R2' U' R2 U2' R U2' R2' U2 R2 U2 R2' U R U R U2' R' U2 R2' U R\",\n    \"R2' U' R2 U2' R U2' R2' U2 R2 U2' R2' U R2 U' R' U' R' U2 R' U R\",\n    \"R2' U' R2 U2' R2 U2' R2' U2 R2 U' R2' U2 R2 U2' R U2 R2 U R2' U2' R\",\n    \"R2' U' R2 U2' R2 U2' R2' U' R2 U2' R U2 R2 U2' R2' U' R2 U2' R2' U2' R\",\n    \"R2' U' R2 U2' R2 U2' R2' U' R2 U2' R U2 R2' U2' R2 U' R2' U2' R2 U2' R\",\n    \"R2' U' R2 U2' R2 U2' R2' U' R' U2' R2' U2 R2 U2 R2' U2' R2 U2 R' U R\",\n    \"R2' U' R2 U2' R2' U2 R2 U2' R U2 R2 U R2' U2 R2 U' R2 U2' R2' U2' R\",\n    \"R2' U' R2 U2' R2' U2' R2 U2 R2' U' R2 U' R2' U2 R' U2' R2' U' R2 U2' R\",\n    \"R2' U' R2 U2' R2' U2' R2 U2 R2' U' R2' U2' R2 U' R2' U2' R' U2 R2' U' R\",\n    \"R2' U' R2 U2' R2' U2' R2 U' R U2' R2 U2 R2' U2 R2 U2' R2' U2 R2 U R\",\n    \"R2' U' R2 U2' R2' U2' R2' U2 R2 U R2' U2 R' U2' R2' U2' R2 U2' R2' U2' R\",\n    \"R2' U' R2 U2' R' U2' R U R U R2' U2 R2 U2 R2' U2' R U2 R2' U R\",\n    \"R2' U' R2 U' R2' U2 R' U2' R2' U' R2 U2' R2' U2 R2' U' R2 U2' R2' U2' R\",\n    \"R2' U' R2' U2' R2 U' R2' U2' R' U2 R2' U' R2 U2 R2' U' R2 U2' R2' U2' R\",\n    \"R2' U' R' U2' R U2 R2 U R2' U2 R2 U2' R2 U R2' U2' R2 U2 R U R\",\n    \"R' U R U2' R U2 R2' U2' R2 U2' R2' U2' R2 U2 R2 U' R2 U2' R2' U2' R\",\n    \"R' U R U2' R2 U2 R2 U2' R2' U2' R2 U2' R2' U2 R U' R2 U2' R2' U2' R\",\n    \"R' U R U2' R2' U2 R2 U2' R2' U2' R2 U' R' U' R' U R2 U2' R2' U2' R\",\n    \"R' U R2 U R2 U2 R2' U2 R2' U2' R2 U R2' U R' U R2' U2 R2' U2' R\",\n    \"R' U R2' U R' U' R2' U2' R2 U R U R2 U2' R2 U2' R2' U2 R2' U2' R\",\n    \"R' U R' U2' R2 U R2' U R U R U2' R' U2 R' U' R2 U2' R2' U2' R\",\n    \"R' U R' U2' R2' U2 R2 U R2' U2 R' U2 R' U' R' U R2 U2' R2' U2' R\",\n    \"R' U2 R2 U2 R U R2 U2 R2' U' R' U R U2 R2 U2' R2 U2 R2' U2' R\",\n    \"R' U2 R2 U2 R U R2 U2 R2' U' R' U R U2 R' U2' R2' U2 R2 U2' R\",\n    \"R' U2 R2 U2' R2' U' R2 U2 R2' U2' R U2' R2' U2' R2 U' R U R2 U2 R\",\n    \"R' U2 R2' U2 R2 U2 R2' U2' R2' U2 R' U' R2' U2 R U' R2 U2' R2' U2' R\",\n    \"R' U2 R' U' R' U' R2' U R2 U' R2' U' R2 U R2 U R U2' R2' U2' R\",\n    \"R' U2' R U R2' U R U R' U2' R2 U' R' U R2' U' R2 U2' R2' U2' R\",\n    \"R' U2' R' U2 R U2' R U2' R2 U2' R2' U' R2 U2' R2 U2' R' U2 R U2' R\",\n    \"R' U2' R' U2 R U2' R U2' R2' U2' R2 U' R2' U2' R U2' R' U2 R U2' R\",\n    \"R' U' R U R U2 R' U' R' U R2 U2' R' U2 R2 U2' R2' U' R2 U2' R\",\n    \"R' U' R U R U2 R' U' R' U R2 U2' R' U2 R2' U2' R2 U' R2' U2' R\",\n    \"R' U' R2 U R U2' R U2 R' U R U2 R U2' R2 U2' R2' U2 R2' U2' R\",\n    \"R' U' R' U R U2' R U2 R' U R' U2 R2 U2' R2' U2' R2 U2 R' U2' R\",\n    \"R' U' R' U' R' U2 R2' U2' R2' U' R2 U2' R2' U' R' U2 R2 U2' R2' U2' R\",\n    \"R' U' R' U' R' U2 R' U2' R2 U' R2' U2' R2 U' R' U2 R2 U2' R2' U2' R\",\n    \"R U R2 U2' R2' U R2 U2' R2' U2 R2 U R U R2 U R' U' R' U' R\",\n    \"R U R2 U2' R2' U' R2 U2 R2' U2' R2 U2' R U R2 U R' U' R' U' R\",\n    \"R U R2' U2 R2 U2 R2 U2' R U R' U R2 U2' R' U2 R U2' R' U2' R\",\n    \"R U R' U R' U' R2 U' R' U' R U R' U R' U R U2' R U' R\",\n    \"R U R' U R' U' R2 U' R' U' R2 U R2' U R' U R U2' R2 U' R\",\n    \"R U2' R U2 R2' U R2 U2 R2' U2' R' U2 R U R' U R2 U2' R2' U2' R\",\n    \"R U2' R2 U2 R2 U R2' U2 R2 U2' R' U2 R U R' U R2 U2' R2' U2' R\",\n    \"R U2' R' U2 R' U2' R2 U2 R2' U R2 U2 R' U R' U R2 U2' R2' U2' R\",\n    \"R U2' R' U2 R' U2' R2' U2 R2 U R2' U2 R2' U R' U R2 U2' R2' U2' R\",\n    \"R U' R U2 R U2 R' U R U R U2 R' U' R2' U R' U' R' U' R\",\n    \"R U' R2 U R2' U R U' R' U2' R2' U2 R U' R' U R2 U2' R2' U2' R\",\n    \"R2 U' R' U' R U2 R2' U R2 U2' R2' U2 R2 U' R' U R' U2 R2 U2' R\",\n    \"R2 U' R' U' R U2 R2' U' R2 U2 R2' U2' R2 U R' U R' U2 R2 U2' R\",\n    \"R2' U2' R2 U' R2' U' R U2' R U' R U R2' U2 R' U' R2 U' R U' R\",\n    \"R2' U' R2' U2' R2' U R U R' U' R U R2 U2' R2' U2 R U R2' U2' R\",\n    \"R' U R2' U' R2' U' R' U R2' U R U2 R2 U2 R2' U R2 U2 R' U2' R\",\n    \"R' U R2' U' R2' U' R' U R2' U R U2 R2' U2 R2 U R2' U2 R2' U2' R\",\n    \"R' U2 R' U R2 U R' U' R U' R2' U2' R U R U2 R2' U2' R U2 R\",\n    \"R' U2 R' U2 R2' U2' R2 U2' R2' U' R2' U' R U' R' U R' U2 R U2' R\",\n    \"R' U2 R' U' R U R2' U2' R' U R' U' R U2 R2' U2 R2' U2' R U2 R\",\n    \"R U2' R2 U R2' U R' U' R2' U R2' U2' R2 U R2' U2' R2 U2 R2' U R\",\n    \"R U2' R2 U R2' U R' U' R2' U R2' U2' R2 U' R2' U2 R2 U2' R2' U2' R\",\n    \"R U2' R2 U2 R2' U2 R2 U2' R2' U2 R2 U R2 U2 R2' U' R2 U2' R2' U2' R\",\n    \"R U2' R2 U' R2' U R2' U2 R2 U2 R2' U R U R U2' R' U2 R2' U R\",\n    \"R U2' R2 U' R2' U R2' U2 R2 U2' R2' U R2 U' R' U' R' U2 R' U R\",\n    \"R U2' R2 U' R2' U2' R U2' R2' U2 R2 U2 R2' U2 R2 U2' R2' U2 R2' U R\",\n    \"R U2' R2 U' R2' U2' R U2' R2' U' R' U2' R2' U' R2 U2' R2' U2 R U R\",\n    \"R U2' R2 U' R2' U2' R2 U2' R2 U2 R2' U2 R2 U2 R2' U2' R2 U2 R2' U R\",\n    \"R U2' R2 U' R2' U2' R2' U2' R2 U2 R2' U' R2 U' R' U' R' U2 R' U R\",\n    \"R U2' R2 U' R2' U2' R' U2' R2 U2 R2' U2' R2 U R2' U2' R2 U2 R U R\",\n    \"R U2' R' U' R2' U2' R2 U R2' U' R2' U R' U' R U' R2 U2' R2' U2' R\",\n    \"R2 U2' R2' U2 R2 U2' R U2 R2 U2 R2' U R' U2 R U' R2 U2' R2' U2' R\",\n    \"R2 U2' R2' U2 R2 U' R' U2 R' U2' R U' R' U2' R U2 R' U2 R2 U2' R\",\n    \"R2 U2' R2' U2 R2 U' R' U2' R' U2 R U R' U2 R U2' R' U2 R2 U2' R\",\n    \"R2 U2' R2' U2 R' U2' R2 U' R U R2 U2 R2' U' R' U R' U2 R2 U2' R\",\n    \"R2 U2' R2' U2' R2 U2 R U2' R2 U R2' U R' U2 R U' R2 U2' R2' U2' R\",\n    \"R2 U2' R2' U' R2 U2 R2' U R2 U2' R2' U' R2 U2' R2 U2 R2' U R2 U2 R\",\n    \"R2 U2' R2' U' R2 U2 R2' U R2' U2' R2 U' R2' U2' R U2 R2' U R2 U2 R\",\n    \"R2 U2' R2' U' R' U2 R U R2 U R2' U' R' U R2' U' R2 U2 R2' U2' R\",\n    \"R2 U2' R2' U' R' U2 R U R2' U R2 U' R U R2 U' R2' U2 R2' U2' R\",\n    \"R2' U2' R U' R2' U2 R U' R U2 R2 U2' R' U2 R' U' R2 U2' R U2' R\",\n    \"R2' U2' R2 U2 R2' U' R' U2 R' U2' R U' R' U2' R U2 R2' U2 R2' U2' R\",\n    \"R2' U2' R2 U2 R2' U' R' U2' R' U2 R U R' U2 R U2' R2' U2 R2' U2' R\",\n    \"R2' U2' R2 U' R2 U2' R2 U R2' U' R' U R2' U' R2 U' R' U2' R U2' R\",\n    \"R2' U2' R2 U' R2 U2' R2' U R2 U' R U R2 U' R2' U' R' U2' R U2' R\",\n    \"R2' U2' R2 U' R2' U2 R2 U R2 U2' R2' U' R2 U2' R' U2 R2 U R2' U2 R\",\n    \"R2' U2' R2 U' R2' U2 R2 U R2' U2' R2 U' R2' U2' R2' U2 R2 U R2' U2 R\",\n    \"R2' U2' R' U2 R U2' R2 U' R2' U2 R' U2' R2 U2 R U R' U2 R' U2' R\",\n    \"R2' U2' R' U' R U R2 U R U R2 U' R U R2 U' R U2' R2' U2' R\",\n    \"R2' U2' R' U' R U R2 U2 R2' U' R2 U2' R' U2 R2' U R2 U2 R' U2' R\",\n    \"R2' U2' R' U' R U2' R2 U2' R2' U2 R2 U2' R2' U R' U R2' U2 R2' U2' R\",\n    \"R2' U2' R' U' R2' U2' R U2 R2 U R2' U2 R2 U' R' U R2' U2 R2' U2' R\",\n    \"R' U R' U2' R U2 R2' U' R U R2 U2 R2' U2 R' U2' R2 U2 R' U2' R\",\n    \"R' U2 R' U2 R U2' R U2 R' U' R' U' R U R' U R2 U2' R' U2' R\",\n    \"R' U2' R U R U2' R2 U2' R2 U' R' U R' U2 R2 U2 R U2' R2' U2' R\",\n    \"R' U2' R U R2 U R U2' R2 U' R' U R' U2 R' U' R2' U2' R' U2' R\",\n    \"R' U2' R U2' R U2' R2 U' R2' U2' R' U R' U R' U R2 U2' R' U2' R\",\n    \"R' U2' R2' U2 R2 U2 R2' U2' R2 U2 R2' U R2' U2 R2 U' R2' U2' R2 U2' R\",\n    \"R' U2' R2' U' R2 U R U R U R2' U2 R2 U2 R2' U2' R U2 R2 U R\",\n    \"R' U2' R2' U' R2 U R2 U2 R2' U' R2 U' R' U R2 U R2' U2 R' U2' R\",\n    \"R' U2' R2' U' R2 U2' R U2' R2' U2 R2 U2' R2' U R2 U2' R2' U2 R' U R\",\n    \"R' U2' R2' U' R2 U2' R2' U2' R2' U2 R2 U2 R2' U2 R2 U2' R2' U2 R2 U R\",\n    \"R' U2' R2' U' R2 U2' R' U2' R2 U2 R2' U2 R2 U2 R2' U2' R2 U2 R2 U R\",\n    \"R' U2' R2' U' R2 U2' R' U2' R2 U' R U2' R2 U' R2' U2' R2 U2 R' U R\",\n    \"R' U2' R' U' R U R2 U2 R2' U' R2 U' R' U R2' U R2 U2 R' U2' R\",\n    \"R' U2' R' U' R2 U R2' U R2 U' R2' U' R U R' U R2 U2' R' U2' R\",\n    \"R' U' R U2' R2' U2' R2 U R U2' R2 U2' R U2 R2 U2' R' U R U2' R\",\n    \"R' U' R U2' R2' U2' R2 U R U' R2 U2 R U2' R2 U2 R' U R U2' R\",\n    \"R' U' R U2' R' U2 R' U2' R U R' U' R U R' U R2 U2' R' U2' R\",\n    \"R2' U2 R' U2' R2' U' R2 U2 R U R2 U2 R2' U' R' U R2' U2 R2' U2' R\",\n    \"R' U2 R2 U2 R2' U' R U R' U' R2 U R' U' R' U2 R U' R U2' R\",\n    \"R' U2 R2' U2' R2 U R U R2 U2' R2' U' R' U2' R2' U R2' U' R2 U2' R\",\n    \"R' U2 R' U2' R U R U' R2' U2 R2 U2 R' U R2' U2' R2' U' R2 U2' R\",\n    \"R' U2 R' U2' R U R U' R2' U2 R2 U2 R' U R' U2' R2 U' R2' U2' R\",\n    \"R' U2 R' U2' R U2 R U R2 U2' R2' U' R2 U2' R2 U2' R' U2 R U2' R\",\n    \"R' U2 R' U2' R U2 R U R2' U2' R2 U' R2' U2' R U2' R' U2 R U2' R\",\n    \"R' U2' R2 U R' U R U2' R' U' R2' U2' R2 U R2' U R2 U2' R' U2' R\",\n    \"R' U2' R' U2 R2' U2 R2' U R U' R U2' R2' U' R U2' R2' U2' R U2 R\",\n    \"R U R2 U' R2 U R2 U2 R' U' R' U2 R2 U2 R U R2 U R U2' R\",\n    \"R U2' R U2 R2' U2' R2 U2' R2' U' R2 U R' U2 R U' R2' U2' R2 U2' R\",\n    \"R U2' R2 U2 R2 U2' R2' U2' R2 U' R2' U R2' U2 R2 U' R2 U2' R2' U2' R\",\n    \"R2 U R U2 R2 U R U2 R' U2 R2' U R2 U2' R' U2' R2 U2 R' U2' R\",\n    \"R2 U R U2 R2 U R U' R2 U R2' U2 R' U R' U2' R2 U2 R' U2' R\",\n    \"R2 U2' R U2 R2 U R2' U' R2 U R2' U2 R2 U2' R2 U R2' U2' R2 U2' R\",\n    \"R2 U2' R U2 R2 U2' R2' U2' R2 U' R2' U R' U2 R U' R2 U2' R2' U2' R\",\n    \"R2' U2' R' U2 R2' U R2 U' R2' U R2 U2 R2' U2' R2' U R2 U2' R2' U2' R\",\n    \"R2' U' R U2' R' U2 R2 U R' U2 R U' R' U R' U2' R U2 R' U2' R\",\n    \"R' U2 R2 U R' U' R' U2' R U2' R' U2' R2 U' R2' U2 R U2' R' U2' R\",\n    \"R' U2' R2 U2' R2' U' R2 U2' R2 U2 R' U2' R U' R2 U R2 U2 R U2' R\",\n    \"R' U2' R2' U2' R2 U' R2' U2' R U2 R' U2' R U' R2 U R2 U2 R U2' R\",\n    \"R U R' U2 R' U2' R2 U' R' U R' U2 R U' R2 U2 R2' U R2 U2 R\",\n    \"R U R' U2 R' U2' R2 U' R' U R' U2 R U' R2' U2 R2 U R2' U2 R\",\n    \"R U2 R U R2 U' R2' U2' R' U2 R U' R2 U2 R2 U' R' U2 R2 U2 R\",\n    \"R U2 R2 U R U2 R' U2 R2' U R2 U2' R' U2' R2 U2 R' U2' R2 U' R\",\n    \"R U2 R2 U R U' R2 U R2' U2 R' U R' U2' R2 U2 R' U2' R2 U' R\",\n    \"R U2 R' U2 R U2 R' U R' U2' R2 U' R' U R U' R2' U2' R2 U2 R\",\n    \"R U2 R' U2' R2 U' R2' U R U R U2' R' U' R' U2 R2 U2' R' U2 R\",\n    \"R U2 R' U' R' U' R2 U2' R' U2' R U' R' U2' R U' R2' U2' R2 U2 R\",\n    \"R2 U R2 U2' R U2 R2 U R2' U2' R2 U2 R2' U' R' U2' R2' U2' R2 U2 R\",\n    \"R2 U R2 U2' R U2 R2 U' R2' U2 R2 U2' R2' U R' U2' R2' U2' R2 U2 R\",\n    \"R2 U2 R U2 R2 U R2' U2 R2 U2' R2 U R2' U R2 U2 R2' U2' R2 U2 R\",\n    \"R2 U2 R U2 R2 U R2' U2 R2 U' R2 U' R2' U2 R2 U2 R2' U' R2 U R\",\n    \"R2 U2 R2 U2 R U R2 U2 R2' U2 R2 U' R2' U2' R' U2 R2' U' R2 U2 R\",\n    \"R2 U2 R2 U2 R U2' R2 U2' R2' U2 R2 U2' R2' U R' U2' R2' U2' R2 U2 R\",\n    \"R2 U2 R2 U2 R2' U2' R U2 R2 U R2' U2 R2 U' R' U2' R2' U2' R2 U2 R\",\n    \"R2 U2 R2 U2' R2' U2 R2' U' R' U2' R' U2 R U R' U2 R' U2' R2 U2 R\",\n    \"R2 U2 R2' U2 R2' U R' U2 R U2 R' U2 R2' U' R U' R U2' R' U2' R\",\n    \"R2 U2 R2' U2' R2 U2 R2' U2 R2 U2' R2 U2 R' U2' R U' R' U2' R U2 R\",\n    \"R2 U2 R2' U2' R2 U2 R2' U2 R2 U2' R2 U2' R' U2 R U R' U2 R U2' R\",\n    \"R2 U2 R2' U2' R2 U' R2' U2 R' U2' R2 U2 R U R' U2 R2' U2' R2' U2 R\",\n    \"R2 U2 R' U2' R2 U R U2' R2 U' R U R2 U2' R2' U' R' U' R' U2 R\",\n    \"R2 U2' R' U2 R U2' R2 U2' R2 U2 R2 U2' R2' U2' R2' U' R2 U R' U2 R\",\n    \"R2 U' R2 U R2 U2 R' U' R' U2 R2 U2 R U R2 U R U2' R' U' R\",\n    \"R2 U' R2' U R U2 R' U' R' U' R2 U R2' U2' R2 U2 R U R2 U2 R\",\n    \"R2 U' R2' U R2 U2 R2' U2' R2 U R2' U2' R2' U2' R2 U' R2' U2' R' U2 R\",\n    \"R2 U' R2' U R2 U2 R2' U2' R2 U' R U2 R2 U R2' U2 R2 U2' R2 U2 R\",\n    \"R2 U' R2' U R2 U2 R2' U2' R2 U' R2' U2 R2 U2' R2 U2 R2' U R2 U2 R\",\n    \"R2 U' R2' U R2' U2 R2 U2' R2' U' R2 U2 R2' U2' R U2 R2' U R2 U2 R\",\n    \"R2 U' R2' U2' R2 U R U2 R U2 R2 U2' R2 U2 R U2' R2' U2 R2' U R\",\n    \"R2 U' R2' U2' R2 U2' R2' U2 R2 U2 R U2 R2 U R2' U2 R2 U2' R2 U2 R\",\n    \"R2 U' R2' U2' R2 U2' R2' U2 R2 U2 R2' U2 R2 U2' R2 U2 R2' U R2 U2 R\",\n    \"R2 U' R2' U2' R2 U2' R2' U2 R2 U' R2' U2' R2' U2' R2 U' R2' U2' R' U2 R\",\n    \"R2 U' R2' U2' R2' U2' R2 U2 R2' U2 R2 U2 R2' U2' R U2 R2' U R2 U2 R\",\n    \"R2' U R2 U R' U2' R' U R U R' U' R2 U2' R' U2' R U R' U R\",\n    \"R2' U2 R U' R' U' R2 U2 R2 U R' U2' R' U2 R2' U2' R' U2 R' U' R\",\n    \"R2' U2 R2 U R' U2' R' U2 R' U2' R U R2' U' R' U' R2' U2 R U R\",\n    \"R2' U2 R2 U2 R2 U' R2 U' R2' U2 R U R U2' R2' U2 R2' U R2 U2 R\",\n    \"R2' U2 R2 U2 R2 U' R2 U' R2' U2 R U R U2' R' U2 R2 U R2' U2 R\",\n    \"R2' U2 R2 U2 R' U R' U2 R U2 R' U2 R2 U' R2 U' R U2' R' U2' R\",\n    \"R2' U2 R2 U2' R2' U2 R2 U2 R2' U2' R U2 R' U2' R U' R' U2' R U2 R\",\n    \"R2' U2 R2 U2' R2' U2 R2 U2 R2' U2' R U2' R' U2 R U R' U2 R U2' R\",\n    \"R2' U2 R2 U2' R2' U2 R2' U2 R2 U2 R2' U R' U2' R U' R2 U2' R2' U2' R\",\n    \"R2' U2 R2 U2' R2' U' R2 U2' R2 U2 R2 U2' R U' R' U2' R2' U2 R U2' R\",\n    \"R2' U2 R2' U2' R2 U' R2' U2' R U2 R2 U2' R U' R' U2' R2' U2 R U2' R\",\n    \"R2' U2 R' U2 R2' U R2 U2 R2' U2' R2' U R2 U R2' U2 R2 U2' R2' U2 R\",\n    \"R2' U2 R' U2 R2' U R2 U2 R2' U' R2' U' R2 U2 R2' U2 R2 U' R2' U R\",\n    \"R2' U2' R2 U R2' U R' U2' R U2 R' U2 R2' U' R2 U' R U2' R' U2 R\",\n    \"R2' U' R U' R' U R U' R' U2 R U R U2 R' U' R U2 R' U2' R\",\n    \"R2' U' R2 U R2 U2 R2' U2' R2 U' R2' U2 R2 U2' R' U2 R2 U R2' U2 R\",\n    \"R2' U' R2 U R2' U2 R2 U2' R2' U R2 U2' R2 U2' R2' U' R2 U2' R U2 R\",\n    \"R2' U' R2 U R2' U2 R2 U2' R2' U' R2 U2 R2' U2' R2' U2 R2 U R2' U2 R\",\n    \"R2' U' R2 U R2' U2 R2 U2' R2' U' R' U2 R2' U R2 U2 R2' U2' R2' U2 R\",\n    \"R2' U' R2 U2' R2 U2' R2' U2 R2 U2 R2' U2 R2 U2' R' U2 R2 U R2' U2 R\",\n    \"R2' U' R2 U2' R2' U R' U' R' U2' R2' U2 R2' U2' R' U2 R' U R U2 R\",\n    \"R2' U' R2 U2' R2' U2' R2 U2 R2 U2 R2' U2' R2' U2 R2 U2 R2' U R' U2 R\",\n    \"R2' U' R2 U2' R2' U2' R2 U2 R2' U2 R2 U2 R2' U2' R2' U2 R2 U R2' U2 R\",\n    \"R2' U' R2 U2' R2' U2' R2 U2 R2' U2 R' U2 R2' U R2 U2 R2' U2' R2' U2 R\",\n    \"R2' U' R2 U2' R2' U2' R2 U2 R2' U' R2 U2' R2 U2' R2' U' R2 U2' R U2 R\",\n    \"R2' U' R2 U2' R2' U2' R' U2 R2 U2 R2 U2' R' U R U R2' U' R2' U2 R\",\n    \"R2' U' R2 U2' R2' U2' R' U2 R' U' R2' U R U R' U2' R2 U2 R U2 R\",\n    \"R2' U' R2 U2' R' U2' R U R U R2' U' R2 U2' R2' U2 R' U R2' U2 R\",\n    \"R2' U' R2 U2' R' U2' R2 U2 R2' U2' R2 U' R2' U R U R2' U R2' U2 R\",\n    \"R2' U' R2 U' R2' U2 R2' U2' R' U' R2' U2' R2 U R U2' R2 U2' R2' U2 R\",\n    \"R' U R U R U2 R' U2' R' U R' U' R U2' R' U2' R2 U2 R U2' R\",\n    \"R' U R U2' R2 U' R U R U2 R' U2 R U2 R2' U2' R2' U R2 U2 R\",\n    \"R' U R U2' R' U2 R' U' R U R U' R' U2 R U R2' U2 R U2' R\",\n    \"R' U R U2' R' U2 R' U' R U2' R U2 R2' U R U2' R U2 R' U' R\",\n    \"R' U R U2' R' U' R U R U2 R' U2' R' U2' R U2 R U2' R2' U2' R\",\n    \"R' U R U2' R' U' R2 U2' R' U' R U2' R' U2 R' U2 R U2' R' U2' R\",\n    \"R' U R2 U2' R2 U2' R U2 R2 U2 R2 U R2 U2 R2' U2 R U' R' U R\",\n    \"R' U R2 U' R2 U2 R U2' R2 U R2 U R2 U2 R2' U2 R U' R' U R\",\n    \"R' U2 R U R' U2 R2 U2' R' U' R U R2' U2' R2 U' R' U2 R' U R\",\n    \"R' U2 R2 U2' R2' U' R2 U2' R2 U2 R U2' R U2 R' U2 R' U2' R U2 R\",\n    \"R' U2 R2 U2' R2' U' R2 U2' R2 U2 R U2' R U' R' U2' R' U2 R U2' R\",\n    \"R' U2 R2 U2' R2' U' R2 U2' R' U R2 U' R2' U' R' U R2' U R2 U R\",\n    \"R' U2 R2' U2 R2 U2' R2' U2 R2' U R2 U2 R2' U' R2 U2' R2 U2' R2' U2 R\",\n    \"R' U2 R2' U2 R2 U2' R' U2 R2 U R2' U2 R2 U' R2 U2' R2 U2' R2' U2 R\",\n    \"R' U2 R2' U2 R2' U R2 U2 R2 U2 R' U2 R U2 R U' R' U R' U R\",\n    \"R' U2 R2' U2' R2 U2 R U' R' U2' R' U2 R U R' U2 R' U2' R2 U2 R\",\n    \"R' U2 R2' U2' R2 U' R2' U2' R U2 R U2' R U2 R' U2 R' U2' R U2 R\",\n    \"R' U2 R2' U2' R2 U' R2' U2' R U2 R U2' R U' R' U2' R' U2 R U2' R\",\n    \"R' U2 R2' U2' R2 U' R2' U2' R2' U R2 U' R2' U' R' U R2' U R2 U R\",\n    \"R' U2 R2' U' R2 U2' R U2 R2 U' R2' U2 R2 U2 R2' U2 R' U R2' U2 R\",\n    \"R' U2 R' U2 R2 U R2' U2 R U2 R' U2 R U2 R U' R' U R' U R\",\n    \"R' U2' R2' U2 R U2' R U R U2' R2' U2' R2 U R' U2' R2' U2' R2 U2 R\",\n    \"R' U' R U R U2 R' U' R' U R' U2' R2' U2 R2 U2 R2' U2' R2 U2 R\",\n    \"R' U' R U R2 U2 R2' U2' R2 U2' R2' U2' R' U2 R2' U R2 U2' R2' U2 R\",\n    \"R' U' R U R2 U2 R2' U2' R2 U' R2' U2 R2 U2' R' U2 R2' U R2 U2 R\",\n    \"R' U' R U R2 U2 R' U R2 U' R' U R U2 R2 U2' R2' U2 R2' U2' R\",\n    \"R' U' R U R2 U2 R' U R2 U' R' U R2' U2 R2' U2' R2 U2 R U2' R\",\n    \"R' U' R U R2' U2 R2 U2' R2' U' R2 U2 R2' U2' R2' U2 R2' U R2 U2 R\",\n    \"R' U' R U R2' U2 R2 U2' R2' U' R2 U2 R2' U2' R' U2 R2 U R2' U2 R\",\n    \"R' U' R U R' U2 R2' U2' R2 U2 R2' U2 R2 U2' R U' R' U R2' U2 R\",\n    \"R' U' R U2' R2 U2' R2' U2 R2 U R2' U2' R' U2 R2' U R2 U2' R2' U2 R\",\n    \"R' U' R U2' R2 U2' R2' U2 R2 U2 R2' U2 R2 U2' R' U2 R2' U R2 U2 R\",\n    \"R' U' R U2' R2 U2' R2' U' R2 U2' R2' U2 R2 U2' R2' U' R' U R2' U2 R\",\n    \"R' U' R U2' R2' U2' R2 U R' U' R' U2 R2' U2' R2' U' R2 U2' R2' U2 R\",\n    \"R' U' R U2' R2' U2' R2 U R' U' R' U2 R' U2' R2 U' R2' U2' R2 U2 R\",\n    \"R' U' R U2' R2' U2' R2 U2 R2' U2 R2 U2 R2' U2' R2' U2 R2' U R2 U2 R\",\n    \"R' U' R U2' R2' U2' R2 U2 R2' U2 R2 U2 R2' U2' R' U2 R2 U R2' U2 R\",\n    \"R' U' R U2' R2' U2' R2 U' R2' U2' R2 U2 R2 U2' R2' U' R' U R2' U2 R\",\n    \"R' U' R U2' R' U2' R U R U R2' U' R2 U R2' U2 R2 U2' R2' U2 R\",\n    \"R' U' R U2' R' U2' R U R U2' R U2' R2 U' R2' U2' R2 U2' R2 U2 R\",\n    \"R' U' R U2' R' U2' R2 U2 R2' U2' R2 U' R2' U R U R' U R2 U2 R\",\n    \"R' U' R U' R' U' R U2' R U2' R' U' R' U' R2 U' R' U R' U2 R\",\n    \"R' U' R2 U2 R' U' R2' U' R2 U2' R2' U2' R2' U2 R2' U' R U2 R' U R\",\n    \"R' U' R2 U2' R' U R U2 R U2' R U2' R2' U2 R' U2 R2 U R2 U2' R\",\n    \"R' U' R2' U2' R U2 R2 U R2' U2 R2 U2' R2 U' R2' U2 R' U R2' U2 R\",\n    \"R' U' R2' U2' R2 U2 R U R2 U2 R2' U' R2 U R2 U2 R2' U2' R2 U2 R\",\n    \"R' U' R2' U2' R2 U2 R U R2 U' R U2' R2 U' R2' U2' R U2' R2' U2 R\",\n    \"R' U' R2' U2' R2' U R2' U' R2' U R2' U' R2' U2 R U' R' U2 R2' U2' R\",\n    \"R' U' R2' U' R U2' R U2 R' U R2 U' R' U2' R' U2 R U2 R2' U R\",\n    \"R' U' R2' U' R2 U' R U R2 U R2 U' R U' R' U2 R U2' R' U2' R\",\n    \"R' U' R' U' R2 U2' R' U' R U2' R' U2 R' U' R U2' R U2' R' U2' R\",\n  ],\n  [\n    \"R U2 R2 U2' R2' U2' R' U' R2' U2 R2 U R U2 R2 U2 R\",\n    \"R2' U2 R2' U R' U2 R2' U2 R2 U2 R2' U2' R2 U2' R U' R\",\n    \"R2' U2 R2' U R' U2 R2' U' R2 U2' R2' U2 R2 U R U' R\",\n    \"R' U2 R2 U2' R2' U' R2 U' R' U' R' U2 R U R U' R\",\n    \"R2 U R U2 R2 U2' R2' U R2 U2' R2' U2 R2 U R2 U' R\",\n    \"R2 U R U2 R2 U2' R2' U' R2 U2 R2' U2' R2 U2' R2 U' R\",\n    \"R2 U2' R2 U2' R2' U2 R2' U2 R2 U2 R2' U R' U2 R2' U2 R\",\n    \"R2 U2' R2 U2' R2' U' R2 U2' R U' R2 U2' R2' U2' R2 U' R\",\n    \"R2 U2' R2' U2' R2 U R2' U2' R2' U2 R2 U R2' U2 R' U2 R\",\n    \"R2' U R' U2 R2' U2' R2 U R2' U2' R2 U2 R2' U R2' U' R\",\n    \"R2' U R' U2 R2' U2' R2 U' R2' U2 R2 U2' R2' U2' R2' U' R\",\n    \"R2' U2' R2 U2' R2' U R2 U2' R2 U2 R2' U R2 U2 R U2 R\",\n    \"R2' U2' R2' U2' R2 U' R2' U2' R' U' R2' U2' R2 U2' R2' U' R\",\n    \"R' U R2' U2 R2' U2' R2 U R2' U2' R2 U2 R2' U R' U' R\",\n    \"R' U R2' U2 R2' U2' R2 U' R2' U2 R2 U2' R2' U2' R' U' R\",\n    \"R' U R' U2 R2 U2' R2' U R2 U2' R2' U2 R2 U R' U' R\",\n    \"R' U R' U2 R2 U2' R2' U' R2 U2 R2' U2' R2 U2' R' U' R\",\n    \"R' U2' R U2 R' U R U R U2 R' U' R U' R2' U' R\",\n    \"R U2' R' U' R U2' R' U2 R U2' R2' U' R2 U2' R2' U2' R\",\n    \"R U2' R' U' R U2' R' U2 R2 U2' R2 U' R2' U2' R2 U2' R\",\n    \"R2' U2 R' U R2' U2 R2' U2 R2 U2 R2' U R' U' R U2' R\",\n    \"R U2 R' U R U2 R' U2' R U2' R2' U' R2 U2' R2' U2' R\",\n    \"R U2 R' U R U2 R' U2' R2 U2' R2 U' R2' U2' R2 U2' R\",\n    \"R U2' R' U2' R2 U R' U R' U' R2 U' R2' U R U2' R\",\n    \"R2 U2' R2' U2 R2' U R' U' R2' U2 R2 U R U' R' U2' R\",\n    \"R2 U2' R2' U2' R2 U' R2' U2 R2 U2' R2 U2' R2' U' R2 U2' R\",\n    \"R2' U2' R2 U2' R2' U' R2 U2 R2' U2' R2' U2' R2 U' R2' U2' R\",\n    \"R U2 R U2' R' U' R U2' R' U2 R U2' R2' U' R2 U2' R\",\n    \"R U2 R U2' R' U' R U2' R' U2 R2 U2' R2 U' R2' U2' R\",\n    \"R U2' R U2 R' U R U2 R' U2' R U2' R2' U' R2 U2' R\",\n    \"R U2' R U2 R' U R U2 R' U2' R2 U2' R2 U' R2' U2' R\",\n    \"R U2 R2 U R U2 R2 U2 R2' U R U R U2' R' U2' R2' U' R\",\n    \"R U2 R2' U2' R2 U2 R2' U2 R2 U' R' U' R' U2 R U R U' R\",\n    \"R2 U2 R2' U2' R2 U2 R2' U R2 U R2' U2' R2 U2 R2' U R2 U' R\",\n    \"R2 U2 R2' U2' R2 U2 R2' U R2 U' R2' U2 R2 U2' R2' U2' R2 U' R\",\n    \"R2' U2 R U' R2 U R2 U2' R' U2 R U R U2 R U2 R2' U' R\",\n    \"R2' U2 R2 U2' R2' U2 R2 U R2' U R2 U2' R2' U2 R2 U R2' U' R\",\n    \"R2' U2 R2 U2' R2' U2 R2 U R2' U' R2 U2 R2' U2' R2 U2' R2' U' R\",\n    \"R2' U2 R2' U R' U' R U2' R2 U' R2' U2' R2 U2 R2 U R U' R\",\n    \"R2' U2 R2' U2' R2 U2 R2' U R' U' R2' U2 R2 U R U2 R2 U2 R\",\n    \"R2' U2 R2' U2' R2 U2' R2 U' R2' U2 R2 U R U2 R2 U2' R2' U' R\",\n    \"R' U2 R2 U R' U R U R2' U2 R2 U2 R2' U2' R U2' R U' R\",\n    \"R' U2 R2 U2' R2' U2' R2 U' R2' U R U R U2' R' U2' R U' R\",\n    \"R' U2 R2 U2' R' U2 R' U R U2 R' U' R2 U' R' U' R' U2 R\",\n    \"R' U2 R2' U R2' U R U R2' U2 R2 U2 R2' U2' R U2' R2 U' R\",\n    \"R' U2 R2' U R' U2 R2' U' R2 U' R' U' R' U2 R U R2 U' R\",\n    \"R' U2 R2' U2' R2 U' R2' U2' R' U R' U' R' U2 R U R U' R\",\n    \"R2 U R2' U' R2 U2 R2' U2 R2 U' R2' U' R2 U2 R2' U R2 U' R\",\n    \"R2' U R2 U' R2' U2 R2 U2 R2' U' R2 U' R2' U2 R2 U R2' U' R\",\n    \"R2 U R U2 R2' U2' R2 U' R2' U2' R' U' R2' U2' R2 U2' R2 U' R\",\n    \"R2 U R2 U2 R U2 R' U R U R U2 R' U' R U' R U' R\",\n    \"R2 U R2 U2 R2' U2' R2 U2 R U2 R2 U2 R2' U R' U2 R2' U2 R\",\n    \"R2 U R2' U2 R2 U2' R2' U2 R2 U2 R2' U2 R2 U2' R2' U2' R2 U' R\",\n    \"R2 U R2' U2 R2 U2' R2' U2 R2 U' R2' U2' R2 U2 R2' U R2 U' R\",\n    \"R2 U R2' U2 R2' U2' R2 U2 R2' U2 R2 U2 R2' U2' R2 U2' R2 U' R\",\n    \"R2 U R2' U2 R2' U2' R2 U2 R2' U' R2 U2' R2' U2 R2 U R2 U' R\",\n    \"R2 U R' U2 R' U' R' U' R2 U' R2' U2 R2 U2' R' U2' R2 U' R\",\n    \"R2 U2' R2' U R' U2 R2' U R2 U2 R U R2 U2 R2' U R2 U' R\",\n    \"R2 U2' R2' U2' R U R' U' R2' U R2 U R2' U2' R' U' R' U2 R\",\n    \"R2 U2' R2' U2' R2 U R U2' R2 U2 R2' U2' R2 U2' R2' U2 R' U2 R\",\n    \"R2 U2' R2' U2' R2 U R' U' R' U' R2 U R2' U2 R2 U2' R' U R\",\n    \"R2 U2' R2' U2' R2 U' R U2 R' U R2' U2 R2 U2 R2' U2' R2' U2 R\",\n    \"R2 U2' R2' U2' R2 U' R2 U2 R2' U R2 U2 R2' U2' R2' U2 R2 U2 R\",\n    \"R2 U2' R2' U2' R2 U' R2' U2 R2 U R2' U2 R2 U2' R2' U2 R2 U2 R\",\n    \"R2 U2' R2' U' R2 U' R2' U2 R2 U2 R2' U2' R2 U R2' U R2 U2' R\",\n    \"R2 U2' R2' U' R2 U' R2' U' R2 U2' R2' U2 R2 U' R2' U R2 U2' R\",\n    \"R2' U R U2 R U2 R' U R U R U2 R' U' R U' R2 U' R\",\n    \"R2' U R2 U2 R2 U2' R2' U2 R2 U2 R2' U2 R2 U2' R2' U2' R2' U' R\",\n    \"R2' U R2 U2 R2 U2' R2' U2 R2 U' R2' U2' R2 U2 R2' U R2' U' R\",\n    \"R2' U R2 U2 R2' U2' R2 U2 R2' U2 R2 U2 R2' U2' R2 U2' R2' U' R\",\n    \"R2' U R2 U2 R2' U2' R2 U2 R2' U' R2 U2' R2' U2 R2 U R2' U' R\",\n    \"R2' U R2' U2 R' U' R' U' R2 U' R2' U2 R2 U2' R' U2' R2' U' R\",\n    \"R2' U R' U2 R2 U2' R2' U' R2 U2' R U' R2 U2' R2' U2' R2' U' R\",\n    \"R2' U2' R2 U R U2 R2 U R2' U2 R' U R2' U2 R2 U R2' U' R\",\n    \"R2' U2' R2 U2' R2' U R' U2' R2' U2 R2 U2' R2' U2' R2 U2 R U2 R\",\n    \"R2' U2' R2 U2' R2' U' R2 U2 R2' U R2 U2 R2' U2' R2 U2 R2' U2 R\",\n    \"R2' U2' R2 U2' R2' U' R2' U2 R2 U R2' U2 R2 U2' R2 U2 R2' U2 R\",\n    \"R2' U2' R2 U' R2' U' R2 U2 R2' U2 R2 U2' R2' U R2 U R2' U2' R\",\n    \"R2' U2' R2 U' R2' U' R2 U' R2' U2' R2 U2 R2' U' R2 U R2' U2' R\",\n    \"R' U R U2 R2 U2' R2' U2 R2 U2 R2' U2 R2 U2' R2' U2' R' U' R\",\n    \"R' U R U2 R2 U2' R2' U2 R2 U' R2' U2' R2 U2 R2' U R' U' R\",\n    \"R' U R U2 R2' U2' R2 U2 R2' U2 R2 U2 R2' U2' R2 U2' R' U' R\",\n    \"R' U R U2 R2' U2' R2 U2 R2' U' R2 U2' R2' U2 R2 U R' U' R\",\n    \"R' U R2 U2 R' U' R' U' R2 U' R2' U2 R2 U2' R' U2' R' U' R\",\n    \"R' U R2' U2 R2 U2' R2' U' R2 U2' R U' R2 U2' R2' U2' R' U' R\",\n    \"R' U R' U2 R2' U2' R2 U' R2' U2' R' U' R2' U2' R2 U2' R' U' R\",\n    \"R' U2' R2 U2' R2' U2 R' U2 R2' U2 R2 U R U2 R2 U2' R2' U' R\",\n    \"R' U2' R2' U2' R2 U2 R U2 R2 U2 R2' U R' U2 R2' U2' R2 U' R\",\n    \"R' U2' R2' U2' R2 U2 R2' U2 R2 U2' R U' R2 U2' R2' U2' R' U' R\",\n    \"R U2 R U2' R' U2' R' U' R2 U' R2' U2 R U' R' U2 R2 U2 R\",\n    \"R2' U2 R2 U2 R' U' R2 U2 R2 U' R2' U' R2' U2' R' U2' R U2 R\",\n    \"R' U2 R' U2' R2 U2 R' U2 R U2 R' U' R' U' R2 U' R' U2 R\",\n    \"R U R2' U R2 U2' R2' U' R U' R2' U2 R U R U' R2' U2' R\",\n    \"R U2 R2 U R U2 R2 U2 R2' U R U R U R2 U' R2' U2' R\",\n    \"R U2' R U R' U2 R2' U2' R U R2 U2' R2' U R U' R2' U2' R\",\n    \"R U2' R' U2' R' U' R2 U' R2' U2 R U' R' U2 R2 U2 R2' U R\",\n    \"R U2' R' U' R U2' R2 U2 R2 U2' R2 U2 R2' U2 R2 U R U2 R\",\n    \"R U2' R' U' R2' U2 R2' U R U R U2' R2 U2 R2 U' R U2 R\",\n    \"R2 U R U R2' U R2 U2' R' U' R' U2 R U R2' U R2 U2' R\",\n    \"R2 U2 R2' U2' R2 U2 R U R' U' R2' U2 R2 U R U' R' U2' R\",\n    \"R2 U2 R' U' R2 U2 R2 U' R2' U' R2' U2' R' U2' R U2 R U R\",\n    \"R2 U2' R2 U' R U' R U R2' U R U' R U' R' U R2 U2' R\",\n    \"R2 U2' R2' U' R U' R' U R2 U2' R U' R2 U' R U R2 U R\",\n    \"R2' U R2 U2 R' U2 R' U2 R U R' U' R U2 R U2 R' U R\",\n    \"R2' U2 R2' U R2 U2 R2 U2 R' U R U2 R U2' R' U R' U2' R\",\n    \"R2' U2' R U' R U' R U R2' U R U' R U' R' U R2' U2' R\",\n    \"R2' U' R2 U2 R U R U2 R2 U2' R' U' R' U R' U2 R' U R\",\n    \"R' U2 R2 U R2' U2 R U2 R' U R U2 R U2' R' U R' U2' R\",\n    \"R' U2 R2' U R2' U R U R2' U2 R2 U2 R2' U R2' U' R2 U2' R\",\n    \"R' U2 R' U R2 U R U R2' U2 R2 U2 R2' U R' U' R U2' R\",\n    \"R2 U R2' U' R2 U2 R2' U R2 U' R2' U R2 U2 R2' U' R2 U' R\",\n    \"R2 U R2' U' R2' U2 R2 U R2' U' R2 U R2' U2 R2 U' R2 U' R\",\n    \"R2 U2' R2' U R2' U' R U R2' U' R U R' U R2 U' R' U R\",\n    \"R2 U2' R2' U2 R2 U2 R' U2 R' U' R' U2' R2 U R2' U R2' U R\",\n    \"R2 U2' R' U2 R2' U2 R' U2 R2' U2' R2' U2 R2' U R2 U2' R U2 R\",\n    \"R2' U R2 U' R2 U2 R2' U R2 U' R2' U R2 U2 R2' U' R2' U' R\",\n    \"R2' U R2 U' R2' U2 R2 U R2' U' R2 U R2' U2 R2 U' R2' U' R\",\n    \"R2' U' R U2' R2 U R2' U2 R2' U2' R2' U2 R' U2 R2' U2 R' U R\",\n    \"R' U R U' R2 U' R U2' R2 U2' R2' U' R2 U' R2 U R2 U2' R\",\n    \"R' U' R' U2' R2 U' R U R' U2 R U2 R' U2 R2' U2' R U' R\",\n    \"R U2 R2 U R2 U' R2 U R2 U2' R' U R2 U R' U' R2' U2' R\",\n    \"R2 U R U2 R2 U2' R2' U' R2 U2 R2' U2' R U2' R2' U' R2 U2' R\",\n    \"R2 U2' R2 U2' R2' U' R2 U2' R U' R2 U2' R2 U2' R2' U' R2 U2' R\",\n    \"R2 U2' R2' U2' R2 U R2' U2' R2 U R2' U R2 U R2' U' R2 U' R\",\n    \"R2 U2' R2' U2' R2 U R2' U2' R2 U2 R2' U2' R' U2' R2' U' R2 U2' R\",\n    \"R2 U2' R2' U2' R2' U R2' U R2 U2' R' U R' U R U2 R' U2' R\",\n    \"R2 U2' R2' U2' R2' U R2' U' R2 U2 R2 U2' R U R2 U' R' U' R\",\n    \"R2 U2' R2' U' R2 U2' R' U R' U' R' U2' R U R U' R2' U2 R\",\n    \"R2 U2' R' U2 R' U R U2 R2 U2' R' U' R U2' R2 U' R2 U2' R\",\n    \"R2' U R2' U2 R' U' R' U' R2 U' R2' U2 R2 U R2 U' R2' U2' R\",\n    \"R2' U R' U2 R2' U2' R2 U' R2' U2 R2 U2' R' U2' R2 U' R2' U2' R\",\n    \"R2' U2 R2' U R' U' R2' U2' R2 U R U' R U2' R2' U' R2 U2' R\",\n    \"R2' U2 R2' U R' U' R2' U2' R2 U R U' R2 U2' R2 U' R2' U2' R\",\n    \"R2' U2' R2 U2' R2' U R2 U2' R2' U R2 U R2' U R2 U' R2' U' R\",\n    \"R2' U2' R2 U2' R2' U R2 U2' R2' U2 R2 U2' R U2' R2 U' R2' U2' R\",\n    \"R2' U2' R2 U' R2' U2' R2' U R' U' R' U2' R U R U' R2' U2 R\",\n    \"R2' U2' R2' U2 R' U R U2 R2' U2' R' U' R U2' R U' R2' U2' R\",\n    \"R2' U2' R2' U2' R2 U' R2' U2' R' U' R2' U2' R2' U2' R2 U' R2' U2' R\",\n    \"R' U2' R2 U2' R2' U' R2 U2' R' U' R' U2' R2 U2' R2' U' R2 U2' R\",\n    \"R' U2' R2 U2' R2' U' R2 U2' R' U' R' U2' R2' U2' R2 U' R2' U2' R\",\n    \"R' U2' R2' U2' R2 U' R2' U2' R2' U' R' U2' R2 U2' R2' U' R2 U2' R\",\n    \"R' U2' R2' U2' R2 U' R2' U2' R2' U' R' U2' R2' U2' R2 U' R2' U2' R\",\n    \"R' U' R U' R U R2' U R U' R U' R U2' R2' U' R2 U2' R\",\n    \"R' U' R U' R U R2' U R U' R U' R2 U2' R2 U' R2' U2' R\",\n    \"R U' R2 U2' R2' U2' R2 U R2' U2' R2 U2 R2' U R2 U' R2' U R\",\n    \"R U' R2 U2' R2' U2' R2 U' R2' U2 R2 U2' R2' U2' R2 U' R2' U R\",\n    \"R U' R2' U2' R2 U2' R2' U R2 U2' R2' U2 R2 U R2' U' R2 U R\",\n    \"R U' R2' U2' R2 U2' R2' U' R2 U2 R2' U2' R2 U2' R2' U' R2 U R\",\n    \"R2 U2 R U2' R' U' R U2' R' U2 R U2' R2' U' R2 U2' R2' U2' R\",\n    \"R2 U2 R U2' R' U' R U2' R' U2 R2 U2' R2 U' R2' U2' R2 U2' R\",\n    \"R2 U2' R U2 R' U R U2 R' U2' R U2' R2' U' R2 U2' R2' U2' R\",\n    \"R2 U2' R U2 R' U R U2 R' U2' R2 U2' R2 U' R2' U2' R2 U2' R\",\n    \"R2 U' R2 U2' R2' U2' R2 U R2' U2' R2 U2 R2' U R2 U' R2' U R\",\n    \"R2 U' R2 U2' R2' U2' R2 U' R2' U2 R2 U2' R2' U2' R2 U' R2' U R\",\n    \"R2 U' R2' U2' R2 U2' R2' U R2 U2' R2' U2 R2 U R2' U' R2 U R\",\n    \"R2 U' R2' U2' R2 U2' R2' U' R2 U2 R2' U2' R2 U2' R2' U' R2 U R\",\n    \"R2' U2 R U2' R' U' R U2' R' U2 R U2' R2' U' R2 U2' R2' U2' R\",\n    \"R2' U2 R U2' R' U' R U2' R' U2 R2 U2' R2 U' R2' U2' R2 U2' R\",\n    \"R2' U2' R U2 R' U R U2 R' U2' R U2' R2' U' R2 U2' R2' U2' R\",\n    \"R2' U2' R U2 R' U R U2 R' U2' R2 U2' R2 U' R2' U2' R2 U2' R\",\n    \"R2' U' R2 U2' R2' U2' R2 U R2' U2' R2 U2 R2' U R2 U' R2' U R\",\n    \"R2' U' R2 U2' R2' U2' R2 U' R2' U2 R2 U2' R2' U2' R2 U' R2' U R\",\n    \"R2' U' R2' U2' R2 U2' R2' U R2 U2' R2' U2 R2 U R2' U' R2 U R\",\n    \"R2' U' R2' U2' R2 U2' R2' U' R2 U2 R2' U2' R2 U2' R2' U' R2 U R\",\n    \"R' U2 R U2' R' U' R U2' R' U2 R U2' R2' U' R2 U2' R2' U2' R\",\n    \"R' U2 R U2' R' U' R U2' R' U2 R2 U2' R2 U' R2' U2' R2 U2' R\",\n    \"R' U2' R U2 R' U R U2 R' U2' R U2' R2' U' R2 U2' R2' U2' R\",\n    \"R' U2' R U2 R' U R U2 R' U2' R2 U2' R2 U' R2' U2' R2 U2' R\",\n    \"R' U' R2 U2' R2' U2' R2 U R2' U2' R2 U2 R2' U R2 U' R2' U R\",\n    \"R' U' R2 U2' R2' U2' R2 U' R2' U2 R2 U2' R2' U2' R2 U' R2' U R\",\n    \"R' U' R2 U2' R2' U2' R2' U R2' U R2 U2' R' U R' U R U2 R\",\n    \"R' U' R2' U2' R2 U2' R2' U R2 U2' R2' U2 R2 U R2' U' R2 U R\",\n    \"R' U' R2' U2' R2 U2' R2' U' R2 U2 R2' U2' R2 U2' R2' U' R2 U R\",\n    \"R2 U R2' U2 R2 U2' R2' U' R2 U2' R2' U R2 U2 R2' U' R2 U2' R\",\n    \"R2 U R2' U2 R2' U2' R2 U' R2' U2' R2 U R2 U2 R2' U' R2 U2' R\",\n    \"R2 U2 R2' U2 R2' U R2' U R2 U2' R' U' R' U2 R' U' R2 U2 R\",\n    \"R2 U2 R2' U2' R2 U' R' U2 R' U' R' U2' R2 U R2' U R2' U R\",\n    \"R2 U2' R2 U2' R2' U' R2 U2' R2' U2 R2' U' R2 U2 R2' U' R2 U2' R\",\n    \"R2 U2' R2' U2' R2 U2 R2' U2 R2 U2' R2' U R2 U2 R2' U' R2 U2' R\",\n    \"R2 U2' R2' U2' R2 U' R2' U2' R2 U2 R2' U' R2 U2 R2' U' R2 U2' R\",\n    \"R2' U R2 U2 R2 U2' R2' U' R2 U2' R2' U R2' U2 R2 U' R2' U2' R\",\n    \"R2' U R2 U2 R2' U2' R2 U' R2' U2' R2 U R2' U2 R2 U' R2' U2' R\",\n    \"R2' U2' R2 U2' R2' U2 R2 U2 R2' U2' R2 U R2' U2 R2 U' R2' U2' R\",\n    \"R2' U2' R2 U2' R2' U' R2 U2' R2' U2 R2 U' R2' U2 R2 U' R2' U2' R\",\n    \"R2' U2' R2' U2' R2 U' R2' U2' R2 U2 R2 U' R2' U2 R2 U' R2' U2' R\",\n    \"R2' U2' R' U2' R U' R2 U2' R2' U2' R2 U2' R2 U2 R2' U' R2' U2' R\",\n    \"R' U2' R2' U2' R2 U' R U2' R' U R2' U2 R2 U2 R U2 R2 U2' R\",\n    \"R U R2 U R2' U R' U' R2' U' R2 U R2' U2' R2' U' R2 U2' R2' U2 R\",\n    \"R U R2 U R2' U R' U' R2' U' R2 U R' U2' R2 U' R2' U2' R2 U2 R\",\n    \"R U2 R2 U R U2 R2 U2' R2' U R2 U' R' U' R' U2 R U R2' U' R\",\n    \"R U2 R2 U R2' U2 R U2' R2' U2 R2 U2 R2' U2 R2 U2' R2' U2' R2' U' R\",\n    \"R U2 R2 U R2' U2 R U2' R2' U2 R2 U' R2' U2' R2 U2 R2' U R2' U' R\",\n    \"R U2 R2 U R2' U2 R2 U2' R2 U2 R2' U2 R2 U2 R2' U2' R2 U2' R2' U' R\",\n    \"R U2 R2 U R2' U2 R2 U2' R2 U2 R2' U' R2 U2' R2' U2 R2 U R2' U' R\",\n    \"R U2 R2 U2' R2' U2 R2 U R2 U' R2' U2 R2 U R U2 R2 U2' R2' U' R\",\n    \"R U2 R2 U2' R2' U2' R' U R2 U2' R2' U2' R U R U2' R U2 R2' U2' R\",\n    \"R U2 R2 U2' R2' U2' R' U R2' U2' R2 U2 R2' U2' R2 U2' R U2 R2 U2 R\",\n    \"R U2 R2 U2' R2' U2' R' U R2' U2' R2 U2 R2' U' R2 U2 R U2' R2 U R\",\n    \"R U2 R2 U2' R2' U2' R' U' R2 U2 R2' U R2 U2 R U2' R2' U2 R2 U2 R\",\n    \"R U2 R2 U2' R2' U2' R' U' R2' U2 R2 U2' R2' U R2 U2 R U2' R2 U R\",\n    \"R U2 R2 U2' R2' U' R2 U2' R' U2 R' U' R' U R2 U2' R2' U2' R U' R\",\n    \"R U2 R2 U2' R' U2 R' U R U2 R' U2' R' U' R U2 R2 U2' R2' U2 R\",\n    \"R U2 R2 U2' R' U2 R' U R U2 R' U2' R' U' R2' U2 R2' U2' R2 U2 R\",\n    \"R U2 R2 U' R2' U2 R' U2' R2' U' R2 U2 R2' U2 R2 U R U2 R2 U2 R\",\n    \"R U2 R2' U2' R2 U2 R2' U R2 U' R2' U R U R U2' R' U2' R U' R\",\n    \"R U2 R2' U2' R2 U' R2' U2' R2' U2 R' U' R' U R2 U2' R2' U2' R U' R\",\n    \"R U2 R' U R2 U' R2' U2' R2' U2' R2 U2 R2 U2' R2 U2' R U2 R' U2' R\",\n    \"R U2' R U2 R' U2' R' U' R U2' R U2 R U2' R2' U' R2 U2' R2' U2 R\",\n    \"R U2' R U2 R' U2' R' U' R U2' R U2 R2 U2' R2 U' R2' U2' R2 U2 R\",\n    \"R2 U2 R2 U2' R2' U2 R2 U2 R2' U2' R' U R' U' R' U2 R U R U' R\",\n    \"R2 U2 R2' U R2 U2 R' U2' R U R U2 R2' U' R2 U' R2 U2 R2 U2 R\",\n    \"R2 U2 R2' U2' R2 U2 R2' U R2 U R2' U2' R2' U2 R2 U R2' U2 R' U2 R\",\n    \"R2 U2 R2' U2' R2' U2 R2 U R2' U2 R' U2 R2' U2 R2 U2' R2' U2' R2 U' R\",\n    \"R2 U2 R2' U2' R2' U2 R2 U R2' U2 R' U' R2' U2' R2 U2 R2' U R2 U' R\",\n    \"R2 U2' R U2 R2' U2' R' U' R U2' R2 U2 R U2' R2' U' R2 U2' R2' U2 R\",\n    \"R2 U2' R U2 R2' U2' R' U' R U2' R2 U2 R2 U2' R2 U' R2' U2' R2 U2 R\",\n    \"R2' U R2' U2 R U2 R' U2' R' U' R2 U R' U2 R U2' R U' R2' U' R\",\n    \"R2' U2 R2 U R2' U2 R2' U2' R U R U2 R2' U' R2 U' R2 U2 R2 U2 R\",\n    \"R2' U2 R2 U R2' U2' R2' U2 R U2 R' U2 R U R U' R2 U2' R U R\",\n    \"R2' U2 R2 U2' R2 U2 R2' U R2 U2 R U2 R2 U2 R2' U2' R2 U2' R2' U' R\",\n    \"R2' U2 R2 U2' R2 U2 R2' U R2 U2 R U' R2 U2' R2' U2 R2 U R2' U' R\",\n    \"R2' U2 R2 U2' R2' U2 R2 U R2' U R2 U2' R2 U2 R2' U R2 U2 R U2 R\",\n    \"R2' U2 R2' U R2 U2 R' U2' R2' U2 R2 U2 R2' U2 R2 U2' R2' U2' R U' R\",\n    \"R2' U2 R2' U R2 U2 R' U2' R2' U2 R2 U' R2' U2' R2 U2 R2' U R U' R\",\n    \"R2' U2 R2' U R' U2 R2' U2 R2 U2 R2' U' R2 U2 R U2' R2 U' R2' U2 R\",\n    \"R2' U2 R2' U R' U2 R2' U' R2 U2' R2 U2 R2' U R2 U2 R U2' R2' U' R\",\n    \"R2' U2 R2' U R' U' R U2' R2 U2 R2' U2 R2 U2' R2' U2 R' U R U' R\",\n    \"R2' U2 R2' U R' U' R2' U2' R2 U2 R2 U2' R2' U' R2 U2' R2' U2' R U' R\",\n    \"R2' U2 R2' U R' U' R2' U2' R2 U2 R2' U2' R2 U' R2' U2' R2 U2' R U' R\",\n    \"R2' U2 R2' U2' R U2' R2' U' R2 U2' R U' R2 U R U2 R2 U2' R2' U' R\",\n    \"R2' U2 R2' U2' R2 U R2' U2 R' U2' R2' U R2 U2 R2' U2' R2 U2' R U' R\",\n    \"R2' U2 R2' U2' R2 U R2' U2 R' U2' R2' U2' R2 U2' R2' U2 R2 U R U' R\",\n    \"R2' U2 R2' U2' R2 U2' R2 U' R2 U2 R2' U R2 U2 R' U2' R2 U2 R2' U2 R\",\n    \"R2' U2 R2' U2' R2 U2' R2 U' R2' U2 R2 U R2' U2 R2' U2' R2 U2 R2' U2 R\",\n    \"R2' U2 R2' U2' R2' U2 R' U R U2 R2 U2' R' U2 R2' U' R2 U2' R2' U2 R\",\n    \"R2' U2 R' U R2' U2 R2 U2 R2' U2' R2' U2 R2 U2 R2 U2' R2' U2' R2 U' R\",\n    \"R2' U2 R' U2' R U' R2 U' R2' U2 R' U2 R U2' R' U R2' U R2 U2' R\",\n    \"R2' U2 R' U' R' U' R2' U2' R2 U R U' R2 U2' R U R2 U2' R' U2 R\",\n    \"R2' U' R' U2 R' U2' R2' U2 R' U2' R' U R2 U2 R2 U' R' U' R U2 R\",\n    \"R' U2 R2 U R2' U2 R2' U2' R2' U2 R2 U2 R2' U2 R2 U2' R2' U2' R U' R\",\n    \"R' U2 R2 U R2' U2 R2' U2' R2' U2 R2 U' R2' U2' R2 U2 R2' U R U' R\",\n    \"R' U2 R2 U R2' U2 R' U2' R2 U2 R2' U2 R2 U2 R2' U2' R2 U2' R U' R\",\n    \"R' U2 R2 U R2' U2 R' U2' R2 U2 R2' U' R2 U2' R2' U2 R2 U R U' R\",\n    \"R' U2 R2 U R' U R U R2' U' R2 U2' R2' U2 R2 U2' R' U2' R U' R\",\n    \"R' U2 R2 U2' R2 U2' R2' U' R2 U2' R U2' R U R U2' R' U2' R U' R\",\n    \"R' U2 R2 U2' R2' U' R U R' U' R2 U2' R' U R' U2 R U2 R' U2 R\",\n    \"R' U2 R2 U2' R2' U' R U2' R' U' R U2' R' U2' R2 U' R' U' R' U2 R\",\n    \"R' U2 R2' U R2 U2 R2' U2' R2' U2 R2 U2 R2' U2 R2 U2' R2' U2' R2 U' R\",\n    \"R' U2 R2' U R2 U2 R2' U2' R2' U2 R2 U' R2' U2' R2 U2 R2' U R2 U' R\",\n    \"R' U2 R2' U R2 U2 R' U2' R2 U2 R2' U2 R2 U2 R2' U2' R2 U2' R2 U' R\",\n    \"R' U2 R2' U R2 U2 R' U2' R2 U2 R2' U' R2 U2' R2' U2 R2 U R2 U' R\",\n    \"R' U2 R2' U R2' U R U R2' U' R2 U2' R2' U2 R2 U2' R' U2' R2 U' R\",\n    \"R' U2 R2' U R' U2 R2' U2' R2 U' R2' U R U R U2' R' U2' R2 U' R\",\n    \"R' U2 R2' U2' R2 U2' R U R2 U2' R2' U' R' U2' R2' U2 R2' U' R2 U' R\",\n    \"R' U2' R U2 R2 U2' R' U2' R U' R' U R' U2' R' U2 R U R U R\",\n    \"R' U2' R2 U R2 U2 R' U2 R2' U2' R U2' R U2 R U R' U2' R2 U' R\",\n    \"R U R' U R U2' R' U2' R2 U' R' U R U R' U2' R' U R2 U R\",\n    \"R U R' U2 R U' R2' U2 R2' U2' R2' U2' R2 U' R2' U' R' U2 R2 U' R\",\n    \"R U2' R U2 R2' U R U2 R' U' R U R U' R' U2 R' U2' R U R\",\n    \"R U2' R2' U2' R U2 R U2' R' U2' R' U2 R U R U' R' U2' R U R\",\n    \"R U2' R' U2 R U' R' U2 R U R U2 R' U' R U R' U' R U' R\",\n    \"R U2' R' U2' R U2 R' U2 R' U2' R U' R' U2' R2 U' R' U2' R U R\",\n    \"R U2' R' U2' R U2 R' U' R U' R2 U R2 U R U' R2 U' R2' U' R\",\n    \"R U2' R' U2' R U2' R U' R' U2 R' U2' R U' R' U2' R2 U' R' U' R\",\n    \"R U' R' U2 R U2' R U R2' U2 R U2' R U' R' U2 R' U2' R U R\",\n    \"R2 U R2' U' R2 U2 R2' U2 R2 U' R2' U' R2' U2 R2 U R2' U2 R' U2 R\",\n    \"R2 U2 R U R' U2 R' U2' R2' U2 R2' U2' R' U' R' U R2' U2' R2 U' R\",\n    \"R2 U2 R2' U R2 U2 R2' U' R U2 R' U R' U' R2 U2' R' U2 R' U R\",\n    \"R2' U R2 U' R2' U2 R2 U2 R2' U' R2 U' R2 U2 R2' U R2 U2 R U2 R\",\n    \"R2' U2 R U2 R2 U2' R' U R U R2' U' R' U2 R' U2' R2' U2' R2 U' R\",\n    \"R2' U2 R2 U R2' U2 R2 U' R U2 R' U R' U' R2 U2' R' U2 R' U R\",\n    \"R2' U2 R2' U' R2' U R U R' U2' R2 U2 R2 U2 R' U2' R2' U2' R2 U' R\",\n    \"R U R2' U R' U R U2' R2' U2 R' U' R U' R U R2' U2' R2 U2 R\",\n    \"R U R' U R' U R U2' R2 U2 R' U' R U' R2 U R2 U2' R2' U2 R\",\n    \"R U2 R2 U R2 U' R2 U R2 U2' R' U R2 U R2 U2 R' U2' R2' U' R\",\n    \"R U2' R U2 R' U2' R U2' R2' U' R2 U2' R2' U2' R U2' R U2 R' U2' R\",\n    \"R U2' R U2 R' U2' R2 U2' R2 U' R2' U2' R2 U2' R U2' R U2 R' U2' R\",\n    \"R U2' R2' U2 R2 U2' R2 U2 R U R' U' R2' U2 R2 U R U2 R2 U2 R\",\n    \"R U2' R2' U2 R2' U R' U R2' U R2 U2' R2' U2 R2' U2 R2 U R2 U R\",\n    \"R U2' R' U2 R2 U2' R2' U2' R2 U2 R' U R' U2 R U2' R U R' U' R\",\n    \"R U2' R' U2 R2' U R2 U R' U' R2 U' R2' U2 R2 U2' R' U2' R2' U' R\",\n    \"R U' R U R U R2' U2 R2 U2 R' U2 R U R2' U2 R2 U2 R' U2 R\",\n    \"R2 U R U2 R2 U R U2 R2 U R2' U2 R' U R2' U2 R2 U R2 U' R\",\n    \"R2 U R U2 R2 U2' R2' U R2 U2' R2 U2 R2' U R2 U2 R U2' R' U' R\",\n    \"R2 U R2 U2 R U2' R2 U' R2 U R U R U2 R' U' R U' R2' U' R\",\n    \"R2 U R2 U2 R2 U2' R2' U2 R' U2 R2' U2 R2 U R U2 R2 U2' R U' R\",\n    \"R2 U R2 U2 R2' U2' R2 U2 R2' U2 R2 U2' R U' R2 U2' R2' U2' R2 U' R\",\n    \"R2 U R2' U2 R U2' R2' U2 R2 U2 R2' U R U R U2' R' U2' R2 U' R\",\n    \"R2 U R2' U2 R2 U2' R2' U2 R2 U' R2' U2' R2' U2 R2 U R2' U2 R' U2 R\",\n    \"R2 U R2' U2 R2 U2' R2' U' R' U2' R2' U' R2 U2' R2' U2 R2' U R2 U' R\",\n    \"R2 U R2' U2 R2' U2' R2 U' R U2' R2 U' R2' U2' R2 U2 R2 U R2 U' R\",\n    \"R2 U R2' U2 R' U2' R U R U R2' U2 R2 U2 R2' U2' R U2' R2 U' R\",\n    \"R2 U R2' U2 R' U2' R2 U2 R2' U' R2 U' R' U' R' U2 R U R2 U' R\",\n    \"R2 U R2' U' R' U R U2 R U2' R' U R' U2' R U2 R U R U' R\",\n    \"R2 U R' U2 R U R' U' R' U2 R U2 R U2' R2' U2' R U2' R U' R\",\n    \"R2 U R' U2 R2 U2' R2' U2 R2 U2 R2' U2' R' U' R2' U2' R2 U2' R2 U' R\",\n    \"R2 U R' U2 R2' U2' R2 U2 R2 U2 R2' U2 R2 U R U2 R2 U2' R U' R\",\n    \"R2 U R' U2 R' U' R' U' R2 U R2' U2' R2 U2 R2' U2' R U2' R2 U' R\",\n    \"R2 U2 R2 U R U' R2 U2' R2' U2' R U2' R2' U2 R2 U' R2' U2' R2 U2 R\",\n    \"R2 U2 R2 U R U' R2 U2' R2' U2' R2 U2' R2 U2 R2' U' R2 U2' R2' U2 R\",\n    \"R2 U2' R2 U2' R2' U2 R2' U2 R2 U2 R2' U2' R2 U R2' U2 R' U2' R2' U R\",\n    \"R2 U2' R2 U2' R2' U2 R2' U2 R2' U2 R2 U R2' U2 R' U2' R2 U2 R2' U2 R\",\n    \"R2 U2' R2 U2' R2' U2 R2' U' R2 U2' R2' U2 R2 U2' R2' U2' R' U2 R2' U2 R\",\n    \"R2 U2' R2 U2' R2' U2 R2' U' R2 U2' R2' U2 R2 U' R2' U2 R' U2' R2' U R\",\n    \"R2 U2' R2 U2' R2' U' R2 U2' R U2 R2 U2 R2' U2' R2 U2 R2' U R2 U' R\",\n    \"R2 U2' R2 U2' R2' U' R2 U2' R U' R2 U R2' U2 R2 U2' R2' U2 R2 U2 R\",\n    \"R2 U2' R2 U2' R2' U' R2 U2' R2' U2 R U2' R2 U' R2' U2' R2 U2' R2 U' R\",\n    \"R2 U2' R2 U2' R2' U' R2' U2' R2 U2 R2' U2' R2 U' R2' U R' U2 R2' U2 R\",\n    \"R2 U2' R2' U R2 U2 R U2' R2 U2 R2' U R2 U2' R2' U2 R2 U R2 U' R\",\n    \"R2 U2' R2' U R2 U2 R U2' R2 U2 R2' U' R2 U2 R2' U2' R2 U2' R2 U' R\",\n    \"R2 U2' R2' U R' U2 R2' U R2 U2 R U R2' U2 R2 U R2' U2 R' U2 R\",\n    \"R2 U2' R2' U2 R2' U2 R U2' R' U' R U2' R' U2 R' U R2' U2' R2 U2 R\",\n    \"R2 U2' R2' U2 R2' U2' R U2 R' U R U2 R' U2' R' U R2' U2' R2 U2 R\",\n    \"R2 U2' R2' U2' R U R2 U R2 U' R2' U' R2 U R2' U' R' U' R' U2 R\",\n    \"R2 U2' R2' U2' R2 U R U2' R2 U2 R2' U R2 U2 R2' U2' R2 U2 R2 U2 R\",\n    \"R2 U2' R2' U2' R2 U R U2' R2' U2 R2 U R2' U2 R2 U2' R2 U2 R2 U2 R\",\n    \"R2 U2' R2' U2' R2 U R2 U2' R2 U2 R2' U R2 U2 R2' U2' R U2 R2 U2 R\",\n    \"R2 U2' R2' U2' R2 U R2 U2' R2' U2 R2 U R2' U2 R2 U2' R U2 R2 U2 R\",\n    \"R2 U2' R2' U2' R2 U R2 U2' R2' U2 R2 U R2' U2' R2 U2 R U2' R2 U R\",\n    \"R2 U2' R2' U2' R2 U R2 U2' R2' U' R2 U2' R U2 R2 U2' R2' U R2 U' R\",\n    \"R2 U2' R2' U2' R2 U R2' U2 R2 U2' R U2 R2 U R2' U2 R2 U R2 U' R\",\n    \"R2 U2' R2' U2' R2 U R' U2' R2 U2 R2' U R2 U2 R2' U2' R' U2 R2 U2 R\",\n    \"R2 U2' R2' U2' R2 U R' U2' R2' U2 R2 U R2' U2 R2 U2' R' U2 R2 U2 R\",\n    \"R2 U2' R2' U2' R2 U R' U' R' U2 R' U2 R2' U R2 U2 R2' U2' R' U R\",\n    \"R2 U2' R2' U2' R2 U R' U' R' U' R2 U2' R2' U2' R2 U2 R2' U2' R U R\",\n    \"R2 U2' R2' U2' R2 U2 R2' U2 R' U2' R2' U' R2 U2' R2' U2 R2' U R2 U' R\",\n    \"R2 U2' R2' U2' R2 U2' R2' U2' R' U2 R2' U R2 U2 R2' U2' R2' U2' R2 U' R\",\n    \"R2 U2' R2' U2' R2 U' R U2 R2' U2' R2 U2' R2' U2' R2 U2 R2 U2' R U R\",\n    \"R2 U2' R2' U2' R2 U' R U2 R2' U' R' U2 R2' U2' R2' U2 R2 U2 R2' U2 R\",\n    \"R2 U2' R2' U2' R2 U' R U2 R' U R2' U' R2 U2' R2' U2 R2 U2' R U2 R\",\n    \"R2 U2' R2' U2' R2 U' R2 U2 R2 U2' R2' U2' R2 U2' R2' U2 R U2' R U R\",\n    \"R2 U2' R2' U2' R2 U' R2 U2 R2' U R2 U2 R U2' R2 U2 R2' U2' R2 U' R\",\n    \"R2 U2' R2' U2' R2 U' R2 U2 R2' U2' R2 U2' R2' U2 R2 U2' R U2 R2 U2 R\",\n    \"R2 U2' R2' U2' R2 U' R2 U2 R2' U2' R2 U2' R2' U2' R2 U2 R U2' R2 U R\",\n    \"R2 U2' R2' U2' R2 U' R2' U2 R2 U' R2' U2 R' U2' R2' U' R2 U2' R2' U' R\",\n    \"R2 U2' R2' U2' R2 U' R2' U2 R2' U2' R2 U' R2' U2' R' U2 R2' U' R2 U' R\",\n    \"R2 U2' R2' U2' R2 U' R2' U2' R2 U2 R U2' R2 U' R2' U2' R2 U2' R2 U' R\",\n    \"R2 U2' R2' U2' R2 U' R' U2 R' U2' R U R U R2' U R2 U2' R' U R\",\n    \"R2 U2' R2' U' R2 U R U2' R2 U' R2' U2' R2 U2 R2 U' R2' U R2 U2' R\",\n    \"R2 U2' R2' U' R2 U2' R U R2 U2 R2' U2 R2 U2' R2' U R2 U R2' U2' R\",\n    \"R2 U2' R2' U' R2 U2' R U R2 U' R2' U2' R2 U2 R2' U' R2 U R2' U2' R\",\n    \"R2 U2' R2' U' R2 U2' R U2 R2 U' R2' U R2 U2' R2' U2 R2 U R2' U' R\",\n    \"R2 U2' R2' U' R2 U2' R U2 R2 U' R2' U' R2 U2 R2' U2' R2 U2' R2' U' R\",\n    \"R2 U2' R2' U' R2 U2' R2' U2 R' U2' R2 U R' U' R' U2 R U R U' R\",\n    \"R2 U2' R' U2 R2' U R2 U2 R' U2' R2 U R2' U2' R2 U2 R2' U R' U' R\",\n    \"R2 U2' R' U2 R2' U R2 U2 R' U2' R2 U' R2' U2 R2 U2' R2' U2' R' U' R\",\n    \"R2 U' R U' R U2 R2 U2' R2' U2 R U2' R2' U2 R2' U R U' R' U' R\",\n    \"R2 U' R U' R2' U2 R2' U2' R2 U2 R' U2' R2' U2 R2' U R U' R' U' R\",\n    \"R2 U' R2' U2 R' U2' R2' U' R2 U2' R2' U R2' U2' R2 U2 R2' U R2 U' R\",\n    \"R2 U' R2' U2 R' U2' R2' U' R2 U2' R2' U' R2' U2 R2 U2' R2' U2' R2 U' R\",\n    \"R2' U R U2 R2 U2' R2' U2 R' U2 R2' U2 R2 U R U2 R2 U2' R2 U' R\",\n    \"R2' U R U2 R2' U2' R2 U2 R U2 R2 U2 R2' U R' U2 R2' U2' R U' R\",\n    \"R2' U R U2 R2' U2' R2 U2 R2' U2 R2 U2' R U' R2 U2' R2' U2' R2' U' R\",\n    \"R2' U R2 U2 R U2' R2 U2 R2' U2' R' U' R2' U2 R2 U R U2 R2 U2 R\",\n    \"R2' U R2 U2 R U2' R2' U2 R2 U2 R2' U R U R U2' R' U2' R2' U' R\",\n    \"R2' U R2 U2 R2 U2' R2' U' R' U2' R2' U' R2 U2' R2' U2 R2' U R2' U' R\",\n    \"R2' U R2 U2 R2' U2' R2 U2 R2' U' R2 U2' R2 U2 R2' U R2 U2 R U2 R\",\n    \"R2' U R2 U2 R2' U2' R2 U' R U2' R2 U' R2' U2' R2 U2 R2 U R2' U' R\",\n    \"R2' U R2 U2 R2' U2' R2' U2 R2 U2' R2 U' R2' U2 R2 U R U2 R2 U2 R\",\n    \"R2' U R2 U2 R' U2' R U R U R2' U2 R2 U2 R2' U2' R U2' R2' U' R\",\n    \"R2' U R2 U2 R' U2' R2 U2 R2' U' R2 U' R' U' R' U2 R U R2' U' R\",\n    \"R2' U R2 U' R' U R U2 R U2' R' U R' U2' R U2 R U R2 U' R\",\n    \"R2' U R2' U2 R U R' U' R' U2 R U2 R U2' R2' U2' R U2' R2 U' R\",\n    \"R2' U R2' U2 R2 U2' R2' U2 R2 U2 R2' U2' R' U' R2' U2' R2 U2' R2' U' R\",\n    \"R2' U R2' U2 R2' U2' R2 U2 R2 U2 R2' U2 R2 U R U2 R2 U2' R2 U' R\",\n    \"R2' U R2' U2 R' U' R' U' R2 U R2' U2' R2 U2 R2' U2' R U2' R2' U' R\",\n    \"R2' U R' U2 R2 U2' R2' U2 R2' U2 R2 U2 R2' U R' U2 R2' U2' R U' R\",\n    \"R2' U R' U2 R2' U R' U2 R2' U R2 U2 R U R2 U2 R2' U R2' U' R\",\n    \"R2' U R' U2 R2' U2' R2 U R2' U2' R2' U2 R2 U R2' U2 R' U2' R U' R\",\n    \"R2' U2' R2 U R U2 R2 U R2' U2 R' U R2 U2 R2' U R2 U2 R U2 R\",\n    \"R2' U2' R2 U R2' U2 R' U2' R2' U2 R2 U R2' U2' R2 U2 R2' U R2' U' R\",\n    \"R2' U2' R2 U R2' U2 R' U2' R2' U2 R2 U' R2' U2 R2 U2' R2' U2' R2' U' R\",\n    \"R2' U2' R2 U2 R' U2 R U2' R' U' R U2' R' U2 R' U R2 U2' R2' U2 R\",\n    \"R2' U2' R2 U2 R' U2' R U2 R' U R U2 R' U2' R' U R2 U2' R2' U2 R\",\n    \"R2' U2' R2 U2' R2' U R U2' R2 U2 R2' U R2 U2 R2' U2' R U2 R2' U2 R\",\n    \"R2' U2' R2 U2' R2' U R U2' R2' U2 R2 U R2' U2 R2 U2' R U2 R2' U2 R\",\n    \"R2' U2' R2 U2' R2' U R2 U2 R2' U2' R' U2 R2' U R2 U2 R2' U R2' U' R\",\n    \"R2' U2' R2 U2' R2' U R2' U2' R2 U2 R2' U R2 U2 R2' U2' R' U2 R2' U2 R\",\n    \"R2' U2' R2 U2' R2' U R2' U2' R2 U2 R2' U R2 U2' R2' U2 R' U2' R2' U R\",\n    \"R2' U2' R2 U2' R2' U R2' U2' R2 U' R2' U2' R' U2 R2' U2' R2 U R2' U' R\",\n    \"R2' U2' R2 U2' R2' U R2' U2' R2' U2 R2 U R2' U2 R2 U2' R' U2 R2' U2 R\",\n    \"R2' U2' R2 U2' R2' U R' U2' R2 U2 R2' U R2 U2 R2' U2' R2' U2 R2' U2 R\",\n    \"R2' U2' R2 U2' R2' U R' U2' R2' U2 R2 U R2' U2 R2 U2' R2' U2 R2' U2 R\",\n    \"R2' U2' R2 U2' R2' U2 R2 U2 R U2' R2 U' R2' U2' R2 U2 R2 U R2' U' R\",\n    \"R2' U2' R2 U2' R2' U2' R2 U2' R U2 R2 U R2' U2 R2 U2' R2 U2' R2' U' R\",\n    \"R2' U2' R2 U2' R2' U' R2 U2 R2 U2' R2' U' R2 U2' R U2 R2 U' R2' U' R\",\n    \"R2' U2' R2 U2' R2' U' R2 U2 R2' U' R2 U2 R U2' R2 U' R2' U2' R2 U' R\",\n    \"R2' U2' R2 U2' R2' U' R2 U2' R2' U2 R' U2' R2' U' R2 U2' R2' U2' R2' U' R\",\n    \"R2' U2' R2 U2' R2' U' R2' U2 R2 U R2' U2 R' U2' R2' U2 R2 U2' R2' U' R\",\n    \"R2' U2' R2 U2' R2' U' R2' U2 R2 U2' R2' U2' R2 U2 R2' U2' R' U2 R2' U2 R\",\n    \"R2' U2' R2 U2' R2' U' R2' U2 R2 U2' R2' U2' R2 U2' R2' U2 R' U2' R2' U R\",\n    \"R2' U2' R2 U' R2' U R' U2' R2' U' R2 U2' R2' U2 R2' U' R2 U R2' U2' R\",\n    \"R2' U2' R2 U' R2' U2' R2 U2 R' U2' R2 U R' U' R' U2 R U R U' R\",\n    \"R2' U2' R2 U' R2' U2' R' U R2' U2 R2 U2 R2' U2' R2 U R2' U R2 U2' R\",\n    \"R2' U2' R2 U' R2' U2' R' U R2' U' R2 U2' R2' U2 R2 U' R2' U R2 U2' R\",\n    \"R2' U2' R2 U' R2' U2' R' U2 R2' U' R2 U R2' U2' R2 U2 R2' U R2 U' R\",\n    \"R2' U2' R2 U' R2' U2' R' U2 R2' U' R2 U' R2' U2 R2 U2' R2' U2' R2 U' R\",\n    \"R2' U2' R2' U2 R2' U2' R2 U2' R U2 R U R' U2 R U2' R U R2 U' R\",\n    \"R2' U2' R2' U2 R2' U2' R2 U2' R2 U R U R2 U2' R2' U' R' U R2' U R\",\n    \"R2' U2' R2' U2' R2 U2 R' U2 R2 U2 R2' U R2 U2 R' U2' R2' U2 R2 U2 R\",\n    \"R2' U2' R2' U2' R2 U2 R' U2 R2' U2 R2 U R2' U2 R2' U2' R2' U2 R2 U2 R\",\n    \"R2' U2' R2' U2' R2 U2 R' U' R2 U2' R2' U' R2 U2' R' U2 R' U' R' U' R\",\n    \"R2' U2' R2' U2' R2 U2 R' U' R2' U2' R2 U' R2' U2' R2' U2 R' U' R' U' R\",\n    \"R2' U2' R2' U2' R2 U' R2' U R' U' R2 U2' R' U R U R2' U R U2' R\",\n    \"R2' U2' R2' U2' R2 U' R2' U2' R2 U2 R' U2' R2' U' R2 U2' R2' U2' R2' U' R\",\n    \"R2' U2' R2' U2' R2 U' R2' U2' R' U2 R2' U2 R2 U2' R2' U2 R2 U R2' U' R\",\n    \"R2' U2' R2' U2' R2 U' R2' U2' R' U' R2' U R2 U2 R2' U2' R2 U2 R2' U2 R\",\n    \"R2' U' R2 U2 R U2' R2 U' R2' U2' R2 U R2 U2' R2' U2 R2 U R2' U' R\",\n    \"R2' U' R2 U2 R U2' R2 U' R2' U2' R2 U' R2 U2 R2' U2' R2 U2' R2' U' R\",\n    \"R' U R U2 R U2' R2' U2 R2 U2 R2' U R U R U2' R' U2' R' U' R\",\n    \"R' U R U2 R2 U2' R2' U' R' U2' R2' U' R2 U2' R2' U2 R2' U R' U' R\",\n    \"R' U R U2 R2' U2' R2 U' R U2' R2 U' R2' U2' R2 U2 R2 U R' U' R\",\n    \"R' U R U2 R' U2' R U R U R2' U2 R2 U2 R2' U2' R U2' R' U' R\",\n    \"R' U R U2 R' U2' R2 U2 R2' U' R2 U' R' U' R' U2 R U R' U' R\",\n    \"R' U R U' R' U R U2 R U2' R' U R' U2' R U2 R U R2' U' R\",\n    \"R' U R2 U2 R U R' U' R' U2 R U2 R U2' R2' U2' R U2' R2' U' R\",\n    \"R' U R2 U2 R2 U2' R2' U2 R2 U2 R2' U2' R' U' R2' U2' R2 U2' R' U' R\",\n    \"R' U R2 U2 R2' U2' R2 U2 R2 U2 R2' U2 R2 U R U2 R2 U2' R2' U' R\",\n    \"R' U R2 U2 R' U' R' U' R2 U R2' U2' R2 U2 R2' U2' R U2' R' U' R\",\n    \"R' U R2' U2 R2 U2' R2' U2 R2' U2 R2 U2 R2' U R' U2 R2' U2' R2 U' R\",\n    \"R' U R2' U2 R2' U R' U2 R2' U R2 U2 R U R2 U2 R2' U R' U' R\",\n    \"R' U R2' U2 R2' U2' R2 U R2' U2' R2' U2 R2 U R2' U2 R' U2' R2 U' R\",\n    \"R' U R2' U2 R2' U2' R2 U' R2' U2 R2 U' R2' U2 R' U2' R2' U' R2 U2 R\",\n    \"R' U R' U2 R2 U R U2 R2 U R2' U2 R' U R2' U2 R2 U R' U' R\",\n    \"R' U R' U2 R2 U2' R2' U R2 U2' R2 U2 R2' U R2 U2 R U2' R U' R\",\n    \"R' U2 R U2' R' U' R U2' R' U' R U' R U2 R' U' R U' R2' U' R\",\n    \"R' U2' R U2 R2 U R2' U' R' U R U R U2 R' U' R U' R U' R\",\n    \"R' U2' R2 U2 R2' U2' R' U2 R U R' U' R2' U2 R2 U R U2 R2 U2 R\",\n    \"R' U2' R2 U2' R2' U2 R' U2 R2 U2 R2' U R2 U2 R' U2' R2 U2 R2' U2 R\",\n    \"R' U2' R2 U2' R2' U2 R' U2 R2' U2 R2 U R2' U2 R2' U2' R2 U2 R2' U2 R\",\n    \"R' U2' R2 U2' R2' U' R2 U2' R2' U2 R2' U2' R2' U' R2 U2' R2' U2' R' U' R\",\n    \"R' U2' R2 U2' R2' U' R2 U2' R2' U2 R' U2' R2 U' R2' U2' R2 U2' R' U' R\",\n    \"R' U2' R2' U2' R2 U2 R U2 R2 U2 R2' U R2 U2 R2 U2' R2' U2 R2 U2 R\",\n    \"R' U2' R2' U2' R2 U2 R U2 R2' U2 R2 U R2' U2 R U2' R2' U2 R2 U2 R\",\n    \"R' U2' R2' U2' R2 U' R2' U2' R2 U2 R2' U2' R2' U' R2 U2' R2' U2' R' U' R\",\n    \"R' U2' R2' U2' R2 U' R2' U2' R2 U2 R' U2' R2 U' R2' U2' R2 U2' R' U' R\",\n    \"R U2 R U2' R' U2 R' U2 R U2' R U2 R U2' R2' U' R2 U2' R2' U2 R\",\n    \"R U2 R U2' R' U2 R' U2 R U2' R U2 R2 U2' R2 U' R2' U2' R2 U2 R\",\n    \"R U2 R U2' R' U' R U2' R' U2 R U2' R2' U2 R2 U2 R2' U2' R2 U2 R\",\n    \"R U2 R U2' R' U' R U2' R' U2 R2 U2' R2 U2 R2' U2 R2 U2' R2' U2 R\",\n    \"R U2 R' U R' U' R2 U' R' U' R' U2' R U2' R U' R' U' R U' R\",\n    \"R U2' R U2 R' U R U2 R' U2' R U2' R2' U2 R2 U2 R2' U2' R2 U2 R\",\n    \"R U2' R U2 R' U R U2 R' U2' R2 U2' R2 U2 R2' U2 R2 U2' R2' U2 R\",\n    \"R U' R' U2' R U R2 U R U2 R2 U2 R' U' R' U2 R2 U R2 U' R\",\n    \"R2 U R2' U2 R2' U2' R U2 R2 U2' R2 U2 R U2 R U R2 U2' R2' U' R\",\n    \"R2 U R' U' R U2 R2' U2 R2 U R2 U R2 U2' R U2 R2 U' R2 U R\",\n    \"R2 U R' U' R U2 R2' U2 R2 U R2 U2 R2 U2 R U2' R2 U2' R2 U R\",\n    \"R2 U2 R U2' R2 U' R2' U2' R2 U2' R2 U R2' U2' R2 U2 R2' U R2 U' R\",\n    \"R2 U2 R U2' R2 U' R2' U2' R2 U2' R2 U' R2' U2 R2 U2' R2' U2' R2 U' R\",\n    \"R2 U' R2 U2' R' U2 R2 U2' R' U R' U2 R2' U R2 U' R U R2 U2 R\",\n    \"R2 U' R2 U2' R' U2 R2 U2' R' U2' R2 U R2' U2 R' U2 R U R2 U2 R\",\n    \"R2' U2 R2 U2 R' U' R2 U2 R2 U' R U2 R' U2' R2' U' R2 U R U2 R\",\n    \"R2' U2 R' U2' R2' U' R2 U2' R2' U2' R2' U R2 U2' R2' U2 R2 U R2' U' R\",\n    \"R2' U2 R' U2' R2' U' R2 U2' R2' U2' R2' U' R2 U2 R2' U2' R2 U2' R2' U' R\",\n    \"R2' U2' R U2 R2 U2' R2' U2 R2' U R' U' R2 U R' U2 R2 U R U' R\",\n    \"R2' U2' R2' U2 R2' U2' R2 U2 R U R' U' R2 U R' U2 R2 U R U' R\",\n    \"R2' U2' R2' U2 R' U' R U2 R2' U' R2' U R2' U' R2' U R2' U2' R2' U' R\",\n    \"R U R' U2 R' U' R2 U2' R2' U R U' R' U2' R2 U2 R' U R U2 R\",\n    \"R2 U R' U R' U' R U2 R U2 R' U2 R U2 R2' U R2 U2 R' U2 R\",\n    \"R2 U R' U R' U' R U2 R U2 R' U2 R2 U2 R2 U R2' U2 R2' U2 R\",\n    \"R2' U R U2 R2' U' R' U' R2' U R U2' R' U2 R' U2' R' U R2 U2 R\",\n    \"R2' U2' R' U2' R U' R2 U' R2 U2 R' U2 R U2 R' U R' U2 R2 U2 R\",\n    \"R' U2 R' U2' R2 U2 R' U' R' U2' R U R U R2' U' R2 U2' R' U2 R\",\n    \"R' U2' R2' U2' R2 U' R U2' R' U R2' U2 R2 U2 R2' U2 R2' U2' R2 U2 R\",\n    \"R' U2' R' U2' R U' R U' R2' U2 R' U2 R U2 R' U R2' U2 R2' U2 R\",\n    \"R U R U2 R2 U' R U' R' U R2' U2' R2 U2' R U2 R2 U2' R' U2 R\",\n    \"R U R U2 R2 U' R U' R' U R2' U' R2 U2 R U2' R2 U2 R' U2 R\",\n    \"R U R2 U2 R2 U' R' U' R2 U' R2' U2 R' U2' R' U' R2' U2' R2 U2' R\",\n    \"R U R2' U2 R2' U' R' U2' R U R2 U2' R U' R2' U R2' U' R2' U R\",\n    \"R U2 R U2' R U R U R U' R2' U2 R2' U2' R2' U' R2 U' R2 U2 R\",\n    \"R U2' R U2 R' U2' R' U2 R U2 R U2' R' U2 R U2' R2' U' R2 U2' R\",\n    \"R U2' R U2 R' U2' R' U2 R U2 R U2' R' U2 R2 U2' R2 U' R2' U2' R\",\n    \"R U2' R2 U2 R2' U2' R' U' R U2' R2 U2 R2' U2' R U' R2' U2' R2 U2' R\",\n    \"R U2' R2 U2 R2' U2' R' U' R2' U2' R2' U2 R2 U2' R' U' R2' U2' R2 U2' R\",\n    \"R U2' R2 U2' R U R2' U R2' U' R2 U' R2 U R2 U R2' U2 R2 U2' R\",\n    \"R U2' R2 U' R U' R' U2 R U2' R U R' U R2 U2 R' U' R' U R\",\n    \"R U2' R2 U' R2' U2' R2 U2' R2 U R2' U2' R2 U2 R2' U R2 U' R2' U R\",\n    \"R U2' R2 U' R2' U2' R2 U2' R2 U' R2' U2 R2 U2' R2' U2' R2 U' R2' U R\",\n    \"R U2' R2' U2 R U R' U2 R2 U R U2 R' U' R U R' U' R U' R\",\n    \"R U2' R2' U2 R2 U2 R2 U R U2' R2 U2 R' U2 R2' U2 R2 U R' U2 R\",\n    \"R U2' R2' U2' R2 U' R2' U R U' R' U2' R U2 R U2 R' U' R U' R\",\n    \"R U2' R' U2 R U2 R2' U2' R2' U2 R U2' R' U2 R U2 R2' U2' R2 U2' R\",\n    \"R U2' R' U2 R2 U2 R2 U2' R' U2 R U2' R' U2 R2 U2 R2 U2' R2' U2' R\",\n    \"R U2' R' U2 R' U2 R U2' R U2 R U2' R2' U' R2 U2' R2' U2 R' U R\",\n    \"R U2' R' U2 R' U2 R U2' R U2 R2 U2' R2 U' R2' U2' R2 U2 R' U R\",\n    \"R U2' R' U2' R2 U' R2' U' R' U2 R U2 R' U' R2' U R2 U R2 U2' R\",\n    \"R U2' R' U' R U2' R U2 R2' U2' R2 U2 R2' U2' R' U' R2' U2' R2 U2' R\",\n    \"R U2' R' U' R U2' R2 U2 R' U2' R2' U2 R2 U2' R2' U' R2 U R U2 R\",\n    \"R U2' R' U' R U2' R2 U' R2 U2' R U2 R2 U R U' R2 U2' R2' U2' R\",\n    \"R U2' R' U' R U2' R' U2 R U2' R2' U2 R2 U2 R2' U2' R2 U2 R2' U R\",\n    \"R U2' R' U' R U2' R' U2 R2 U2' R2 U2 R2' U2 R2 U2' R2' U2 R2 U R\",\n    \"R U2' R' U' R U2' R' U2 R2 U2' R2 U' R2' U' R2 U2 R U2' R2 U' R\",\n    \"R U2' R' U' R2 U2' R' U2 R' U2' R U2 R U2' R2 U' R2 U2' R2' U2' R\",\n    \"R U2' R' U' R2 U2' R' U2 R' U2' R' U' R2 U2' R U2 R' U2' R2' U2' R\",\n    \"R U2' R' U' R2' U R2' U2 R2 U2' R2 U2 R2 U2' R2' U R2 U R U2 R\",\n    \"R U2' R' U' R2' U R2' U2 R' U2' R2' U' R2' U2' R2' U' R2 U2' R2' U2' R\",\n    \"R U2' R' U' R2' U R2' U2 R' U2' R2' U' R' U2' R2 U' R2' U2' R2 U2' R\",\n    \"R U' R2 U2' R2 U' R' U R' U2' R2 U R2 U' R U R U2' R2' U R\",\n    \"R2 U R2 U2 R2' U2 R2' U' R U' R' U R U' R' U2 R U2' R2' U2' R\",\n    \"R2 U R2' U2 R2' U2 R' U2 R U R' U' R U2 R U2 R' U R U2 R\",\n    \"R2 U R2' U' R2 U2 R2' U R' U' R U' R2 U' R2' U2 R' U R2' U' R\",\n    \"R2 U2 R2 U2' R2' U2' R2' U R2 U2' R2' U2 R2 U R2' U R' U2' R2' U2 R\",\n    \"R2 U2 R2 U2' R2' U2' R2' U' R2 U2 R2' U2' R2 U2' R2' U R' U2' R2' U2 R\",\n    \"R2 U2 R2' U R U2' R U' R2' U2 R U R' U' R U R' U2 R U2 R\",\n    \"R2 U2 R2' U R2 U2 R2 U2' R U' R U R' U2 R U2 R' U2 R' U2' R\",\n    \"R2 U2 R2' U2' R2 U2 R2' U R2 U' R2' U2 R2 U2' R2 U2' R2' U' R2 U2' R\",\n    \"R2 U2 R2' U' R U R2' U2' R2' U R2 U R U R2 U2' R2' U2' R U' R\",\n    \"R2 U2 R' U' R2 U2 R2 U' R U2 R' U2' R2' U' R2 U R U2 R U R\",\n    \"R2 U2' R U2 R2' U2' R' U' R U2' R2 U2 R2 U2' R2 U2 R2' U2 R2 U2' R\",\n    \"R2 U2' R U2 R2' U2' R' U' R2' U2 R2' U R U R U2' R2 U2 R2 U R\",\n    \"R2 U2' R U' R2' U2' R U R2 U2 R2 U2' R2' U' R U R2' U R U R\",\n    \"R2 U2' R U' R' U R2' U2 R2' U2 R2 U2 R2' U R' U' R U R' U2 R\",\n    \"R2 U2' R2' U R' U' R U2' R U2 R2' U R U' R U2' R' U2 R2 U2 R\",\n    \"R2 U2' R2' U2 R U R2 U R2' U2' R2 U' R2 U2 R2 U2' R2' U' R2' U R\",\n    \"R2 U2' R2' U2 R2 U2 R2' U2 R' U2 R2 U2' R U' R' U2' R2' U2 R2' U' R\",\n    \"R2 U' R U2' R U' R2 U R2 U' R2 U2' R2 U2 R' U2' R2' U R2 U R\",\n    \"R2 U' R U2' R2' U2' R2 U' R' U' R' U' R U R2 U2 R U R' U2 R\",\n    \"R2' U R U R U2' R' U R' U' R2 U2 R' U' R' U2 R U' R' U2' R\",\n    \"R2' U R2 U' R2' U2 R2 U' R2' U' R2' U R' U2 R2' U' R2 U' R U' R\",\n    \"R2' U R2' U R U2' R' U' R U R2 U2 R2' U2' R2 U R U' R U' R\",\n    \"R2' U R2' U R U2' R' U' R U2' R2 U2' R2' U2 R2 U' R U' R U' R\",\n    \"R2' U R' U R U' R2 U' R' U2' R U2' R' U' R2' U' R U' R' U R\",\n    \"R2' U R' U2 R' U2 R U R2 U' R2' U' R U' R U2 R2 U R' U' R\",\n    \"R2' U2 R U R2 U' R' U2' R' U R' U2 R' U2' R2 U2' R2' U2' R2 U R\",\n    \"R2' U2 R U R2 U' R' U' R U2 R2' U2' R2' U2 R2' U' R2 U' R U' R\",\n    \"R2' U2 R U2 R U2' R U2 R2' U' R2 U' R2' U' R U2 R' U2' R' U' R\",\n    \"R2' U2 R U' R' U2 R2 U' R' U' R2 U R' U R U2' R2' U R' U2' R\",\n    \"R2' U2 R2 U R2' U2 R U2' R U' R U R' U2 R U2 R' U2 R' U2' R\",\n    \"R2' U2 R2 U R' U R2 U R' U R U2' R' U R' U2' R U' R2' U' R\",\n    \"R2' U2 R2 U2' R2' U2 R2 U R2' U' R2 U2 R2' U2' R2' U2' R2 U' R2' U2' R\",\n    \"R2' U2 R2 U2' R' U2 R2' U R2 U2 R' U2 R2 U2 R2' U R' U' R U2' R\",\n    \"R2' U2 R2' U2' R2 U R2' U2 R U2' R2 U2' R U' R2 U2' R' U2 R2' U' R\",\n    \"R2' U2 R2' U2' R2' U2 R U' R' U' R2 U R U2 R2' U' R2 U' R U' R\",\n    \"R2' U2 R2' U2' R2' U2 R' U R U2 R2 U2' R' U2 R2' U2 R2 U2 R2' U2' R\",\n    \"R2' U2 R' U R2' U2 R2' U2 R2 U2 R2' U R' U2 R2' U' R2 U2' R U2 R\",\n    \"R2' U2 R' U R2' U2 R2' U2 R2' U2 R2 U R2' U2 R' U2' R2 U' R U2' R\",\n    \"R2' U2 R' U R2' U2 R2' U' R2 U2' R2' U2 R2 U2' R2' U2' R' U' R U2' R\",\n    \"R2' U2 R' U R2' U' R2 U2' R U' R2 U2' R2' U2' R2 U R2 U2' R U2 R\",\n    \"R2' U2 R' U R2' U' R2 U2' R U' R2 U2' R2' U2' R2 U2 R2 U2 R U2' R\",\n    \"R2' U2 R' U R2' U' R2' U2' R2 U2 R2' U2' R2 U' R2' U R' U' R U2' R\",\n    \"R2' U2 R' U2' R U2' R2 U R2' U2' R2 U2 R2' U R2 U R2 U2' R U2 R\",\n    \"R2' U2 R' U2' R U2' R2 U R2' U2' R2 U2 R2' U R2 U2 R2 U2 R U2' R\",\n    \"R2' U2 R' U2' R U2' R2 U R2' U2' R2' U2 R2 U R2' U2 R U2 R U2' R\",\n    \"R2' U2 R' U2' R U2' R2 U' R2' U2 R2 U2' R2' U2' R2 U R2 U2' R U2 R\",\n    \"R2' U2 R' U2' R U2' R2 U' R2' U2 R2 U2' R2' U2' R2 U2 R2 U2 R U2' R\",\n    \"R2' U2' R U' R2 U R' U2 R U2 R' U2 R U R2 U2 R2' U2 R2' U2' R\",\n    \"R2' U2' R2 U R' U' R U2' R U2 R2' U R U' R U2' R' U2 R2' U2 R\",\n    \"R2' U2' R2 U' R2' U2 R' U2 R2 U2' R U' R' U2' R2' U2 R2' U' R2' U2' R\",\n    \"R2' U2' R2' U2 R U2' R2' U' R2 U2' R' U2 R2 U2' R' U' R2' U2' R2 U2' R\",\n    \"R2' U2' R2' U2 R2 U2' R2 U' R U2' R2 U2 R2' U2' R U' R2' U2' R2 U2' R\",\n    \"R2' U2' R2' U2 R2 U2' R2 U' R2' U2' R2' U2 R2 U2' R' U' R2' U2' R2 U2' R\",\n    \"R2' U2' R2' U2 R2' U R' U2' R U R' U R2' U2' R2 U2 R2 U2' R U' R\",\n    \"R2' U2' R' U R2' U2' R U2 R U2' R U R2' U R' U2' R' U2' R U2 R\",\n    \"R2' U' R U2' R U' R U R2' U2 R' U' R2 U' R U' R' U R2' U2' R\",\n    \"R2' U' R2' U' R' U' R' U2 R' U R2 U R U2 R2' U R2 U' R2' U' R\",\n    \"R' U R U R U R2 U' R2' U' R U' R' U R U2 R U2' R2 U2 R\",\n    \"R' U R2' U R2 U R U' R2 U' R2' U2' R U R2' U2 R2 U2 R2' U2' R\",\n    \"R' U R2' U' R2 U2' R' U R2 U2 R2' U2 R2 U' R2 U R2' U R' U2' R\",\n    \"R' U R2' U' R2' U' R' U2 R2 U' R' U' R U2 R U2' R2 U2 R2' U2' R\",\n    \"R' U R2' U' R2' U' R' U2 R2 U' R' U' R U2 R2' U2' R2' U2 R2 U2' R\",\n    \"R' U R' U' R2 U' R' U' R' U2' R U2' R U' R' U' R U' R' U R\",\n    \"R' U2 R U2 R' U2' R U' R U2 R2' U R U' R U2' R' U R' U2' R\",\n    \"R' U2 R U' R' U2 R2 U R' U' R' U2' R U R U' R' U R' U2' R\",\n    \"R' U2 R2 U R U R2 U R2 U2' R' U2 R U2' R U2 R2' U2' R U' R\",\n    \"R' U2 R2 U R U R2 U R2' U2' R' U2 R' U2' R U2 R' U2' R U' R\",\n    \"R' U2 R2 U R U' R U' R' U' R2 U' R U2 R U R' U R' U' R\",\n    \"R' U2 R2 U R2' U R U2' R' U2' R U2' R' U2' R2 U' R' U2 R' U R\",\n    \"R' U2 R2 U R2' U R U2' R' U' R U2' R' U' R2 U2' R' U R' U2' R\",\n    \"R' U2 R2 U2' R' U2 R' U R U2 R' U2' R2 U' R2' U R U R U2' R\",\n    \"R' U2 R' U' R' U R' U R U2 R2 U' R U' R' U' R U' R U R\",\n    \"R' U2' R U' R' U2' R U2 R2' U2 R2' U R2 U' R2' U R2 U2 R2' U2' R\",\n    \"R' U2' R U' R' U2' R U2 R' U2 R2 U R2' U' R2 U R2' U2 R2 U2' R\",\n    \"R' U2' R2' U' R2 U2' R2' U2' R2' U R2 U2' R2' U2 R2 U R2' U' R2 U R\",\n    \"R' U2' R2' U' R2 U2' R2' U2' R2' U' R2 U2 R2' U2' R2 U2' R2' U' R2 U R\",\n    \"R' U2' R' U R2' U2' R2 U' R' U2 R' U2' R2' U2 R U R' U2 R' U' R\",\n    \"R' U' R U' R' U2' R' U2' R U' R' U2' R2 U R' U2 R U2 R' U' R\",\n    \"R' U' R2' U2 R2' U2' R2' U2' R2 U2 R U R2 U' R2' U R2' U2 R2 U2 R\",\n    \"R' U' R' U2' R2' U2 R2' U' R2 U2 R2 U2' R2' U' R2' U2' R U R' U2 R\",\n    \"R' U' R' U' R2 U' R2' U' R U2' R U' R' U2' R' U2 R2 U' R' U2' R\",\n    \"R U R2 U R U' R' U R U R' U R' U' R2 U2 R2 U2 R' U2 R\",\n    \"R U R2 U R' U' R2 U R2' U R' U' R' U R U2' R2 U' R2 U2' R\",\n    \"R U R2' U2 R2' U2' R' U' R2' U' R2' U2 R2' U' R' U' R U2 R2 U2 R\",\n    \"R U R' U R U2' R' U2' R2 U R2 U' R2 U' R2' U2 R2 U' R U' R\",\n    \"R U2 R U R2 U2 R2' U2' R2' U' R2 U2 R2' U R' U2 R2 U2' R U' R\",\n    \"R U2 R U2' R' U2 R' U2' R U2' R U2 R' U2' R U2' R2' U' R2 U2' R\",\n    \"R U2 R U2' R' U2 R' U2' R U2' R U2 R' U2' R2 U2' R2 U' R2' U2' R\",\n    \"R U2 R2 U2' R2' U2 R2' U R' U' R2 U R' U2 R2 U R U' R' U R\",\n    \"R U2 R' U R U2 R2 U2' R' U2 R2' U2' R2 U2' R2' U' R2 U R U2 R\",\n    \"R U2 R' U R U2 R' U R2' U2 R2 U2' R2 U2 R2' U2 R2 U R U2 R\",\n    \"R U2 R' U R U2 R' U2' R U2' R2' U2 R2 U2 R2' U2' R2 U2 R2' U R\",\n    \"R U2 R' U R U2 R' U2' R2 U2' R2 U2 R2' U2 R2 U2' R2' U2 R2 U R\",\n    \"R U2 R' U R U2 R' U2' R2 U2' R2 U' R2' U' R2 U2 R U2' R2 U' R\",\n    \"R U2 R' U R2' U' R2' U2' R' U2 R2' U R2' U2' R2' U' R2 U2' R2' U2' R\",\n    \"R U2 R' U R2' U' R2' U2' R' U2 R2' U R' U2' R2 U' R2' U2' R2 U2' R\",\n    \"R U2 R' U2' R U2' R U2 R' U2' R U2' R2' U' R2 U2' R' U2' R U2 R\",\n    \"R U2 R' U2' R U2' R U2 R' U2' R2 U2' R2 U' R2' U2' R2' U2' R U2 R\",\n    \"R U2 R' U' R U R' U2 R' U2' R2 U' R' U R' U2 R U' R U2 R\",\n    \"R U2' R U R U R2' U2 R2' U2' R' U2 R2' U2' R U' R' U' R' U R\",\n    \"R U2' R U R U R2' U2' R2' U2 R' U2' R2' U2 R U' R' U' R' U R\",\n    \"R U2' R U2 R U2' R' U' R U' R U R U' R' U' R' U R' U2 R\",\n    \"R U2' R2' U' R U2' R' U2' R U2' R U2' R U R2' U R2 U2' R' U' R\",\n    \"R U2' R' U R2 U R U R2 U' R' U R' U2 R2 U2 R' U2' R' U R\",\n    \"R U2' R' U2 R2 U' R' U' R U2 R2' U2' R2' U2 R2 U' R2' U' R2' U R\",\n    \"R U2' R' U2' R U2 R' U2 R' U2' R U2' R U2' R' U2 R' U' R2 U2' R\",\n    \"R U' R U R2 U R U R2 U2' R2' U2 R2 U2 R2' U' R U R2' U2' R\",\n    \"R U' R U R2 U R U' R2 U2 R2' U2' R2 U' R2' U' R U R2' U2' R\",\n    \"R U' R U R2' U R2 U' R U R' U R U2' R' U' R2' U' R U' R\",\n    \"R U' R U2 R' U' R' U2 R2 U' R' U' R U2 R' U' R' U' R2 U' R\",\n    \"R U' R2' U2' R2 U R U2' R2 U2' R2' U2 R2' U' R2 U2' R2' U' R U R\",\n  ],\n  [\n    \"R2 U2 R2' U2 R2 U R2' U2' R2 U2 R2' U2 R2 U R\",\n    \"R2 U2 R2' U2 R2 U' R2' U2 R2 U2' R2' U' R2 U R\",\n    \"R2' U2 R2 U2 R2' U R2 U2' R2' U2 R2 U2 R2' U R\",\n    \"R2' U2 R2 U2 R2' U' R2 U2 R2' U2' R2 U' R2' U R\",\n    \"R U2 R' U2' R U' R' U' R' U2' R U R' U R2 U R\",\n    \"R U' R U2' R2' U2 R2 U R2' U2' R2 U2 R2' U2 R U R\",\n    \"R U' R U2' R2' U2 R2 U' R2' U2 R2 U2' R2' U' R U R\",\n    \"R U' R2 U2' R2 U2 R2' U R2 U2' R2' U2 R2 U2 R U R\",\n    \"R U' R2 U2' R2 U2 R2' U' R2 U2 R2' U2' R2 U' R U R\",\n    \"R2 U2 R2 U2 R2' U R2 U2 R U R2 U2 R2' U2 R2 U R\",\n    \"R2 U2 R2' U2 R2 U' R2' U2 R2' U2' R2 U' R2' U2' R' U2' R\",\n    \"R2 U' R U2' R2 U2 R2' U R2 U2' R2' U2 R2 U2 R2 U R\",\n    \"R2 U' R U2' R2 U2 R2' U' R2 U2 R2' U2' R2 U' R2 U R\",\n    \"R2' U2 R2 U2 R2' U' R2 U2 R2 U2' R2' U' R2 U2' R U2' R\",\n    \"R2' U2 R2' U2 R2 U R2' U2 R' U R2' U2 R2 U2 R2' U R\",\n    \"R2' U2 R2' U2 R2 U2' R2 U2' R2' U2' R2 U' R U2' R2 U2' R\",\n    \"R2' U' R' U2' R2' U2 R2 U R2' U2' R2 U2 R2' U2 R2' U R\",\n    \"R2' U' R' U2' R2' U2 R2 U' R2' U2 R2 U2' R2' U' R2' U R\",\n    \"R U2' R2' U2 R2 U R2' U R U R U2' R' U' R' U R\",\n    \"R2 U2' R2 U' R U2' R2 U R2' U2 R2 U2' R2' U' R' U R\",\n    \"R2 U2' R2 U' R U2' R2 U2' R2' U2' R2 U2 R2' U2 R' U R\",\n    \"R' U2' R2' U2 R2 U2 R U R2 U2' R2' U' R' U2' R2' U2' R\",\n    \"R2 U2 R2' U2 R2 U R2' U2' R2 U2 R2 U2 R2' U R2 U2 R\",\n    \"R2' U2 R2 U2 R2' U R2 U2' R2' U2 R2' U2 R2 U R2' U2 R\",\n    \"R2' U2 R2 U2' R2 U' R U R2 U2' R2' U' R' U R U2 R\",\n    \"R' U2 R U2 R2' U' R U' R U R2' U R2 U' R' U2 R\",\n    \"R' U2' R U' R' U2' R U2 R2' U2 R2' U R2 U2 R2' U2 R\",\n    \"R' U2' R U' R' U2' R U2 R' U2 R2 U R2' U2 R2 U2 R\",\n    \"R2 U2' R U' R2 U2' R2 U2' R2' U2' R2 U' R U R' U2 R\",\n    \"R' U2 R U R' U2 R U2' R2' U2 R2' U R2 U2 R2' U2 R\",\n    \"R' U2 R U R' U2 R U2' R' U2 R2 U R2' U2 R2 U2 R\",\n    \"R' U2 R' U2' R U' R' U2' R U2 R2' U2 R2' U R2 U2 R\",\n    \"R' U2 R' U2' R U' R' U2' R U2 R' U2 R2 U R2' U2 R\",\n    \"R' U2' R' U2 R U R' U2 R U2' R2' U2 R2' U R2 U2 R\",\n    \"R' U2' R' U2 R U R' U2 R U2' R' U2 R2 U R2' U2 R\",\n    \"R U2 R2 U2 R2' U2' R2 U2' R2' U2 R' U R2' U2 R2 U2 R U R\",\n    \"R U2 R2 U2 R2' U2' R' U2' R2' U2' R2 U' R U2' R2 U2 R2' U R\",\n    \"R U2 R2' U2 R2 U2' R U2' R2 U2' R2' U' R' U2' R2' U2 R2 U R\",\n    \"R U' R U2' R2 U2 R2' U R2 U2 R U R2 U2 R2' U2 R U R\",\n    \"R U' R2 U2' R2' U2 R2 U R2' U2 R' U R2' U2 R2 U2 R U R\",\n    \"R U' R2' U2' R U R U R2' U R2 U2' R2' U2 R U2 R U R\",\n    \"R U' R' U2' R2 U2 R2' U2' R2 U R2' U2 R2 U2' R2' U' R U R\",\n    \"R U' R' U2' R2 U2 R2' U2' R2 U2' R2' U2' R2 U2 R2' U2 R U R\",\n    \"R U' R' U2' R2' U2 R2 U2' R2' U R2 U2 R2' U2' R2 U' R U R\",\n    \"R U' R' U2' R2' U2 R2 U2' R2' U2' R2 U2' R2' U2 R2 U2 R U R\",\n    \"R2 U2 R2' U R2 U R2' U R2 U2 R2' U2' R2 U R2' U' R2 U2 R\",\n    \"R2 U2 R2' U R2 U R2' U2' R2 U2' R2' U2 R2 U' R2' U' R2 U2 R\",\n    \"R2 U2 R2' U2 R2 U R2 U2' R2' U' R2 U2' R2' U2 R2' U2' R2 U2' R\",\n    \"R2 U2 R2' U2 R2 U R2' U2' R2 U' R2' U2' R2 U2 R2' U2' R2 U2' R\",\n    \"R2 U2 R2' U2 R2 U' R U2 R2 U2' R2' U2 R2 U2 R2' U2' R' U2' R\",\n    \"R2 U2 R2' U' R' U2' R2' U' R2 U2' R U' R2 U2' R2' U' R2 U R\",\n    \"R2 U' R U2' R2' U2 R2 U R2' U2 R' U R2' U2 R2 U2 R2 U R\",\n    \"R2 U' R2 U2' R U R U R2' U R2 U2' R2' U2 R U2 R2 U R\",\n    \"R2 U' R2' U2' R2 U2 R2' U2' R2 U R2' U2 R2 U2' R2' U' R2 U R\",\n    \"R2 U' R2' U2' R2 U2 R2' U2' R2 U2' R2' U2' R2 U2 R2' U2 R2 U R\",\n    \"R2 U' R2' U2' R2' U2 R2 U2' R2' U R2 U2 R2' U2' R2 U' R2 U R\",\n    \"R2 U' R2' U2' R2' U2 R2 U2' R2' U2' R2 U2' R2' U2 R2 U2 R2 U R\",\n    \"R2 U' R' U2' R' U2' R U' R' U' R' U2' R U R' U R2' U R\",\n    \"R2' U2 R2 U R2' U R2 U R2' U2 R2 U2' R2' U R2 U' R2' U2 R\",\n    \"R2' U2 R2 U R2' U R2 U2' R2' U2' R2 U2 R2' U' R2 U' R2' U2 R\",\n    \"R2' U2 R2 U2 R2' U R2 U2' R2' U' R2 U2' R2' U2 R2 U2' R2' U2' R\",\n    \"R2' U2 R2 U2 R2' U R2' U2' R2 U' R2' U2' R2 U2 R2 U2' R2' U2' R\",\n    \"R2' U2 R2 U2 R2' U R' U2' R U' R2 U2' R2' U2' R2 U2 R2 U2' R\",\n    \"R2' U2 R2 U2 R2' U' R U R U R2' U' R2 U2' R2' U2 R U' R\",\n    \"R2' U2 R2 U2 R2' U' R' U2 R2' U2' R2 U2 R2' U2 R2 U2' R U2' R\",\n    \"R2' U2 R2 U2 R' U' R U R2 U' R2' U' R2 U2 R U R U2' R\",\n    \"R2' U2 R2 U' R U2' R2 U' R2' U2' R' U' R2' U2' R2 U' R2' U R\",\n    \"R2' U' R U2' R U R U R2' U R2 U2' R2' U2 R U2 R2' U R\",\n    \"R2' U' R2 U2' R2 U2 R2' U2' R2 U R2' U2 R2 U2' R2' U' R2' U R\",\n    \"R2' U' R2 U2' R2 U2 R2' U2' R2 U2' R2' U2' R2 U2 R2' U2 R2' U R\",\n    \"R2' U' R2 U2' R2' U2 R2 U2' R2' U R2 U2 R2' U2' R2 U' R2' U R\",\n    \"R2' U' R2 U2' R2' U2 R2 U2' R2' U2' R2 U2' R2' U2 R2 U2 R2' U R\",\n    \"R2' U' R2' U2' R2 U2 R2' U2' R' U2' R2' U2' R2 U' R U2' R2 U2' R\",\n    \"R2' U' R2' U2' R' U2' R U' R' U' R' U2' R U R' U R' U R\",\n    \"R2' U' R' U2' R2 U2 R2' U R2 U2 R U R2 U2 R2' U2 R2' U R\",\n    \"R2 U' R2' U R2 U2' R2' U2' R2 U R2' U R2 U2' R2' U' R2 U R\",\n    \"R2' U' R2 U R2' U2' R2 U2' R2' U R2 U R2' U2' R2 U' R2' U R\",\n    \"R U2' R2 U2 R2' U R2 U2 R U' R U R U2' R' U' R' U R\",\n    \"R U2' R2 U' R U2' R2 U R2' U R U R U2' R' U' R2' U R\",\n    \"R U2' R2 U' R2 U' R' U' R2 U2' R2' U2' R2 U2 R' U2 R2' U R\",\n    \"R U2' R2' U2 R U2' R U' R' U2' R U R2' U R U R U2' R\",\n    \"R U2' R2' U2 R2 U2 R2' U R2 U' R' U' R' U2 R U2 R' U R\",\n    \"R U2' R2' U' R U' R' U' R2 U2' R2' U2' R2 U2 R' U2 R' U R\",\n    \"R2 U2' R2 U2 R2' U2 R2' U R2 U2' R2' U' R' U2' R2' U2 R2 U R\",\n    \"R2 U2' R2 U2 R2' U2' R2 U' R U R2 U2' R2' U' R' U2' R2' U2' R\",\n    \"R2 U2' R2 U' R U R' U2 R2' U R2 U2 R2' U2' R2' U' R' U R\",\n    \"R2 U2' R2' U2 R2 U2' R2' U' R2 U R2' U2' R2 U2 R2' U2 R2 U R\",\n    \"R2 U2' R2' U2 R2 U2' R2' U' R2 U' R2' U2 R2 U2' R2' U' R2 U R\",\n    \"R2 U2' R' U R2' U' R2' U2 R U2' R' U' R' U2' R' U2' R2 U R\",\n    \"R2' U2' R2 U2 R2' U2' R2 U' R2' U R2 U2' R2' U2 R2 U2 R2' U R\",\n    \"R2' U2' R2 U2 R2' U2' R2 U' R2' U' R2 U2 R2' U2' R2 U' R2' U R\",\n    \"R' U2' R2 U2 R2' U2' R2 U2' R2' U R U R U2' R' U' R' U R\",\n    \"R' U2' R2' U' R' U2' R2' U2' R2 U' R' U' R' U2 R U2 R2 U R\",\n    \"R U2' R U2 R2' U2' R U2' R' U2' R U R U R2' U R U2' R\",\n    \"R2 U2' R2' U2' R U R2' U2' R2' U R2 U R2 U2 R U2 R' U2' R\",\n    \"R' U2' R' U2 R U2 R U R2' U R2 U2' R' U R U2' R2' U2' R\",\n    \"R U R' U R' U' R2 U' R' U R' U R2' U2 R2' U R2 U2 R\",\n    \"R U R' U R' U' R2 U' R' U R' U R' U2 R2 U R2' U2 R\",\n    \"R U2 R2 U2 R2' U R2 U2 R2 U R U2 R2 U2 R2' U R2 U2 R\",\n    \"R U2 R2 U2 R2' U R2 U2 R2 U R U2 R2' U2 R2 U R2' U2 R\",\n    \"R U2 R2' U2 R2 U R2' U2 R U R U2 R2 U2 R2' U R2 U2 R\",\n    \"R U2 R2' U2 R2 U R2' U2 R U R U2 R2' U2 R2 U R2' U2 R\",\n    \"R2 U2 R2 U2 R2' U R2 U2 R U R2 U2 R2 U2 R2' U R2 U2 R\",\n    \"R2 U2 R2 U2' R U' R' U2' R2 U2 R U R' U2 R' U R2 U2 R\",\n    \"R2 U2 R2' U R2 U2 R2 U' R U R U2 R' U' R' U R2 U2' R\",\n    \"R2 U2 R2' U2 R2 U' R2' U2 R2 U2' R2' U2 R' U2 R2' U R2 U2 R\",\n    \"R2 U2 R2' U2 R2 U' R2' U2 R2 U' R2' U' R2 U' R2' U R2 U R\",\n    \"R2 U2' R2 U' R U R2 U2 R2' U' R' U R2' U2 R2' U R2 U2 R\",\n    \"R2 U2' R2 U' R U R2 U2 R2' U' R' U R' U2 R2 U R2' U2 R\",\n    \"R2 U' R U2' R2 U2 R2' U R2 U2' R2' U2 R U2 R2' U R2 U2 R\",\n    \"R2 U' R2 U2' R U R U R2' U R2 U2' R2' U' R2' U R2 U2 R\",\n    \"R2' U2 R U2' R U' R' U2' R2' U2 R U R' U2 R2' U R2' U2 R\",\n    \"R2' U2 R2 U R2' U2 R U' R U R U2 R' U' R' U R2 U2' R\",\n    \"R2' U2 R2 U2 R2 U' R2 U R2' U2' R2' U2 R' U' R2' U R U R\",\n    \"R2' U2 R2 U2 R2 U' R2 U' R2' U2 R U' R U' R' U2' R U2 R\",\n    \"R2' U2 R2 U2 R2' U' R2 U2 R2' U2' R2 U2 R U2 R2 U R2' U2 R\",\n    \"R2' U2 R2 U2 R2' U' R2 U2 R2' U' R2 U' R2' U' R2 U R2' U R\",\n    \"R2' U2 R2' U2 R2 U R2' U2 R' U R2' U2 R2' U2 R2 U R2' U2 R\",\n    \"R2' U' R' U2' R2' U2 R2 U R2' U2' R2 U2 R' U2 R2 U R2' U2 R\",\n    \"R' U2' R2' U' R2' U R2' U' R2' U2 R U' R2' U' R U R2 U2 R\",\n  ],\n  [\n    \"R2' U2' R2 U R2 U' R2 U' R2' U2 R U R U2' R\",\n    \"R2' U' R U2' R U R U2 R2' U' R2 U' R2 U R\",\n    \"R2 U R' U2 R' U' R' U2' R2 U R2' U R2' U' R\",\n    \"R2 U2 R2' U' R2' U R2' U R2 U2' R' U' R' U2 R\",\n    \"R2 U R2 U' R2 U' R2' U2 R U R U2' R U' R\",\n    \"R' U2 R' U' R' U2' R2 U R2' U R2' U' R2' U2 R\",\n    \"R U2' R2 U R2 U' R2 U' R2' U2 R U R U2' R U' R\",\n    \"R U' R U2' R U R U2 R2' U' R2 U' R2 U R2 U2' R\",\n    \"R2 U2' R2 U R2 U' R2 U' R2' U2 R U R U2' R U' R\",\n    \"R2 U' R U2' R U R U2 R2' U' R2 U' R2 U R2 U2' R\",\n    \"R' U2' R2 U R2 U' R2 U' R2' U2 R U R U2' R U' R\",\n    \"R' U' R U2' R U R U2 R2' U' R2 U' R2 U R2 U2' R\",\n    \"R U R' U2 R' U' R' U2' R2 U R2' U R2' U' R2' U2 R\",\n    \"R U2 R2' U' R2' U R2' U R2 U2' R' U' R' U2 R' U R\",\n    \"R2' U R' U2 R' U' R' U2' R2 U R2' U R2' U' R2' U2 R\",\n    \"R2' U2 R2' U' R2' U R2' U R2 U2' R' U' R' U2 R' U R\",\n    \"R' U R' U2 R' U' R' U2' R2 U R2' U R2' U' R2' U2 R\",\n    \"R' U2 R2' U' R2' U R2' U R2 U2' R' U' R' U2 R' U R\",\n    \"R U R U2' R2 U2 R2 U2 R2' U R2 U R U' R2' U2 R2 U2 R\",\n    \"R U R2 U R U' R2' U' R2 U2 R2 U R U2' R U' R2' U2' R\",\n    \"R U2' R U R U2 R2' U' R2 U' R2 U' R2 U2 R2' U2' R2 U2 R\",\n    \"R U2' R U R U' R U2' R2 U' R2' U2' R' U R2 U R2 U2' R\",\n    \"R U2' R U2' R' U' R2' U2' R2 U R2' U R2' U' R2' U R U2' R\",\n    \"R U2' R2 U2' R2' U' R2 U' R2 U R2 U2' R2' U R2 U R U' R\",\n    \"R2 U2' R2' U2 R2 U2' R2' U R2' U R2' U R2 U2' R' U' R' U2 R\",\n    \"R2 U' R U R2 U R2' U2' R2 U R2 U' R2 U' R2' U2' R2 U2' R\",\n    \"R2 U' R' U' R2 U2 R2' U R2 U' R2' U' R' U R2 U R U2 R\",\n    \"R2' U R2 U R' U2' R U2' R' U2 R U' R' U R' U2' R U' R\",\n    \"R2' U2' R U R' U2 R2' U R2' U2 R U2' R U' R2' U2 R' U2 R\",\n    \"R2' U2' R U2' R2 U R' U2 R' U2' R2 U' R2 U2' R U' R' U2 R\",\n    \"R2' U' R U R2 U R2' U2 R2 U2 R2 U2' R U R U' R2' U2' R\",\n    \"R2' U' R U R2 U R2' U' R2 U2' R2' U R U R2' U R2' U2 R\",\n    \"R2' U' R2' U' R U2 R2 U R2' U2 R' U R' U' R' U2 R' U R\",\n    \"R' U R' U2 R U' R U R' U2' R U2 R' U2 R U' R2' U' R\",\n    \"R' U2' R2' U' R U2' R U R2 U2 R2 U' R2' U' R U R2 U R\",\n    \"R' U' R2 U R2 U' R2 U' R2' U2 R2 U R U2 R' U2 R' U R\",\n  ],\n  [\n    \"R' U' R U2 R U R' U2 R' U2' R2 U' R' U R' U2' R\",\n    \"R2 U R' U R' U' R2 U' R' U R' U2' R U R' U2 R U' R'\",\n    \"R2 U R' U' R' U2 R2' U2' R2' U2' R2 U' R2' U' R' U2 R2 U2 R2'\",\n    \"R2 U2 R2' U R2 U2' R2' U R2 U' R2' U R2 U R2' U2' R2 U' R2'\",\n    \"R2 U2 R2' U R2 U2' R2' U2 R2 U' R2' U' R2 U R2' U' R2 U' R2'\",\n    \"R2 U2 R2' U2' R2 U' R2' U R2 U R2' U2' R2 U2 R2' U R2 U' R2'\",\n    \"R2 U2 R2' U2' R2 U' R2' U R2 U' R2' U2 R2 U2' R2' U2' R2 U' R2'\",\n    \"R2 U2 R2' U' R U R U' R' U2 R' U2' R2 U R' U' R U' R2'\",\n    \"R2 U2 R2' U' R2 U2 R2' U2' R2 U R2' U' R2 U R2' U' R2 U' R2'\",\n    \"R2 U2 R2' U' R2 U' R2' U' R2 U R2' U' R2 U2 R2' U R2 U' R2'\",\n    \"R2 U2 R' U2 R U R' U2' R U R U R2' U2 R2 U2 R' U' R2'\",\n    \"R2 U2' R2 U' R U R U2 R' U2 R U2 R2' U R2' U2 R' U R'\",\n    \"R2' U2 R2 U R2' U2' R2 U R2' U' R2 U R2' U R2 U2' R2' U' R2\",\n    \"R2' U2 R2 U R2' U2' R2 U2 R2' U' R2 U' R2' U R2 U' R2' U' R2\",\n    \"R2' U2 R2 U2' R2' U' R2 U R2' U R2 U2' R2' U2 R2 U R2' U' R2\",\n    \"R2' U2 R2 U2' R2' U' R2 U R2' U' R2 U2 R2' U2' R2 U2' R2' U' R2\",\n    \"R2' U2 R2 U' R2' U2 R2 U2' R2' U R2 U' R2' U R2 U' R2' U' R2\",\n    \"R2' U2 R2 U' R2' U' R2 U' R2' U R2 U' R2' U2 R2 U R2' U' R2\",\n    \"R2' U2 R2' U R2' U R U R U2' R' U R U2' R2' U2 R' U' R2\",\n    \"R' U' R U2' R' U2' R U' R' U2' R U R' U2' R U R' U2 R\",\n    \"R' U' R U' R' U2 R U R' U2 R U2 R' U2' R U R' U2 R\",\n    \"R U2 R2' U R' U2' R U2 R2 U2 R' U' R' U' R' U R U2' R\",\n    \"R U2' R2 U' R2 U R U2 R U2 R U R' U2 R2' U' R2' U R2\",\n    \"R2 U R2 U' R2 U' R2' U2 R U R U2' R U R2' U R2 U2 R2'\",\n    \"R U2' R U R U' R U2' R2 U' R2' U2' R' U R2 U2 R2 U2 R2'\",\n    \"R2 U2' R2' U2 R2 U2 R2' U R2 U R2' U2' R2 U2 R2' U R2 U' R2'\",\n    \"R2 U2' R2' U2 R2 U2 R2' U R2 U' R2' U2 R2 U2' R2' U2' R2 U' R2'\",\n    \"R2' U R2' U2 R U2 R' U2 R U R2' U2 R U2' R2 U' R2' U' R'\",\n    \"R2' U2' R2 U2 R2' U2 R2 U R2' U R2 U2' R2' U2 R2 U R2' U' R2\",\n    \"R2' U2' R2 U2 R2' U2 R2 U R2' U' R2 U2 R2' U2' R2 U2' R2' U' R2\",\n    \"R2' U2' R2 U' R U R' U2 R2' U2 R2 U2 R2' U2' R2 U2' R U' R'\",\n    \"R2' U2' R2 U' R U R' U2 R2' U' R2 U2' R2' U2 R2 U R U' R'\",\n    \"R' U2 R' U2' R U' R' U2' R2 U R U R2' U2 R2 U2 R2' U2' R\",\n    \"R' U2' R U' R U R' U2 R U' R' U2' R' U2 R U2' R U2 R'\",\n    \"R U' R U R2' U2 R2 U' R' U' R U2 R' U2' R U' R' U R'\",\n    \"R U' R U2' R U R U2 R2' U' R2 U' R2 U R' U R2' U2 R2\",\n    \"R2 U' R' U R' U2 R U' R U R' U2' R U2 R' U2 R U R2'\",\n    \"R U R U R2 U R2 U' R2' U' R U R2' U2' R' U2' R2' U' R2\",\n    \"R U2' R' U2 R U' R' U' R2 U2 R2' U R U' R U2' R' U R'\",\n    \"R U' R' U2 R U2' R' U' R U2' R' U R U R' U R U R'\",\n    \"R U' R' U2' R U2 R' U R U2 R' U2 R U R' U R U R'\",\n    \"R2 U' R2' U2' R U2 R' U R U' R U R' U2 R' U' R2 U R2'\",\n    \"R2 U' R2' U2' R2 U R2' U2 R2 U' R2' U' R2 U' R2' U' R2 U2' R2'\",\n    \"R2' U' R2 U2' R2' U R2 U2 R2' U' R2 U' R2' U' R2 U' R2' U2' R2\",\n    \"R' U R U R' U R U' R U R' U2 R U2 R' U R' U' R\",\n    \"R' U2 R U2 R2 U2' R U2' R U2 R' U2 R2 U2' R U' R U R'\",\n    \"R' U2 R' U2' R2' U R U' R' U R2' U' R2' U R2' U' R2 U2 R2\",\n    \"R U R' U R U R' U2 R' U2 R U R U' R' U2 R' U R\",\n    \"R U R' U2 R2' U R U2 R2' U2' R2' U2 R' U2' R2 U' R2' U2 R'\",\n    \"R U2 R2 U2 R2' U' R2' U R2' U' R2 U2 R2 U2 R2 U R2 U R2'\",\n    \"R2 U2 R2' U R2 U2' R2' U2 R2 U' R2' U2' R2 U R2' U R2 U' R2'\",\n    \"R2 U2 R2' U2' R2 U' R U R' U' R2' U2 R2 U R U' R' U2' R2'\",\n    \"R2 U2 R2' U' R2 U2 R2' U2' R2 U R2' U2' R2 U R2' U R2 U' R2'\",\n    \"R2' U R2 U2 R2 U2' R U R U' R' U2 R U' R' U2' R' U2 R2'\",\n    \"R2' U2 R2 U R2' U2' R2 U2 R2' U' R2 U2' R2' U R2 U R2' U' R2\",\n    \"R2' U2 R2 U' R2' U2 R2 U2' R2' U R2 U2' R2' U R2 U R2' U' R2\",\n    \"R2' U2 R2 U' R' U R2 U R2' U' R2 U R2' U2' R' U' R2' U2' R'\",\n  ],\n  [\n    \"R' U2 R' U' R' U2' R2 U R2' U R2' U2' R2' U2' R2\",\n    \"R U R' U2' R' U' R U2' R U2 R2' U R U' R U2 R'\",\n    \"R2 U' R2 U2' R' U2' R U2' R' U' R' U R2' U2 R' U' R\",\n    \"R U' R' U2' R2 U R2' U R' U' R2' U' R2 U2 R U' R U2 R'\",\n    \"R2 U R2' U2' R' U' R U2' R U2 R2' U R U' R U2' R U' R2'\",\n    \"R2 U2 R2' U R2 U2 R2' U R2 U2' R2' U2 R2 U2 R2' U2 R2 U2' R2'\",\n    \"R2 U2 R2' U R2 U2 R2' U R2' U2' R2 U2 R2' U2 R2 U2 R2' U2' R2\",\n    \"R2 U2 R2' U R2 U2 R2' U' R2 U2 R2' U2' R2 U' R2' U2 R2 U2' R2'\",\n    \"R2 U2 R2' U R2 U2 R2' U' R2' U2 R2 U2' R2' U' R2 U2 R2' U2' R2\",\n    \"R2' U R2 U2' R' U' R U2' R U2 R2' U R U' R U2' R2 U' R2\",\n    \"R2' U2 R2 U R2' U2 R2 U R2 U2' R2' U2 R2 U2 R2' U2 R2 U2' R2'\",\n    \"R2' U2 R2 U R2' U2 R2 U R2' U2' R2 U2 R2' U2 R2 U2 R2' U2' R2\",\n    \"R2' U2 R2 U R2' U2 R2 U' R2 U2 R2' U2' R2 U' R2' U2 R2 U2' R2'\",\n    \"R2' U2 R2 U R2' U2 R2 U' R2' U2 R2 U2' R2' U' R2 U2 R2' U2' R2\",\n    \"R2' U2' R U2 R2' U2 R' U2 R2' U2' R2' U2 R2' U R2 U2' R' U2 R2\",\n    \"R2' U' R2' U' R U' R' U R' U' R2 U R' U R U' R U2 R2\",\n    \"R' U' R2' U R' U' R2 U' R2' U R2' U R2' U' R2' U' R2 U2 R\",\n    \"R' U' R' U' R2' U' R2' U R2 U R' U' R2 U' R2' U R2 U2 R\",\n    \"R2' U2' R2 U' R U R' U' R2' U2 R2 U R U' R' U' R2' U R2\",\n    \"R U2 R' U R' U' R U2' R' U2' R' U R2 U2 R U2' R2 U' R2\",\n    \"R U2 R' U2' R' U R U2 R' U R U2 R' U' R U2' R U2 R'\",\n    \"R2 U2 R2' U R2' U' R2 U2' R2 U2' R2' U2' R2 U' R U R' U2 R2'\",\n    \"R2' U2 R2 U2' R2' U2' R' U' R U R2 U2' R2' U' R' U R U2 R2\",\n    \"R' U2 R' U' R' U2' R2 U R2' U R2' U R2' U2 R2 U2' R2' U2 R2\",\n    \"R2 U R2' U' R2 U2' R2' U2' R2 U2' R2' U R2 U R2' U2' R2 U' R2'\",\n    \"R2' U R2 U' R2' U2' R2 U2' R2' U2' R2 U R2' U R2 U2' R2' U' R2\",\n    \"R2 U2' R2' U R U' R2' U' R2 U R2' U' R2 U2 R U R2 U2 R\",\n    \"R2' U2' R2 U2 R2' U R' U' R U R2 U2' R2' U' R' U R U2 R2\",\n    \"R U2' R U2 R2 U' R' U R U' R2 U R2 U' R2 U R2' U2' R2'\",\n    \"R U2' R' U2' R2' U2 R' U2 R' U2' R U2' R2' U2 R' U R' U' R\",\n  ],\n  [\n    \"R' U2 R U' R U R2' U2 R U2' R U' R' U2' R' U R\",\n    \"R U R' U2' R U' R' U2 R U' R U R2' U R U' R U' R2'\",\n    \"R U' R U2' R2 U' R2 U2' R' U2' R U2' R' U' R' U R2' U2 R2'\",\n    \"R2 U R U2' R2' U2' R2 U' R' U' R' U2 R U' R' U2' R U2' R2'\",\n    \"R2 U R2' U R2 U' R2' U R2 U R2' U2' R2 U2 R2' U' R2 U2' R2'\",\n    \"R2 U R2' U R2 U' R2' U R2 U' R2' U2 R2 U2' R2' U R2 U2' R2'\",\n    \"R2 U R2' U2 R2 U2 R2' U2' R2 U R2' U' R2 U R2' U2 R2 U2' R2'\",\n    \"R2 U R2' U2 R2 U' R2' U' R2 U R2' U' R2 U2 R2' U' R2 U2' R2'\",\n    \"R2 U R2' U' R2 U2' R2' U R2 U' R2' U R2 U R2' U R2 U2' R2'\",\n    \"R2 U R2' U' R2 U2' R2' U2 R2 U' R2' U' R2 U R2' U2 R2 U2' R2'\",\n    \"R2 U R' U R U' R2' U2 R U2' R U R' U' R' U R2 U2' R2'\",\n    \"R2 U2' R2' U2' R U R2 U R2' U2 R2 U2 R2 U2' R U R U' R2'\",\n    \"R2' U R U2' R2 U2 R' U' R U2 R' U' R' U' R2 U' R2 U2' R2\",\n    \"R2' U R2 U R2' U' R2 U R2' U R2 U2' R2' U2 R2 U' R2' U2' R2\",\n    \"R2' U R2 U R2' U' R2 U R2' U' R2 U2 R2' U2' R2 U R2' U2' R2\",\n    \"R2' U R2 U2 R2' U2 R2 U2' R2' U R2 U' R2' U R2 U2 R2' U2' R2\",\n    \"R2' U R2 U2 R2' U' R2 U' R2' U R2 U' R2' U2 R2 U' R2' U2' R2\",\n    \"R2' U R2 U' R2' U2' R2 U R2' U' R2 U R2' U R2 U R2' U2' R2\",\n    \"R2' U R2 U' R2' U2' R2 U2 R2' U' R2 U' R2' U R2 U2 R2' U2' R2\",\n    \"R' U2' R U' R' U2 R U2' R' U2' R U' R' U2' R U R' U R\",\n    \"R' U2' R U' R' U2 R U' R' U2 R U R' U2 R U2 R' U R\",\n    \"R2 U R2' U' R2 U' R2' U2 R2 U R2' U2' R2 U2 R2' U' R2 U2' R2'\",\n    \"R2 U R2' U' R2 U' R2' U2 R2 U' R2' U2 R2 U2' R2' U R2 U2' R2'\",\n    \"R2 U' R2' U' R2' U2' R2' U2' R2' U R2 U' R2 U R2 U2' R2' U2' R'\",\n    \"R2' U R2 U' R2' U' R2 U2 R2' U R2 U2' R2' U2 R2 U' R2' U2' R2\",\n    \"R2' U R2 U' R2' U' R2 U2 R2' U' R2 U2 R2' U2' R2 U R2' U2' R2\",\n    \"R2 U2' R U2 R U R' U2' R U R' U' R' U2 R2' U2' R2' U' R2\",\n    \"R U2 R2 U R U2 R2 U' R2' U R2 U' R2' U' R U R2' U2' R2\",\n    \"R2 U2 R U R' U' R2' U2' R2 U R U' R' U R2' U2 R2 U2' R2'\",\n    \"R U2' R2 U R2' U2 R U2' R2 U2 R2 U2' R' U' R2 U2' R U' R'\",\n    \"R' U' R U2' R U R' U' R' U2' R U2' R U' R' U' R U' R'\",\n    \"R U R2 U R2' U2 R' U2' R2 U' R' U2' R U2' R' U2' R2 U' R2\",\n    \"R U R' U2 R2' U2 R2 U2' R2' U2' R2 U2' R U' R' U R2' U2 R2\",\n    \"R U R' U' R2' U2' R2 U2 R2' U R2 U2' R U' R' U R2' U2 R2\",\n    \"R U2' R' U2 R' U2' R U2 R U R' U2' R U' R' U R' U2 R\",\n    \"R U' R U R' U2 R U2' R' U R U R2' U2' R2 U' R' U R'\",\n    \"R U' R U2 R' U R' U' R2 U2' R2' U R U R' U2' R U2 R'\",\n    \"R U' R' U R' U2 R2' U2' R U2' R' U2 R' U2 R2' U2' R' U2' R\",\n    \"R U' R' U' R U' R' U2' R U2' R' U' R U2' R' U2 R U R'\",\n    \"R U' R' U' R U' R' U' R U2 R' U R U2 R' U2' R U R'\",\n    \"R2 U R2' U2 R2 U2 R2' U2' R2 U R2' U' R2 U2' R2' U2' R2 U2 R2'\",\n    \"R2 U R2' U' R2 U2' R2' U2 R2 U' R2' U' R2 U2' R2' U2' R2 U2 R2'\",\n    \"R2 U2 R2' U R2 U R2' U R2 U R2' U2' R2 U' R2' U2 R2 U R2'\",\n    \"R2 U2' R2' U2' R2' U' R U2 R2 U R2' U2 R' U R' U' R' U2 R'\",\n    \"R2 U2' R2' U' R2 U' R' U2 R' U' R' U2' R2 U R2' U R2' U' R2'\",\n    \"R2 U' R2' U R U2' R U' R' U R' U' R U2' R' U2 R2 U R2'\",\n    \"R2 U' R' U2' R U2' R' U2 R U' R' U R' U2' R U' R U R2'\",\n    \"R2' U R2 U2 R U2 R2 U' R' U R2 U R2' U' R2' U' R' U' R'\",\n    \"R2' U R2 U2 R2' U2 R2 U2' R2' U R2 U' R2' U2' R2 U2' R2' U2 R2\",\n    \"R2' U R2 U' R2' U2' R2 U2 R2' U' R2 U' R2' U2' R2 U2' R2' U2 R2\",\n    \"R2' U2 R2 U R2' U R2 U R2' U R2 U2' R2' U' R2 U2 R2' U R2\",\n    \"R2' U2' R2 U' R U' R2' U R2' U R2 U2' R' U' R' U2 R' U R'\",\n    \"R2' U2' R2' U R2 U' R2 U R2 U' R U R' U' R2 U2 R U2' R\",\n    \"R2' U' R2 U R2 U2' R U' R' U2' R' U2' R' U' R2' U R2' U2 R'\",\n  ],\n  [\n    \"R2' U2 R2 U2 R2 U' R2 U' R2' U2 R U R U2' R\",\n    \"R U2' R' U R' U' R2 U2' R' U2 R' U R U2 R U' R'\",\n    \"R' U R U2' R2 U' R U R U2 R' U2 R U2 R2' U R2'\",\n    \"R U2' R' U R' U2' R2' U R2 U R U' R2 U' R2' U2 R U R'\",\n    \"R2 U R' U2 R' U R' U' R2 U2' R' U2 R' U R U2 R2 U' R2'\",\n    \"R2 U2 R2' U2' R2 U R2' U2 R2 U2' R2' U R2 U2' R2' U' R2 U2' R2'\",\n    \"R2 U2 R2' U2' R2 U R2' U2 R2 U2' R2' U R2' U2' R2 U' R2' U2' R2\",\n    \"R2 U2 R2' U2' R2 U2' R2' U2' R2 U2 R2' U' R2 U2' R2' U' R2 U2' R2'\",\n    \"R2 U2 R2' U2' R2 U2' R2' U2' R2 U2 R2' U' R2' U2' R2 U' R2' U2' R2\",\n    \"R2' U R2' U2 R' U R' U' R2 U2' R' U2 R' U R U2 R2' U' R2\",\n    \"R2' U2 R2 U2' R2' U R2 U2 R2' U2' R2 U R2 U2' R2' U' R2 U2' R2'\",\n    \"R2' U2 R2 U2' R2' U R2 U2 R2' U2' R2 U R2' U2' R2 U' R2' U2' R2\",\n    \"R2' U2 R2 U2' R2' U2' R2 U2' R2' U2 R2 U' R2 U2' R2' U' R2 U2' R2'\",\n    \"R2' U2 R2 U2' R2' U2' R2 U2' R2' U2 R2 U' R2' U2' R2 U' R2' U2' R2\",\n    \"R2' U2' R U2 R2' U' R2 U2' R2 U2 R2 U2' R U2' R2 U2' R' U2 R2\",\n    \"R2' U2' R' U R' U' R U' R2' U R U' R U R' U R2 U R2\",\n    \"R' U2' R2' U R2 U R2 U' R2 U' R2 U R2' U R U' R2 U R\",\n    \"R' U2' R2' U' R2 U R2' U R U' R2' U' R2 U R2 U R U R\",\n    \"R2 U2' R2' U2 R2 U R2' U2' R2 U2 R2' U' R2 U2' R2' U' R2 U2' R2'\",\n    \"R2 U2' R2' U2 R2 U R2' U2' R2 U2 R2' U' R2' U2' R2 U' R2' U2' R2\",\n    \"R2 U2' R2' U2 R2 U' R2' U2 R2 U2' R2' U R2 U2' R2' U' R2 U2' R2'\",\n    \"R2 U2' R2' U2 R2 U' R2' U2 R2 U2' R2' U R2' U2' R2 U' R2' U2' R2\",\n    \"R2' U2' R2 U2 R2' U R2 U2' R2' U2 R2 U' R2 U2' R2' U' R2 U2' R2'\",\n    \"R2' U2' R2 U2 R2' U R2 U2' R2' U2 R2 U' R2' U2' R2 U' R2' U2' R2\",\n    \"R2' U2' R2 U2 R2' U' R2 U2 R2' U2' R2 U R2 U2' R2' U' R2 U2' R2'\",\n    \"R2' U2' R2 U2 R2' U' R2 U2 R2' U2' R2 U R2' U2' R2 U' R2' U2' R2\",\n    \"R U' R' U R' U2 R U2 R' U R U' R U R' U R U R'\",\n    \"R2 U2 R2 U' R2' U R2' U' R2' U R' U' R U R2' U2' R' U2 R'\",\n    \"R2 U2' R2' U' R2 U' R2' U' R2 U' R2' U2 R2 U R2' U2' R2 U' R2'\",\n    \"R2 U' R2' U2' R' U2' R2' U R U' R2' U' R2 U R2 U R U R\",\n    \"R2' U R2 U' R' U2 R' U R U' R U R' U2 R U2' R2' U' R2\",\n    \"R2' U2' R2 U' R2' U' R2 U' R2' U' R2 U2 R2' U R2 U2' R2' U' R2\",\n    \"R' U R U R' U R U R' U2' R U' R' U2' R U2 R' U' R\",\n    \"R' U R U R' U R U2 R' U2 R U R' U2 R U2' R' U' R\",\n    \"R' U R U' R U2' R2 U2 R' U2 R U2' R U2' R2 U2 R U2 R'\",\n    \"R' U R' U2' R U' R U R2' U2 R2 U' R' U' R U2 R' U2' R\",\n  ],\n  [\n    \"R U2 R2' U R2 U2' R U2 R2 U' R2 U R U2' R' U' R\",\n    \"R U2 R2' U2 R2 U2 R U2' R2 U2' R2 U R U2' R' U' R\",\n    \"R2' U2 R2' U R' U' R2' U2 R2 U R U' R' U' R2' U R\",\n    \"R2' U2' R2' U R2' U' R2 U2 R2 U2' R U R2 U' R2 U R\",\n    \"R2 U R U' R2 U' R2 U2 R2' U' R2 U' R U R' U' R\",\n    \"R U R2' U2 R2 U2 R2' U R U2 R U2' R' U2' R U' R\",\n    \"R U2' R' U2 R U' R U2' R' U' R' U' R U R U2' R\",\n    \"R2' U R U R' U' R2 U2 R U2' R U' R' U R' U2 R\",\n    \"R2' U2' R U R U' R2' U' R2 U R2' U2 R2 U2' R' U' R\",\n    \"R' U2' R2 U R' U' R' U2 R' U2 R2 U R U' R2 U2' R\",\n    \"R' U' R' U' R U' R2 U R2 U R U R U2' R U' R\",\n    \"R2' U2 R2 U' R U2' R2' U2 R' U R U2 R2 U2' R2 U2' R\",\n    \"R2 U2 R2' U R2 U2 R2' U2' R2 U2' R2' U' R2 U R2' U' R2 U2' R\",\n    \"R2 U2 R2' U R2 U2 R2' U2' R2' U2' R2 U' R2' U R2 U' R2' U2' R\",\n    \"R2 U2 R2' U2' R2 U2' R2' U2 R2 U R2' U' R2 U R2' U' R2 U2' R\",\n    \"R2' U R' U' R2' U2' R2 U R U' R2 U2' R2 U' R2' U' R2 U R\",\n    \"R2' U2 R2 U R2' U2 R2 U2' R2 U2' R2' U' R2 U R2' U' R2 U2' R\",\n    \"R2' U2 R2 U R2' U2 R2 U2' R2' U2' R2 U' R2' U R2 U' R2' U2' R\",\n    \"R2' U2 R2 U2' R2' U2' R2 U2 R2' U R2 U' R2' U R2 U' R2' U2' R\",\n    \"R U' R' U2 R' U2' R2' U2 R U R' U' R' U2' R' U R2' U2 R\",\n    \"R2 U2 R2 U R2' U2 R' U R U2 R2 U' R2 U R U2' R' U' R\",\n    \"R2 U2' R2' U R2 U2' R2' U2 R2 U R2' U' R2 U2' R2' U R2 U R\",\n    \"R2 U2' R2' U' R2 U2 R2' U2' R2 U2' R2' U' R2 U2' R2' U R2 U R\",\n    \"R2 U2' R2' U' R2 U2 R2' U2' R2' U2' R2 U' R2' U2' R2 U R2 U R\",\n    \"R2 U' R2' U' R2 U R U R U2 R2 U2' R2 U2 R U2' R U' R\",\n    \"R2 U' R2' U' R2 U' R2' U2' R2 U R2' U2 R2 U2 R2' U' R2 U2 R\",\n    \"R2' U2 R' U R U2 R2' U2' R' U' R U2' R U' R2' U' R2 U R\",\n    \"R2' U2' R2 U R2' U2' R2 U2 R2' U R2 U' R2' U2' R2 U R2' U R\",\n    \"R2' U2' R2 U' R2' U2 R2 U2' R2 U2' R2' U' R2 U2' R2' U R2' U R\",\n    \"R2' U2' R2 U' R2' U2 R2 U2' R2' U2' R2 U' R2' U2' R2 U R2' U R\",\n    \"R2' U' R2 U' R2' U' R2 U2' R2' U R2 U2 R2' U2 R2 U' R2' U2 R\",\n    \"R' U R U2 R U R' U2 R2 U2 R' U R U2 R2 U' R2 U' R\",\n    \"R' U2 R U2' R U R2' U R2 U R2' U2' R2 U' R' U2' R' U2 R\",\n    \"R' U2 R' U R U2 R2 U2' R' U' R U2' R2 U' R2 U' R2' U R\",\n    \"R' U2' R2' U R2 U' R2 U R U' R2 U2 R2 U' R U' R' U R\",\n    \"R U R' U2 R2' U2' R2' U' R2' U2 R U2' R2' U2' R2 U R' U' R\",\n    \"R U R' U2' R2 U2' R U' R2 U' R' U R' U' R' U2 R' U2 R\",\n    \"R2 U2' R2 U2 R2' U R2 U2 R2' U R2' U' R2 U R2' U' R2 U2' R\",\n    \"R2 U2' R2' U2 R2 U R2' U2 R2 U R2' U' R2 U R2' U' R2 U2' R\",\n    \"R2' U2' R2 U2 R2' U R2 U2 R2' U R2 U' R2' U R2 U' R2' U2' R\",\n    \"R2' U2' R2' U2 R2 U R2' U2 R2 U R2 U' R2' U R2 U' R2' U2' R\",\n    \"R' U' R2 U R2' U R U2' R' U' R U2' R U2 R' U2 R' U R\",\n    \"R' U2' R2' U2 R U2' R' U2 R2' U R2' U R2' U' R2 U2 R2 U' R\",\n    \"R' U2' R2' U2 R2' U R2' U2 R' U2' R U R2' U' R2 U2 R2 U' R\",\n    \"R U R' U2 R2 U2 R2' U' R U' R' U' R U2' R U2 R' U2' R\",\n    \"R2' U2 R2' U2' R2 U' R2' U2 R2 U R2 U' R2' U2' R2 U R U R\",\n    \"R' U' R2' U' R U' R U2 R2 U' R' U' R' U2 R2' U R2' U2 R\",\n    \"R2 U2' R2 U2 R U R' U2 R2' U2' R2' U2' R2' U2 R2 U' R2' U' R\",\n    \"R2 U2' R2' U2 R2 U2 R2' U' R2 U R2' U2' R2 U2 R2' U2 R2 U R\",\n    \"R2 U2' R2' U2 R2 U2 R2' U' R2 U' R2' U2 R2 U2' R2' U' R2 U R\",\n    \"R2 U2' R2' U' R2 U2' R' U2 R2' U' R U R U2' R' U' R' U R\",\n    \"R2 U' R2' U' R2 U R2' U2' R2 U2' R2' U' R2 U2 R2' U2 R2 U R\",\n    \"R2' U R' U' R2' U2' R2 U R U' R2 U2 R2 U' R2' U R2 U R\",\n    \"R2' U2 R' U' R U' R2 U' R2' U2 R' U R U' R2 U' R2' U' R\",\n    \"R2' U2' R2 U2 R2' U2 R2 U' R2' U R2 U2' R2' U2 R2 U2 R2' U R\",\n    \"R2' U2' R2 U2 R2' U2 R2 U' R2' U' R2 U2 R2' U2' R2 U' R2' U R\",\n    \"R2' U2' R2 U2 R2' U2 R' U' R U R2 U2' R2' U' R' U R U2 R\",\n    \"R2' U2' R2 U' R2' U2' R2' U2 R2' U' R U R U2' R' U' R' U R\",\n    \"R2' U' R2 U R U R' U2 R' U2' R2' U2 R2' U2' R' U' R2 U R\",\n    \"R2' U' R2 U R U R' U' R2' U R U2' R U R U' R2' U2 R\",\n    \"R2' U' R2 U' R2' U R2 U2' R2' U2' R2 U' R2' U2 R2 U2 R2' U R\",\n    \"R' U' R U' R' U' R' U2' R2 U R' U2' R' U2' R2 U' R' U2' R\",\n    \"R U R2 U R' U' R2 U2 R U' R U R U2' R2 U' R2 U2' R\",\n    \"R U2 R' U R U2' R' U' R' U R U2' R U2 R' U2 R' U2 R\",\n    \"R U2' R U R U R2' U' R' U R U2' R2 U2 R2' U2' R U2 R\",\n    \"R U2' R U R U R2' U' R' U R2' U2' R2' U2 R2 U2' R' U2 R\",\n    \"R U2' R U R U2 R2' U' R U' R2' U R2 U R U' R' U2' R\",\n    \"R U2' R U R' U R2' U' R' U' R' U R U R2' U' R' U R\",\n    \"R U2' R2' U2 R2' U2 R' U2' R' U2 R' U' R2 U R2' U R2' U2' R\",\n    \"R2 U R2' U R2 U' R2' U2 R U2' R U' R' U R' U' R U2' R\",\n    \"R2 U2' R U R U R' U' R U R2' U2' R2 U2 R2 U' R' U R\",\n    \"R2 U2' R2 U2 R2' U2' R U R' U' R U R U R2 U' R' U R\",\n    \"R2 U2' R2 U2' R2 U R' U R2 U2 R' U2 R' U2 R' U2' R2 U' R\",\n    \"R2 U2' R2' U R2 U2' R2' U R2 U R2' U R2 U2' R2' U' R2 U R\",\n    \"R2' U R U R' U2' R2 U2' R U2 R2 U R' U' R' U R' U2 R\",\n    \"R2' U2 R2 U' R2' U' R' U2 R2' U R U2 R U R' U2 R U2' R\",\n    \"R2' U2 R2' U R2 U2 R2' U2' R' U R' U2' R2 U R2' U R2 U' R\",\n    \"R2' U2' R U R U' R2' U2 R' U2 R2' U R2 U2 R2' U2' R' U' R\",\n    \"R2' U2' R U R U' R2' U' R2 U2' R2' U2' R2 U2 R2' U2' R U' R\",\n    \"R2' U2' R U R U' R' U R' U2' R2 U2 R2' U R2 U' R' U2' R\",\n    \"R2' U2' R U R' U' R2 U' R2' U R2 U R2' U R2 U2' R' U' R\",\n    \"R2' U2' R2 U R2' U2' R2 U R2' U R2 U R2' U2' R2 U' R2' U R\",\n    \"R2' U' R U R U2 R' U2 R' U R U' R' U2' R2 U R' U2 R\",\n    \"R' U R2 U R2' U' R2 U R2 U R U2 R2 U2' R' U R2' U2' R\",\n    \"R' U2 R2 U R2' U2 R2 U2' R' U R' U2' R2 U R2' U R2 U' R\",\n    \"R' U2 R2' U2' R' U2' R U R U' R' U R' U2' R2' U2 R U R\",\n    \"R' U2 R' U2' R U' R' U2' R2 U' R U R2' U2 R U2' R U' R\",\n    \"R' U2' R U R' U2' R2 U R2' U R2 U R2' U2' R2 U' R2' U R\",\n    \"R' U2' R2' U2 R2 U2' R' U R' U' R U R U R2 U' R' U R\",\n    \"R' U2' R2' U2 R2 U' R U R2 U2' R2' U' R2 U R2 U2 R2' U2 R\",\n    \"R U2 R2' U2 R2 U2 R2' U2' R U2 R U2' R' U2 R U' R2' U2 R\",\n    \"R U2 R2' U2 R2 U2 R' U2' R U2 R' U2' R' U2 R2 U' R2' U2 R\",\n    \"R U2 R2' U' R2 U' R' U' R U R2' U R2 U2' R' U R' U2 R\",\n    \"R U2' R U2 R2 U2' R' U' R U2' R U' R' U' R U R2' U2' R\",\n    \"R U' R U2' R2 U' R' U2' R' U2 R U2' R2' U2 R' U' R2' U2 R\",\n    \"R2 U R2' U' R2 U' R2' U2' R U2' R U' R' U R' U' R U2' R\",\n    \"R2' U' R U2' R U2 R2' U R U' R2' U2 R2' U R2 U2 R2 U2 R\",\n    \"R2' U' R U2' R U2 R2' U R U' R' U2 R2 U R2' U2 R U2 R\",\n    \"R U R' U2 R' U' R U' R2 U R2 U R2 U' R U' R' U' R\",\n    \"R U2 R2' U2' R2 U' R' U R' U2 R U2' R U R' U2' R U2 R\",\n    \"R U2' R U2 R2' U' R U R' U R U2' R' U2 R2 U2 R' U2' R\",\n    \"R U2' R' U2 R U2' R U R' U R U R2' U2' R2 U' R' U2' R\",\n    \"R U' R' U R U2' R U2 R' U R' U' R2 U2' R2' U R U2 R\",\n    \"R2 U2 R2' U2 R2 U' R2' U R2 U R2' U2 R2 U2 R2' U2 R2 U R\",\n    \"R2 U2 R2' U2 R2 U' R2' U' R2 U2' R2 U2' R2' U' R2 U2' R2' U2' R\",\n    \"R2 U2 R2' U2 R2 U' R2' U' R2 U2' R2' U2' R2 U' R2' U2' R2 U2' R\",\n    \"R2 U2 R2' U2' R2 U' R2' U' R2 U R2' U2' R2 U2 R2' U2 R2 U R\",\n    \"R2 U2 R2' U2' R2 U' R2' U' R2 U' R2' U2 R2 U2' R2' U' R2 U R\",\n    \"R2 U2' R2 U' R' U' R U R2' U2' R2' U2' R U2' R U2 R U2' R\",\n    \"R2' U2 R2 U2 R2' U' R2 U R2' U R2 U2 R2' U2 R2 U2 R2' U R\",\n    \"R2' U2 R2 U2 R2' U' R2 U' R2' U2' R2 U2' R2' U' R2 U2' R2' U2' R\",\n    \"R2' U2 R2 U2 R2' U' R2 U' R2' U2' R2' U2' R2 U' R2' U2' R2 U2' R\",\n    \"R2' U2 R2 U2 R' U' R U2 R2' U2 R2 U2 R2' U2' R2 U' R' U R\",\n    \"R2' U2 R2 U2 R' U' R U2 R2' U' R2 U2' R2' U2 R2 U2 R' U R\",\n    \"R2' U2 R2 U2' R2' U' R2 U' R2' U R2 U2' R2' U2 R2 U2 R2' U R\",\n    \"R2' U2 R2 U2' R2' U' R2 U' R2' U' R2 U2 R2' U2' R2 U' R2' U R\",\n    \"R2' U2 R2 U2' R2' U' R' U' R U R2 U2' R2' U' R' U R U2 R\",\n    \"R2' U2' R2 U R' U2 R U2 R' U2' R' U2 R U R U2' R2' U2' R\",\n    \"R2' U2' R2 U R' U' R' U2' R U2 R U2' R' U2' R U2' R2' U2' R\",\n    \"R' U R U R U R2' U' R2 U' R2 U2 R U2 R2 U2' R2 U2' R\",\n    \"R' U R U2 R' U' R U' R' U R' U2' R2 U R2' U R U' R\",\n    \"R' U2 R U2 R U2' R2' U2' R U' R' U' R U2' R U2 R2' U R\",\n    \"R' U2' R U R' U R' U R2 U2 R' U2 R' U2 R U R' U' R\",\n    \"R' U2' R U2 R' U' R2 U R2' U R U2 R' U2' R U2 R U R\",\n    \"R' U2' R U2' R U2 R' U' R' U' R' U2 R U2 R2 U2' R2 U2' R\",\n    \"R' U' R2' U2' R2 U2' R2' U' R' U2' R' U R U2' R' U R U2 R\",\n    \"R U R' U2 R2 U2 R2' U' R U' R' U2 R U2 R U2' R' U2 R\",\n    \"R U R' U2' R' U2 R U R U' R' U2' R U R' U2 R' U2' R\",\n    \"R U2 R2 U R2 U' R' U' R U2 R2' U' R' U' R' U R' U2' R\",\n    \"R U2 R' U2' R2 U R U' R2 U R2' U R U' R2 U R2 U2' R\",\n    \"R U2' R U2 R U2 R2' U' R2' U R2' U R2 U2' R' U' R2' U2 R\",\n    \"R U2' R2 U' R U2' R2 U2 R2 U R U R2 U R2' U' R2 U' R\",\n    \"R U2' R2 U' R U2' R2 U2 R2 U R2' U R2' U R2 U' R2' U' R\",\n    \"R U' R U2' R' U2' R2 U2 R2 U' R2' U' R2' U R U2' R' U R\",\n    \"R2 U R2 U2' R2' U' R2 U2' R2' U' R2' U2' R2 U' R2' U2 R2 U' R\",\n    \"R2 U R2' U2 R2 U2 R2' U R2 U2 R2' U' R2 U R2' U R2 U2 R\",\n    \"R2 U R2' U2 R2 U2 R2' U R2 U2' R2' U' R2 U' R2' U R2 U2' R\",\n    \"R2 U R2' U2 R2' U2 R2 U R2' U2 R2 U' R2 U R2' U R2 U2 R\",\n    \"R2 U R2' U2' R2 U' R2 U2' R2' U' R2 U2' R2' U' R2' U2 R2 U' R\",\n    \"R2 U R2' U2' R2 U' R2' U2' R2 U' R2' U2' R2 U' R2' U2 R2 U' R\",\n    \"R2 U R' U2' R' U2' R2' U2 R U2 R2 U R2 U' R2 U' R2 U' R\",\n    \"R2 U2 R2' U2' R2' U R' U' R2' U R2 U R U' R2 U R2 U2' R\",\n    \"R2 U2 R2' U' R2 U R2 U2' R2' U' R2 U2' R2' U2' R2' U2 R2 U2 R\",\n    \"R2 U2 R2' U' R2 U R2' U2' R2 U' R2' U R2 U2 R2' U2' R2 U' R\",\n    \"R2 U2 R2' U' R2 U R2' U2' R2 U' R2' U2' R2 U2' R2' U2 R2 U2 R\",\n    \"R2 U' R2' U R2 U R2' U2 R2 U2' R2' U' R2 U2 R2' U2 R2 U R\",\n    \"R2 U' R2' U R2 U2' R2' U2' R2 U2 R2' U2 R2 U2 R2' U2 R2 U R\",\n    \"R2' U R2 U2 R2 U2 R2' U R2 U2 R2' U' R2' U R2 U R2' U2 R\",\n    \"R2' U R2 U2 R2' U2 R2 U R2' U2 R2 U' R2' U R2 U R2' U2 R\",\n    \"R2' U R2 U2 R2' U2 R2 U R2' U2' R2 U' R2' U' R2 U R2' U2' R\",\n    \"R2' U R2 U2' R2' U' R2 U2' R2' U' R2 U2' R2' U' R2 U2 R2' U' R\",\n    \"R2' U R2 U2' R2' U' R2' U2' R2 U' R2' U2' R2 U' R2 U2 R2' U' R\",\n    \"R2' U R2' U2' R2 U' R2' U2' R2 U' R2 U2' R2' U' R2 U2 R2' U' R\",\n    \"R2' U2 R2 U2' R2 U R U R2 U2' R2' U' R2 U R2 U' R U2' R\",\n    \"R2' U2 R2 U' R2 U' R2 U R U2' R2 U2 R2 U' R2' U R U2' R\",\n    \"R2' U2 R2 U' R2' U R2 U2' R2' U' R2 U R2' U2 R2 U2' R2' U' R\",\n    \"R2' U2 R2 U' R2' U R2 U2' R2' U' R2 U2' R2' U2' R2 U2 R2' U2 R\",\n    \"R2' U2 R2 U' R2' U R2' U2' R2 U' R2' U2' R2 U2' R2 U2 R2' U2 R\",\n    \"R2' U' R2 U R2' U R2 U2 R2' U2' R2 U' R2' U2 R2 U2 R2' U R\",\n    \"R2' U' R2 U R2' U2' R2 U2' R2' U2 R2 U2 R2' U2 R2 U2 R2' U R\",\n    \"R' U2 R U' R' U R' U2' R U' R' U2' R U2' R U2 R' U2 R\",\n    \"R' U2 R U' R' U2 R' U2 R U R' U2 R U' R U2 R' U2 R\",\n    \"R' U2 R2 U2 R' U2' R' U2' R U2' R U2 R2' U' R U' R' U2 R\",\n    \"R' U2' R2 U R2 U' R2 U' R2' U2 R U' R2 U' R' U R' U2 R\",\n    \"R' U2' R2 U' R U2' R2 U2 R2' U2 R2 U R2' U' R2 U2' R2 U R\",\n    \"R' U' R2 U2' R2' U2' R2 U' R2' U' R U' R' U R U2' R' U2' R\",\n    \"R U2' R2' U2 R U R U2 R2' U R' U2' R U' R2 U2 R2 U R U2 R\",\n    \"R U2' R2' U' R U2' R' U2' R2' U2 R2' U R' U' R2' U2' R2 U2' R2 U2 R\",\n    \"R U' R2' U2' R2 U2' R' U2 R U' R' U' R U' R' U R U2 R2' U2' R\",\n    \"R2 U2 R2' U R2 U2 R2' U2' R2 U2' R2' U' R2 U2' R U2' R2 U' R2' U2' R\",\n    \"R2 U2 R2' U R2 U2 R2' U2' R2' U2' R2 U' R2' U2' R' U2' R2' U' R2 U2' R\",\n    \"R2 U2 R2' U2' R2 U2' R2 U2 R2' U R2 U2 R U2 R2 U R2' U' R2 U2' R\",\n    \"R2 U2 R2' U2' R2 U2' R2 U2 R2' U R2 U' R2' U R2 U2 R U2 R2 U2' R\",\n    \"R2 U2 R2' U2' R2 U2' R2' U2 R2 U R2' U' R2 U2' R U2' R2 U' R2' U2' R\",\n    \"R2 U2 R2' U2' R2 U2' R2' U2 R2 U2' R U2' R2 U' R2' U R2 U' R2' U2' R\",\n    \"R2 U2' R U2 R' U2 R2' U' R2 U' R2' U2' R2' U2' R2 U' R2' U R' U2 R\",\n    \"R2 U' R2' U R2 U R2' U' R2' U R U2 R2 U2' R2 U2 R U2' R U' R\",\n    \"R2 U' R2' U R2 U R' U2' R2 U R' U' R' U2 R' U' R2 U R U' R\",\n    \"R2' U R' U' R2' U2' R2 U R U' R U2' R2' U' R2 U2' R U R2 U R\",\n    \"R2' U2 R2 U R2 U' R2' U2' R2 U2' R U R2 U2 R U R2 U2 R2' U2 R\",\n    \"R2' U2 R2 U R2' U2 R2 U2' R2 U2' R2' U' R2 U2' R U2' R2 U' R2' U2' R\",\n    \"R2' U2 R2 U R2' U2 R2 U2' R2' U2' R2 U' R2' U2' R' U2' R2' U' R2 U2' R\",\n    \"R2' U2 R2 U2' R2' U2' R2 U2 R2' U R2 U' R2' U2' R' U2' R2' U' R2 U2' R\",\n    \"R2' U2 R2 U2' R2' U2' R2 U2 R2' U2' R' U2' R2' U' R2 U R2' U' R2 U2' R\",\n    \"R2' U2 R2 U2' R2' U2' R2' U2 R2 U R2' U2 R' U2 R2' U R2 U' R2' U2' R\",\n    \"R2' U2 R2 U2' R2' U2' R2' U2 R2 U R2' U' R2 U R2' U2 R' U2 R2' U2' R\",\n    \"R2' U' R U R' U R' U2 R' U R2' U' R2' U2 R' U' R' U2 R2 U' R\",\n    \"R2' U' R' U' R2 U R U' R' U2 R U R2 U2 R2 U2' R' U2 R U2 R\",\n    \"R' U R U2' R2 U R2 U2 R2 U' R' U' R U2 R2' U2' R2' U' R2 U R\",\n    \"R' U R' U' R' U2' R2' U R U' R' U R U R' U2' R2 U2' R2' U' R\",\n    \"R' U2 R U R2 U2 R2' U' R2 U2 R2 U2' R U R2 U R2' U' R2 U2' R\",\n    \"R' U2' R2' U2 R2' U R2 U2 R2 U2' R2 U R U R' U R U2' R' U' R\",\n    \"R' U2' R2' U2 R2' U R2 U2' R2' U' R' U2 R U R2 U' R2' U' R' U R\",\n    \"R' U2' R' U2 R2 U R2' U2 R U2' R2 U R U R' U R U2' R' U' R\",\n    \"R' U' R2' U2' R U R U' R2' U2 R2' U R' U2' R U2' R' U2 R' U2 R\",\n    \"R' U' R' U R U R U' R U R2 U' R' U' R' U R2 U R2 U' R\",\n    \"R' U' R' U' R2 U R U2' R' U2' R2' U2 R2 U' R U' R2' U2 R2 U2 R\",\n  ],\n  [\n    \"R2 U2 R2 U' R2 U R2' U2' R2' U2 R' U' R2' U R2' U' R\",\n    \"R2 U2' R2 U' R U R2 U2' R2' U' R' U R U R2 U' R\",\n    \"R' U2' R2 U2' R2' U2' R' U2 R2' U2 R2' U' R' U2 R U R\",\n    \"R' U2' R2 U' R2' U2 R' U2' R2' U R2' U' R' U2 R U R\",\n    \"R2' U' R' U R2' U R2' U2' R2 U R2' U R' U' R U R\",\n    \"R2 U2' R2' U R' U2 R2 U2' R U' R' U2' R2' U2 R2' U2 R\",\n    \"R U R U R' U R2' U' R2' U' R' U' R' U2 R' U R\",\n    \"R U2 R2' U' R U R U2' R U2' R2' U' R' U R2' U2 R\",\n    \"R2 U2 R' U' R' U R2 U R2' U' R2 U2' R2' U2 R U R\",\n    \"R2 U' R' U' R U R2' U2' R' U2 R' U R U' R U2' R\",\n    \"R' U2 R U2' R' U R' U2 R U R U R' U' R' U2 R\",\n    \"R' U' R2 U2' R2' U2' R2 U' R' U2' R' U2 R U2 R' U R\",\n    \"R2 U2' R2' U2 R2 U2 R2' U2' R2 U' R2' U R2 U' R2' U R2 U2 R\",\n    \"R2 U2' R2' U' R2 U2' R2' U2 R2 U2 R2' U R2 U' R2' U R2 U2 R\",\n    \"R2 U2' R2' U' R2 U2' R2' U2 R2' U2 R2 U R2' U' R2 U R2' U2 R\",\n    \"R2 U' R U R2 U2 R2' U' R' U R2' U2 R2' U R2 U R2' U' R\",\n    \"R2' U2' R2 U2 R2' U2 R2 U2' R2' U' R2 U R2' U' R2 U R2' U2 R\",\n    \"R2' U2' R2 U' R2' U2' R2 U2 R2 U2 R2' U R2 U' R2' U R2 U2 R\",\n    \"R2' U2' R2 U' R2' U2' R2 U2 R2' U2 R2 U R2' U' R2 U R2' U2 R\",\n    \"R U R2 U R' U R' U2' R2' U R U R U2' R2 U' R2 U2' R\",\n    \"R2 U2' R2 U2 R2' U R2 U2' R2' U' R2' U R2 U2 R2' U' R' U' R\",\n    \"R' U' R U2' R2' U2' R2 U R' U R U R' U2 R' U2' R U2 R\",\n    \"R U2 R2 U2' R2 U' R2 U2' R U2 R' U' R2 U R2' U2' R2' U R\",\n    \"R U2 R2 U2' R' U2 R U2' R2 U' R2 U' R2 U R2' U2' R2' U R\",\n    \"R U R2' U' R2 U' R' U2 R U R' U2 R' U2' R U2' R U' R\",\n    \"R2 U2 R2 U2' R2' U' R2 U2' R2' U' R2' U R2 U' R2' U R2 U2 R\",\n    \"R2 U2 R2' U2' R2 U' R2' U2' R2 U' R2' U R2 U' R2' U R2 U2 R\",\n    \"R2' U2 R2 U2' R2' U' R2 U2' R2' U' R2 U R2' U' R2 U R2' U2 R\",\n    \"R2' U2 R2' U2' R2 U' R2' U2' R2 U' R2 U R2' U' R2 U R2' U2 R\",\n    \"R' U' R U2 R2' U2 R' U R2' U R U' R U R U2' R U2' R\",\n    \"R' U' R U2' R2 U2 R2 U R2 U2' R' U2 R2 U2 R2' U' R U R\",\n    \"R U2 R2 U' R2' U R2' U' R' U R2' U2' R2' U R' U R U' R\",\n    \"R U2' R U' R' U2' R2' U2 R U R' U2 R2' U R2' U R2 U' R\",\n    \"R U2' R' U2 R' U' R2 U' R2' U' R2 U2 R2' U R U2 R U2' R\",\n    \"R U' R' U2' R' U' R U2' R2' U2' R U' R' U2' R2' U R2' U R\",\n    \"R2 U R2' U R2 U R2' U2 R2 U' R2' U2' R2 U2' R2' U R2 U2' R\",\n    \"R2 U2 R2' U R2 U2' R2' U2 R2 U2 R2' U R2 U2 R2' U' R2 U' R\",\n    \"R2 U2 R2' U R2 U2' R2' U2 R2' U2 R2 U R2' U2 R2 U' R2 U' R\",\n    \"R2 U2 R2' U' R2 U2 R2' U2' R2 U' R2' U R2 U2 R2' U' R2 U' R\",\n    \"R2 U2' R U' R' U2' R2 U2 R U R' U2 R' U R2 U R2' U' R\",\n    \"R2' U R2 U R2' U R2 U2 R2' U' R2 U2' R2' U2' R2 U R2' U2' R\",\n    \"R2' U R2 U R2' U' R' U' R' U2' R2' U2 R2' U2' R' U2 R' U R\",\n    \"R2' U2 R2 U R2' U2' R2 U2 R2 U2 R2' U R2 U2 R2' U' R2' U' R\",\n    \"R2' U2 R2 U R2' U2' R2 U2 R2' U2 R2 U R2' U2 R2 U' R2' U' R\",\n    \"R2' U2 R2 U' R2' U2 R2 U2' R2' U' R2 U R2' U2 R2 U' R2' U' R\",\n    \"R2' U2' R2' U' R2 U2' R U' R' U2' R2' U R2' U' R' U2 R U R\",\n    \"R' U R U2' R U2 R2 U2' R' U' R U R U2 R U' R2 U2' R\",\n    \"R U R' U R U R U2 R2' U' R U2 R U2 R2' U R U2 R\",\n    \"R2 U R2' U R2 U' R2' U2 R2 U2 R2' U R2 U2' R2' U2' R2 U' R\",\n    \"R2 U R2' U' R' U' R U R2 U' R' U2 R' U' R' U R2 U2' R\",\n    \"R2 U R2' U' R' U' R U2' R U2 R2 U2' R2 U2 R U R2' U' R\",\n    \"R2 U2 R2' U R2 U2 R2 U2' R2 U R' U' R' U2 R U R U' R\",\n    \"R2 U2 R2' U2' R2 U2' R U R' U' R2' U2 R2 U R U' R' U2' R\",\n    \"R2 U2 R2' U2' R2 U2' R2' U R2 U R2' U2' R2 U2 R2' U R2 U' R\",\n    \"R2 U2 R2' U2' R2 U2' R2' U R2 U' R2' U2 R2 U2' R2' U2' R2 U' R\",\n    \"R2 U2' R U R' U R2' U R2 U2' R U' R' U R2' U R2 U R\",\n    \"R2 U' R U R2 U2 R2' U' R' U R2' U2' R2' U R2 U' R2' U' R\",\n    \"R2' U R2 U R2' U' R2 U2 R2' U2 R2 U R2' U2' R2 U2' R2' U' R\",\n    \"R2' U2 R2 U R2' U2 R U2' R2 U R' U' R' U2 R U R U' R\",\n    \"R2' U2 R2 U2' R2' U2' R2 U R2' U R2 U2' R2' U2 R2 U R2' U' R\",\n    \"R2' U2 R2 U2' R2' U2' R2 U R2' U' R2 U2 R2' U2' R2 U2' R2' U' R\",\n    \"R2' U2 R2' U2' R' U' R U2' R2 U2 R2 U2 R2 U2' R2' U R2 U R\",\n    \"R U R2' U2 R2 U2 R2' U R2 U R' U R U' R' U2 R U2 R\",\n    \"R U2 R2' U R' U2 R2' U2' R2 U2' R2' U' R2 U R2' U2 R2' U' R\",\n    \"R U2 R2' U' R2' U R2' U R2 U2' R' U R2' U R U' R U2' R\",\n    \"R U2' R2' U2' R U2 R U2 R' U2 R' U2' R2 U R' U R U2' R\",\n    \"R U2' R' U R U2' R U2' R' U' R U2' R' U R' U2' R U2' R\",\n    \"R U2' R' U R U' R U2 R' U R U2 R' U2 R' U2' R U2' R\",\n    \"R2 U R2' U' R2 U2 R2' U2 R2 U2' R2' U2' R2 U2' R2' U2' R2 U' R\",\n    \"R2 U R2' U' R2 U' R2' U2' R2 U2 R2' U R2 U2' R2' U2' R2 U' R\",\n    \"R2 U2' R2' U R2 U' R2 U2 R2' U R2 U2 R2' U2 R2' U2' R2 U2' R\",\n    \"R2 U2' R2' U R2 U' R2' U2 R2 U R2' U2 R2 U2 R2' U2' R2 U2' R\",\n    \"R2 U2' R2' U R2 U' R2' U2 R2 U R2' U' R2 U2' R2' U2 R2 U R\",\n    \"R2 U2' R2' U R2' U R2' U' R' U2 R2' U2' R2' U R2 U' R' U2 R\",\n    \"R2 U2' R2' U2 R2' U' R' U' R2' U2 R2 U R2' U' R2' U R' U2 R\",\n    \"R2 U' R2 U2 R2' U R2 U2 R2' U R2' U2 R2 U R2' U2' R2 U R\",\n    \"R2 U' R2' U2 R2 U R2 U2 R2' U R2 U2 R2' U R2' U2' R2 U R\",\n    \"R2 U' R2' U2 R2 U R2' U2 R2 U R2' U2 R2 U R2' U2' R2 U R\",\n    \"R2 U' R2' U2' R2 U2' R2' U' R2 U2 R2' U R2 U R2' U' R2 U2 R\",\n    \"R2 U' R2' U2' R2 U2' R2' U' R2 U2' R2' U R2 U' R2' U' R2 U2' R\",\n    \"R2 U' R2' U2' R2' U2' R2 U' R2' U2' R2 U R2 U' R2' U' R2 U2' R\",\n    \"R2' U R2 U' R2' U2 R2 U2 R2' U2' R2 U2' R2' U2' R2 U2' R2' U' R\",\n    \"R2' U R2 U' R2' U' R2 U2' R2' U2 R2 U R2' U2' R2 U2' R2' U' R\",\n    \"R2' U2' R2 U R2' U' R2 U2 R2' U R2 U2 R2' U2 R2 U2' R2' U2' R\",\n    \"R2' U2' R2 U R2' U' R2 U2 R2' U R2 U' R2' U2' R2 U2 R2' U R\",\n    \"R2' U2' R2 U R2' U' R2' U2 R2 U R2' U2 R2 U2 R2 U2' R2' U2' R\",\n    \"R2' U2' R2 U2 R2 U' R U R2 U' R2' U' R' U R2' U' R2' U2 R\",\n    \"R2' U' R U2 R U2 R2 U2' R' U2' R2' U' R2' U R2' U R2' U R\",\n    \"R2' U' R2 U2 R2' U R2 U2 R2' U R2 U2 R2' U R2 U2' R2' U R\",\n    \"R2' U' R2 U2 R2' U R2' U2 R2 U R2' U2 R2 U R2 U2' R2' U R\",\n    \"R2' U' R2 U2' R2 U2' R2' U' R2 U2' R2' U R2' U' R2 U' R2' U2' R\",\n    \"R2' U' R2 U2' R2' U2' R2 U' R2' U2 R2 U R2' U R2 U' R2' U2 R\",\n    \"R2' U' R2 U2' R2' U2' R2 U' R2' U2' R2 U R2' U' R2 U' R2' U2' R\",\n    \"R2' U' R2' U2 R2 U R2' U2 R2 U R2 U2 R2' U R2 U2' R2' U R\",\n    \"R' U R' U2 R U2 R2' U2' R2' U R2 U R2 U' R' U2 R U' R\",\n    \"R' U2 R2' U R' U2 R2' U2' R2' U' R2 U' R2 U' R2' U R2 U R\",\n    \"R' U2 R2' U R' U2 R2' U2' R2' U' R' U' R2' U' R2 U R2' U R\",\n    \"R' U2 R' U2' R' U2' R2 U R2 U' R2 U' R2' U2 R U R2 U2' R\",\n    \"R' U2' R U2 R2' U' R' U R2' U' R2 U' R' U R2' U' R2' U2 R\",\n    \"R' U2' R2' U' R2' U R U R' U2' R2 U R U R U' R U2 R\",\n    \"R' U' R U2 R U2' R' U' R' U R U2 R' U' R U2' R U2 R\",\n    \"R' U' R U2' R2' U2' R2 U R' U R U2' R' U2' R' U2 R U2' R\",\n    \"R U R2 U2 R2' U2 R2 U R U2 R U' R' U2 R U' R' U2' R\",\n    \"R U2 R' U2 R' U2' R U R U R U2' R' U2' R2' U2 R2' U2 R\",\n    \"R U2 R' U2' R U R2' U' R2 U' R' U2' R U2 R' U2' R' U' R\",\n    \"R U2 R' U' R U' R U' R2' U2' R U2' R U2' R' U' R U R\",\n    \"R U2' R' U2' R' U2 R2 U2 R' U R U R' U2 R' U2' R2 U' R\",\n    \"R U' R' U2' R U R' U R U' R U2 R2' U' R2 U' R' U R\",\n    \"R U' R' U' R' U' R2 U R2' U R2' U2' R' U2' R2' U2 R2' U2 R\",\n    \"R2 U2 R2' U' R U R U2 R' U2' R' U2 R U2 R' U2 R2 U2 R\",\n    \"R2 U2 R2' U' R U2' R' U2' R U2 R U2' R' U' R' U2 R2 U2 R\",\n    \"R2 U2' R2' U2 R2 U R U R' U' R2' U2 R2 U R U' R' U2' R\",\n    \"R2 U2' R2' U2 R2 U R2' U R2 U R2' U2' R2 U2 R2' U R2 U' R\",\n    \"R2 U2' R2' U2 R2 U R2' U R2 U' R2' U2 R2 U2' R2' U2' R2 U' R\",\n    \"R2 U2' R2' U2' R U R' U2' R2 U R2' U2 R2 U2' R2' U2' R U' R\",\n    \"R2 U2' R2' U2' R U R' U2' R2 U2' R2' U2' R2 U2 R2' U R U' R\",\n    \"R2 U2' R2' U2' R2 U R2' U R2 U2 R2 U2 R2' U R2 U2 R2' U2 R\",\n    \"R2 U2' R2' U2' R2 U R2' U R2 U2 R2' U2 R2 U R2' U2 R2 U2 R\",\n    \"R2 U2' R2' U2' R2 U R2' U' R2 U' R2' U2' R2 U2' R2' U2' R2 U' R\",\n    \"R2' U2 R2' U R U R' U' R2 U2 R2 U2 R' U2 R' U2' R' U2 R\",\n    \"R2' U2' R2 U2 R2' U R2 U R2' U R2 U2' R2' U2 R2 U R2' U' R\",\n    \"R2' U2' R2 U2 R2' U R2 U R2' U' R2 U2 R2' U2' R2 U2' R2' U' R\",\n    \"R2' U2' R2 U2' R2' U R2 U R2' U2 R2 U2 R2' U R2 U2 R2' U2 R\",\n    \"R2' U2' R2 U2' R2' U R2 U R2' U2 R2' U2 R2 U R2' U2 R2 U2 R\",\n    \"R2' U2' R2 U2' R2' U R2 U' R2' U' R2 U2' R2' U2' R2 U2' R2' U' R\",\n    \"R' U R U' R' U2 R' U2' R U' R U R2' U2 R2 U' R' U2' R\",\n    \"R' U2 R U2' R' U2 R' U' R U' R' U' R2 U2 R2' U R U2 R\",\n    \"R' U2 R' U2' R2 U R' U' R U' R' U2 R U2' R2' U2' R U2 R\",\n    \"R' U2' R2 U2 R2' U R U' R U2' R' U2 R' U' R U2 R' U2' R\",\n    \"R' U' R U2' R U R' U R2' U' R2' U' R2' U R' U R U R\",\n    \"R2 U R' U2 R' U2' R2 U' R' U R U2' R2' U' R2 U2' R' U2' R\",\n    \"R2 U R' U2 R' U2' R2 U' R' U R2 U2' R2 U' R2' U2' R2' U2' R\",\n    \"R2' U' R2 U R2' U R2 U2 R' U2 R' U R U' R U R' U2 R\",\n    \"R' U R' U2 R2' U R U2 R U2' R' U2 R2 U2' R U R2 U2' R\",\n    \"R' U2 R' U2' R2' U2 R U R' U2 R' U R U R' U' R2 U2 R\",\n    \"R' U2' R2 U R2' U R U R' U' R2 U' R2' U2 R U' R U2' R\",\n    \"R' U2' R2 U2' R2' U2' R U2 R' U2' R U2 R U2' R2' U R2 U2' R\",\n    \"R' U2' R2 U2' R2' U2' R2 U2 R' U2' R' U2 R U2' R' U R2 U2' R\",\n    \"R U2 R2 U2' R2' U R' U' R2' U2 R2 U R2' U' R2' U2' R2 U2' R\",\n    \"R U2 R2 U2' R2' U2 R U' R U R' U' R' U' R2' U R U' R\",\n    \"R U2 R' U' R U2 R2' U' R2 U' R2' U' R2 U2 R2' U R2 U' R\",\n    \"R U2' R U2 R' U R U2 R2' U R' U' R2 U2' R' U2 R' U R\",\n    \"R U2' R2 U2 R U2 R' U' R' U R U' R U2 R2 U2' R' U' R\",\n    \"R U2' R2' U' R2 U2' R2' U2 R U' R U2 R2' U' R2 U' R2' U R\",\n    \"R U' R2' U' R2 U R2' U' R2' U' R' U2' R2' U2 R U' R2 U2 R\",\n    \"R2 U R' U' R' U2' R U2' R U' R' U R U2 R2' U' R U2' R\",\n    \"R2 U2 R2' U' R2 U2 R2' U' R2 U' R2' U' R2 U2 R2' U R2 U' R\",\n    \"R2 U2 R' U' R U R2' U R2 U' R2' U' R2 U' R2' U2 R U R\",\n    \"R2 U2 R' U' R' U R U' R U2 R2' U2' R2 U' R2' U R U2 R\",\n    \"R2 U2 R' U' R' U R2 U R2' U2 R2 U2 R2' U2' R2 U2 R' U R\",\n    \"R2 U2 R' U' R' U R2 U2' R U2' R2 U' R2' U2' R2 U2 R U R\",\n    \"R2 U2' R2 U' R2' U2' R2 U2 R U' R U2 R2' U' R2 U' R2' U R\",\n    \"R2 U2' R2' U R2 U R U2' R2 U' R' U2' R' U' R U2' R' U2 R\",\n    \"R2 U' R' U' R U2 R2' U2 R' U2' R2' U' R U R U' R U2' R\",\n    \"R2' U2 R2 U' R2' U2 R2 U' R2' U' R2 U' R2' U2 R2 U R2' U' R\",\n    \"R2' U2 R2' U2 R2' U' R U' R2' U2' R U2' R U2' R U2 R2' U R\",\n    \"R2' U2 R2' U2' R2 U2 R' U' R U R' U' R' U' R2' U R U' R\",\n    \"R2' U2 R' U' R' U' R U R' U' R2 U2 R2' U2' R2' U R U' R\",\n    \"R2' U' R2 U' R2' U R2 U2' R' U2 R' U R U' R U R' U2 R\",\n    \"R' U2 R2 U2' R2 U2' R U2 R U2' R U R2' U' R2 U' R2 U2 R\",\n    \"R' U2 R' U' R U' R2 U R U R U' R' U' R2 U R U' R\",\n    \"R' U2 R' U' R' U2' R2 U R' U R2 U' R2' U' R' U R U2 R\",\n    \"R' U2 R' U' R' U' R2 U R U' R2 U2 R2 U2' R2' U2 R U2' R\",\n    \"R' U2 R' U' R' U' R2 U R U' R' U2 R2' U2' R2 U2 R' U2' R\",\n    \"R' U2' R U' R' U2 R U R U' R' U2 R' U2' R U2' R U2' R\",\n    \"R' U' R2' U' R U R2' U2' R' U R' U' R' U2 R2' U R2' U2 R\",\n    \"R U R U R2' U' R' U2 R U2 R2 U2' R2' U R' U R2 U2' R2' U2' R\",\n    \"R U R U' R' U' R' U R' U' R2' U R U R U' R2' U' R2' U R\",\n    \"R U R2 U2 R' U' R' U R2 U2' R2 U' R U2 R' U2 R U2' R U2' R\",\n    \"R U2 R U2' R2' U' R2 U2' R' U2 R2' U' R' U' R U' R' U2 R U R\",\n    \"R U2 R2 U2' R2 U' R2' U2 R2 U R U2' R' U' R2' U R2 U R U' R\",\n    \"R U2 R2 U2' R2 U' R2' U2' R2' U2 R2' U' R' U' R U' R' U2 R U R\",\n    \"R U2' R' U' R2' U2' R2 U R2' U2' R2' U2 R' U' R2' U' R2 U R2' U2 R\",\n    \"R U' R U R U2 R2 U' R' U R U' R' U' R U2 R2' U2 R2 U R\",\n    \"R U' R' U2 R2' U' R2' U2' R2' U R U R' U2' R2 U2 R2 U R2' U' R\",\n    \"R2 U R U R2' U' R' U R U2' R' U' R2' U2' R2' U2 R U2' R' U2' R\",\n    \"R2 U R' U' R U' R U2' R U' R2 U R2 U2' R U R U2' R2' U R\",\n    \"R2 U2' R2' U2 R2 U2 R2 U2' R2' U' R2 U R2' U' R2 U2' R U2' R2 U2 R\",\n    \"R2 U2' R2' U2 R2 U2 R2 U2' R2' U' R2 U2' R U2' R2 U' R2' U R2 U2 R\",\n    \"R2 U2' R2' U2 R2 U2 R2' U2' R2 U2 R U2 R2 U R2' U' R2 U R2' U2 R\",\n    \"R2 U2' R2' U2 R2 U2 R2' U2' R2 U' R2' U R2 U2 R U2 R2 U R2' U2 R\",\n    \"R2 U2' R2' U' R2 U2' R2' U2 R2 U2 R2' U R2 U2 R U2 R2 U R2' U2 R\",\n    \"R2 U2' R2' U' R2 U2' R2' U2 R2' U2 R2 U R2' U2 R' U2 R2' U R2 U2 R\",\n    \"R2 U2' R2' U' R2' U R2 U2 R2' U2 R' U' R2' U2' R' U' R2' U2' R2 U2' R\",\n    \"R2 U' R U R2 U2 R2' U' R' U R' U2 R2 U R2' U2 R' U' R2' U' R\",\n    \"R2' U R2 U' R2' U' R U2 R2' U' R U R U2' R U R2' U' R' U R\",\n    \"R2' U R2 U' R2' U' R2 U R2 U' R' U2' R2' U2 R2' U2' R' U2 R' U R\",\n    \"R2' U2 R' U2' R U2' R2 U R2' U R2 U2 R2 U2 R2' U R2 U' R U2' R\",\n    \"R2' U2' R2 U2 R2' U2 R2 U2' R2' U2 R' U2 R2' U R2 U' R2' U R2 U2 R\",\n    \"R2' U2' R2 U2 R2' U2 R2 U2' R2' U' R2 U R2' U2 R' U2 R2' U R2 U2 R\",\n    \"R2' U2' R2 U2 R2' U2 R2' U2' R2 U' R2' U R2 U' R2' U2' R' U2' R2' U2 R\",\n    \"R2' U2' R2 U2 R2' U2 R2' U2' R2 U' R2' U2' R' U2' R2' U' R2 U R2' U2 R\",\n    \"R2' U2' R2 U' R2' U2' R2 U2 R2 U2 R2' U R2 U2 R U2 R2 U R2' U2 R\",\n    \"R2' U2' R2 U' R2' U2' R2 U2 R2' U2 R2 U R2' U2 R' U2 R2' U R2 U2 R\",\n    \"R' U R2 U2 R2' U2 R U2' R' U R U R' U R U' R' U2' R2 U2 R\",\n    \"R' U2 R2 U R' U2 R U2 R2 U2' R2 U' R U R2 U2 R2' U2 R2' U2' R\",\n    \"R' U2 R2 U2' R' U' R' U2' R2 U' R U2 R' U R2' U2' R2' U' R' U2' R\",\n  ],\n  [\n    \"R2 U R U' R' U R2' U R2 U2' R2' U R2' U R' U' R\",\n    \"R U R U2 R' U' R2' U R2' U2' R' U2 R2' U' R2 U2' R\",\n    \"R U R U2 R' U' R2' U2 R2' U2 R' U2' R2' U2' R2 U2' R\",\n    \"R2' U' R2 U R U R' U' R2' U2' R2 U R U' R2 U2' R\",\n    \"R2' U' R2' U R2' U' R' U2 R2' U2' R2' U R2 U' R2 U2 R\",\n    \"R2 U2 R' U' R' U R U R U2 R' U R' U2' R U2 R\",\n    \"R2' U2 R2' U R' U' R2' U2' R U2' R U R U' R2' U2 R\",\n    \"R U2' R U' R U R' U2 R' U2' R2' U R U' R' U' R\",\n    \"R' U R U2 R2' U2' R2 U' R2' U R2 U R' U' R' U2 R\",\n    \"R U R' U2 R U2 R' U2' R' U' R2 U2' R2' U2' R2 U' R\",\n    \"R U R' U2 R' U' R' U' R2' U' R2' U R' U R U R\",\n    \"R2' U2 R2' U2 R2' U2' R' U' R U2' R2 U2 R' U R2' U2' R\",\n    \"R2 U2 R2' U R2 U' R2' U R2 U2 R2' U2 R2 U2' R2' U' R2 U2' R\",\n    \"R2 U2 R2' U R2 U' R2' U R2 U2 R2' U2 R2' U2' R2 U' R2' U2' R\",\n    \"R2 U2 R2' U R2 U' R2' U R2 U' R2' U2' R2 U2 R2' U2 R2 U2' R\",\n    \"R2 U' R2' U R2 U R2' U2 R2' U R' U' R2' U2 R2 U R U' R\",\n    \"R2' U2 R2 U R2' U' R2 U R2' U2 R2 U2 R2 U2' R2' U' R2 U2' R\",\n    \"R2' U2 R2 U R2' U' R2 U R2' U2 R2 U2 R2' U2' R2 U' R2' U2' R\",\n    \"R2' U2 R2 U R2' U' R2 U R2' U' R2 U2' R2' U2 R2 U2 R2' U2' R\",\n    \"R2 U' R2' U R2 U2 R2' U2' R2 U R2' U R2 U2' R2' U2' R2 U2 R\",\n    \"R2 U' R2' U2' R2 U2' R2' U R2 U2 R2' U2 R2 U' R2' U R2 U R\",\n    \"R2 U' R2' U2' R2 U2' R2' U2 R2 U' R2' U R2 U2' R2' U2' R2 U2 R\",\n    \"R2 U' R2' U' R2 U R2' U2' R2' U R' U' R2' U2 R2 U R U' R\",\n    \"R2' U' R2 U R2' U2 R2 U2' R2' U R2 U R2' U2' R2 U2' R2' U2 R\",\n    \"R2' U' R2 U2' R2' U2' R2 U R2' U2 R2 U2 R2' U' R2 U R2' U R\",\n    \"R2' U' R2 U2' R2' U2' R2 U2 R2' U' R2 U R2' U2' R2 U2' R2' U2 R\",\n    \"R2' U' R2' U R U2 R2 U2' R2 U2 R U2' R U' R' U' R2' U R\",\n    \"R' U2' R2 U R' U' R' U2 R' U' R2 U R U' R' U' R2' U R\",\n    \"R' U' R U R U2 R' U' R' U R2 U2' R U2 R2' U R2 U2 R\",\n    \"R' U' R U R U2 R' U' R' U R2 U2' R2 U2 R2 U R2' U2 R\",\n    \"R' U2 R U R2' U2 R U2 R U' R2' U2 R U R U R' U R\",\n    \"R2' U2' R' U' R U R2 U2 R2' U' R' U R U2' R2 U2' R2' U2 R\",\n    \"R2' U R2 U R2' U R' U' R U2' R2 U R2' U R' U R U2' R\",\n    \"R2' U R2 U R2' U2' R2 U2 R2 U2 R2 U2' R U' R' U2' R2' U2 R\",\n    \"R U R U2 R' U' R2' U R2' U2' R' U' R U2' R2 U' R2' U2' R\",\n    \"R U R2' U R2' U2' R' U' R U2' R2' U2' R U' R' U2' R' U' R\",\n    \"R U R2' U2' R2' U R2 U' R2 U' R2 U2' R U2 R' U2' R2 U2 R\",\n    \"R U R2' U2' R2' U R2 U' R' U2 R U2' R2 U' R2 U2' R2 U2 R\",\n    \"R U2 R U2' R' U2 R' U R U R' U R2 U2' R2' U2' R U' R\",\n    \"R U' R U R' U R2' U2' R2' U R' U' R2' U R2' U' R2 U2 R\",\n    \"R U' R' U' R2' U2 R2 U R2' U' R2' U2' R2 U R2' U2 R2 U2' R\",\n    \"R2 U2 R2' U R2 U' R2' U R2 U' R2 U2' R2' U' R2 U2' R2' U2 R\",\n    \"R2 U2 R2' U R2 U' R2' U R2 U' R2' U2' R2 U' R2' U2' R2 U2 R\",\n    \"R2 U2' R U2' R U R U' R U R2' U R' U2 R2' U2 R U' R\",\n    \"R2 U2' R2 U' R2 U2' R U R U R2' U2' R' U R' U R2 U R\",\n    \"R2 U2' R2' U R2 U2' R2' U2' R2 U' R2' U2 R2 U R2' U R2 U R\",\n    \"R2 U' R2' U R2 U R' U2 R' U R U2 R2 U2' R' U' R U2' R\",\n    \"R2 U' R2' U' R2 U2 R2' U R2 U2 R2' U2 R2 U2' R2' U R2 U2 R\",\n    \"R2 U' R2' U' R2 U2 R2' U R2 U' R2' U2' R2 U2 R2' U' R2 U2 R\",\n    \"R2 U' R2' U' R2' U2 R2 U R2' U2 R2 U2 R2 U2' R2' U R2 U2 R\",\n    \"R2' U R' U2 R' U2' R2' U2 R2' U2' R' U' R' U' R2' U R2 U R\",\n    \"R2' U2 R2 U R2' U' R2 U R2' U' R2 U2' R2' U' R2 U2' R2' U2 R\",\n    \"R2' U2 R2 U R2' U' R2 U R2' U' R2' U2' R2 U' R2' U2' R2 U2 R\",\n    \"R2' U2' R2 U R2' U2' R2 U2' R2' U' R2 U2 R2' U R2 U R2' U R\",\n    \"R2' U' R2 U R2' U R2' U2 R' U R U2 R2' U2' R' U' R U2' R\",\n    \"R2' U' R2 U' R2 U2 R2' U R2 U2 R2' U2 R2' U2' R2 U R2' U2 R\",\n    \"R2' U' R2 U' R2' U2 R2 U R2' U2 R2 U2 R2' U2' R2 U R2' U2 R\",\n    \"R2' U' R2 U' R2' U2 R2 U R2' U' R2 U2' R2' U2 R2 U' R2' U2 R\",\n    \"R' U R U' R2' U2 R2 U2 R' U2' R2 U R2 U2 R2 U2' R U' R\",\n    \"R' U2' R U2 R U R2' U2 R2 U' R2' U' R2 U' R' U2 R' U2' R\",\n    \"R' U2' R2 U' R U2 R U R U' R' U2' R2 U2 R U2' R U R\",\n    \"R' U' R U2' R U2' R' U2 R' U R U2 R' U' R2 U' R2' U R\",\n    \"R U R2' U R2 U' R2' U' R' U' R2' U2' R2' U2 R' U R2' U2 R\",\n    \"R U2' R2 U R U2 R2' U' R2 U' R2 U R2 U2' R' U2' R' U2 R\",\n    \"R U' R U R2 U' R' U' R U R U R2 U' R U' R' U2 R\",\n    \"R U' R U R2' U2' R2' U2 R2 U' R' U R U' R' U' R' U2 R\",\n    \"R U' R U R2' U' R' U' R' U R U' R U2 R2' U2' R2 U2 R\",\n    \"R U' R U R2' U' R' U' R' U R U' R' U2 R2 U2' R2' U2 R\",\n    \"R U' R2' U2 R2' U R2 U' R2' U2' R2 U2' R2' U2 R' U R2' U2 R\",\n    \"R U' R' U2' R2 U2 R U' R U R' U' R' U2 R U2 R2 U2' R\",\n    \"R U' R' U2' R' U2 R U2' R' U' R2 U' R2' U R U2' R' U2 R\",\n    \"R2 U2 R2 U' R2 U' R2' U R U2' R U2 R U2' R2 U2' R2 U2 R\",\n    \"R2 U2 R' U2' R U' R' U2' R' U' R2 U2' R U R2 U R2' U2' R\",\n    \"R2 U2' R U2 R2' U2' R2 U2 R2 U' R U R2 U' R' U' R' U2 R\",\n    \"R2 U2' R' U2 R2 U2' R2' U2 R' U' R U R2 U' R' U' R' U2 R\",\n    \"R2 U' R2' U R2 U2 R2' U2' R2 U R2' U R2 U R2' U2 R2 U2' R\",\n    \"R2 U' R2' U2' R2 U2' R2' U R2 U2 R2' U2' R2 U' R2' U' R2 U R\",\n    \"R2 U' R2' U2' R2 U2' R2' U2 R2 U' R2' U R2 U R2' U2 R2 U2' R\",\n    \"R2 U' R2' U2' R2 U2' R2' U2' R2 U2' R2' U2 R2 U2 R2' U' R2 U R\",\n    \"R2 U' R2' U2' R2 U2' R2' U2' R2 U' R2' U' R2 U R2' U2' R2 U2' R\",\n    \"R2' U2 R' U R2' U' R2' U R2 U2 R2' U' R' U' R2' U2 R2' U2' R\",\n    \"R2' U' R2 U R2' U2 R2 U2' R2' U R2 U R2' U R2 U2 R2' U2' R\",\n    \"R2' U' R2 U2' R2' U2' R2 U R2' U2 R2 U2' R2' U' R2 U' R2' U R\",\n    \"R2' U' R2 U2' R2' U2' R2 U2 R2' U' R2 U R2' U R2 U2 R2' U2' R\",\n    \"R2' U' R2 U2' R2' U2' R2 U2' R2' U2' R2 U2 R2' U2 R2 U' R2' U R\",\n    \"R2' U' R2 U2' R2' U2' R2 U2' R2' U' R2 U' R2' U R2 U2' R2' U2' R\",\n    \"R' U R2 U R2' U' R2 U' R2 U' R2' U2' R2' U2 R' U R2' U2 R\",\n    \"R' U2' R U' R2' U2 R U R' U' R U2' R U2' R' U' R' U R\",\n    \"R' U' R U R2' U2 R2 U2' R2' U2' R2 U2' R' U R U2' R2' U2' R\",\n    \"R' U' R U2' R2' U2' R2 U2 R2' U R2 U2' R' U R U2' R2' U2' R\",\n    \"R' U' R2 U2' R' U2 R' U R U R' U2 R2 U2 R' U2' R' U2' R\",\n    \"R U2' R U2 R' U2' R' U2' R U R' U R2 U2' R2' U2' R U' R\",\n    \"R' U2' R2' U2' R2' U' R2 U2' R2 U R' U' R2 U2' R' U2 R' U R\",\n    \"R' U2' R' U2' R2 U' R2' U2' R U R' U' R2 U2' R' U2 R' U R\",\n    \"R U R U R' U R2' U' R2' U' R2' U R' U R U2' R U' R\",\n    \"R U2 R U R2' U2 R2 U' R' U' R U' R' U2 R' U2' R U2 R\",\n    \"R U2 R U2' R2' U2' R U2 R' U' R U' R' U R2 U2' R' U2 R\",\n    \"R U2 R' U R U' R U R' U2 R' U2 R2 U R2' U R2 U' R\",\n    \"R U2 R' U R U' R U R' U2 R' U2' R2 U R2' U' R2 U' R\",\n    \"R U2' R U' R U R U' R2' U2' R' U2 R2' U2 R U' R' U' R\",\n    \"R U2' R' U2 R U' R' U2 R' U2' R U' R U R2' U2 R2 U2' R\",\n    \"R U2' R' U' R U2 R' U' R U2 R U R2 U2 R2' U2 R2 U R\",\n    \"R U2' R' U' R2 U2 R2' U R U' R U2' R' U2 R' U' R U R\",\n    \"R2 U R2' U2 R2 U2' R2' U' R2 U R2' U2 R2 U' R2' U R2 U2' R\",\n    \"R2 U2 R2 U2 R2' U R2 U2 R2' U2 R2' U R2 U R2' U2' R2 U2' R\",\n    \"R2 U2 R2' U2 R2 U R2' U2 R2 U2 R2' U R2 U R2' U2' R2 U2' R\",\n    \"R2 U2 R2' U' R2 U R2' U R2 U2 R2' U' R2 U2' R2' U2' R2 U' R\",\n    \"R2 U2' R2 U2' R2' U' R2' U R2 U2 R2' U' R' U R2' U2' R2 U2 R\",\n    \"R2 U2' R2' U2' R2 U2 R2 U2 R2' U R2 U2 R2' U' R2' U R2 U2' R\",\n    \"R2 U2' R2' U2' R2 U2 R2' U2 R2 U R2' U2 R2 U' R2' U R2 U2' R\",\n    \"R2 U2' R2' U' R2 U' R2' U R2 U2' R2' U' R2 U2' R2' U2' R2 U' R\",\n    \"R2 U2' R2' U' R2 U' R2' U R2' U2' R2 U' R2' U2' R2 U2' R2 U' R\",\n    \"R2' U R U' R' U2' R U2' R U2' R2' U' R U' R U' R' U2 R\",\n    \"R2' U R2 U2 R2' U2' R2 U' R2' U R2 U2 R2' U' R2 U R2' U2' R\",\n    \"R2' U2 R2 U2 R2' U R2 U2 R2' U2 R2 U R2' U R2 U2' R2' U2' R\",\n    \"R2' U2 R2 U' R2' U R2 U R2' U2 R2 U' R2' U2' R2 U2' R2' U' R\",\n    \"R2' U2 R2' U R2' U2 R' U' R' U R' U2' R2' U R U' R2' U' R\",\n    \"R2' U2 R2' U2 R2 U R2' U2 R2 U2 R2 U R2' U R2 U2' R2' U2' R\",\n    \"R2' U2 R' U' R2 U R2' U2' R2' U2 R' U' R2' U R2' U R2' U2' R\",\n    \"R2' U2' R2 U2' R2' U2 R2 U2 R2' U R2 U2 R2' U' R2 U R2' U2' R\",\n    \"R2' U2' R2 U2' R2' U2 R2' U2 R2 U R2' U2 R2 U' R2 U R2' U2' R\",\n    \"R2' U2' R2 U' R2' U' R2 U R2 U2' R2' U' R2 U2' R2' U2' R2' U' R\",\n    \"R2' U2' R2 U' R2' U' R2 U R2' U2' R2 U' R2' U2' R2 U2' R2' U' R\",\n    \"R2' U2' R' U' R U R2 U2 R2' U' R' U R U R2 U2 R2' U2' R\",\n    \"R' U R U2 R2 U2' R2' U' R2 U2' R U2' R2 U R' U' R' U2 R\",\n    \"R' U R U2 R2' U' R2 U' R2' U' R2 U R2' U R U' R' U2 R\",\n    \"R' U R2' U R2' U R2' U' R2' U2' R' U2' R2 U2 R U2 R U' R\",\n    \"R' U R' U2 R2 U2' R2' U2 R2 U2 R2' U R2 U R' U' R' U2 R\",\n    \"R' U2 R U R2' U' R2 U2' R2' U2 R U' R U R' U' R' U2 R\",\n    \"R' U2' R U R' U R2 U2' R' U2 R' U2 R U2 R U2' R2' U2' R\",\n    \"R' U2' R U2' R U2' R' U2 R' U' R U R U2 R' U' R U2' R\",\n    \"R' U2' R U2' R' U R' U2' R U' R' U2' R U2' R U R' U2' R\",\n    \"R' U2' R U2' R' U2 R' U2 R U R' U2 R U' R U R' U2' R\",\n    \"R' U2' R U' R U R2' U R' U2' R2 U R2' U R2' U' R2' U2 R\",\n    \"R' U2' R U' R U2 R2' U' R2 U' R' U R U R2' U R2 U2' R\",\n    \"R' U2' R2 U R U2' R2 U2 R' U2' R U2 R U R2' U2 R' U R\",\n    \"R' U2' R2 U R2' U2' R U2 R U2' R' U2 R U2' R2' U2' R2 U2' R\",\n    \"R' U2' R2 U R' U2' R U2 R' U2' R' U2 R2 U2' R2' U2' R2 U2' R\",\n    \"R U R2' U2 R U2' R U2' R U2' R2' U' R U' R2' U2 R2' U2 R\",\n    \"R U R2' U' R2 U' R2' U2 R U' R U2 R2 U2' R2' U' R2 U2' R\",\n    \"R U R2' U' R2 U' R2' U2 R U' R U2 R2' U2' R2 U' R2' U2' R\",\n    \"R U R' U2 R' U2' R2 U' R' U R2' U2 R U R' U2 R U2' R\",\n    \"R U2 R U' R U R U R2 U2' R' U R U R2' U' R2' U2' R\",\n    \"R U2 R2' U' R2' U R' U' R2 U' R2' U R' U' R2' U2 R U2' R\",\n    \"R U' R U2 R' U' R2 U R2 U R2' U2' R2' U2 R U2 R' U R\",\n    \"R2 U R2' U2' R2 U R2 U2 R2' U R2 U2 R2' U R2' U2 R2 U' R\",\n    \"R2 U R2' U2' R2 U R2' U2 R2 U R2 U2 R2' U R2 U2 R2' U' R\",\n    \"R2 U R2' U2' R2 U R2' U2 R2 U R2' U2 R2 U R2' U2 R2 U' R\",\n    \"R2 U2 R U R' U' R2' U' R2 U R' U R2 U2' R' U' R' U2 R\",\n    \"R2 U2 R2 U' R' U R U R' U2 R' U R U2 R2' U2' R' U2 R\",\n    \"R2 U2 R2' U' R2' U R' U' R2' U' R2 U R U' R2 U2 R2 U2' R\",\n    \"R2 U2 R' U2' R' U2 R' U2 R2 U2 R2 U' R' U R U R2' U2 R\",\n    \"R2 U' R2' U R2 U2 R2' U' R2 U' R2' U' R2 U2 R2' U' R2 U2 R\",\n    \"R2' U R2 U2' R2' U R2 U2 R2' U R2 U2 R2' U R2 U2 R2' U' R\",\n    \"R2' U R2 U2' R2' U R2 U2 R2' U R2' U2 R2 U R2' U2 R2 U' R\",\n    \"R2' U R2 U2' R2' U R2' U2 R2 U R2' U2 R2 U R2 U2 R2' U' R\",\n    \"R2' U2 R2 U2 R' U2 R U2 R' U2' R' U2 R U R U' R2' U2 R\",\n    \"R2' U2 R2 U2 R' U' R' U2' R U2 R U2' R' U2' R U' R2' U2 R\",\n    \"R2' U2 R2 U' R U2 R2' U2' R' U' R2' U' R2' U R2 U' R2' U' R\",\n    \"R2' U2 R2' U2 R2' U2' R' U2' R U R U R U2' R' U2 R' U2 R\",\n    \"R2' U2 R2' U2 R2' U2' R' U2' R2' U R2' U R2 U' R' U' R' U' R\",\n    \"R2' U' R2 U R2' U2 R2 U' R2' U' R2 U' R2' U2 R2 U' R2' U2 R\",\n    \"R' U R' U' R2 U' R2' U2 R U' R U R' U R U2' R' U' R\",\n    \"R' U2 R U2 R' U' R U R' U R2 U R2' U2 R2 U2 R2' U R\",\n    \"R' U2 R U2' R U' R' U2 R U R' U' R' U2' R U2 R U' R\",\n    \"R' U' R2 U R2' U2 R2 U' R2' U' R2 U' R2' U2 R U' R' U2 R\",\n    \"R U R U2 R' U' R U' R' U' R2' U2 R2' U2' R2' U' R2 U2' R2 U2 R\",\n    \"R U R U2 R' U' R U' R' U' R2' U2 R' U2' R2 U' R2' U2' R U2 R\",\n    \"R U R2 U2 R2' U2 R U' R' U' R U R' U' R2 U2 R U R U' R\",\n    \"R U R2' U' R2' U' R U R U R2' U' R' U R' U' R' U' R U R\",\n    \"R U2' R2 U2' R2' U' R' U2' R2' U' R' U2 R2' U2 R2 U R2' U' R2' U2' R\",\n    \"R U2' R2' U2 R2' U2 R2 U R U' R2 U2' R2 U2 R U2 R' U R2 U2 R\",\n    \"R U2' R2' U2' R2 U R' U R2' U2' R2 U2 R U2 R' U' R2' U R U R\",\n    \"R2 U2 R2' U R2 U2 R U2 R2 U R2' U2 R2 U2 R2 U2' R2' U' R2 U2' R\",\n    \"R2 U2 R2' U R2 U2 R U2 R2 U R2' U2 R2 U2 R2' U2' R2 U' R2' U2' R\",\n    \"R2 U2 R2' U R2 U2 R U2 R2 U R2' U' R2 U2' R2' U2 R2 U2 R2' U2' R\",\n    \"R2 U2 R2' U R2 U' R2' U R2 U2 R U2 R2 U2' R2' U2 R2 U2 R2' U2' R\",\n    \"R2 U2 R2' U R2 U' R2' U2' R' U2' R2' U' R2 U2' R2' U2 R2' U2 R2 U2' R\",\n    \"R2 U2 R2' U R2 U' R2' U' R' U2 R2' U2' R2' U R2 U2' R2' U' R' U2' R\",\n    \"R2 U2 R2' U2' R' U2' R2' U' R2 U R2' U' R2 U2' R2' U2 R2' U2 R2 U2' R\",\n    \"R2 U2' R U' R2 U R2' U2 R2 U2 R2 U R2' U R2 U2' R U2' R' U2 R\",\n    \"R2 U' R2' U' R' U2 R2' U R2 U2 R' U R' U' R2' U2 R2 U R U' R\",\n    \"R2' U R' U2 R' U2' R2' U2 R2' U2' R' U' R2 U R2 U' R2' U' R2 U R\",\n    \"R2' U R' U' R2' U R U2' R U R U' R2' U2 R U' R2' U' R2 U R\",\n    \"R2' U2 R2 U R2' U2 R' U2 R2' U R2 U2 R2' U2 R2 U2' R2' U' R2 U2' R\",\n    \"R2' U2 R2 U R2' U2 R' U2 R2' U R2 U2 R2' U2 R2' U2' R2 U' R2' U2' R\",\n    \"R2' U2 R2 U R2' U2 R' U2 R2' U R2 U' R2' U2' R2 U2 R2' U2 R2 U2' R\",\n    \"R2' U2 R2 U R2' U' R2 U R2' U2 R' U2 R2' U2' R2 U2 R2' U2 R2 U2' R\",\n    \"R2' U2 R2 U R2' U' R2 U2' R U2' R2 U' R2' U2' R2 U2 R2 U2 R2' U2' R\",\n    \"R2' U2 R2 U2' R U2' R2 U' R2' U R2 U' R2' U2' R2 U2 R2 U2 R2' U2' R\",\n    \"R2' U2' R U2' R U2 R' U2 R U' R2 U2' R2 U R' U' R' U2 R2 U R\",\n    \"R' U R2' U2' R U R U2' R2 U R2 U' R U2' R U' R U' R' U R\",\n    \"R' U2 R2 U2' R' U' R U R' U R U R' U2' R U2 R2' U2 R2 U R\",\n    \"R' U2' R' U2' R U2 R2' U2' R2' U' R' U2' R U R' U' R2' U R U R\",\n    \"R' U2' R' U' R2' U2' R2' U R' U2 R U' R2 U2' R' U' R' U2' R2 U2 R\",\n    \"R' U' R U R2 U R2' U' R' U2' R U R2 U2 R2' U' R2 U2' R2 U2 R\",\n    \"R' U' R2' U R2 U2 R2 U2' R' U R U R2' U2' R2' U' R2' U2 R' U' R\",\n  ],\n  [\n    \"R2' U' R' U R U' R2 U' R2' U2 R2 U' R2 U' R U R\",\n    \"R2 U R2 U' R2 U R U2' R2 U2 R2 U' R2' U R2' U2' R\",\n    \"R2 U R2' U' R' U' R U R2 U2 R2' U' R' U R2' U2 R\",\n    \"R' U' R' U2' R U R2 U2' R2 U2' R U2 R2 U2 R2' U2 R\",\n    \"R' U' R' U2' R U R2 U' R2 U2 R U2' R2 U R2' U2 R\",\n    \"R2 U2' R2 U2' R2 U2 R U R' U2 R2' U2' R U' R2 U2 R\",\n    \"R' U' R U2' R U R U R2 U R2 U' R U' R' U' R\",\n    \"R' U' R U2' R' U2' R U2 R U R2' U2 R2 U2 R2' U R\",\n    \"R U' R' U2' R2 U2 R2' U R2 U' R2' U' R U R U2' R\",\n    \"R' U2 R' U R' U' R U2' R U2 R2 U' R' U R U R\",\n    \"R2 U2' R2 U' R U R2 U2 R' U2 R' U' R' U R2 U2' R\",\n    \"R2' U2' R U R U' R' U' R' U2' R U' R U2 R' U2' R\",\n    \"R2 U2' R2' U' R2 U R2' U' R2 U R2' U2 R2 U2' R2' U2' R2 U2 R\",\n    \"R2 U2' R2' U' R2 U R2' U' R2 U2' R2' U2' R2 U2 R2' U R2 U2 R\",\n    \"R2 U2' R2' U' R2 U R2' U' R2 U2' R2' U2' R2' U2 R2 U R2' U2 R\",\n    \"R2' U R2 U' R2' U' R2 U2' R2 U' R U R2 U2' R2' U' R' U R\",\n    \"R2' U2' R2 U' R2' U R2 U' R2' U R2 U2 R2' U2' R2 U2' R2' U2 R\",\n    \"R2' U2' R2 U' R2' U R2 U' R2' U2' R2 U2' R2 U2 R2' U R2 U2 R\",\n    \"R2' U2' R2 U' R2' U R2 U' R2' U2' R2 U2' R2' U2 R2 U R2' U2 R\",\n    \"R2 U' R2' U' R2 U2 R2' U2' R2' U2' R2' U2 R' U R U2 R2 U2' R\",\n    \"R2 U' R2' U' R2 U' R U R' U2 R2' U' R2 U' R U' R' U2 R\",\n    \"R2 U2 R U R' U' R2' U2' R2 U R U' R' U2 R2' U2 R2 U2' R\",\n    \"R U2' R' U' R2 U2' R' U2' R' U R2 U2' R' U' R' U' R U' R\",\n    \"R U R' U' R' U2' R U R U' R2' U2 R2' U2' R2' U' R2 U2' R\",\n    \"R U R' U' R' U2' R U R U' R2' U2 R' U2' R2 U' R2' U2' R\",\n    \"R U2 R2' U' R U R U2' R U R2' U' R' U R U R2 U' R\",\n    \"R2 U R2 U' R' U2' R2' U2 R2' U2' R' U2 R' U R U R2 U' R\",\n    \"R2 U R2' U2 R2 U2 R2' U2' R2 U R2' U' R2 U2 R2' U2 R2 U2' R\",\n    \"R2 U R2' U2 R2 U2 R2' U' R2 U2' R2' U2' R2 U R2' U' R2 U' R\",\n    \"R2 U R2' U' R2 U2' R2' U2 R2 U' R2' U' R2 U2 R2' U2 R2 U2' R\",\n    \"R2' U R2 U R2' U' R2 U2 R2 U' R U R2 U2' R2' U' R' U R\",\n    \"R2' U R2 U2 R2' U2 R2 U2' R2' U R2 U' R2' U2 R2 U2 R2' U2' R\",\n    \"R2' U R2 U2 R2' U2 R2 U' R2' U2' R2 U2' R2' U R2 U' R2' U' R\",\n    \"R2' U R2 U' R2' U2' R2 U2 R2' U' R2 U' R2' U2 R2 U2 R2' U2' R\",\n    \"R U R' U2 R' U2 R U2' R U' R' U2' R U R2' U R2 U' R\",\n    \"R U2 R2' U R' U2' R' U' R' U R U2 R2' U2' R' U2 R' U' R\",\n    \"R U2 R' U2' R' U' R2 U2' R2' U R2 U R2' U R U2' R U2 R\",\n    \"R U' R' U R2 U2' R2' U2' R U2 R2' U' R2' U2' R2' U2 R' U R\",\n    \"R2 U R2' U R2 U2' R2' U' R2 U R2' U2 R2 U2' R2' U R2 U2' R\",\n    \"R2 U R2' U R2 U2' R2' U' R2 U2' R2' U2' R2 U2 R2' U' R2 U2' R\",\n    \"R2 U R2' U R2' U2' R2 U' R2' U2' R2 U2' R2 U2 R2' U' R2 U2' R\",\n    \"R2 U R2' U' R2 U' R2 U2' R U' R' U2' R2 U2 R U R' U2 R\",\n    \"R2 U2 R2' U' R2 U2 R2' U2 R2 U R2' U2' R2 U' R2' U' R2 U' R\",\n    \"R2 U2' R2' U' R2 U R2' U' R2 U R2 U2 R2' U R2 U2 R2' U2' R\",\n    \"R2 U2' R2' U' R2 U R2' U' R2 U R2' U2 R2 U R2' U2 R2 U2' R\",\n    \"R2 U' R U2' R U2 R2 U2' R2 U2 R U R U R2 U' R2' U' R\",\n    \"R2' U R2 U R2 U2' R2' U' R2 U2' R2' U2' R2' U2 R2 U' R2' U2' R\",\n    \"R2' U R2 U R2' U2' R2 U' R2' U R2 U2 R2' U2' R2 U R2' U2' R\",\n    \"R2' U R2 U R2' U2' R2 U' R2' U2' R2 U2' R2' U2 R2 U' R2' U2' R\",\n    \"R2' U R2 U' R2' U' R U2' R U' R' U2' R2' U2 R U R' U2 R\",\n    \"R2' U2 R2 U' R2' U2 R2 U2 R2' U R2 U2' R2' U' R2 U' R2' U' R\",\n    \"R2' U2 R2' U R2' U2 R' U' R' U' R2 U2 R U' R U' R2' U' R\",\n    \"R2' U2 R' U2 R' U' R' U R' U' R2 U' R U2' R2 U2' R' U R\",\n    \"R2' U2' R2 U' R2' U R2 U' R2' U R2 U2 R2' U R2 U2 R2' U2' R\",\n    \"R2' U2' R2 U' R2' U R2 U' R2' U R2' U2 R2 U R2' U2 R2 U2' R\",\n    \"R' U R U R2 U2' R2' U' R2 U R2 U2 R2' U' R2 U2' R2' U2 R\",\n    \"R' U R' U' R U' R2 U2 R2 U' R U R2 U' R2 U R2' U2' R\",\n    \"R' U2' R' U2 R U2' R U' R' U' R U' R2' U2 R2 U2 R' U R\",\n    \"R' U' R2 U2 R2 U' R2' U R U2' R' U2 R2' U R2' U2 R2' U2' R\",\n    \"R' U' R2 U2 R2 U' R2' U R2' U R2' U2 R' U2' R U2 R2' U2' R\",\n    \"R' U' R2 U' R2 U2 R U R' U2 R2 U2 R' U R U2 R U R\",\n    \"R' U' R' U2' R U R2 U' R2 U2 R U R' U2 R2' U R2 U2 R\",\n    \"R U R2' U' R2 U2' R2' U R2 U R2' U R2 U2' R' U R U2' R\",\n    \"R U2' R' U2 R' U R U2' R' U' R U R U2 R' U2' R' U R\",\n    \"R U2' R' U2' R U R' U' R U' R2' U' R2 U2' R2' U2' R2 U' R\",\n    \"R U' R U R2' U R2 U2' R' U R' U' R U' R' U2 R U R\",\n    \"R2 U R2' U' R2 U2' R2' U R2 U R2' U R2 U2' R2' U R2 U2' R\",\n    \"R2 U2' R2 U2' R2 U2 R U2 R2 U' R2 U' R2' U R U R U R\",\n    \"R2 U2' R2 U2' R2 U2 R U2 R' U' R' U' R' U2 R U2' R U2' R\",\n    \"R2 U2' R2' U R' U2' R2 U2 R U R2 U R2 U' R2' U R2 U R\",\n    \"R2 U2' R2' U2' R U R U2 R' U2' R' U2 R U2 R' U R2 U2' R\",\n    \"R2 U2' R2' U2' R U2' R' U2' R U2 R U2' R' U' R' U R2 U2' R\",\n    \"R2 U' R2' U2 R2 U' R2 U2' R2' U' R2 U2' R2' U' R2' U2' R2 U R\",\n    \"R2 U' R2' U2 R2 U' R2' U2' R2 U' R2 U2' R2' U' R2 U2' R2' U R\",\n    \"R2 U' R2' U2 R2 U' R2' U2' R2 U' R2' U2' R2 U' R2' U2' R2 U R\",\n    \"R2' U R2 U' R2' U2' R2 U R2' U R2 U R2' U2' R2 U R2' U2' R\",\n    \"R2' U2' R U2 R U2' R U2' R2' U2' R2' U R U' R' U' R2 U2' R\",\n    \"R2' U2' R2 U R2 U' R U R2 U R2' U' R' U R2' U2' R2' U2 R\",\n    \"R2' U2' R2' U R U' R' U' R U2' R U' R' U2' R2 U2 R U2' R\",\n    \"R2' U2' R' U' R U R2 U R2' U' R U' R2' U2 R U R U2' R\",\n    \"R2' U' R2 U2 R2' U' R2 U2' R2' U' R2 U2' R2' U' R2 U2' R2' U R\",\n    \"R2' U' R2 U2 R2' U' R2 U2' R2' U' R2' U2' R2 U' R2' U2' R2 U R\",\n    \"R2' U' R2 U2 R2' U' R2' U2' R2 U' R2' U2' R2 U' R2 U2' R2' U R\",\n    \"R' U R' U2' R U R2' U' R2' U' R2 U2 R2 U2' R' U2' R U' R\",\n    \"R' U2' R2 U R2 U' R U R2' U R2 U' R U R2 U2' R' U2 R\",\n    \"R' U2' R' U R' U' R' U' R2' U2 R U' R' U' R2 U R2 U2 R\",\n    \"R' U' R U2' R U2 R2' U R U' R2 U2' R' U' R U2' R' U2 R\",\n    \"R' U' R2 U R2' U R2 U2' R' U R' U2' R2 U2 R2' U R2 U2 R\",\n    \"R' U' R2 U R2' U R2 U2' R' U R' U2' R2' U2 R2 U R2' U2 R\",\n    \"R' U' R2 U2' R' U2 R' U2 R' U2 R2 U R' U R2 U2' R2 U2' R\",\n    \"R U2 R2' U' R U2 R' U2' R U2 R U2' R2' U2 R2 U2 R2' U2 R\",\n    \"R U2 R2' U' R2 U2 R' U2' R' U2 R U2' R' U2 R2 U2 R2' U2 R\",\n    \"R U2 R2' U' R' U2 R2' U2' R U2 R' U2' R' U' R2 U2' R U' R\",\n    \"R U2 R' U R' U2' R2 U R2' U R U' R' U' R2 U' R2' U2 R\",\n    \"R U2 R' U R' U' R2 U' R U2 R2' U' R2 U' R2 U R2 U2' R\",\n    \"R U2 R' U2 R U2' R U2' R' U' R U2' R' U R' U' R U2 R\",\n    \"R U2 R' U2 R U' R U2 R' U R U2 R' U2 R' U' R U2 R\",\n    \"R U2 R' U2 R' U2 R U2' R U R' U' R' U2' R U R' U2 R\",\n    \"R U2 R' U' R U' R2' U2 R U2' R U2' R' U2' R' U2 R2 U2 R\",\n    \"R U2' R' U' R2 U R2' U2 R2 U2' R' U R' U' R U R U2' R\",\n    \"R U' R U2' R2' U2 R2 U2' R2' U2' R2 U' R2' U' R U R U2' R\",\n    \"R U' R2 U' R2 U' R2 U R2 U2 R U2 R2' U2' R' U2' R' U R\",\n    \"R U' R' U2' R2 U R2' U R2 U R2' U' R2 U' R' U R U2' R\",\n    \"R U' R' U2' R2' U2 R2 U R2' U2 R' U2 R2' U' R U R U2' R\",\n    \"R2 U2 R U R' U' R2' U2' R2 U R U' R' U' R2' U2' R2 U2 R\",\n    \"R2 U2 R2' U R2 U R2' U' R2 U2 R2' U R2 U2 R2' U2 R2 U R\",\n    \"R2 U2 R2' U R2 U R2' U' R2' U2 R2 U R2' U2 R2 U2 R2 U R\",\n    \"R2 U2 R2' U2 R2 U2' R2 U2' R2' U' R2 U2' R2' U R2' U' R2 U2 R\",\n    \"R2 U2 R2' U2 R2 U2' R2' U2' R2 U' R2' U2' R2 U R2' U' R2 U2 R\",\n    \"R2 U2' R U R2' U' R2 U2 R2 U2' R U R2 U' R2 U' R2 U2 R\",\n    \"R2 U2' R2 U2' R2' U' R2 U2' R2' U2' R2' U' R2 U' R2' U2 R2 U2 R\",\n    \"R2 U2' R2 U' R2 U2' R U R U' R U2 R2 U' R' U R2 U R\",\n    \"R2 U2' R2' U R2 U' R2' U' R2 U2' R2' U R2 U2 R2' U2 R2 U R\",\n    \"R2 U2' R2' U2' R2 U' R2' U2' R2 U2' R2' U' R2 U' R2' U2 R2 U2 R\",\n    \"R2 U' R2' U2' R2 U2 R2' U R2 U' R2' U2' R2 U R2' U' R2 U2 R\",\n    \"R2 U' R' U R U2 R' U2 R' U2 R2 U R' U R' U R U2' R\",\n    \"R2' U2 R2 U R2' U R2 U' R2 U2 R2' U R2 U2 R2' U2 R2' U R\",\n    \"R2' U2 R2 U R2' U R2 U' R2' U2 R2 U R2' U2 R2 U2 R2' U R\",\n    \"R2' U2 R2 U2 R2' U2' R2 U2' R2' U' R2 U2' R2' U R2 U' R2' U2 R\",\n    \"R2' U2 R2 U2 R2' U2' R2' U2' R2 U' R2' U2' R2 U R2 U' R2' U2 R\",\n    \"R2' U2 R2' U2 R2 U R2 U' R2' U2' R2 U R U' R2 U2 R2' U2' R\",\n    \"R2' U2' R2 U R2' U' R2 U' R2' U2' R2 U R2' U2 R2 U2 R2' U R\",\n    \"R2' U2' R2 U2' R2' U' R2 U2' R2' U2' R2 U' R2' U' R2 U2 R2' U2 R\",\n    \"R2' U2' R2' U2' R2 U' R2' U2' R2 U2' R2 U' R2' U' R2 U2 R2' U2 R\",\n    \"R2' U' R2 U2' R2' U2 R2 U R2' U' R2 U2' R2' U R2 U' R2' U2 R\",\n    \"R' U2 R U R2' U2' R2 U' R' U R' U2 R U2' R U R' U' R\",\n    \"R' U2 R U R' U2' R U R' U2' R' U' R2' U2' R2 U2' R2' U' R\",\n    \"R' U2 R U2' R' U R U2' R U2 R' U R' U' R2 U2' R2' U2 R\",\n    \"R' U2 R' U R' U' R' U R2 U2 R U2' R2 U2' R' U R U R\",\n    \"R' U2' R U' R' U R' U' R U2' R U2 R2' U' R2 U R2' U R\",\n    \"R' U2' R U' R' U R' U' R U2' R U2' R2' U' R2 U' R2' U R\",\n    \"R' U2' R' U2 R2 U2 R' U2' R U R' U R U' R2' U2 R U2' R\",\n    \"R' U2' R' U' R2 U2' R2' U R U R' U R U2' R U2 R' U2' R\",\n    \"R' U' R' U' R U' R2 U R2 U R2 U' R U' R' U2 R' U R\",\n    \"R U2 R U2 R2' U R2 U2 R' U' R U R2' U2 R U2' R U' R\",\n    \"R U2 R2 U2 R2 U R2' U2 R2' U' R U R2' U2 R U2' R U' R\",\n    \"R' U2 R' U2' R U2 R U2 R' U' R U' R2' U2 R2 U2 R' U R\",\n    \"R U R2' U2 R U2' R U' R' U' R U2' R2' U2' R U2 R U2 R\",\n    \"R U R' U2 R2 U2 R2' U2' R2 U' R2' U2 R U' R' U2 R2 U2 R\",\n    \"R U R' U' R2 U2' R2' U2 R2 U2 R2' U2 R U' R' U2 R2 U2 R\",\n    \"R U2 R' U R2 U2' R' U' R U R' U2 R' U2 R U R U' R\",\n    \"R U' R2' U' R2 U R2' U R2' U R2 U2 R2 U2' R U' R2 U2' R\",\n    \"R2 U R2' U2 R2 U2 R2' U2 R2 U R2' U R2 U' R2' U2 R2 U2 R\",\n    \"R2 U R2' U2 R2 U2 R2' U2 R2 U2 R2' U2' R2 U2' R2' U R2 U' R\",\n    \"R2 U R2' U2 R2 U2 R2' U2' R2 U R2' U' R2 U' R2' U2' R2 U2 R\",\n    \"R2 U R2' U2 R2 U2 R2' U' R2 U2' R2' U2 R2 U R2' U R2 U' R\",\n    \"R2 U R2' U' R2 U2' R2' U2 R2 U' R2' U' R2 U' R2' U2' R2 U2 R\",\n    \"R2 U2' R U' R2 U R2 U' R2' U2' R2 U R U R2 U2' R2 U2 R\",\n    \"R2' U R2 U2 R2' U2 R2 U2 R2' U R2 U R2' U' R2 U2 R2' U2 R\",\n    \"R2' U R2 U2 R2' U2 R2 U2 R2' U2 R2 U2' R2' U2' R2 U R2' U' R\",\n    \"R2' U R2 U2 R2' U2 R2 U2' R2' U R2 U' R2' U' R2 U2' R2' U2 R\",\n    \"R2' U R2 U2 R2' U2 R2 U' R2' U2' R2 U2 R2' U R2 U R2' U' R\",\n    \"R2' U R2 U' R2' U2' R2 U2 R2' U' R2 U' R2' U' R2 U2' R2' U2 R\",\n    \"R2' U2 R U2' R2' U2 R2 U2' R U R' U' R2' U R U R U2' R\",\n    \"R2' U2 R' U2' R2 U2 R2' U2' R2' U R' U' R2' U R U R U2' R\",\n    \"R2' U2' R U2 R' U R U2 R U R2' U2 R' U' R2' U' R2 U2 R\",\n    \"R2' U2' R2' U R2' U R2 U' R' U2 R' U2' R' U2 R2' U2 R2' U2' R\",\n    \"R' U R U2 R U2' R' U2 R U R2' U R2 U' R' U2 R U2' R\",\n    \"R' U R U2 R2' U2' R' U R' U' R U R U2' R' U2' R2' U2 R\",\n    \"R' U R2 U2' R2 U' R2' U R2 U2 R2' U2 R2 U2' R U' R2 U2' R\",\n    \"R' U R' U' R2 U R U R U' R' U R U2' R2' U2 R2 U2' R\",\n    \"R' U R' U' R2 U R U R U' R' U R' U2' R2 U2 R2' U2' R\",\n    \"R' U R' U' R2 U2 R2 U2' R2' U R U' R' U R U R U2' R\",\n    \"R' U R' U' R2' U R U R' U' R' U' R2' U R' U R U2' R\",\n    \"R' U2 R2' U' R' U2' R2 U R2' U R2' U' R2' U2 R U2 R U2' R\",\n    \"R' U' R2 U' R2' U R2 U R U R2 U2 R2 U2' R U' R2 U2' R\",\n    \"R U R2 U' R2' U2' R2' U2 R U' R' U' R2 U2 R2 U R2 U2' R U R\",\n    \"R U R' U' R2' U' R2 U R U2 R' U' R2' U2' R2 U R2' U2 R2' U2' R\",\n    \"R U2 R U R2 U2 R2 U' R U2' R' U R2' U2 R U R U2 R2' U2' R\",\n    \"R U2 R U2 R' U2' R2 U2 R2 U R U2 R' U' R U R2 U' R' U' R\",\n    \"R U2' R2' U2 R U R' U' R U' R' U' R U2 R' U2' R2 U2' R2' U' R\",\n    \"R U' R2 U2 R' U' R' U2 R2' U' R2' U R' U2 R' U R' U R U' R\",\n    \"R2 U2 R' U2 R' U2' R U2' R' U R2' U2 R2' U' R U R U2' R2' U' R\",\n    \"R2 U2' R2' U2 R' U2 R2' U R2 U' R2' U R2 U2 R2' U2' R2' U2' R2 U2 R\",\n    \"R2 U2' R2' U' R2 U R2' U2 R' U2 R2' U R2 U2 R2' U2' R2' U2' R2 U2 R\",\n    \"R2 U2' R2' U' R2 U R2' U' R2 U2' R U2' R2 U2 R2' U2' R2 U2' R2' U2 R\",\n    \"R2 U2' R2' U' R2 U2' R U2' R2 U' R2' U R2 U2 R2' U2' R2 U2' R2' U2 R\",\n    \"R2 U2' R2' U' R2 U2' R U2' R2 U' R2' U2' R2 U2' R2 U2 R2' U R2 U2 R\",\n    \"R2 U2' R2' U' R2 U2' R U2' R2 U' R2' U2' R2 U2' R2' U2 R2 U R2' U2 R\",\n    \"R2 U' R U R2 U' R' U2 R' U' R' U R2 U2' R' U R2 U R2' U' R\",\n    \"R2 U' R U2' R U2 R2 U2' R2 U2 R U R2' U' R2' U R2 U R2' U' R\",\n    \"R2' U R2 U R U2' R2 U' R2' U2' R U' R U R2 U2' R2' U' R' U R\",\n    \"R2' U2 R' U R2' U' R2 U2' R2' U2' R2' U' R2 U' R2' U2 R' U2 R U2' R\",\n    \"R2' U2' R2 U2 R U2 R2 U R2' U' R2 U R2' U2 R2 U2' R2 U2' R2' U2 R\",\n    \"R2' U2' R2 U' R2' U R2 U R U2' R2 U2 R2 U' R2' U2 R2 U R U2 R\",\n    \"R2' U2' R2 U' R2' U R2 U2 R U2 R2 U R2' U2 R2 U2' R2 U2' R2' U2 R\",\n    \"R2' U2' R2 U' R2' U R2 U' R2' U2' R' U2' R2' U2 R2 U2' R2' U2' R2 U2 R\",\n    \"R2' U2' R2 U' R2' U2' R' U2' R2' U' R2 U R2' U2 R2 U2' R2' U2' R2 U2 R\",\n    \"R2' U2' R2 U' R2' U2' R' U2' R2' U' R2 U2' R2' U2' R2 U2 R2' U R2 U2 R\",\n    \"R2' U2' R2 U' R2' U2' R' U2' R2' U' R2 U2' R2' U2' R2' U2 R2 U R2' U2 R\",\n    \"R' U2 R2 U2 R2' U' R U' R2 U2 R2' U2' R' U2' R U R2 U' R' U' R\",\n    \"R' U2 R2 U2' R2 U2' R2' U' R' U R2' U2 R2' U2' R' U2' R U' R2' U2' R\",\n    \"R' U2 R2' U2 R2 U R U2 R2 U R U2' R2 U2' R2' U' R2 U R2 U2 R\",\n    \"R' U' R2 U R2 U R' U' R' U' R2 U R U' R U R U R' U' R\",\n    \"R' U' R2' U2' R2 U2' R' U R U R' U' R U R2' U2' R' U' R' U R\",\n    \"R' U' R' U2' R U R' U R U R2 U2' R U2 R2' U R2 U2 R' U2' R\",\n    \"R' U' R' U2' R U R' U R U R2 U2' R2 U2 R2 U R2' U2 R2' U2' R\",\n  ],\n  [\n    \"R2 U2' R2' U' R2 U R2' U2 R2 U2 R2' U2 R2 U2' R\",\n    \"R2' U2' R2 U' R2' U R2 U2 R2' U2 R2 U2 R2' U2' R\",\n    \"R2 U2' R2' U2 R2 U R2' U2' R2 U' R2' U R2 U2 R\",\n    \"R2' U2' R2 U2 R2' U R2 U2' R2' U' R2 U R2' U2 R\",\n    \"R' U' R U2' R2' U2' R2 U R' U2' R' U2' R U2 R\",\n    \"R U R' U2 R2 U2 R2' U' R U2 R U2 R' U2' R\",\n    \"R2 U2 R2' U2' R2 U' R2' U2 R2 U R2' U' R2 U2' R\",\n    \"R2' U2 R2 U2' R2' U' R2 U2 R2' U R2 U' R2' U2' R\",\n    \"R U2 R U2' R' U2' R' U R2 U2' R2' U2' R U' R\",\n    \"R2 U2 R2' U R2 U' R2' U2' R2 U R2' U2 R2 U2' R\",\n    \"R2 U2 R2' U R2 U' R2' U2' R2 U2' R2' U2' R2 U2 R\",\n    \"R2' U2 R2 U R2' U' R2 U2' R2' U R2 U2 R2' U2' R\",\n    \"R2' U2 R2 U R2' U' R2 U2' R2' U2' R2 U2' R2' U2 R\",\n    \"R2 U2 R2' U2' R2 U2' R2' U2' R2 U' R2' U R2 U2 R\",\n    \"R2 U2' R2' U2 R2 U2 R2' U2 R2 U R2' U' R2 U2' R\",\n    \"R2' U2 R2 U2' R2' U2' R2 U2' R2' U' R2 U R2' U2 R\",\n    \"R2' U2' R2 U2 R2' U2 R2 U2 R2' U R2 U' R2' U2' R\",\n    \"R2 U2' R2' U2 R' U2 R2' U R2 U2 R2' U' R2' U2' R2 U2 R\",\n    \"R2 U2' R2' U' R2 U R2' U' R' U2' R2' U' R2 U2' R2' U2 R\",\n    \"R2 U2' R2' U' R2 U2' R U2' R2 U2 R2' U' R2 U2' R2' U2 R\",\n    \"R2' U2' R2 U2 R U2 R2 U R2' U2 R2 U' R2 U2' R2' U2 R\",\n    \"R2' U2' R2 U' R2' U R2 U' R U2' R2 U' R2' U2' R2 U2 R\",\n    \"R2' U2' R2 U' R2' U2' R' U2' R2' U2 R2 U' R2' U2' R2 U2 R\",\n    \"R2 U2' R2' U2 R' U2 R2' U R2 U2 R2' U2 R2' U2 R2 U2' R\",\n    \"R2 U2' R2' U' R2 U2' R U2' R2 U2 R2' U2 R2 U2 R2' U2' R\",\n    \"R2' U2' R2 U2 R U2 R2 U R2' U2 R2 U2 R2 U2 R2' U2' R\",\n    \"R2' U2' R2 U' R2' U2' R' U2' R2' U2 R2 U2 R2' U2 R2 U2' R\",\n    \"R2 U2' R2 U2 R2' U R2 U2 R U R2 U' R2' U R2 U2 R\",\n    \"R2 U2' R2' U2 R2 U R2 U2' R2' U' R2 U2' R U2' R2 U2 R\",\n    \"R2 U2' R2' U2 R2 U R2' U2' R2 U2 R U2 R2 U R2' U2 R\",\n    \"R2' U2' R2 U2 R2' U R2 U2' R2' U2 R' U2 R2' U R2 U2 R\",\n    \"R2' U2' R2 U2 R2' U R2' U2' R2 U' R2' U2' R' U2' R2' U2 R\",\n    \"R2' U2' R2' U2 R2 U R2' U2 R' U R2' U' R2 U R2' U2 R\",\n    \"R2 U2 R2 U2' R2' U' R2 U2' R U' R2 U R2' U' R2 U2' R\",\n    \"R2 U2 R2' U2' R2 U' R2 U2 R2' U R2 U2 R U2 R2 U2' R\",\n    \"R2 U2 R2' U2' R2 U' R2' U2 R2 U2' R U2' R2 U' R2' U2' R\",\n    \"R2' U2 R2 U2' R2' U' R2 U2 R2' U2' R' U2' R2' U' R2 U2' R\",\n    \"R2' U2 R2 U2' R2' U' R2' U2 R2 U R2' U2 R' U2 R2' U2' R\",\n    \"R2' U2 R2' U2' R2 U' R2' U2' R' U' R2' U R2 U' R2' U2' R\",\n    \"R2 U2 R2' U R2 U2 R U2 R2 U2' R2' U R2 U2 R2' U2' R\",\n    \"R2 U2 R2' U R2 U2 R U2 R2 U2' R2' U2' R2 U2' R2' U2 R\",\n    \"R2 U2 R2' U R2 U' R2' U R' U2 R2' U R2 U2 R2' U2' R\",\n    \"R2 U2 R2' U2' R' U2' R2' U' R2 U2' R2' U R2' U2 R2 U2' R\",\n    \"R2 U2 R2' U2' R' U2' R2' U' R2 U2' R2' U2' R2' U2' R2 U2 R\",\n    \"R2' U2 R2 U R2' U2 R' U2 R2' U2' R2 U R2' U2 R2 U2' R\",\n    \"R2' U2 R2 U R2' U2 R' U2 R2' U2' R2 U2' R2' U2' R2 U2 R\",\n    \"R2' U2 R2 U R2' U' R2 U R U2 R2 U R2' U2 R2 U2' R\",\n    \"R2' U2 R2 U2' R U2' R2 U' R2' U2' R2 U R2 U2 R2' U2' R\",\n    \"R2' U2 R2 U2' R U2' R2 U' R2' U2' R2 U2' R2 U2' R2' U2 R\",\n    \"R2 U2 R2' U2' R2 U2' R2 U2' R2' U' R2 U2' R U2' R2 U2 R\",\n    \"R2 U2 R2' U2' R2 U2' R2' U2' R2 U2 R U2 R2 U R2' U2 R\",\n    \"R2 U2' R2' U2 R2 U2 R2 U2 R2' U R2 U2 R U2 R2 U2' R\",\n    \"R2 U2' R2' U2 R2 U2 R2' U2 R2 U2' R U2' R2 U' R2' U2' R\",\n    \"R2' U2 R2 U2' R2' U2' R2 U2' R2' U2 R' U2 R2' U R2 U2 R\",\n    \"R2' U2 R2 U2' R2' U2' R2' U2' R2 U' R2' U2' R' U2' R2' U2 R\",\n    \"R2' U2' R2 U2 R2' U2 R2 U2 R2' U2' R' U2' R2' U' R2 U2' R\",\n    \"R2' U2' R2 U2 R2' U2 R2' U2 R2 U R2' U2 R' U2 R2' U2' R\",\n    \"R U R2' U2 R' U2' R2' U' R2' U2 R U' R2' U2 R2 U2 R' U R\",\n    \"R U2' R2 U' R2 U' R U' R' U2 R2' U R2' U R' U2 R U2 R\",\n    \"R U2' R2' U' R U' R U' R' U2 R' U R2 U R' U2 R U2 R\",\n    \"R2 U2' R2' U' R2 U R2' U' R' U2' R2' U2 R2 U2 R2' U2' R2 U2 R\",\n    \"R2 U2' R2' U' R2 U2' R U2' R2 U' R U2' R2 U' R2' U2' R2 U2 R\",\n    \"R2 U2' R2' U' R2 U2' R2 U2' R2 U2 R2' U' R2 U' R' U' R' U2 R\",\n    \"R2 U2' R2' U' R2 U2' R2' U2' R2 U2 R2' U2' R2 U R2' U2' R2 U2 R\",\n    \"R2 U2' R2' U' R2 U2' R2' U2' R2' U2 R2 U2' R2' U R2 U2' R2' U2 R\",\n    \"R2 U' R2' U' R2 U' R2' U R2 U R2' U R2 U' R2' U2' R2 U2 R\",\n    \"R2 U' R2' U' R2 U' R2' U2 R2 U R2' U' R2 U' R2' U' R2 U2 R\",\n    \"R2' U2' R2 U' R2' U R2 U' R U2' R2 U2 R2' U2 R2 U2' R2' U2 R\",\n    \"R2' U2' R2 U' R2' U2' R U2' R2 U2 R2' U' R2 U' R' U' R' U2 R\",\n    \"R2' U2' R2 U' R2' U2' R2 U2' R2 U2 R2' U2' R2 U R2' U2' R2 U2 R\",\n    \"R2' U2' R2 U' R2' U2' R2 U2' R2' U2 R2 U2' R2' U R2 U2' R2' U2 R\",\n    \"R2' U2' R2 U' R2' U2' R' U2' R2' U' R' U2' R2' U' R2 U2' R2' U2 R\",\n    \"R2' U' R2 U' R2' U' R2 U R2' U R2 U R2' U' R2 U2' R2' U2 R\",\n    \"R2' U' R2 U' R2' U' R2 U2 R2' U R2 U' R2' U' R2 U' R2' U2 R\",\n    \"R' U2' R' U2 R U2 R U R2' U2' R2 U2 R2' U2' R2 U' R' U R\",\n    \"R' U' R U2' R U2 R2' U R U2' R' U' R2 U' R2' U2 R2 U2' R\",\n  ],\n  [\n    \"R U2 R2' U2' R' U' R U2' R2 U2 R2 U' R2 U R2' U R\",\n    \"R2 U2' R2' U' R2 U R2 U' R U R2 U2 R2' U' R' U R\",\n    \"R2 U2 R U R' U2 R2' U' R2 U' R U' R2 U R2 U R\",\n    \"R2 U R2' U2 R2 U' R' U R U2 R' U2' R' U2 R U2 R\",\n    \"R2 U R2' U2 R2 U' R' U2' R' U2' R U2 R U2' R' U' R\",\n    \"R' U2 R U2 R' U2' R' U2 R U R' U' R2 U2 R2' U R\",\n    \"R' U' R' U2' R U2 R U2' R' U2' R' U' R2 U2 R2' U R\",\n    \"R2' U2' R2' U2 R' U R U2 R2 U2' R' U2' R2' U R2 U R\",\n    \"R U R' U' R2' U2 R2 U R U' R2 U R2 U' R2' U2' R\",\n    \"R2 U R2' U R2 U' R2 U2 R2 U2' R U' R' U2' R2' U2 R\",\n    \"R2' U R2 U R2 U' R U' R2 U' R2' U2 R' U R U2 R\",\n    \"R2' U R2 U R2' U2' R' U2' R2 U2 R U R' U2 R2' U2' R\",\n    \"R2 U2' R2 U2 R U R' U2 R U R U2 R U R' U2 R U2' R\",\n    \"R2 U2' R2' U' R U R2' U' R' U R2' U' R' U2' R2' U' R' U R\",\n    \"R2 U2' R2' U' R2 U2' R2' U' R' U2 R' U2' R U' R' U2' R U2 R\",\n    \"R2 U2' R2' U' R2 U2' R2' U' R' U2' R' U2 R U R' U2 R U2' R\",\n    \"R2 U2' R2' U' R' U2' R U' R' U2' R2 U2 R U R' U2 R U2' R\",\n    \"R2' U2' R U2 R U R' U2 R U R2 U2 R U R' U2 R U2' R\",\n    \"R2' U2' R2 U2 R2 U' R U R2 U2' R2' U' R' U R2' U' R2' U2' R\",\n    \"R2' U2' R2 U' R2' U2' R2 U' R' U2 R' U2' R U' R' U2' R U2 R\",\n    \"R2' U2' R2 U' R2' U2' R2 U' R' U2' R' U2 R U R' U2 R U2' R\",\n    \"R2' U2' R2 U' R2' U2' R' U2' R2 U' R U R2 U2 R2' U' R' U R\",\n    \"R2' U2' R2 U' R' U2 R' U R U2' R' U' R2 U2' R2' U2' R U2 R\",\n    \"R2' U2' R2 U' R' U2' R U' R' U2' R2' U2 R U R' U2 R U2' R\",\n    \"R' U2' R2 U2 R2 U2' R' U R2 U R2 U' R2' U' R U R U R\",\n    \"R' U' R2 U' R2' U2 R U R U2' R' U2' R2 U2 R2' U' R2 U' R\",\n    \"R U2 R2' U2' R2 U R U2' R2 U2' R U2 R2 U2 R2' U2 R U2' R\",\n    \"R U2 R2' U2' R2 U R U' R2 U2 R U2' R2 U R2' U2 R U2' R\",\n    \"R2 U2 R U2' R2' U2 R2 U2' R2 U2' R U R2 U' R' U' R' U2 R\",\n    \"R2 U2 R' U2' R2 U2 R2' U2' R' U2' R U R2 U' R' U' R' U2 R\",\n    \"R2' U R2' U R' U' R2' U R2 U R U2 R2 U' R2' U2' R2 U2 R\",\n    \"R2' U2 R2 U R U2 R2 U R U2 R' U R U2 R2 U2' R2 U2 R\",\n    \"R2' U2 R2 U R U2 R2' U2' R' U' R U2' R' U' R2' U2' R2 U2 R\",\n    \"R2' U2 R2' U R2 U2 R' U2 R' U2 R' U2' R U2 R U R' U' R\",\n    \"R2' U2 R2' U R2 U2 R' U' R' U2' R' U2 R U2' R U2' R' U' R\",\n    \"R' U2 R2 U R2' U2 R2' U2 R' U2 R' U2' R U2 R U R' U' R\",\n    \"R' U2 R2 U R2' U2 R2' U' R' U2' R' U2 R U2' R U2' R' U' R\",\n    \"R' U2 R2' U R2 U2 R2' U' R' U R U2 R' U2' R' U2 R U2 R\",\n    \"R' U2 R2' U R2 U2 R2' U' R' U2' R' U2' R U2 R U2' R' U' R\",\n    \"R' U2 R' U2' R U R2 U2' R2 U2' R U2 R2 U2' R' U R U2' R\",\n    \"R' U2 R' U2' R U R2 U' R2 U2 R U2' R2 U2 R' U R U2' R\",\n    \"R U R' U R2' U R2 U2' R U' R' U2' R2' U2 R2 U R2' U R\",\n    \"R2 U R2' U R2 U2 R2' U2' R' U' R U2' R2 U R2' U R' U R\",\n    \"R2 U' R2' U R U2 R U2 R' U2' R' U2 R U R' U R2 U R\",\n    \"R2 U' R2' U R U' R' U2' R U2 R U2' R' U2' R' U R2 U R\",\n    \"R2' U R2 U R' U R U2 R' U2' R' U2 R U2 R U R2' U' R\",\n    \"R2' U R2 U R' U2' R' U2' R U2 R U2' R' U' R U R2' U' R\",\n    \"R U R2 U' R2' U' R' U2 R U2 R' U' R2' U R2 U R U2' R\",\n    \"R2 U' R' U R' U' R2' U R2 U R U' R2 U' R2 U R2 U R\",\n    \"R2' U R' U' R2 U' R2' U R' U' R2' U R U' R2' U R2 U R\",\n    \"R2' U R' U' R2' U' R2 U R U' R2 U R2 U' R2' U R2 U R\",\n    \"R2' U' R2' U R' U' R2' U R2 U R U' R2 U' R2 U R2' U R\",\n    \"R' U' R2 U R U' R2 U R2' U R U' R2 U' R2 U R2' U R\",\n    \"R' U' R2 U R' U' R2' U R2 U R U' R2 U' R2 U R' U R\",\n    \"R U R2 U R' U R2 U2 R2 U2' R U2 R2 U2 R U' R2' U' R\",\n    \"R U R2 U R' U R2 U2' R2 U2 R U2' R2 U R U' R2' U' R\",\n    \"R U2 R2' U2' R' U2 R U R U R U2' R2 U2' R2 U' R' U2' R\",\n    \"R U2 R2' U2' R' U' R U2' R2 U2 R' U R2' U' R2 U' R2' U R\",\n    \"R U2' R' U' R2 U2 R' U' R2' U2 R2' U2 R2' U' R' U2 R2 U2' R\",\n    \"R2 U R2 U2' R2' U' R2 U2' R2' U R2' U' R2 U2 R2' U R2 U R\",\n    \"R2 U R2' U2' R2 U' R2' U2' R2 U R2' U' R2 U2 R2' U R2 U R\",\n    \"R2 U' R2' U2' R2 U R2 U2 R2' U R2 U2 R2' U R2' U R2 U R\",\n    \"R2 U' R2' U2' R2 U R2' U2 R2 U R2' U2 R2 U R2' U R2 U R\",\n    \"R2' U R2 U2' R2' U' R2 U2' R2' U R2 U' R2' U2 R2 U R2' U R\",\n    \"R2' U R2' U2' R2 U' R2' U2' R2 U R2 U' R2' U2 R2 U R2' U R\",\n    \"R2' U2' R U2' R2' U' R2' U R' U2' R2 U R U2' R' U2 R2' U' R\",\n    \"R2' U' R2 U2' R2' U R2 U2 R2' U R2 U2 R2' U R2 U R2' U R\",\n    \"R2' U' R2 U2' R2' U R2' U2 R2 U R2' U2 R2 U R2 U R2' U R\",\n    \"R' U' R U2' R' U R2 U2 R2' U R2 U2 R2' U R U R' U R\",\n    \"R' U' R U2' R' U R2' U2 R2 U R2' U2 R2 U R U R' U R\",\n    \"R U2' R2 U' R2' U' R2' U2 R2 U' R2' U' R' U R2 U' R U' R\",\n    \"R U2' R' U' R2 U2' R2 U2' R U R U R U2 R' U2' R2' U2 R\",\n    \"R2 U2 R U R' U R2' U' R U R2 U R2' U2' R2 U' R' U R\",\n    \"R2 U2 R2' U' R U R2' U2' R2' U R2 U R2 U R U2' R' U2 R\",\n    \"R2 U2' R2' U' R2' U2 R U2' R' U2 R' U R U2' R U2 R' U2' R\",\n    \"R2 U' R' U R U' R U2' R2' U2' R U R' U' R U2 R U2 R\",\n    \"R2' U R' U2 R' U2' R U' R' U2' R' U' R2 U2' R2' U2' R2' U' R\",\n    \"R2' U2' R2 U' R' U2 R U2' R' U2 R' U R U2' R U2 R' U2' R\",\n    \"R2' U' R' U R2' U' R2' U2' R2 U R2' U R2 U' R2 U' R U R\",\n    \"R' U R' U2 R' U2' R U' R' U2' R2' U' R2' U2' R2 U2' R' U' R\",\n    \"R' U2 R' U2' R U R2 U R2 U R2' U2' R2' U R U' R2' U2 R\",\n    \"R' U2' R2' U' R2 U' R2' U R2' U' R2 U' R2' U2 R2 U R2 U' R\",\n    \"R' U' R2 U R2' U2 R2 U2 R2' U2 R U' R' U R U2' R' U2' R\",\n    \"R U' R2 U R2 U2 R2' U' R2 U' R2' U R2' U R' U2' R2' U' R\",\n    \"R U' R2 U R2 U2 R2' U' R2 U' R2' U R2' U' R2 U' R2' U2' R\",\n    \"R U' R' U2' R2 U2' R2' U' R2' U2' R' U' R U2' R' U2 R' U R\",\n    \"R2 U R2' U R2 U2 R2' U' R2 U R2 U2' R2' U' R2 U2' R2' U R\",\n    \"R2 U R2' U R2 U2 R2' U' R2 U R2' U2' R2 U' R2' U2' R2 U R\",\n    \"R2 U2 R U2 R U' R' U R U2' R2' U2' R U' R U R' U' R\",\n    \"R2 U' R2' U2' R2' U2' R2 U' R' U2' R' U' R U2' R' U2 R' U R\",\n    \"R2' U R2 U R2' U2 R2 U' R2' U R2 U2' R2' U' R2 U2' R2' U R\",\n    \"R2' U R2 U R2' U2 R2 U' R2' U R2' U2' R2 U' R2' U2' R2 U R\",\n    \"R' U2' R2 U2 R' U' R2' U2 R2' U2 R2' U' R' U2 R2 U' R' U2' R\",\n    \"R' U' R2' U' R U R2 U2' R U2 R2 U2' R2 U R' U R2 U R\",\n    \"R' U' R2' U' R U2 R2 U2 R U2' R2 U2 R2 U R' U R2 U R\",\n    \"R U R U R U' R2' U' R2 U R2 U R' U2' R2 U2 R2 U2' R\",\n    \"R U R' U R2 U' R2 U' R U R2 U R2' U' R' U R2 U' R\",\n    \"R U R' U' R2' U2 R2 U R U' R2 U2' R' U2' R2' U' R2 U2' R\",\n    \"R U R' U' R2' U2' R' U' R2' U R' U' R2' U R U' R2' U2' R\",\n    \"R U2 R U2' R2' U2' R2 U' R' U2' R U R' U2 R' U' R2 U2' R\",\n    \"R U2 R U2' R' U' R U2' R' U2 R' U' R2 U2' R2' U' R2 U2' R\",\n    \"R U2 R U2' R' U' R U2' R' U2 R' U' R2' U2' R2 U' R2' U2' R\",\n    \"R U2' R U2 R' U R U2 R' U2' R' U' R2 U2' R2' U' R2 U2' R\",\n    \"R U2' R U2 R' U R U2 R' U2' R' U' R2' U2' R2 U' R2' U2' R\",\n    \"R2 U R2' U R2 U' R2 U' R U R2 U R2' U' R' U R2' U' R\",\n    \"R2 U R2' U R2 U' R2 U' R U R2' U R2 U' R U R2 U' R\",\n    \"R2 U2 R2 U2' R2 U2 R U R' U2 R U R2 U2 R U R2 U2 R\",\n    \"R2 U2 R2 U2' R2' U' R2 U2 R U R2 U R2' U' R' U R2' U R\",\n    \"R2 U2 R2 U2' R2' U' R' U2' R U' R' U2' R2' U2 R U R2 U2 R\",\n    \"R2 U2' R U2 R' U R U2 R2 U R U2 R' U R U2 R U2' R\",\n    \"R2 U2' R U2 R' U R U2 R2' U2' R' U' R U2' R' U' R2 U2' R\",\n    \"R2 U2' R2' U' R2' U R' U' R2' U2' R2 U R U' R2 U2 R2 U2' R\",\n    \"R2' U R2 U R2 U' R2 U' R U R2 U R2' U' R' U R' U' R\",\n    \"R2' U R2 U R2' U' R U R2' U' R' U R2' U' R2 U' R' U R\",\n    \"R2' U R2 U R2' U' R2 U R2 U' R U R2 U' R2' U' R' U R\",\n    \"R2' U2' R U2 R' U R U2 R U R U2 R' U R U2 R2 U2' R\",\n    \"R2' U2' R U2 R' U R U2 R2 U2' R' U' R U2' R' U' R2' U2' R\",\n    \"R2' U' R2 U' R2' U2 R2 U2' R' U2' R U R U2 R2' U' R2 U' R\",\n    \"R' U2 R U2 R' U2' R' U2 R U R' U' R2' U2 R2 U R2' U2 R\",\n    \"R' U2 R' U' R' U' R2 U R U2' R2 U2' R2 U2 R2' U2' R U2 R\",\n    \"R' U2 R' U' R' U' R2 U R U2' R' U2' R2' U2 R2 U2' R' U2 R\",\n    \"R' U2' R U R2 U R2' U' R' U2 R U2 R' U' R2' U' R2 U R\",\n    \"R' U2' R U R' U2 R2 U2' R U2 R2 U' R2 U R U2' R' U2 R\",\n    \"R' U2' R U R' U2' R2 U2 R U2' R2 U2' R2 U R U2' R' U2 R\",\n    \"R' U2' R U2 R2' U R2 U2' R U2 R2 U' R U R2 U2' R2' U2 R\",\n    \"R' U2' R U2 R2' U2 R2 U2 R U2' R2 U2' R U R2 U2' R2' U2 R\",\n    \"R' U' R' U R U2 R U2' R' U2 R' U2 R2' U2 R2' U R2 U2 R\",\n    \"R' U' R' U R U2 R U2' R' U2 R' U2 R' U2 R2 U R2' U2 R\",\n    \"R' U' R' U2' R U2 R U2' R' U2' R' U' R2' U2 R2 U R2' U2 R\",\n    \"R' U' R' U2' R U2' R U2 R' U2' R' U' R2' U2 R2' U R2 U2 R\",\n    \"R' U' R' U2' R U2' R U2 R' U2' R' U' R' U2 R2 U R2' U2 R\",\n    \"R U R' U R U R2 U2 R2' U R2 U2 R2' U R' U2' R U' R\",\n    \"R U R' U R U R2' U2 R2 U R2' U2 R2 U R' U2' R U' R\",\n    \"R U2 R U2' R2' U' R U' R2' U' R2' U2' R2 U2' R2' U2 R' U2 R\",\n    \"R U2 R' U2' R' U' R2 U2' R U2' R U2' R' U2 R U2' R2' U' R\",\n    \"R U2' R' U2 R U2' R U R' U2 R' U2' R U2 R' U' R2 U2' R\",\n    \"R U2' R' U2' R U R' U' R U2 R2' U2 R2 U2 R2' U R2 U' R\",\n    \"R2 U R U' R2 U' R2 U R2' U R2 U2' R2' U' R2' U R' U' R\",\n    \"R2 U R2' U R2 U R2 U2 R2' U R2 U2 R2' U R2' U2' R2 U' R\",\n    \"R2 U R2' U R2 U R2' U2 R2 U R2' U2 R2 U R2' U2' R2 U' R\",\n    \"R2 U R2' U' R2 U' R2' U R' U2 R2 U2' R U' R' U2' R2' U2 R\",\n    \"R2 U2' R' U2 R U2' R U R' U2 R' U2' R U2 R2' U' R2' U2' R\",\n    \"R2 U' R2' U2' R' U R2' U R2' U' R2 U' R2' U2 R2 U R2 U' R\",\n    \"R2' U R2 U R2' U R2 U2 R2' U R2 U2 R2' U R2 U2' R2' U' R\",\n    \"R2' U R2 U R2' U R2' U2 R2 U R2' U2 R2 U R2 U2' R2' U' R\",\n    \"R2' U R2 U' R2' U' R2 U2 R2 U' R U R2 U' R2' U' R' U R\",\n    \"R2' U R' U' R2 U2' R2' U R2 U R U' R2' U R' U R U2 R\",\n    \"R2' U R' U' R2' U' R2 U R U' R2 U2 R2 U' R2' U' R2 U R\",\n    \"R2' U' R2 U2' R U R2' U2 R2 U' R2' U' R' U R2 U' R U' R\",\n    \"R2' U' R2' U2' R U2 R' U2' R U2' R U2' R2 U' R' U2' R' U2 R\",\n    \"R' U2 R' U2 R2' U2' R2 U2' R2' U' R2' U' R U' R2' U2' R U2 R\",\n    \"R' U' R U' R2 U R' U' R2' U' R2 U2 R2' U R U2' R2 U' R\",\n    \"R' U' R U' R2 U R' U' R2' U' R2 U2 R2' U' R2' U' R2 U2' R\",\n    \"R' U' R2' U2 R' U2' R U R2 U2' R' U R2' U' R2' U2' R U2' R\",\n    \"R U R U2 R2' U' R2 U R2' U R' U2' R2 U2 R U2 R' U' R2' U R\",\n    \"R U2 R2 U R U2 R' U R U2 R' U R2' U2 R2 U' R2 U R2' U R\",\n    \"R U2 R2' U2' R' U2 R2' U' R2 U2' R U2 R2 U2' R2 U' R2 U R2' U R\",\n    \"R U2 R2' U2' R' U' R U2' R2 U2 R2 U2 R' U2 R2' U R2 U2 R U' R\",\n    \"R U2 R2' U2' R' U' R2' U2' R2' U2 R2 U2' R2' U2 R' U' R2 U R2' U R\",\n    \"R U2' R2' U2 R2 U2' R2 U2' R2' U2 R2' U2' R' U' R2' U2' R' U R2' U R\",\n    \"R U2' R2' U2 R' U2' R2' U2' R2 U2' R U2 R2 U2' R2 U' R2 U R2' U R\",\n    \"R U2' R2' U2 R' U2' R2' U' R2 U2 R U2' R2 U2 R2 U' R2 U R2' U R\",\n    \"R U2' R2' U' R2' U R2' U2 R2 U2 R2' U R U' R2' U R U R' U R\",\n    \"R U' R2 U R2' U2 R U2' R U' R' U2' R' U2' R U2' R2' U R2 U R\",\n    \"R U' R2 U' R2 U' R2' U R2 U R U R' U2' R2' U' R2 U2 R2' U R\",\n    \"R U' R2 U' R2 U' R2' U R2 U R U' R2 U' R2' U2' R' U' R2' U R\",\n    \"R U' R2 U' R' U2' R' U2 R' U R U2 R U2' R' U R' U' R2' U R\",\n    \"R U' R2' U R2 U2 R2 U2' R U' R' U2' R2' U2' R2 U2' R2 U R2' U R\",\n    \"R U' R2' U2 R2' U2 R' U2' R' U2 R' U2' R2 U2 R2' U R2' U2 R' U' R\",\n    \"R U' R' U' R2' U' R2 U R2' U R2' U R' U2' R2' U' R2 U2 R2' U R\",\n    \"R U' R' U' R2' U' R2 U R2' U R2' U' R2 U' R2' U2' R' U' R2' U R\",\n    \"R2 U R U2 R2' U2' R' U' R2' U R2' U2 R2 U2' R' U' R2' U' R2 U R\",\n    \"R2 U R2' U2 R2 U2 R2' U R2' U' R' U2' R2' U2' R2 U' R2' U' R2' U R\",\n    \"R2 U2' R U2 R2 U R U2 R2 U2' R2 U2' R U R2 U' R' U' R' U2 R\",\n    \"R2 U2' R U2 R2 U R2' U2' R' U2 R2' U' R2 U' R U' R2 U R2 U R\",\n    \"R2 U2' R U2 R2 U2 R2' U2 R' U2' R2' U2' R2 U' R U' R2 U R2 U R\",\n    \"R2 U2' R2 U2 R U R' U2 R U R2 U' R' U2' R U' R' U2' R U2 R\",\n    \"R2 U2' R2 U2 R U' R2 U2' R2' U2' R' U2 R2' U2 R2 U' R U R2 U R\",\n    \"R2 U2' R2 U2 R U' R2 U' R2' U2 R' U2' R2' U R2 U' R U R2 U R\",\n    \"R2 U2' R2 U2 R2 U2' R U2 R' U' R2' U R2' U' R' U' R' U R U R\",\n    \"R2 U2' R2' U R U2' R2' U2 R2 U2' R U2 R2 U2' R2 U2 R2' U2' R2' U2' R\",\n    \"R2 U2' R2' U R U2' R2' U2 R2 U2' R U2 R' U2' R2' U2 R2 U2' R U2' R\",\n    \"R2 U2' R2' U R U2' R2' U2' R2 U2 R U2' R2 U2 R2 U2 R2' U2' R2' U2' R\",\n    \"R2 U2' R2' U R' U2 R2 U2' R U2 R2 U2' R2' U2' R' U2 R2' U2' R2' U2' R\",\n    \"R2 U2' R2' U R' U2 R2 U2' R U2 R2 U' R2' U2 R' U2' R2' U2 R2' U2' R\",\n    \"R2 U2' R2' U R' U2' R2 U2 R U2' R2 U2 R2' U2' R' U2 R2' U2' R2' U2' R\",\n    \"R2 U2' R2' U R' U2' R2 U2 R U2' R2 U2' R2' U2 R' U2' R2' U2 R2' U2' R\",\n    \"R2 U2' R2' U R' U2' R2 U2 R2' U2 R2' U2' R' U2 R2' U2' R2 U2' R U2' R\",\n    \"R2 U2' R2' U R' U2' R2 U2 R2' U2' R2' U2 R2 U2' R2 U2 R2' U2' R2' U2' R\",\n    \"R2 U2' R2' U R' U2' R2 U2 R2' U2' R2' U2 R' U2' R2' U2 R2 U2' R U2' R\",\n    \"R2 U2' R2' U2 R U2 R' U2' R U' R' U2' R U2 R U R2' U2 R2 U2' R\",\n    \"R2 U2' R2' U2 R U2' R' U2 R U R' U2 R U2' R U R2' U2 R2 U2' R\",\n    \"R2 U2' R2' U2 R U2' R' U2 R2 U2 R2' U R U2 R' U' R U2' R U2' R\",\n    \"R2 U2' R2' U2 R U' R U R2 U2' R2' U' R' U R2' U2 R U2 R2 U2' R\",\n    \"R2 U2' R2' U' R U R2' U' R' U R2' U2 R2 U' R2' U2' R' U2 R2 U R\",\n    \"R2 U2' R2' U' R2 U R2 U' R U2' R2 U2' R2' U2 R2 U2' R2' U R' U R\",\n    \"R2 U2' R2' U' R2 U R2 U' R2' U2' R U2 R2 U R2' U2 R2 U' R' U R\",\n    \"R2 U2' R2' U' R' U2' R U' R' U2' R2' U' R' U2' R U' R' U2' R U2 R\",\n    \"R2 U2' R2' U' R' U2' R2 U R2' U' R' U R2' U' R2 U' R' U2' R2' U2' R\",\n    \"R2 U2' R2' U' R' U2' R2' U R2 U' R U R2 U' R2' U' R' U2' R2' U2' R\",\n    \"R2' U R2 U2 R2' U2 R U2 R2' U R2 U' R U R' U2 R U' R2 U' R\",\n    \"R2' U2 R2 U2 R U R' U2 R2' U2' R2' U' R2 U R' U2' R2' U R2 U R\",\n    \"R2' U2' R U2 R U R' U2 R U R2' U' R' U2' R U' R' U2' R U2 R\",\n    \"R2' U2' R U2 R U R' U2 R2' U2' R U2 R2 U R2' U2' R' U2 R U2' R\",\n    \"R2' U2' R U2 R' U2' R U R' U R' U' R' U' R2' U R' U' R2 U2 R\",\n    \"R2' U2' R2 U R2' U R2' U2' R2 U R2' U2' R' U2 R2' U' R2 U' R U2' R\",\n    \"R2' U2' R2 U R2' U R2' U2' R2 U2 R2' U2 R' U2' R2' U2' R2 U' R U2' R\",\n    \"R2' U2' R2 U R2' U R' U2' R U' R2 U2' R2' U2' R' U2 R2' U2 R2 U2' R\",\n    \"R2' U2' R2 U R2' U R' U2' R U' R2 U' R2' U2 R' U2' R2' U R2 U2' R\",\n    \"R2' U2' R2 U R2' U' R U2 R2 U2 R' U' R' U2 R' U2' R2 U R U2' R\",\n    \"R2' U2' R2 U R2' U' R2' U R' U' R2' U2 R U2' R U R U' R2' U2 R\",\n    \"R2' U2' R2 U R2' U' R2' U2 R2 U2' R2' U' R' U2' R2' U2' R2 U' R U2' R\",\n    \"R2' U2' R2 U2 R2 U2 R' U2' R U' R' U2' R U2 R U R2 U2 R2' U2' R\",\n    \"R2' U2' R2 U2 R2 U2' R' U2 R U R' U2 R U2' R U R2 U2 R2' U2' R\",\n    \"R2' U2' R2 U2 R2 U' R U R2 U2 R U R2 U' R U R2 U' R' U2' R\",\n    \"R2' U2' R2 U' R2 U2 R U R2 U R2' U' R' U R2' U' R2 U2 R U2' R\",\n    \"R2' U2' R2 U' R2 U2 R U R2' U R2 U' R U R2 U' R2' U2 R U2' R\",\n    \"R2' U2' R2 U' R2 U2 R2 U2' R U2 R2 U2 R2' U2' R' U2 R2' U2' R U R\",\n    \"R2' U2' R2 U' R2 U2 R2 U2' R U2 R2 U2' R2' U2 R' U2' R2' U2 R U R\",\n    \"R2' U2' R2 U' R2 U2 R2 U2' R2' U2 R2' U2' R2 U2 R2 U2' R2' U2 R U R\",\n    \"R2' U2' R2 U' R2 U2 R2 U2' R2' U2 R2' U2' R' U2 R2' U2' R2 U2 R' U R\",\n    \"R2' U2' R2 U' R2 U2 R2 U2' R2' U2' R2' U2 R' U2' R2' U2 R2 U2 R' U R\",\n    \"R2' U2' R2 U' R2 U2' R2 U2 R U2' R2 U R2' U2' R' U2 R2' U2' R U R\",\n    \"R2' U2' R2 U' R2 U2' R2 U2 R U2' R2 U2 R2' U2 R' U2' R2' U2 R U R\",\n    \"R2' U2' R2 U' R' U2 R2' U2 R2 U2' R U2 R2 U2' R2 U2' R2' U2 R U R\",\n    \"R2' U2' R2 U' R' U2 R2' U2' R2 U2 R U2' R2 U2 R2 U2' R2' U2 R U R\",\n    \"R2' U2' R2 U' R' U2 R2' U2' R2 U2 R U2' R' U2 R2' U2' R2 U2 R' U R\",\n    \"R2' U2' R2 U' R' U2' R U' R' U2' R' U' R' U2' R U' R' U2' R U2 R\",\n    \"R2' U2' R2' U2' R' U' R2' U R2' U2 R2 U2' R' U' R2' U' R2 U2 R U' R\",\n    \"R2' U' R U' R2 U R2' U R U' R2 U R2 U' R' U' R' U R2' U R\",\n    \"R2' U' R2 U' R2 U' R2' U R2 U R U R2 U2' R2 U' R2' U2 R2 U R\",\n    \"R2' U' R' U' R2' U' R2 U R2' U R2' U R2 U2' R2 U' R2' U2 R2 U R\",\n    \"R' U R2 U2' R U2 R2 U' R2' U' R2 U2 R2 U2 R' U2' R' U2' R2 U R\",\n    \"R' U R2' U2 R2 U2 R U' R2 U R2 U' R U' R2 U2' R2' U2' R' U R\",\n    \"R' U R2' U2 R2' U R U R2' U' R2' U2' R2 U2' R2 U2 R U' R2 U' R\",\n    \"R' U R' U' R' U2' R2 U2 R U R U R' U' R' U2' R2 U2 R U R\",\n    \"R' U2 R U2 R U R' U2 R' U2' R2 U' R2' U R' U2' R2 U R2' U R\",\n    \"R' U2 R2 U2 R U2' R2 U2' R2' U' R2 U2 R2 U2 R' U2' R' U2' R2 U R\",\n    \"R' U2 R2 U2' R2' U2 R2 U2' R2 U' R U2' R2 U2 R2 U' R2 U R2' U R\",\n    \"R' U2' R2 U2 R2' U2' R' U2' R2' U2 R2' U2' R' U' R2' U2' R' U R2' U R\",\n    \"R' U2' R2 U' R2 U' R U2' R2 U2 R' U2' R2' U2' R U2' R U2 R U R\",\n    \"R' U2' R2' U2 R2' U R2 U2 R' U R2' U' R2 U2 R2' U R U2 R U2 R\",\n    \"R' U2' R2' U' R2 U R U R U R U2 R' U2' R2' U2 R2 U2 R U R\",\n    \"R' U2' R' U2 R2 U R2' U2 R2' U R2' U' R2 U2 R2' U R U2 R U2 R\",\n    \"R' U' R U R U2 R' U' R' U R2 U2' R' U' R2 U2' R2' U' R2 U2' R\",\n    \"R' U' R U R U2 R' U' R' U R2 U2' R' U' R2' U2' R2 U' R2' U2' R\",\n    \"R' U' R U R' U' R2' U' R2 U R2 U2' R' U2' R' U2 R2 U2 R U R\",\n    \"R' U' R2 U' R2' U2 R U R U2' R U2' R2' U2 R2 U2' R2' U R2 U' R\",\n    \"R' U' R2' U' R2' U2 R U2 R' U2' R' U' R U R' U2 R2 U2 R U R\",\n  ],\n  [\n    \"R2' U' R2 U' R2' U R2' U2' R2' U2 R' U R U2 R2 U2' R\",\n    \"R' U' R U R2 U2' R2' U' R' U R2' U' R2' U R2 U2 R\",\n    \"R U R U2 R' U2' R' U2 R U2 R U R2' U2' R2 U' R\",\n    \"R U2' R' U2' R U2 R U2' R' U' R U R2' U2' R2 U' R\",\n    \"R2 U' R2' U' R2 U2 R U2 R2' U2' R' U' R U2' R2 U2 R\",\n    \"R2 U' R2' U' R2' U R' U R2' U R2 U2' R U' R' U2' R\",\n    \"R2' U' R2 U2' R2' U R U2 R U2 R' U2' R' U2 R U R\",\n    \"R2' U' R2 U2' R2' U R U' R' U2' R U2 R U2' R' U2' R\",\n    \"R2' U2' R' U' R U2' R2 U R2' U R' U R2' U' R2' U' R\",\n    \"R2' U2 R2 U R2' U' R2' U R' U' R2' U2' R2 U R U' R\",\n    \"R' U2' R2 U2 R U R' U2 R2' U2' R2' U R2' U' R2 U' R\",\n    \"R2 U2 R2 U2' R U' R' U2' R2' U2 R U2 R2 U' R2' U' R\",\n    \"R2 U R2' U R2 U2' R2' U2 R U2 R' U' R' U2' R2 U R2' U R\",\n    \"R2 U2 R' U2' R U' R' U2' R2' U2 R U R' U2 R U R2 U2 R\",\n    \"R2 U2 R' U2' R U' R' U2' R' U' R' U2' R U' R' U2' R2' U2 R\",\n    \"R2' U2 R2 U R2 U' R U R2 U2 R2' U' R' U R2' U2' R2' U2 R\",\n    \"R2' U2 R' U2' R U' R' U2' R2 U2 R U R' U2 R U R2' U2 R\",\n    \"R2' U2 R' U2' R U' R' U2' R2' U' R' U2' R U' R' U2' R' U2 R\",\n    \"R' U2 R' U2' R U' R' U2' R U2 R U R2 U2 R2' U R2 U2 R\",\n    \"R' U2 R' U2' R U' R' U2' R U2 R U R2' U2 R2 U R2' U2 R\",\n    \"R' U2' R' U2 R U R' U2 R U2' R U R2 U2 R2' U R2 U2 R\",\n    \"R' U2' R' U2 R U R' U2 R U2' R U R2' U2 R2 U R2' U2 R\",\n    \"R' U2' R' U2 R2 U2 R2' U R U2 R' U' R U2' R U R2' U2 R\",\n    \"R' U' R U R2 U2 R U R2 U' R U R2 U' R' U R2 U2 R\",\n    \"R' U' R U R2 U2' R2' U' R' U R2' U2 R U2 R2 U R2' U2 R\",\n    \"R' U' R' U' R' U R2 U R2' U' R2' U' R U2 R2' U2' R2' U2 R\",\n    \"R U R2 U R' U2' R2' U2' R' U2 R2' U2' R2' U' R U' R2' U' R\",\n    \"R U R2 U R' U' R2' U2 R' U2' R2' U2 R2' U' R U' R2' U' R\",\n    \"R U2 R2' U2' R U R2 U2' R2 U2' R2 U R U2' R2' U R U2 R\",\n    \"R2 U' R2' U' R2 U2' R2' U R2 U' R2 U2 R2' U R2 U2 R2' U' R\",\n    \"R2 U' R2' U' R2 U2' R2' U R2 U' R2' U2 R2 U R2' U2 R2 U' R\",\n    \"R2' U' R2 U' R2' U2' R2 U R2' U' R2 U2 R2' U R2 U2 R2' U' R\",\n    \"R2' U' R2 U' R2' U2' R2 U R2' U' R2' U2 R2 U R2' U2 R2 U' R\",\n    \"R' U2 R U R2' U2 R2' U2 R' U' R' U' R' U2' R U2 R2 U2' R\",\n    \"R U R2 U2' R U2 R' U' R2' U2 R U' R2 U R2 U2 R' U2 R\",\n    \"R2 U' R2' U' R2 U' R2 U2' R2' U' R2 U2' R2' U' R2' U2 R2 U R\",\n    \"R2 U' R2' U' R2 U' R2' U2' R2 U' R2' U2' R2 U' R2' U2 R2 U R\",\n    \"R2' U' R2 U R2' U R2 U' R U2' R2' U2 R' U R U2 R2 U2' R\",\n    \"R2' U' R2 U' R2' U' R2 U2' R2' U' R2 U2' R2' U' R2 U2 R2' U R\",\n    \"R2' U' R2 U' R2' U' R2' U2' R2 U' R2' U2' R2 U' R2 U2 R2' U R\",\n    \"R' U' R U' R' U' R2 U2' R2' U' R2 U2' R2' U' R U2 R' U R\",\n    \"R' U' R U' R' U' R2' U2' R2 U' R2' U2' R2 U' R U2 R' U R\",\n    \"R U R U2 R' U2 R' U2' R U2 R U R U2' R2' U' R2 U2' R\",\n    \"R U R U2 R' U2 R' U2' R U2 R U R2 U2' R2 U' R2' U2' R\",\n    \"R U R U2 R' U2' R' U2 R U2 R U R2 U2' R2' U' R2 U2' R\",\n    \"R U R U' R' U2' R' U2 R U2' R U2' R U2' R2' U' R2 U2' R\",\n    \"R U R U' R' U2' R' U2 R U2' R U2' R2 U2' R2 U' R2' U2' R\",\n    \"R U2 R' U2' R2 U2' R2' U2' R' U2 R2' U2 R' U' R2' U2 R2 U2' R\",\n    \"R U2 R' U2' R2 U' R2' U2 R' U2' R2' U R' U' R2' U2 R2 U2' R\",\n    \"R U2 R' U' R U2 R2' U2' R' U2 R2' U2 R2' U' R' U2 R U2' R\",\n    \"R U2 R' U' R U2' R2' U2 R' U2' R2' U R2' U' R' U2 R U2' R\",\n    \"R U2 R' U' R2' U' R2 U R U2' R' U2' R U R2 U R2' U' R\",\n    \"R U2' R U R U R2' U' R' U2 R U2 R2 U2' R2' U2 R U2' R\",\n    \"R U2' R U R U R2' U' R' U2 R2' U2 R2' U2' R2 U2 R' U2' R\",\n    \"R U2' R' U2' R U2 R U2' R' U' R U R2 U2' R2' U' R2 U2' R\",\n    \"R2 U' R2' U' R U2 R U2 R' U2' R' U2 R U R' U' R2 U R\",\n    \"R2 U' R2' U' R U' R' U2' R U2 R U2' R' U2' R' U' R2 U R\",\n    \"R2 U' R2' U' R2 U R2' U' R2' U R' U' R2' U R2 U R U' R\",\n    \"R2 U' R2' U' R2 U R' U' R2 U R U' R2 U R2' U R U' R\",\n    \"R2 U' R2' U' R2' U R2' U R' U' R2' U' R2 U R U' R U R\",\n    \"R2' U R2 U' R' U R U2 R' U2' R' U2 R U2 R U' R2' U' R\",\n    \"R2' U R2 U' R' U2' R' U2' R U2 R U2' R' U' R U' R2' U' R\",\n    \"R2' U2' R2' U2 R2 U R U2 R' U R U2 R2 U2' R' U' R2' U2' R\",\n    \"R2' U2' R2' U2 R2 U R2' U2' R' U' R2' U' R2 U R U' R2 U' R\",\n    \"R2' U2' R2' U2 R2' U2' R' U' R U2' R' U' R2' U2' R' U' R2' U2' R\",\n    \"R2' U' R2 U' R2' U R2' U R' U' R2 U' R2' U R' U' R2' U R\",\n    \"R2' U' R2 U' R2' U R2' U R' U' R2' U' R2 U R U' R2 U R\",\n    \"R2' U' R2 U' R2' U2' R2 U2 R U R' U2 R2' U' R2 U' R U' R\",\n    \"R' U' R U' R2 U' R2' U2 R' U R U2 R2 U2' R2' U' R2 U' R\",\n    \"R' U' R U' R2' U R2' U R' U' R2' U' R2 U R U' R2' U R\",\n    \"R2' U R2 U2 R2 U2 R2' U R U2 R U R' U2 R U2' R U' R\",\n    \"R2' U2' R' U2' R' U R U' R' U2 R2 U2 R' U R' U' R U R\",\n    \"R' U R U2 R2' U2 R2 U R2 U2 R U R' U2 R U2' R U' R\",\n    \"R' U R2' U' R2' U2' R2 U R2' U R2 U' R2 U R2' U R2 U2 R\",\n    \"R' U R2' U' R2' U2' R2 U R2' U R2 U' R2 U' R U2 R2 U R\",\n    \"R U R2' U' R2 U2' R2' U2' R2 U2' R' U R U' R' U2 R U2 R\",\n    \"R U2 R2 U R2' U R2 U' R2 U R2' U R2 U2' R2' U' R2' U R\",\n    \"R U2' R U2 R' U' R2' U R2' U2' R' U2 R2' U2' R U' R' U2 R\",\n    \"R U2' R U2 R' U' R2' U2 R2' U2 R' U2' R2' U2 R U' R' U2 R\",\n    \"R U2' R U2 R' U' R2' U' R2' U' R2 U2 R2 U' R' U R2 U2' R\",\n    \"R U2' R2 U' R2' U2' R2 U R U2 R U2 R' U2' R' U2 R U R\",\n    \"R U2' R2 U' R2' U2' R2 U R U' R' U2' R U2 R U2' R' U2' R\",\n    \"R U2' R2' U' R2 U2' R2 U R U2 R U2' R' U2 R' U2 R U R\",\n    \"R U2' R2' U' R2 U2' R2 U2' R U2' R U2 R' U2' R' U' R U R\",\n    \"R U' R U2' R U2 R' U R U2 R2 U R2 U2 R2' U2 R U R\",\n    \"R2 U R U' R2 U R2 U2 R2' U' R2 U' R2' U R2' U R' U' R\",\n    \"R2 U2 R2' U R U2' R' U2 R U2' R U' R' U2 R' U2' R U2 R\",\n    \"R2 U2' R2 U' R2' U2' R U R U2 R U2' R' U2 R' U2 R U R\",\n    \"R2 U2' R2 U' R2' U2' R U2' R U2' R U2 R' U2' R' U' R U R\",\n    \"R2 U2' R2' U' R' U2' R2 U2 R U R' U2 R U R2 U2 R2' U2' R\",\n    \"R2 U2' R2' U' R' U2' R2' U' R' U2' R U' R' U2' R2' U2 R2' U2' R\",\n    \"R2 U' R U2' R U2 R' U R U2 R U R2' U2 R2 U2 R2 U R\",\n    \"R2 U' R2 U' R U R2 U' R2' U' R' U2' R2' U R2 U2 R2' U2' R\",\n    \"R2' U R U' R' U R' U2 R2 U2 R' U' R U R' U2' R' U2' R\",\n    \"R2' U2 R2 U R2 U2' R' U2 R U2' R U' R' U2 R' U2' R U2 R\",\n    \"R2' U2' R U2 R2' U2' R2 U2 R U2 R' U' R2' U R U R U2' R\",\n    \"R2' U2' R2 U R' U' R2 U2 R2 U' R2' U' R2' U' R' U2 R U2' R\",\n    \"R2' U2' R' U2 R2 U2' R2' U2 R2' U2 R' U' R2' U R U R U2' R\",\n    \"R2' U2' R' U' R U' R2 U R' U' R2' U' R2 U2 R2' U R U' R\",\n    \"R' U2 R2' U R2 U R2 U2' R2' U R2 U R U' R2' U R' U R\",\n    \"R' U2' R2 U2 R2' U' R' U R2' U2' R' U2 R2' U' R2 U2' R' U2 R\",\n    \"R' U2' R2 U2 R2' U' R' U2 R2' U2 R' U2' R2' U2' R2 U2' R' U2 R\",\n    \"R U R2' U R2 U2' R' U' R' U2 R U2 R2' U2' R2 U R2' U R\",\n    \"R U R' U2 R U' R2 U2' R2' U' R2 U2' R2' U' R' U' R U' R\",\n    \"R U R' U2 R U' R2' U2' R2 U' R2' U2' R2 U' R' U' R U' R\",\n    \"R U2 R2' U2' R2' U2 R U' R2' U' R2' U R2 U R' U' R' U' R\",\n    \"R2 U R2' U2 R2 U' R2 U2' R2' U' R2 U2' R2' U' R2' U' R2 U' R\",\n    \"R2 U R2' U2 R2 U' R2' U2' R2 U' R2' U2' R2 U' R2' U' R2 U' R\",\n    \"R2 U2 R2' U R U2 R' U R U2 R2 U2' R' U' R U2' R' U2 R\",\n    \"R2 U2 R2' U R U2' R U' R' U2 R U R2' U2 R2 U2 R' U2' R\",\n    \"R2 U2 R2' U R2 U2 R U2 R2' U R' U' R2' U2' R2 U R U' R\",\n    \"R2 U2 R2' U R2 U2 R2' U R U2 R U2' R' U' R U2' R' U2 R\",\n    \"R2 U2 R2' U R2 U2 R2' U R U2' R U2 R' U R U2 R' U2' R\",\n    \"R2 U2 R2' U2' R2' U R' U' R2' U2 R2 U R U' R2 U R2 U2 R\",\n    \"R2 U2 R' U2 R2 U R2 U' R U2 R2' U' R' U2 R U2' R2 U R\",\n    \"R2 U2 R' U2' R' U' R U2' R' U' R2' U2' R' U' R U2' R' U2 R\",\n    \"R2 U' R2 U2 R2' U R2 U2 R2' U' R2' U R2 U2' R2' U' R2 U' R\",\n    \"R2 U' R2' U2 R2 U R2' U2 R2 U' R2' U R2 U2' R2' U' R2 U' R\",\n    \"R2' U R2 U2 R2' U' R2 U2' R2' U' R2 U2' R2' U' R2 U' R2' U' R\",\n    \"R2' U R2 U2 R2' U' R2' U2' R2 U' R2' U2' R2 U' R2 U' R2' U' R\",\n    \"R2' U2 R2 U R U2 R' U R U2 R2' U2' R' U' R U2' R' U2 R\",\n    \"R2' U2 R2 U R2' U2 R2 U R U2 R U2' R' U' R U2' R' U2 R\",\n    \"R2' U2 R2 U R2' U2 R2 U R U2' R U2 R' U R U2 R' U2' R\",\n    \"R2' U2 R2 U R' U' R2 U R U' R2 U R U2 R2 U R U' R\",\n    \"R2' U2 R2' U2' R' U' R U2' R' U' R' U2' R' U' R U2' R' U2 R\",\n    \"R2' U' R2 U2 R2' U R2 U2 R2' U' R2 U R2' U2' R2 U' R2' U' R\",\n    \"R2' U' R2' U2 R2 U R2' U2 R2 U' R2 U R2' U2' R2 U' R2' U' R\",\n    \"R' U2 R U R2' U2' R U R2 U2' R2 U2' R2 U R U2' R2' U2 R\",\n    \"R' U2' R2 U2 R U R' U2 R2' U2' R U' R2 U R2' U R2 U' R\",\n    \"R' U2' R2 U2 R U2' R' U' R' U' R' U2 R2' U2 R2' U R U2 R\",\n    \"R' U' R2' U' R U' R2' U2 R2' U2' R' U2 R2' U' R' U R2 U R\",\n    \"R' U' R2' U' R U' R2' U2' R2' U2 R' U2' R2' U2' R' U R2 U R\",\n    \"R U R2' U' R U R2 U' R2' U' R' U R2' U R2' U' R U' R\",\n    \"R U R2' U' R' U R2' U' R2 U' R' U R2' U R2' U' R2 U' R\",\n    \"R U R' U R2' U' R U R2 U R2' U2' R2 U R2 U R2' U2 R\",\n    \"R U R' U R2' U' R U R2 U R2' U2' R2 U' R' U2 R2' U R\",\n    \"R U2' R U2' R2 U2 R2' U2 R2 U R2 U R' U R2 U2 R' U2' R\",\n    \"R2 U R2 U2 R' U2' R U2 R' U2 R' U2 R2' U R U2 R U2' R\",\n    \"R2 U R2 U' R U R2 U' R2' U' R' U R2' U R2' U' R2 U' R\",\n    \"R2 U R2' U2 R' U' R2 U2' R2' U R2 U R U' R2' U R' U R\",\n    \"R2 U' R U R2 U R2' U' R' U R2' U2' R2' U R2 U R2' U' R\",\n    \"R2 U' R U R2 U R2' U' R' U R2' U' R2' U R2 U' R2' U' R\",\n    \"R2 U' R U R2' U R2 U' R U R2 U' R' U R2 U' R2' U' R\",\n    \"R2 U' R U R2' U2 R2 U' R2' U' R' U R2 U' R U' R' U2' R\",\n    \"R2 U' R2' U R2 U R2' U2' R2' U R' U' R2' U R2 U R U' R\",\n    \"R2' U R U' R U R2 U' R2' U' R' U R2' U R2' U' R2' U' R\",\n    \"R2' U R2 U2 R U' R2 U' R2 U R2' U R2 U2' R2' U' R2' U R\",\n    \"R2' U2 R U2' R' U2 R' U' R U2' R U2 R' U2' R2 U R2 U2 R\",\n    \"R2' U' R' U R2' U R2' U' R2 U' R2' U2 R2 U R2 U' R U R\",\n    \"R' U2 R U2 R' U' R U R' U2' R2 U2' R2' U2' R2 U' R2' U R\",\n    \"R' U2 R U2' R' U2 R' U' R U2' R U2 R' U2' R U R2' U2 R\",\n    \"R' U2' R U2 R U R2' U2 R' U2 R' U2 R U2' R' U2 R2 U R\",\n    \"R' U2' R' U2 R2 U R' U R2 U R2 U2 R2' U2 R2 U2' R U2' R\",\n    \"R' U' R2' U R2 U R U2' R' U2' R U R2 U' R2' U' R' U2 R\",\n    \"R U R U2' R2 U' R2 U2' R2' U2 R U2' R U2 R U2' R2 U2' R2 U R\",\n    \"R U2 R' U R2' U R2 U2' R U2 R2 U' R2' U2 R2 U' R2 U' R2' U2 R\",\n    \"R U2 R' U R2' U2 R2 U2 R U R2 U2 R2' U2' R2 U R2 U' R2' U2 R\",\n    \"R U2 R' U R2' U2 R2 U2 R U2' R2 U2' R2' U2 R2 U' R2 U' R2' U2 R\",\n    \"R U2 R' U' R2' U2 R U2' R U R U2' R2' U2' R' U R2 U' R2' U2 R\",\n    \"R U2' R U R U R2' U' R' U2 R2' U2 R2' U2' R' U' R2' U2' R' U2 R\",\n    \"R U2' R' U2' R' U' R2 U2' R2' U R2 U' R U2' R2' U' R2 U2' R2 U2 R\",\n    \"R U2' R' U2' R' U' R2 U2' R2' U R2 U' R2 U2' R2 U' R2' U2' R U2 R\",\n    \"R U' R2' U2 R U2 R U2' R2' U2' R2' U R2 U R2' U2' R' U2 R2' U' R\",\n    \"R U' R2' U2 R U2 R U2' R2' U2' R2' U R2 U2 R2' U2 R' U2' R2' U2' R\",\n    \"R U' R' U2' R' U2 R' U2 R2 U2 R U2' R2' U2 R' U R2' U R2' U2 R\",\n    \"R U' R' U' R U R U R2 U' R2 U R U2' R' U2 R2' U2' R2' U2 R\",\n    \"R2 U R2' U R' U2' R U' R' U R2' U' R2 U2' R' U2' R2 U2' R2' U' R\",\n    \"R2 U R2' U' R2 U2 R2' U2' R2 U2 R' U2 R' U' R' U2' R2 U R2' U R\",\n    \"R2 U2 R2 U2 R U R2 U R2' U' R' U R2' U' R2 U2 R U R2 U2 R\",\n    \"R2 U2 R2 U2 R U R2' U R2 U' R U R2 U' R2' U2 R U R2 U2 R\",\n    \"R2 U2 R2 U2 R2 U2' R U2 R2 U2 R2' U2' R' U2 R2' U2' R U' R2 U2 R\",\n    \"R2 U2 R2 U2 R2 U2' R U2 R2 U2' R2' U2 R' U2' R2' U2 R U' R2 U2 R\",\n    \"R2 U2 R2 U2 R2 U2' R2' U2 R2' U2' R2 U2 R2 U2' R2' U2 R U' R2 U2 R\",\n    \"R2 U2 R2 U2 R2 U2' R2' U2 R2' U2' R' U2 R2' U2' R2 U2 R' U' R2 U2 R\",\n    \"R2 U2 R2 U2 R2 U2' R2' U2' R2' U2 R' U2' R2' U2 R2 U2 R' U' R2 U2 R\",\n    \"R2 U2 R2 U2' R2 U2 R U2' R2 U R2' U2' R' U2 R2' U2' R U' R2 U2 R\",\n    \"R2 U2 R2 U2' R2 U2 R U2' R2 U2 R2' U2 R' U2' R2' U2 R U' R2 U2 R\",\n    \"R2 U2 R2' U R2 U2 R2' U R U2 R2' U' R U R U2' R' U' R' U R\",\n    \"R2 U2 R2' U2' R2 U2' R U2 R2 U2 R2' U R' U2 R U' R2 U' R2' U2 R\",\n    \"R2 U2 R2' U2' R2 U' R' U2 R' U2' R U' R' U2' R U2 R' U2' R2 U2 R\",\n    \"R2 U2 R2' U2' R2 U' R' U2' R' U2 R U R' U2 R U2' R' U2' R2 U2 R\",\n    \"R2 U2 R2' U2' R' U2' R2 U' R U R2 U2 R2' U' R' U R' U2' R2 U2 R\",\n    \"R2 U2 R2' U' R2 U2 R U2' R2 U R2' U R' U2 R U' R2 U' R2' U2 R\",\n    \"R2 U2 R' U2 R2' U2 R2 U2' R U2 R2 U2' R2 U2' R2' U2 R U' R2 U2 R\",\n    \"R2 U2 R' U2 R2' U2' R2 U2 R U2' R2 U2 R2 U2' R2' U2 R U' R2 U2 R\",\n    \"R2 U2 R' U2 R2' U2' R2 U2 R U2' R' U2 R2' U2' R2 U2 R' U' R2 U2 R\",\n    \"R2 U2 R' U2 R' U R U2' R' U' R2 U2' R2' U2' R U2 R' U2' R2 U2 R\",\n    \"R2 U2' R2' U R U' R2 U R U R U' R U' R' U2 R U2' R' U2 R\",\n    \"R2 U2' R' U2 R U R' U2 R U R2 U2 R U R' U2 R U R2 U2 R\",\n    \"R2 U2' R' U2 R U R' U2 R U R2' U' R' U2' R U' R' U2' R2' U2 R\",\n    \"R2 U' R2' U R2 U R U2 R2' U2' R2 U' R2 U R U2 R2 U2' R' U' R\",\n    \"R2 U' R2' U2' R2 U R2' U2 R2' U' R2 U' R2 U' R2' U R2 U R U R\",\n    \"R2 U' R2' U2' R2 U R2' U2 R2' U' R' U' R2' U' R2 U R2' U R2' U R\",\n    \"R2 U' R2' U' R2 U2 R U' R2' U R2 U2 R2 U2' R U' R' U2' R2' U2' R\",\n    \"R2 U' R2' U' R2 U2 R' U2 R U2 R U R' U2 R' U2' R2 U' R2' U R\",\n    \"R2 U' R2' U' R2' U R' U R2' U R2 U2' R U2 R2 U' R2' U2' R' U2 R\",\n    \"R2 U' R2' U' R2' U R' U R2' U2 R2 U2 R U2' R2 U2' R2' U2' R' U2 R\",\n    \"R2 U' R2' U' R' U R2' U2' R2 U2' R U2 R2 U2 R2' U R' U2' R2' U2 R\",\n    \"R2 U' R2' U' R' U R2' U' R2 U2 R U2' R2 U R2' U R' U2' R2' U2 R\",\n    \"R2 U' R' U2' R2' U2' R U2 R U2 R2' U' R2' U R2 U R U' R' U R\",\n    \"R2 U' R' U2' R2' U2' R U' R' U R U2 R U2' R' U2' R2 U R2 U R\",\n    \"R2 U' R' U2' R2' U2' R2 U2 R U2' R' U' R' U' R' U' R2' U R2 U2 R\",\n    \"R2' U R' U2' R2' U R2 U R U2 R2' U2' R2 U' R2 U R U2 R2 U2 R\",\n    \"R2' U R' U2' R2' U' R2 U2' R U2' R2' U2' R2' U2 R' U R U2 R2 U2' R\",\n  ],\n  [\n    \"R2' U2 R2' U2' R2 U' R2' U2 R2 U2' R\",\n    \"R' U2 R2 U2' R2' U' R2 U2 R2' U2' R\",\n    \"R U2 R2 U2' R2' U2 R2 U' R2' U2' R2 U2 R\",\n    \"R U2 R2' U2' R2 U2 R2' U' R2 U2' R2' U2 R\",\n    \"R U2 R2 U2' R2' U2 R2 U2 R2' U2 R2 U2' R\",\n    \"R U2 R2' U2' R2 U2 R2' U2 R2 U2 R2' U2' R\",\n    \"R2 U2 R' U' R' U' R2 U' R2' U2 R2 U2' R\",\n    \"R2' U2 R2 U2' R2' U' R2 U2' R U' R2 U2' R\",\n    \"R' U2 R2' U2' R2 U' R2' U2' R' U' R2' U2' R\",\n    \"R U2 R' U R U R U2 R' U' R U' R\",\n    \"R2' U2' R2 U2 R2' U2 R2 U2' R U' R2 U2' R\",\n    \"R U2 R2 U2' R2' U' R' U2' R2' U' R2 U2' R2' U2 R\",\n    \"R U2 R2' U2' R2 U' R U2' R2 U' R2' U2' R2 U2 R\",\n    \"R U2 R' U2' R2 U2 R2' U' R2 U' R' U' R' U2 R\",\n    \"R2' U2 R2' U R' U2 R2' U R2 U2 R U R2 U2 R\",\n    \"R' U2 R2 U R U2 R2 U R2' U2 R' U R2' U2 R\",\n  ],\n  [\n    \"R2 U2 R2' U2' R2 U R2' U2 R2 U2' R\",\n    \"R2' U2 R2 U2' R2' U R2 U2 R2' U2' R\",\n    \"R2 U2' R2' U2 R2 U R2' U2' R2 U2 R\",\n    \"R2' U2' R2 U2 R2' U R2 U2' R2' U2 R\",\n    \"R2 U2 R2' U2' R2 U2' R2' U2' R2 U2 R\",\n    \"R2' U2 R2 U2' R2' U2' R2 U2' R2' U2 R\",\n    \"R U2 R2' U2' R2 U R2' U R U R U2' R\",\n    \"R2 U2 R2' U R' U2 R2' U R2 U2 R2' U2' R\",\n    \"R2' U2 R2 U R U2 R2 U R2' U2 R2 U2' R\",\n    \"R2 U2' R2 U2 R2' U R2 U2 R U R2 U2 R\",\n    \"R2' U2' R2' U2 R2 U R2' U2 R' U R2' U2 R\",\n    \"R' U2' R U R U R2' U R2 U2' R2' U2 R\",\n    \"R U2 R' U' R' U' R2 U2' R2' U2' R2 U2 R\",\n    \"R' U2 R2 U2' R2' U2' R2 U' R' U' R' U2 R\",\n    \"R2 U2' R2' U' R' U2' R2' U' R2 U2' R U' R2 U2' R\",\n    \"R2' U2' R2 U' R U2' R2 U' R2' U2' R' U' R2' U2' R\",\n  ],\n  [\n    \"R2 U R2' U R2 U2' R2' U2 R2 U R2' U R2 U2' R\",\n    \"R2 U R2' U' R2 U2 R2' U2' R2 U2' R2' U R2 U2' R\",\n    \"R2 U2 R2' U' R2 U2 R2' U2 R2 U2' R2' U R2 U' R\",\n    \"R2 U2 R2' U' R2 U' R2' U2' R2 U2 R2' U' R2 U' R\",\n    \"R2' U R2 U R2' U2' R2 U2 R2' U R2 U R2' U2' R\",\n    \"R2' U R2 U' R2' U2 R2 U2' R2' U2' R2 U R2' U2' R\",\n    \"R2' U2 R2 U' R2' U2 R2 U2 R2' U2' R2 U R2' U' R\",\n    \"R2' U2 R2 U' R2' U' R2 U2' R2' U2 R2 U' R2' U' R\",\n    \"R U2' R U2 R' U' R' U2 R2 U2 R2' U' R U' R\",\n    \"R U R' U' R2' U2 R2 U R U2 R2 U' R2' U2' R2 U2 R\",\n    \"R U R U R2' U' R2 U2 R2' U2 R2 U2' R2' U R U' R\",\n    \"R U R U R2' U' R2 U' R2' U2' R2 U2 R2' U' R U' R\",\n    \"R U R' U R2 U2' R2' U2 R2 U R2' U R2 U' R' U' R\",\n    \"R U R' U' R2 U2 R2' U2' R2 U2' R2' U R2 U' R' U' R\",\n    \"R2 U R2' U R2 U2' R2 U2 R2' U R2 U2 R U' R2 U2' R\",\n    \"R2 U2 R2' U R' U2' R2' U' R2 U2' R2' U2 R2' U' R2 U' R\",\n    \"R2' U R2 U R2' U2' R2' U2 R2 U R2' U2 R' U' R2' U2' R\",\n    \"R2' U2 R2 U R U2' R2 U' R2' U2' R2 U2 R2 U' R2' U' R\",\n    \"R' U R U' R' U' R2 U R' U R' U' R U2 R U2 R\",\n    \"R' U2' R U R' U2' R U R' U R2 U2' R2' U2' R2 U' R\",\n    \"R U2 R2' U2' R U2 R U R' U2 R U R2' U2 R2 U2' R\",\n    \"R U2 R2' U2' R2 U' R' U2' R U' R' U2' R' U2 R2 U2' R\",\n    \"R2 U2 R2 U2' R2 U2 R U R' U2 R U R2 U2 R2' U2' R\",\n    \"R2 U2 R2 U2' R2' U' R' U2' R U' R' U2' R2' U2 R2' U2' R\",\n    \"R2' U2' R2' U2 R2 U R2' U2' R' U' R2' U2' R2 U R U' R\",\n    \"R U2' R' U2' R' U R U' R U' R2' U R U R' U' R\",\n    \"R U R2' U2 R2 U2 R2' U' R U' R' U2 R U' R' U2 R\",\n    \"R U R' U R2 U2' R2' U2' R U R2' U R2' U2 R' U2' R2' U' R\",\n    \"R U R' U' R2 U2 R2' U2' R2 U2 R2' U R U R U2' R' U2 R\",\n    \"R U R' U' R2' U2 R2 U R U2 R2 U2 R2' U2 R2 U2' R2' U2 R\",\n    \"R U R' U' R2' U2 R2 U R U' R' U2' R2' U' R2 U2' R2' U2 R\",\n    \"R U R' U' R' U2 R2 U2' R2' U' R2 U2' R' U R U' R2' U2 R\",\n    \"R U R' U' R' U2 R2' U2' R2 U' R2' U2' R2' U R U' R2' U2 R\",\n    \"R U2' R U2' R' U R2' U' R' U' R' U R U R2' U R' U2' R\",\n    \"R2 U R2' U R2 U2' R2' U2 R2 U R2' U' R2 U2 R2' U2' R2 U2 R\",\n    \"R2 U R2' U' R2 U2 R2' U R' U2 R2' U2' R2 U R2' U2' R2 U2 R\",\n    \"R2 U R2' U' R2 U2 R2' U2' R2 U2' R2' U' R2 U2 R2' U2' R2 U2 R\",\n    \"R2' U R2 U R2' U2' R2 U2 R2' U R2 U' R2' U2 R2 U2' R2' U2 R\",\n    \"R2' U R2 U' R2 U2 R2' U R' U2 R2' U' R2 U' R' U' R' U2 R\",\n    \"R2' U R2 U' R2' U2 R2 U R U2 R2 U2' R2' U R2 U2' R2' U2 R\",\n    \"R2' U R2 U' R2' U2 R2 U2' R2' U2' R2 U' R2' U2 R2 U2' R2' U2 R\",\n    \"R2 U R U R2 U R2 U' R U' R2 U R' U' R2' U' R2 U2 R\",\n    \"R2' U R2' U2 R2 U' R2' U' R' U R2 U' R U' R2 U R2 U R\",\n    \"R' U2' R' U2 R U R U R U R2' U R2 U2' R2 U2 R U2' R\",\n    \"R2 U2 R2' U' R2 U' R U' R' U R2' U R2 U2' R2' U R2' U R\",\n    \"R2' U' R2 U' R2 U2 R2' U' R2 U' R U R' U R2' U R2 U2' R\",\n    \"R2 U2' R2' U2' R U R' U' R U2 R U2 R' U' R' U R U' R\",\n    \"R2' U2' R2 U' R2' U' R U R U2 R' U2' R' U2 R U2 R' U' R\",\n    \"R2' U2' R2 U' R2' U' R U2' R' U2' R U2 R U2' R' U' R' U' R\",\n    \"R U R U R2' U R' U2' R2' U' R2 U2' R2' U2 R2' U' R U' R\",\n    \"R U R2 U2 R U2 R2 U2' R2 U2' R U2 R U R U2 R2' U2' R\",\n    \"R U R' U R2 U2' R2 U2 R2' U R2 U2 R U' R2 U' R' U' R\",\n    \"R U R' U R2 U2' R2' U2' R U' R' U2 R U2' R U2 R' U2' R\",\n    \"R U R' U R2 U2' R2' U2' R2 U R2' U' R2 U' R2' U R U' R\",\n    \"R U R' U' R2 U R2' U R2 U' R2' U2 R2 U2 R2' U' R U' R\",\n    \"R U R' U' R2' U2 R2 U R U' R' U2' R2' U2 R2 U2 R2' U2' R\",\n    \"R U2 R U2' R' U2 R' U2' R U R' U2 R2 U2 R2' U' R U' R\",\n    \"R U2 R U2' R' U' R U2' R' U2 R' U R2 U2' R2' U' R2 U2' R\",\n    \"R U2 R U2' R' U' R U2' R' U2 R' U R2' U2' R2 U' R2' U2' R\",\n    \"R U2' R U2 R' U R U2 R' U2' R' U R2 U2' R2' U' R2 U2' R\",\n    \"R U2' R U2 R' U R U2 R' U2' R' U R2' U2' R2 U' R2' U2' R\",\n    \"R2 U R2' U R2 U2' R2' U2 R2 U' R U2 R2 U R2' U2 R' U R\",\n    \"R2 U R2' U R2 U2' R2' U2' R2 U R2' U' R2 U' R2' U R2 U' R\",\n    \"R2 U R2' U R' U2' R2' U2 R2 U2' R2' U2' R2 U2 R U' R2 U2' R\",\n    \"R2 U R2' U' R2 U R2' U R2 U' R2' U2 R2 U2 R2' U' R2 U' R\",\n    \"R2 U R2' U' R2 U2 R2' U R2 U2 R2' U2' R2 U2 R2' U' R2 U2' R\",\n    \"R2 U R2' U' R2 U2 R2' U2' R2 U R U2 R2 U R2' U2 R' U R\",\n    \"R2 U R2' U' R2' U2 R2 U R2' U2 R2 U2' R2 U2 R2' U' R2 U2' R\",\n    \"R2 U2 R2' U R2 U2 R2' U' R U2 R U2' R' U' R U2' R' U2 R\",\n    \"R2 U2 R2' U R2 U2 R2' U' R U2' R U2 R' U R U2 R' U2' R\",\n    \"R2 U2 R2' U R2 U2' R2' U2 R2 U2' R2' U' R2 U2' R2' U R2 U' R\",\n    \"R2 U2 R2' U R2 U2' R2' U2 R2' U2' R2 U' R2' U2' R2 U R2 U' R\",\n    \"R2 U2 R2' U R' U2' R2' U2 R2 U2 R2' U2' R2 U2 R U' R2 U' R\",\n    \"R2 U2 R2' U' R2 U R2' U' R2 U R2' U R2 U2' R2' U2 R2 U2 R\",\n    \"R2 U2 R2' U' R2 U R2' U' R2 U R2' U' R2 U2 R2' U2' R2 U' R\",\n    \"R2 U2 R2' U' R2 U2 R U2 R' U' R' U R2 U2' R' U2 R' U' R\",\n    \"R2 U2 R2' U' R2 U2 R2' U2 R2 U R U2 R2 U R2' U2 R' U2 R\",\n    \"R2 U2 R2' U' R2 U2 R2' U2 R2 U2 R2' U R2 U R2' U' R2 U' R\",\n    \"R2 U2 R2' U' R2 U2 R2' U2 R2 U2' R2' U2' R' U2' R2' U' R2 U2' R\",\n    \"R2 U2 R2' U' R2 U2 R2' U' R2 U' R2' U R2 U' R2' U2 R2 U2 R\",\n    \"R2 U2 R2' U' R2 U' R2' U2' R2 U R2' U' R2 U R2' U R2 U' R\",\n    \"R2 U2 R2' U' R2 U' R2' U2' R2 U2 R2' U R' U2' R2' U' R2 U2' R\",\n    \"R2 U2 R2' U' R2 U' R2' U2' R2 U' R U2' R2 U' R2' U2' R' U R\",\n    \"R2 U2' R U2' R2 U' R2' U2' R' U' R2' U2' R2 U2' R2' U R2 U2' R\",\n    \"R2 U' R U2 R2 U R2' U2 R' U R2' U2 R2 U R2' U R2 U2' R\",\n    \"R2 U' R U2' R2 U' R2' U2' R' U R2' U2' R2 U2 R2' U' R2 U' R\",\n    \"R2 U' R U2' R2 U' R2' U2' R' U' R2' U2 R2 U2' R2' U R2 U' R\",\n    \"R2' U R2 U R U2' R2 U2 R2' U2' R2 U2' R2' U2 R' U' R2' U2' R\",\n    \"R2' U R2 U R2' U2' R2 U2 R2' U' R' U2 R2' U R2 U2 R U R\",\n    \"R2' U R2 U R2' U2' R2 U2' R2' U R2 U' R2' U' R2 U R2' U' R\",\n    \"R2' U R2 U' R2 U2 R2' U R2 U2 R2' U2' R2' U2 R2 U' R2' U2' R\",\n    \"R2' U R2 U' R2' U R2 U R2' U' R2 U2 R2' U2 R2 U' R2' U' R\",\n    \"R2' U R2 U' R2' U2 R2 U R2' U2 R2 U2' R2' U2 R2 U' R2' U2' R\",\n    \"R2' U R2 U' R2' U2 R2 U2' R2' U R' U2 R2' U R2 U2 R U R\",\n    \"R2' U2 R2 U R U2' R2 U2 R2' U2 R2 U2' R2' U2 R' U' R2' U' R\",\n    \"R2' U2 R2 U R2 U2' R U' R2 U2' R2' U2' R2 U2' R2 U2 R U2 R\",\n    \"R2' U2 R2 U R2' U2 R2 U' R U2 R U2' R' U' R U2' R' U2 R\",\n    \"R2' U2 R2 U R2' U2 R2 U' R U2' R U2 R' U R U2 R' U2' R\",\n    \"R2' U2 R2 U R2' U2' R2 U2 R2 U2' R2' U' R2 U2' R2' U R2' U' R\",\n    \"R2' U2 R2 U R2' U2' R2 U2 R2' U2' R2 U' R2' U2' R2 U R2' U' R\",\n    \"R2' U2 R2 U2' R2' U2' R2 U2 R U R' U' R2' U2' R2 U R U' R\",\n    \"R2' U2 R2 U' R2' U R2 U' R2' U R2 U R2' U2' R2 U2 R2' U2 R\",\n    \"R2' U2 R2 U' R2' U R2 U' R2' U R2 U' R2' U2 R2 U2' R2' U' R\",\n    \"R2' U2 R2 U' R2' U2 R2 U2 R2' U R' U2 R2' U R2 U2 R U2 R\",\n    \"R2' U2 R2 U' R2' U2 R2 U2 R2' U2 R2 U R2' U R2 U' R2' U' R\",\n    \"R2' U2 R2 U' R2' U2 R2 U2 R2' U2' R2 U2' R U2' R2 U' R2' U2' R\",\n    \"R2' U2 R2 U' R2' U2 R2 U' R2' U' R2 U R2' U' R2 U2 R2' U2 R\",\n    \"R2' U2 R2 U' R2' U' R2 U2' R2' U R2 U' R2' U R2 U R2' U' R\",\n    \"R2' U2 R2 U' R2' U' R2 U2' R2' U2 R2 U R U2' R2 U' R2' U2' R\",\n    \"R2' U2 R2 U' R2' U' R2 U2' R2' U' R' U2' R2' U' R2 U2' R U R\",\n    \"R2' U2 R2 U' R' U R U' R2' U2 R U2' R U R' U' R' U' R\",\n    \"R2' U2' R' U2' R2' U2 R2' U2 R2 U2 R2' U R' U2 R2' U' R2' U2' R\",\n    \"R2' U2' R' U2' R2' U' R2 U2' R U' R2 U2' R2' U2' R2 U R2' U2' R\",\n    \"R2' U' R' U2 R2' U R2 U2 R U R2 U2 R2' U R2 U R2' U2' R\",\n    \"R2' U' R' U2' R2' U' R2 U2' R U R2 U2' R2' U2 R2 U' R2' U' R\",\n    \"R2' U' R' U2' R2' U' R2 U2' R U' R2 U2 R2' U2' R2 U R2' U' R\",\n    \"R' U2 R2 U2' R' U' R' U2' R' U2 R2' U2 R2' U2' R' U2' R2' U' R\",\n    \"R' U' R2 U2 R2' U R U' R U R2' U2' R2 U R' U R U2 R\",\n  ],\n  [\n    \"R2 U2' R2' U R2 U R2' U2 R2 U2' R2' U R2 U R\",\n    \"R2 U2' R2' U R2 U2' R2' U2' R2 U2 R2' U' R2 U R\",\n    \"R2 U' R2' U R2 U2' R2' U2 R2 U2 R2' U' R2 U2 R\",\n    \"R2 U' R2' U' R2 U2 R2' U2' R2 U' R2' U' R2 U2 R\",\n    \"R2' U2' R2 U R2' U R2 U2 R2' U2' R2 U R2' U R\",\n    \"R2' U2' R2 U R2' U2' R2 U2' R2' U2 R2 U' R2' U R\",\n    \"R2' U' R2 U R2' U2' R2 U2 R2' U2 R2 U' R2' U2 R\",\n    \"R2' U' R2 U' R2' U2 R2 U2' R2' U' R2 U' R2' U2 R\",\n    \"R' U2 R' U2' R U R U2' R2' U2' R2 U R' U R\",\n    \"R' U' R U' R2' U2 R2 U2 R' U' R' U2 R U2' R\",\n    \"R2 U2' R2' U' R' U2 R2' U R2 U2 R2' U2' R2' U R2 U R\",\n    \"R2 U' R2' U' R2 U2 R2 U2' R2' U' R2 U2' R U R2 U2 R\",\n    \"R2' U2' R2 U' R U2 R2 U R2' U2 R2 U2' R2 U R2' U R\",\n    \"R2' U' R2 U' R2' U2 R2' U2' R2 U' R2' U2' R' U R2' U2 R\",\n    \"R' U' R U R2' U2' R2 U2 R2' U2 R2 U' R2' U R U R\",\n    \"R' U' R U' R2' U2 R2 U2' R2' U' R2 U' R2' U R U R\",\n    \"R' U' R' U' R2 U R2' U R2 U2 R2' U2' R2 U R' U R\",\n    \"R' U' R' U' R2 U R2' U2' R2 U2' R2' U2 R2 U' R' U R\",\n    \"R' U' R2 U2' R2' U2' R2 U R' U R U2' R' U R U2' R\",\n    \"R' U2 R U2 R U' R' U R' U R2 U' R' U' R U R\",\n    \"R2 U2 R2 U2' R2' U' R2 U2 R U R2 U2 R2' U' R' U R\",\n    \"R U2 R' U' R U2 R' U' R U' R2' U2 R2 U2 R2' U R\",\n    \"R U' R' U R U R2' U' R U' R U R' U2' R' U2' R\",\n    \"R' U' R U R2 U2' R2' U' R' U2' R2' U R2 U2 R2' U2' R\",\n    \"R2' U2' R2' U2 R2 U R U2 R' U R U2 R2 U2' R2 U2 R\",\n    \"R2' U2' R2' U2 R2' U2' R' U' R U2' R' U' R2' U2' R2 U2 R\",\n    \"R' U2' R2 U2 R2' U R U2 R' U R U2 R U2' R2' U2 R\",\n    \"R' U2' R2 U2 R' U2' R' U' R U2' R' U' R2 U2' R2' U2 R\",\n    \"R U2' R2' U2 R U R U2 R U2' R2 U2' R2 U2 R U2 R2 U R\",\n    \"R2 U R U2 R2 U R2' U2 R' U R2' U2' R2 U2 R2' U' R2 U R\",\n    \"R2 U R U2 R2 U R2' U2 R' U' R2' U2 R2 U2' R2' U R2 U R\",\n    \"R2 U R U2' R2 U' R2' U2' R' U' R2' U2' R2 U' R2' U' R2 U2 R\",\n    \"R2 U2 R U2 R2 U R2' U2 R' U R2' U2 R2 U2 R2' U' R2 U2 R\",\n    \"R2 U2 R U2 R2 U2' R2 U2' R2' U2' R2 U' R U2' R2 U R2 U2 R\",\n    \"R2 U2' R2' U R2 U R2' U2 R2 U R U2 R2 U R2' U2 R' U' R\",\n    \"R2 U2' R2' U R2 U2' R2' U2' R2 U' R U2' R2 U' R2' U2' R' U2' R\",\n    \"R2 U2' R2' U2 R2 U2 R2' U2' R' U' R U R2 U2 R2' U' R' U R\",\n    \"R2 U2' R2' U' R2 U2 R2' U2' R2 U2 R2' U R2 U2 R2' U' R2 U R\",\n    \"R2 U2' R2' U' R2 U2 R2' U2' R2' U2 R2 U R2' U2 R2 U' R2 U R\",\n    \"R2 U2' R2' U' R2 U2' R2' U R' U2 R' U2' R U' R' U2' R U2 R\",\n    \"R2 U2' R2' U' R2 U2' R2' U R' U2' R' U2 R U R' U2 R U2' R\",\n    \"R2 U2' R2' U' R2' U2 R' U R2' U2 R2 U2 R2' U2 R2' U2' R' U2' R\",\n    \"R2 U2' R2' U' R' U2 R2' U2' R2 U2' R2' U2 R2 U2' R U R2 U R\",\n    \"R2 U' R2' U R2 U2' R2' U2 R2 U' R U2' R2 U' R2' U2' R' U' R\",\n    \"R2 U' R2' U R2 U2' R2' U' R2 U2' R2' U2 R2 U2' R2' U R2 U2 R\",\n    \"R2 U' R2' U R2 U' R2' U' R2 U R2' U2' R2 U2' R2' U R2 U R\",\n    \"R2 U' R2' U R2' U2' R2 U' R2' U2' R2 U2 R2 U2' R2' U R2 U2 R\",\n    \"R2 U' R2' U' R2 U2 R2' U2 R2 U' R2' U R2 U R2' U' R2 U R\",\n    \"R2 U' R2' U' R2 U2 R2' U2' R2 U R U2' R2 U' R2' U2' R' U' R\",\n    \"R2 U' R2' U' R' U2 R2' U2' R2 U2 R2' U2 R2 U2' R U R2 U2 R\",\n    \"R2' U R' U2 R2' U R2 U2 R U R2 U2' R2' U2 R2 U' R2' U R\",\n    \"R2' U R' U2 R2' U R2 U2 R U' R2 U2 R2' U2' R2 U R2' U R\",\n    \"R2' U R' U2' R2' U' R2 U2' R U' R2 U2' R2' U' R2 U' R2' U2 R\",\n    \"R2' U2 R' U2 R2' U R2 U2 R U R2 U2 R2' U2 R2 U' R2' U2 R\",\n    \"R2' U2' R2 U R2' U R2 U2 R2' U R' U2 R2' U R2 U2 R U' R\",\n    \"R2' U2' R2 U R2' U2' R2 U2' R2' U' R' U2' R2' U' R2 U2' R U2' R\",\n    \"R2' U2' R2 U' R U2 R2 U2' R2' U2' R2 U2 R2' U2' R' U R2' U R\",\n    \"R2' U2' R2 U' R2' U2 R2 U2' R2 U2 R2' U R2 U2 R2' U' R2' U R\",\n    \"R2' U2' R2 U' R2' U2 R2 U2' R2' U2 R2 U R2' U2 R2 U' R2' U R\",\n    \"R2' U2' R2 U' R2' U2' R2 U R' U2 R' U2' R U' R' U2' R U2 R\",\n    \"R2' U2' R2 U' R2' U2' R2 U R' U2' R' U2 R U R' U2 R U2' R\",\n    \"R2' U' R2 U R2 U2' R2' U' R2 U2' R2' U2 R2' U2' R2 U R2' U2 R\",\n    \"R2' U' R2 U R2' U2' R2 U2 R2' U' R' U2' R2' U' R2 U2' R U' R\",\n    \"R2' U' R2 U R2' U2' R2 U' R2' U2' R2 U2 R2' U2' R2 U R2' U2 R\",\n    \"R2' U' R2 U R2' U' R2 U' R2' U R2 U2' R2' U2' R2 U R2' U R\",\n    \"R2' U' R2 U' R U2 R2 U2' R2' U2 R2 U2 R2' U2' R' U R2' U2 R\",\n    \"R2' U' R2 U' R2' U2 R2 U2 R2' U' R2 U R2' U R2 U' R2' U R\",\n    \"R2' U' R2 U' R2' U2 R2 U2' R2' U R' U2' R2' U' R2 U2' R U' R\",\n    \"R' U2 R' U2' R U' R' U2' R U2 R U' R2 U2 R2' U R2 U2 R\",\n    \"R' U2 R' U2' R U' R' U2' R U2 R U' R2' U2 R2 U R2' U2 R\",\n    \"R' U2' R' U2 R U R' U2 R U2' R U' R2 U2 R2' U R2 U2 R\",\n    \"R' U2' R' U2 R U R' U2 R U2' R U' R2' U2 R2 U R2' U2 R\",\n    \"R' U2' R' U2 R U2' R U2 R' U' R U2' R2' U2' R2 U R' U R\",\n    \"R' U' R U R2 U2' R2' U' R' U R U2 R2 U2' R2' U2' R2 U2 R\",\n    \"R' U' R U R2' U' R2 U' R2' U R2 U2' R2' U2' R2 U R' U R\",\n    \"R' U' R U' R2' U2 R2 U2 R2' U' R2 U R2' U R2 U' R' U R\",\n    \"R' U' R U' R2' U2 R2 U2 R' U R U2' R' U2 R' U2' R U2 R\",\n    \"R' U' R U' R2' U2 R2' U2' R2 U' R2' U2' R' U R2' U R U R\",\n    \"R' U' R2' U2' R' U2' R2' U2 R2' U2 R' U2' R' U' R' U2' R2 U2 R\",\n    \"R' U' R' U' R2 U' R U2 R2 U R2' U2 R2 U2' R2 U R' U R\",\n  ],\n];\n\nexport { megaPllMap };\n","<script>\n  import { createEventDispatcher } from 'svelte';\n  import * as R from 'ramda';\n\n  import Header from './Header.svelte';\n  import Timer from './Timer.svelte';\n  import { algGroup, algInfo } from '../scripts/algsinfo';\n  import { megaPllMap } from '../scripts/algsmap';\n  const dispatch = createEventDispatcher();\n  const changeMode = event =>\n    dispatch('viewUpdate', {\n      mode: R.path(['detail', 'mode'], event),\n      selectedCases: selectedCases || [],\n    });\n\n  export let selectedCases;\n  export let value;\n\n  $: scrambleSize = R.nth(1, value) || 30;\n\n  let currentCase;\n  let times = [];\n  const auf = ['', 'U', 'U2', \"U'\", \"U2'\"];\n  const randomItem = array =>\n    R.path([Math.floor(Math.random() * array.length)], array);\n\n  const updateTimesArray = time =>\n    R.prepend(\n      {\n        time,\n        scramble,\n        caseName,\n        caseIndex: currentCase,\n      },\n      times\n    );\n\n  const getScrambleCase = () => [\n    R.join(' ', [\n      randomItem(auf),\n      randomItem(\n        R.path([(currentCase = randomItem(selectedCases))], megaPllMap)\n      ),\n      randomItem(auf),\n    ]),\n    R.path([currentCase, 'name'], algInfo),\n  ];\n\n  const removeCase = () => {\n    selectedCases = R.without([R.path([0, 'caseIndex'], times)], selectedCases);\n    if (R.equals(0, R.length(selectedCases))) {\n      changeMode({ detail: { mode: 0 } });\n    } else {\n      [scramble, caseName] = getScrambleCase();\n    }\n  };\n\n  let [scramble, caseName] = getScrambleCase();\n</script>\n\n<style>\n  .scramble {\n    font-size: 40px;\n    text-align: center;\n  }\n\n  table {\n    width: 100%;\n    -moz-user-select: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n  td {\n    cursor: pointer;\n    border-radius: 5px;\n    border-spacing: 100px;\n    text-align: center;\n  }\n  .timer {\n    font-size: 50px;\n    text-align: center;\n  }\n</style>\n\n<Header train={false} selection={true} on:viewUpdate={changeMode} bind:value />\n\n<div class=\"scramble\" style=\"font-size:{scrambleSize}px\">{scramble}</div>\n<div>{caseName}</div>\n\n<Timer\n  on:newTime={event => {\n    times = updateTimesArray(R.path(['detail', 'time'], event));\n    [scramble, caseName] = getScrambleCase();\n  }}\n  bind:value />\n\n<div>Selected Cases : {R.length(selectedCases)}</div>\n{#each selectedCases as caseIndex}\n  <div>{R.path([caseIndex, 'name'], algInfo)}</div>\n{/each}\n{#if R.length(times)}\n  <div on:click={removeCase}>\n    Unselect last case : ({R.path([0, 'caseName'], times)})\n  </div>\n{/if}\n<table>\n  {#each times as time}\n    <td>{R.path(['time'], time)}</td>\n    <td>{R.path(['scramble'], time)}</td>\n    <td>{R.path(['caseName'], time)}</td>\n    <tr />\n  {/each}\n</table>\n","import * as R from 'ramda';\n\nconst drawMegaminxLL = (colorScheme, state) => {\n  const color = getColor(colorScheme);\n  const coloredState = R.map(color, state);\n\n  return formatString(coloredState);\n};\n\nconst getColor = ({ U, R: Right, F, L, Bl, Br }) =>\n  R.cond([\n    [R.equals(0), R.always(U)],\n    [R.equals(1), R.always(F)],\n    [R.equals(2), R.always(Right)],\n    [R.equals(3), R.always(Br)],\n    [R.equals(4), R.always(Bl)],\n    [R.T, R.always(L)],\n  ]);\n\nconst formatString = list =>\n  R.reduce(\n    R.flip(R.replace('{}')),\n    `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 200 200\" width=\"100\" height=\"100\">\n  <g stroke-linejoin=\"round\">\n    <polygon\n      points=\"80.2229123600034,132.367048291092 68,94.7487921443737 100,71.4994312482022 132,94.7487921443737 119.777087639997,132.367048291092\"\n      stroke=\"#1E1E1E\"\n      stroke-width=\"4\"\n      fill=\"{}\"\n    />\n\n    <polygon\n      points=\"119.777087639997,132.367048291092 106.513112147391,173.19828709199 93.4868878526086,173.19828709199 80.2229123600034,132.367048291092\"\n      stroke=\"#1E1E1E\"\n      stroke-width=\"4\"\n      fill=\"{}\"\n    />\n    <polygon\n      points=\"119.777087639997,132.367048291092 162.708697210182,132.36980465773 149.442719099992,173.19828709199 106.513112147391,173.19828709199\"\n      stroke=\"#1E1E1E\"\n      stroke-width=\"4\"\n      fill=\"{}\"\n    />\n    <polygon\n      points=\"132,94.7487921443737 166.73402188981,119.981129159454 162.708697210182,132.36980465773 119.777087639997,132.367048291092\"\n      stroke=\"#1E1E1E\"\n      stroke-width=\"4\"\n      fill=\"{}\"\n    />\n    <polygon\n      points=\"132,94.7487921443737 145.26921841351,53.9192568717434 180,79.1526467251942 166.73402188981,119.981129159454\"\n      stroke=\"#1E1E1E\"\n      stroke-width=\"4\"\n      fill=\"{}\"\n    />\n    <polygon\n      points=\"100,71.4994312482022 134.73078158649,46.2626343382162 145.26921841351,53.9192568717434 132,94.7487921443737\"\n      stroke=\"#1E1E1E\"\n      stroke-width=\"4\"\n      fill=\"{}\"\n    />\n    <polygon\n      points=\"100,71.4994312482022 65.2692184135095,46.2626343382162 100,21.0292444847653 134.73078158649,46.2626343382162\"\n      stroke=\"#1E1E1E\"\n      stroke-width=\"4\"\n      fill=\"{}\"\n    />\n    <polygon\n      points=\"68,94.7487921443737 54.7307815864905,53.9192568717434 65.2692184135095,46.2626343382162 100,71.4994312482022\"\n      stroke=\"#1E1E1E\"\n      stroke-width=\"4\"\n      fill=\"{}\"\n    />\n    <polygon\n      points=\"68,94.7487921443737 33.2659781101904,119.981129159454 20,79.1526467251942 54.7307815864905,53.9192568717434\"\n      stroke=\"#1E1E1E\"\n      stroke-width=\"4\"\n      fill=\"{}\"\n    />\n    <polygon\n      points=\"80.2229123600034,132.367048291092 37.2913027898181,132.36980465773 33.2659781101904,119.981129159454 68,94.7487921443737\"\n      stroke=\"#1E1E1E\"\n      stroke-width=\"4\"\n      fill=\"{}\"\n    />\n    <polygon\n      points=\"80.2229123600034,132.367048291092 93.4868878526086,173.19828709199 50.5572809000084,173.19828709199 37.2913027898181,132.36980465773\"\n      stroke=\"#1E1E1E\"\n      stroke-width=\"4\"\n      fill=\"{}\"\n    />\n    <polygon\n      points=\"50.5572809000084,173.19828709199 38.1966011250105,190.211303259031 85.1671842700026,190.211303259031 93.4868878526086,173.19828709199\"\n      stroke=\"#1E1E1E\"\n      stroke-width=\"4\"\n      fill=\"{}\"\n    />\n\n    <polygon\n      points=\"106.513112147391,173.19828709199 93.4868878526086,173.19828709199 85.1671842700025,190.211303259031 114.832815729997,190.211303259031\"\n      stroke=\"#1E1E1E\"\n      stroke-width=\"4\"\n      fill=\"{}\"\n    />\n    <polygon\n      points=\"149.442719099992,173.19828709199 161.80339887499,190.211303259031 114.832815729997,190.211303259031 106.513112147391,173.19828709199\"\n      stroke=\"#1E1E1E\"\n      stroke-width=\"4\"\n      fill=\"{}\"\n    />\n    <polygon\n      points=\"149.442719099992,173.19828709199 161.80339887499,190.211303259031 176.318107302494,145.539624084803 162.708697210182,132.36980465773\"\n      stroke=\"#1E1E1E\"\n      stroke-width=\"4\"\n      fill=\"{}\"\n    />\n    <polygon\n      points=\"166.73402188981,119.981129159454 162.708697210182,132.36980465773 176.318107302494,145.539624084803 185.485291572496,117.325931974764\"\n      stroke=\"#1E1E1E\"\n      stroke-width=\"4\"\n      fill=\"{}\"\n    />\n    <polygon\n      points=\"180,79.1526467251942 200,72.6542528005361 185.485291572496,117.325931974764 166.73402188981,119.981129159454\"\n      stroke=\"#1E1E1E\"\n      stroke-width=\"4\"\n      fill=\"{}\"\n    />\n    <polygon\n      points=\"180,79.1526467251942 200,72.6542528005361 162,45.0456367363323 145.26921841351,53.9192568717434\"\n      stroke=\"#1E1E1E\"\n      stroke-width=\"4\"\n      fill=\"{}\"\n    />\n    <polygon\n      points=\"134.73078158649,46.2626343382162 145.26921841351,53.9192568717434 162,45.0456367363323 138,27.6086160642037\"\n      stroke=\"#1E1E1E\"\n      stroke-width=\"4\"\n      fill=\"{}\"\n    />\n    <polygon\n      points=\"100,21.0292444847653 100,0 138,27.6086160642037 134.73078158649,46.2626343382162\"\n      stroke=\"#1E1E1E\"\n      stroke-width=\"4\"\n      fill=\"{}\"\n    />\n    <polygon\n      points=\"100,21.0292444847653 100,0 62,27.6086160642037 65.2692184135095,46.2626343382162\"\n      stroke=\"#1E1E1E\"\n      stroke-width=\"4\"\n      fill=\"{}\"\n    />\n    <polygon\n      points=\"54.7307815864905,53.9192568717434 65.2692184135095,46.2626343382162 62,27.6086160642037 38,45.0456367363324\"\n      stroke=\"#1E1E1E\"\n      stroke-width=\"4\"\n      fill=\"{}\"\n    />\n    <polygon\n      points=\"20,79.1526467251942 0,72.6542528005361 38,45.0456367363324 54.7307815864905,53.9192568717434\"\n      stroke=\"#1E1E1E\"\n      stroke-width=\"4\"\n      fill=\"{}\"\n    />\n    <polygon\n      points=\"20,79.1526467251942 0,72.6542528005361 14.514708427504,117.325931974764 33.2659781101904,119.981129159454\"\n      stroke=\"#1E1E1E\"\n      stroke-width=\"4\"\n      fill=\"{}\"\n    />\n    <polygon\n      points=\"37.2913027898181,132.36980465773 33.2659781101904,119.981129159454 14.514708427504,117.325931974764 23.6818926975065,145.539624084803\"\n      stroke=\"#1E1E1E\"\n      stroke-width=\"4\"\n      fill=\"{}\"\n    />\n    <polygon\n      points=\"50.5572809000084,173.19828709199 38.1966011250105,190.211303259031 23.6818926975065,145.539624084803 37.2913027898181,132.36980465773\"\n      stroke=\"#1E1E1E\"\n      stroke-width=\"4\"\n      fill=\"{}\"\n    />\n  </g>\n</svg>`,\n    list\n  );\n\nexport { drawMegaminxLL };\n","<script>\n  import { drawMegaminxLL } from '../scripts/minx-ll';\n  import * as R from 'ramda';\n  import { createEventDispatcher } from 'svelte';\n\n  import Header from './Header.svelte';\n  import { algGroup, algInfo } from '../scripts/algsinfo';\n\n  const dispatch = createEventDispatcher();\n\n  export let selectedCases;\n  export let value;\n\n  $: colorScheme = R.nth(2, value) || {\n    U: 'Black',\n    R: 'Grey',\n    F: 'Yellow',\n    L: 'Orange',\n    Bl: 'LightBlue',\n    Br: 'Green',\n  };\n\n  const changeMode = event =>\n    dispatch('viewUpdate', {\n      mode: R.path(['detail', 'mode'], event),\n      selectedCases,\n    });\n\n  const getImage = (i, cs) =>\n    drawMegaminxLL(cs, [\n      0,\n      0,\n      4,\n      0,\n      5,\n      0,\n      2,\n      0,\n      0,\n      0,\n      0,\n      1,\n      1,\n      0,\n      3,\n      3,\n      0,\n      4,\n      4,\n      0,\n      1,\n      2,\n      2,\n      3,\n      5,\n      5,\n    ]);\n\n  const selectAllNone = () =>\n    R.equals(0, R.length(selectedCases))\n      ? (selectedCases = R.range(0, R.length(algInfo)))\n      : (selectedCases = []);\n\n  const selectGroup = i =>\n    R.equals(R.difference(selectedCases, algGroup[i].cases), selectedCases)\n      ? (selectedCases = R.concat(\n          R.path([i, 'cases'], algGroup),\n          selectedCases\n        ))\n      : (selectedCases = R.without(\n          R.path([i, 'cases'], algGroup),\n          selectedCases\n        ));\n\n  const select = i =>\n    R.includes(i, selectedCases)\n      ? (selectedCases = R.without([i], selectedCases))\n      : (selectedCases = R.append(i, selectedCases));\n</script>\n\n<style>\n  div {\n    width: 100%;\n    text-align: center;\n  }\n  table {\n    width: 100%;\n    -moz-user-select: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n  td {\n    cursor: pointer;\n    border-radius: 5px;\n    border-spacing: 100px;\n    text-align: center;\n  }\n  svg {\n    display: block;\n    max-height: 100%;\n    margin: auto;\n  }\n  th {\n    cursor: pointer;\n    border: 1px solid black;\n    border-radius: 5px;\n    border-spacing: 100px;\n    text-align: center;\n  }\n  img {\n    width: 70%;\n  }\n  .selected {\n    border: 1px solid black;\n  }\n  .notSelected {\n    border: 1px solid lightgrey;\n  }\n</style>\n\n<Header\n  train={R.length(selectedCases)}\n  selection={false}\n  on:viewUpdate={changeMode}\n  bind:value />\n\n<table>\n  <th colspan=\"8\" on:click={selectAllNone}>\n    All Cases: {R.length(algInfo)}, Selected: {R.length(selectedCases)}\n  </th>\n\n  {#each algGroup as { name, cases }, i}\n    <tr />\n    <th colspan=\"8\" on:click={() => selectGroup(i)}>{name}</th>\n    <tr />\n    {#each cases as index}\n      {#if R.includes(index, [8, 23, 34, 42, 53])}\n        <tr />\n      {/if}\n      <td\n        class={R.includes(index, selectedCases) ? 'selected' : 'notSelected'}\n        on:click={() => select(index)}>\n        {@html getImage(index, colorScheme)}\n        <br />\n         {R.path([index, 'name'], algInfo)}\n      </td>\n    {/each}\n  {/each}\n</table>\n","<script>\n  import * as R from 'ramda';\n  import Train from './Components/Train.svelte';\n  import Selection from './Components/Selection.svelte';\n\n  document.title = 'Megaminx PLL Trainer';\n  let selectedCases = [];\n  const handleView = event => {\n    viewMode = R.path(['detail', 'mode'], event);\n    selectedCases = R.path(['detail', 'selectedCases'], event);\n  };\n\n  let viewMode = 0;\n  const mode = [Selection, Train];\n\n  let value = [\n    50,\n    30,\n    {\n      U: 'Black',\n      R: 'Grey',\n      F: 'Yellow',\n      L: 'Orange',\n      Bl: 'LightBlue',\n      Br: 'Green',\n    },\n  ];\n</script>\n\n<svelte:component\n  this={mode[viewMode]}\n  on:viewUpdate={handleView}\n  {selectedCases}\n  bind:value />\n","import App from './App.svelte';\n\nconst app = new App({\n  target: document.body,\n});\n\nexport default app;\n"],"names":["bind","append","_objectIs","toString","contains","update","dropLast","_dropLast","dropLastWhile","_dropLastWhile","empty","init","insert","_objectAssign","this","dayjs","R.nth","R.path","R.length","R.prepend","R.join","R.without","R.equals","R.map","R.cond","R.always","R.T","R.reduce","R.flip","R.replace","R.includes","R.range","R.difference","R.concat","R.append"],"mappings":"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,CAAC,CAAC,CAAC;IAC5F,GAAG,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;;ICzBH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,gBAAgB,OAAO,CAAC,SAAS,IAAI,CAAC,EAAE,EAAE;IAClD,EAAE,OAAO,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;;ICtBH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,gBAAgB,OAAO,CAAC,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE;IACpD,EAAE,OAAO,WAAW,CAAC,CAAC,CAAC,GAAG,SAAS,KAAK,GAAG;IAC3C,IAAI,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAChE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,CAAC;;ICrCH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,gBAAgB,OAAO,CAAC,SAAS,KAAK,CAAC,EAAE,EAAE;IACpD,EAAE,OAAO,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;;IC5CH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;I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AS,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE;IACxD,EAAE,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;;ICjBY,SAAS,wBAAwB,CAAC,MAAM,EAAE;IACzD,EAAE,OAAO,OAAO,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE;IACrC,IAAI,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,YAAY;IACpE,MAAM,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;IACrD,KAAK,CAAC,CAAC;IACP,GAAG,CAAC,CAAC;IACL;;KAAC,DCND;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,OAAO,gBAAgB,wBAAwB,CAAC,OAAO,CAAC,CAAC;;IC3B7D;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,YAAY,gBAAgB,wBAAwB,eAAe,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;;ICxBtF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,SAAS,gBAAgB,IAAI,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;;ICxBpD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,MAAM,gBAAgB,OAAO,CAAC,SAAS,MAAM,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE;IACnE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ACL,CAAC,CAAC,CAAC;;ICrCH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,OAAO,gBAAgB,OAAO,CAAC,IAAI,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,0CAA0C;;ICrBxG;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,MAAM,gBAAgB,OAAO,CAAC,SAAS,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE;IAClE,EAAE,OAAO,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC;;IC3BH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,MAAM,gBAAgB,OAAO,CAAC,SAAS,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE;IACnE,EAAE,OAAO,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;;ICtBH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,MAAM,gBAAgB,OAAO,CAAC,SAAS,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;IAC/D,EAAE,OAAO,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;;IC7BH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,aAAa,gBAAgB,OAAO,CAAC,SAAS,aAAa,CA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CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,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I,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,iBAAiB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;;;;;;;;;;;;oBC2Gj3M,SAAS;4CADO,SAAS;;sCAJrB,KAAK;oCACL,GAAG;;;;sCAJgB,IAAI;oCAAY,EAAE;kCAK5B;gCACF;;;;;;;;;;;;;;;wBAEX,SAAS;;;;6CADO,SAAS;;;;uCAJrB,KAAK;;;;qCACL,GAAG;;;;;;;;;;;;;;;;;;;;MAlGT,MAAM,QAAQ,GAAG,qBAAqB,EAAE,CAAC;MACzC,MAAM,gBAAgB,GAAG,MAAM,QAAQ,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;;MAExE,MAAW,iBAAK,CAAC;;MAIjB,IAAI,SAAS,CAAC;MACd,IAAI,OAAO,CAAC;MACZ,IAAI,OAAO,GAAG,IAAI,CAAC;MACnB,IAAI,KAAK,GAAG,KAAK,CAAC;MAClB,IAAI,GAAG,GAAG,KAAK,CAAC;MAChB,IAAI,OAAO,GAAG,KAAK,CAAC;MAEpB,IAAI,SAAS,GAAG,OAAO,CAAC;MACxB,IAAI,OAAO,GAAG,KAAK,CAAC;;MAEpB,MAAM,QAAQ,GAAG,CAAC,IAAI;QACpB,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;;QAEvB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;QAC3C,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,IAAI,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;QACrD,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;UAC7B,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;SACb;;QAED,OAAO,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;OACtC,CAAC;;MAEF,MAAM,WAAW,GAAG,0BAAO,SAAS,GAAG,QAAQ,CAACC,SAAK,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,2DAAC,CAAC;;MAE1E,MAAM,UAAU,GAAG,MAAM;QACvB,OAAO,GAAG,IAAI,CAAC;QACf,OAAO,GAAG,WAAW,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;QACvC,SAAS,GAAGA,SAAK,EAAE,CAAC;8BACpB,KAAK,GAAG,MAAK,CAAC;OACf,CAAC;;MAEF,MAAM,SAAS,GAAG,MAAM;QACtB,OAAO,GAAG,KAAK,CAAC;QAChB,OAAO,GAAG,IAAI,CAAC;4BACf,GAAG,GAAG,KAAI,CAAC;QACX,YAAY,CAAC,OAAO,CAAC,CAAC;;kCAEtB,SAAS,GAAG,QAAQ,CAACA,SAAK,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,EAAC,CAAC;QAC9C,gBAAgB,EAAE,CAAC;OACpB,CAAC;;MAEF,MAAM,aAAa,GAAG,MAAM;QAC1B,OAAO,GAAG,KAAK,CAAC;kCAChB,SAAS,GAAG,OAAM,CAAC;8BACnB,KAAK,GAAG,KAAI,CAAC;OACd,CAAC;;MAEF,MAAM,cAAc,GAAG,MAAM;4BAC3B,GAAG,GAAG,MAAK,CAAC;OACb,CAAC;;MAEF,MAAM,IAAI,GAAG,KAAK,IAAI;QACpB,IAAI,CAAC,OAAO,EAAE;UACZ,OAAO;SACR;QACD,IAAI,OAAO,EAAE;UACX,SAAS,EAAE,CAAC;SACb,MAAM,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,EAAE;UACjC,aAAa,EAAE,CAAC;SACjB;QACD,OAAO,GAAG,KAAK,CAAC;OACjB,CAAC;;MAEF,MAAM,EAAE,GAAG,KAAK,IAAI;QAClB,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,EAAE;UAClD,UAAU,EAAE,CAAC;SACd,MAAM;UACL,cAAc,EAAE,CAAC;SAClB;QACD,OAAO,GAAG,IAAI,CAAC;OAChB,CAAC;;;;;;;;;;;;;;;;;;;;;;qDAxEC,SAAS,GAAGC,GAAK,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,GAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICVvC,MAAM,QAAQ,GAAG;IACjB,EAAE;IACF,IAAI,IAAI,EAAE,MAAM;IAChB,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC7D,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,MAAM;IAChB,IAAI,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACvD,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,UAAU;IACpB,IAAI,KAAK,EAAE;IACX,MAAM,EAAE;IACR,MAAM,EAAE;IACR,MAAM,EAAE;IACR,MAAM,EAAE;IACR,MAAM,EAAE;IACR,MAAM,EAAE;IACR,MAAM,EAAE;IACR,MAAM,EAAE;IACR,MAAM,EAAE;IACR,MAAM,EAAE;IACR,MAAM,EAAE;IACR,MAAM,EAAE;IACR,MAAM,EAAE;IACR,MAAM,EAAE;IACR,MAAM,EAAE;IACR,MAAM,EAAE;IACR,MAAM,EAAE;IACR,MAAM,EAAE;IACR,MAAM,EAAE;IACR,KAAK;IACL,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,WAAW;IACrB,IAAI,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACvE,GAAG;IACH,CAAC,CAAC;;IAEF,MAAM,OAAO,GAAG;IAChB,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,yCAAyC;IAChD,IAAI,EAAE,EAAE,sCAAsC;IAC9C,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,yCAAyC;IAChD,IAAI,EAAE,EAAE,oCAAoC;IAC5C,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,oCAAoC;IAC3C,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,mCAAmC;IAC1C,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,IAAI;IACd,IAAI,CAAC,EAAE,6CAA6C;IACpD,IAAI,EAAE,EAAE,kDAAkD;IAC1D,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,IAAI;IACd,IAAI,CAAC,EAAE,oCAAoC;IAC3C,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,IAAI;IACd,IAAI,CAAC,EAAE,qCAAqC;IAC5C,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,IAAI;IACd,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,IAAI;IACd,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,IAAI;IACd,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,IAAI;IACd,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,IAAI;IACd,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,GAAG;IACb,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,GAAG;IACb,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,EAAE;IACF,IAAI,IAAI,EAAE,KAAK;IACf,IAAI,CAAC,EAAE,EAAE;IACT,IAAI,EAAE,EAAE,EAAE;IACV,GAAG;IACH,CAAC,CAAC;;ICpVF;IACA,MAAM,UAAU,GAAG;IACnB,EAAE;IACF,IAAI,6CAA6C;IACjD,IAAI,2CAA2C;IAC/C,IAAI,iDAAiD;IACrD,IAAI,4CAA4C;IAChD,IAAI,wCAAwC;IAC5C,IAAI,4CAA4C;IAChD,IAAI,8CAA8C;IAClD,IAAI,4CAA4C;IAChD,IAAI,kDAAkD;IACtD,IAAI,kDAAkD;IACtD,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,kDAAkD;IACtD,IAAI,kDAAkD;IACtD,IAAI,4CAA4C;IAChD,IAAI,8CAA8C;IAClD,IAAI,kDAAkD;IACtD,IAAI,2CAA2C;IAC/C,IAAI,6CAA6C;IACjD,IAAI,wDAAwD;IAC5D,IAAI,sDAAsD;IAC1D,IAAI,oDAAoD;IACxD,IAAI,oDAAoD;IACxD,IAAI,oDAAoD;IACxD,IAAI,oDAAoD;IACxD,IAAI,kDAAkD;IACtD,IAAI,sDAAsD;IAC1D,IAAI,kDAAkD;IACtD,IAAI,oDAAoD;IACxD,IAAI,kDAAkD;IACtD,IAAI,oDAAoD;IACxD,IAAI,sDAAsD;IAC1D,IAAI,kDAAkD;IACtD,IAAI,oDAAoD;IACxD,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,oDAAoD;IACxD,IAAI,oDAAoD;IACxD,IAAI,oDAAoD;IACxD,IAAI,mDAAmD;IACvD,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,kEAAkE;IACtE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,mDAAmD;IACvD,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,8DAA8D;IAClE,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,gEAAgE;IACpE,IAAI,sDAAsD;IAC1D,IAAI,6DAA6D;IACjE,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,kEAAkE;IACtE,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,kEAAkE;IACtE,GAAG;IACH,EAAE;IACF,IAAI,iDAAiD;IACrD,IAAI,+CAA+C;IACnD,IAAI,6CAA6C;IACjD,IAAI,yCAAyC;IAC7C,IAAI,6CAA6C;IACjD,IAAI,8CAA8C;IAClD,IAAI,8CAA8C;IAClD,IAAI,kDAAkD;IACtD,IAAI,2CAA2C;IAC/C,IAAI,2CAA2C;IAC/C,IAAI,+CAA+C;IACnD,IAAI,+CAA+C;IACnD,IAAI,+CAA+C;IACnD,IAAI,+CAA+C;IACnD,IAAI,+CAA+C;IACnD,IAAI,+CAA+C;IACnD,IAAI,2CAA2C;IAC/C,IAAI,2CAA2C;IAC/C,IAAI,+CAA+C;IACnD,IAAI,iDAAiD;IACrD,IAAI,kDAAkD;IACtD,IAAI,8CAA8C;IAClD,IAAI,8CAA8C;IAClD,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,mDAAmD;IACvD,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,mDAAmD;IACvD,IAAI,uDAAuD;IAC3D,IAAI,mDAAmD;IACvD,IAAI,yDAAyD;IAC7D,IAAI,mDAAmD;IACvD,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,mDAAmD;IACvD,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,sDAAsD;IAC1D,IAAI,0DAA0D;IAC9D,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,sDAAsD;IAC1D,IAAI,4DAA4D;IAChE,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,uDAAuD;IAC3D,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,wDAAwD;IAC5D,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,mEAAmE;IACvE,IAAI,yDAAyD;IAC7D,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,sDAAsD;IAC1D,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,4DAA4D;IAChE,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,iEAAiE;IACrE,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,iEAAiE;IACrE,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,GAAG;IACH,EAAE;IACF,IAAI,6CAA6C;IACjD,IAAI,2CAA2C;IAC/C,IAAI,6CAA6C;IACjD,IAAI,6CAA6C;IACjD,IAAI,2CAA2C;IAC/C,IAAI,6CAA6C;IACjD,IAAI,6CAA6C;IACjD,IAAI,2CAA2C;IAC/C,IAAI,iDAAiD;IACrD,IAAI,+CAA+C;IACnD,IAAI,6CAA6C;IACjD,IAAI,6CAA6C;IACjD,IAAI,+CAA+C;IACnD,IAAI,iDAAiD;IACrD,IAAI,2CAA2C;IAC/C,IAAI,6CAA6C;IACjD,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,kDAAkD;IACtD,IAAI,sDAAsD;IAC1D,IAAI,oDAAoD;IACxD,IAAI,oDAAoD;IACxD,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,iDAAiD;IACrD,IAAI,iDAAiD;IACrD,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,oDAAoD;IACxD,IAAI,oDAAoD;IACxD,IAAI,kDAAkD;IACtD,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,sDAAsD;IAC1D,IAAI,qDAAqD;IACzD,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,qDAAqD;IACzD,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,2DAA2D;IAC/D,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,yDAAyD;IAC7D,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,qDAAqD;IACzD,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,iEAAiE;IACrE,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,GAAG;IACH,EAAE;IACF,IAAI,8CAA8C;IAClD,IAAI,8CAA8C;IAClD,IAAI,gDAAgD;IACpD,IAAI,gDAAgD;IACpD,IAAI,8CAA8C;IAClD,IAAI,8CAA8C;IAClD,IAAI,gDAAgD;IACpD,IAAI,8CAA8C;IAClD,IAAI,oDAAoD;IACxD,IAAI,kDAAkD;IACtD,IAAI,gDAAgD;IACpD,IAAI,gDAAgD;IACpD,IAAI,kDAAkD;IACtD,IAAI,oDAAoD;IACxD,IAAI,8CAA8C;IAClD,IAAI,gDAAgD;IACpD,IAAI,kDAAkD;IACtD,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,kDAAkD;IACtD,IAAI,kDAAkD;IACtD,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,qDAAqD;IACzD,IAAI,yDAAyD;IAC7D,IAAI,kDAAkD;IACtD,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,oDAAoD;IACxD,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,kEAAkE;IACtE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,yDAAyD;IAC7D,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,wDAAwD;IAC5D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,wDAAwD;IAC5D,IAAI,sDAAsD;IAC1D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,GAAG;IACH,EAAE;IACF,IAAI,mDAAmD;IACvD,IAAI,oDAAoD;IACxD,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,uDAAuD;IAC3D,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,mDAAmD;IACvD,IAAI,oDAAoD;IACxD,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,8DAA8D;IAClE,IAAI,qDAAqD;IACzD,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,GAAG;IACH,EAAE;IACF,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,mDAAmD;IACvD,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,mDAAmD;IACvD,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,sDAAsD;IAC1D,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,wDAAwD;IAC5D,IAAI,mDAAmD;IACvD,IAAI,mDAAmD;IACvD,IAAI,sDAAsD;IAC1D,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,sEAAsE;IAC1E,IAAI,sEAAsE;IAC1E,IAAI,uEAAuE;IAC3E,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,6DAA6D;IACjE,GAAG;IACH,EAAE;IACF,IAAI,kDAAkD;IACtD,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,kDAAkD;IACtD,IAAI,kDAAkD;IACtD,IAAI,uDAAuD;IAC3D,IAAI,kDAAkD;IACtD,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,mDAAmD;IACvD,IAAI,oDAAoD;IACxD,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,uDAAuD;IAC3D,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,wDAAwD;IAC5D,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,mDAAmD;IACvD,IAAI,oDAAoD;IACxD,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,mDAAmD;IACvD,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,sDAAsD;IAC1D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,mDAAmD;IACvD,IAAI,wDAAwD;IAC5D,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,mEAAmE;IACvE,IAAI,6DAA6D;IACjE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,mEAAmE;IACvE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,mEAAmE;IACvE,IAAI,6DAA6D;IACjE,GAAG;IACH,EAAE;IACF,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,GAAG;IACH,EAAE;IACF,IAAI,mDAAmD;IACvD,IAAI,mDAAmD;IACvD,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,GAAG;IACH,EAAE;IACF,IAAI,wDAAwD;IAC5D,IAAI,sDAAsD;IAC1D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,uDAAuD;IAC3D,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,sDAAsD;IAC1D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,GAAG;IACH,EAAE;IACF,IAAI,wDAAwD;IAC5D,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,qDAAqD;IACzD,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,4DAA4D;IAChE,IAAI,mDAAmD;IACvD,IAAI,sDAAsD;IAC1D,IAAI,qDAAqD;IACzD,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,mDAAmD;IACvD,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,yDAAyD;IAC7D,IAAI,iEAAiE;IACrE,IAAI,sDAAsD;IAC1D,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,qDAAqD;IACzD,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,wDAAwD;IAC5D,IAAI,mEAAmE;IACvE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,0DAA0D;IAC9D,GAAG;IACH,EAAE;IACF,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,sEAAsE;IAC1E,IAAI,iEAAiE;IACrE,IAAI,qEAAqE;IACzE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,sEAAsE;IAC1E,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,oEAAoE;IACxE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,oEAAoE;IACxE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,sEAAsE;IAC1E,IAAI,iEAAiE;IACrE,IAAI,qEAAqE;IACzE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,sEAAsE;IAC1E,IAAI,6DAA6D;IACjE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,2DAA2D;IAC/D,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,sEAAsE;IAC1E,IAAI,gEAAgE;IACpE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,qEAAqE;IACzE,IAAI,oEAAoE;IACxE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,sEAAsE;IAC1E,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,sEAAsE;IAC1E,IAAI,gEAAgE;IACpE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,qEAAqE;IACzE,IAAI,oEAAoE;IACxE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,sEAAsE;IAC1E,IAAI,6DAA6D;IACjE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,sEAAsE;IAC1E,IAAI,gEAAgE;IACpE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,qEAAqE;IACzE,IAAI,oEAAoE;IACxE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,sEAAsE;IAC1E,IAAI,6DAA6D;IACjE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,0EAA0E;IAC9E,IAAI,iEAAiE;IACrE,IAAI,qEAAqE;IACzE,IAAI,+DAA+D;IACnE,IAAI,oEAAoE;IACxE,IAAI,sEAAsE;IAC1E,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,wEAAwE;IAC5E,IAAI,sEAAsE;IAC1E,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,2EAA2E;IAC/E,IAAI,sEAAsE;IAC1E,IAAI,sEAAsE;IAC1E,IAAI,sEAAsE;IAC1E,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,2EAA2E;IAC/E,IAAI,qEAAqE;IACzE,IAAI,uEAAuE;IAC3E,IAAI,yEAAyE;IAC7E,IAAI,4EAA4E;IAChF,IAAI,6EAA6E;IACjF,IAAI,yEAAyE;IAC7E,IAAI,yEAAyE;IAC7E,IAAI,mEAAmE;IACvE,IAAI,4EAA4E;IAChF,IAAI,0EAA0E;IAC9E,IAAI,qEAAqE;IACzE,IAAI,sEAAsE;IAC1E,IAAI,yEAAyE;IAC7E,IAAI,4EAA4E;IAChF,IAAI,qEAAqE;IACzE,IAAI,2EAA2E;IAC/E,IAAI,6EAA6E;IACjF,IAAI,0EAA0E;IAC9E,IAAI,4EAA4E;IAChF,IAAI,6EAA6E;IACjF,IAAI,6EAA6E;IACjF,IAAI,sEAAsE;IAC1E,IAAI,qEAAqE;IACzE,IAAI,wEAAwE;IAC5E,IAAI,sEAAsE;IAC1E,IAAI,2EAA2E;IAC/E,IAAI,wEAAwE;IAC5E,IAAI,4EAA4E;IAChF,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,4EAA4E;IAChF,IAAI,6EAA6E;IACjF,IAAI,yEAAyE;IAC7E,IAAI,4EAA4E;IAChF,IAAI,sEAAsE;IAC1E,IAAI,2EAA2E;IAC/E,IAAI,4EAA4E;IAChF,IAAI,6EAA6E;IACjF,IAAI,wEAAwE;IAC5E,IAAI,wEAAwE;IAC5E,IAAI,sEAAsE;IAC1E,IAAI,yEAAyE;IAC7E,IAAI,2EAA2E;IAC/E,IAAI,6EAA6E;IACjF,IAAI,6EAA6E;IACjF,IAAI,yEAAyE;IAC7E,IAAI,qEAAqE;IACzE,IAAI,sEAAsE;IAC1E,IAAI,sEAAsE;IAC1E,IAAI,qEAAqE;IACzE,IAAI,mEAAmE;IACvE,IAAI,yEAAyE;IAC7E,IAAI,qEAAqE;IACzE,IAAI,0EAA0E;IAC9E,IAAI,uEAAuE;IAC3E,IAAI,0EAA0E;IAC9E,IAAI,4EAA4E;IAChF,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,qEAAqE;IACzE,IAAI,uEAAuE;IAC3E,GAAG;IACH,EAAE;IACF,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,yDAAyD;IAC7D,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,GAAG;IACH,EAAE;IACF,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,6DAA6D;IACjE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,mEAAmE;IACvE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,+DAA+D;IACnE,IAAI,oEAAoE;IACxE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,oEAAoE;IACxE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,+DAA+D;IACnE,IAAI,oEAAoE;IACxE,IAAI,kEAAkE;IACtE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,oEAAoE;IACxE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,oEAAoE;IACxE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,oEAAoE;IACxE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,+DAA+D;IACnE,IAAI,oEAAoE;IACxE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,oEAAoE;IACxE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,wEAAwE;IAC5E,IAAI,uEAAuE;IAC3E,IAAI,sEAAsE;IAC1E,IAAI,qEAAqE;IACzE,IAAI,sEAAsE;IAC1E,IAAI,sEAAsE;IAC1E,IAAI,yEAAyE;IAC7E,IAAI,kEAAkE;IACtE,IAAI,0EAA0E;IAC9E,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,0EAA0E;IAC9E,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,yEAAyE;IAC7E,IAAI,wEAAwE;IAC5E,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,wEAAwE;IAC5E,IAAI,0EAA0E;IAC9E,IAAI,uEAAuE;IAC3E,IAAI,gEAAgE;IACpE,IAAI,wEAAwE;IAC5E,IAAI,wEAAwE;IAC5E,IAAI,qEAAqE;IACzE,IAAI,mEAAmE;IACvE,IAAI,sEAAsE;IAC1E,IAAI,wEAAwE;IAC5E,IAAI,sEAAsE;IAC1E,IAAI,0EAA0E;IAC9E,IAAI,yEAAyE;IAC7E,IAAI,qEAAqE;IACzE,IAAI,wEAAwE;IAC5E,IAAI,uEAAuE;IAC3E,IAAI,qEAAqE;IACzE,IAAI,0EAA0E;IAC9E,IAAI,wEAAwE;IAC5E,IAAI,yEAAyE;IAC7E,IAAI,0EAA0E;IAC9E,IAAI,0EAA0E;IAC9E,IAAI,6EAA6E;IACjF,IAAI,6EAA6E;IACjF,IAAI,0EAA0E;IAC9E,IAAI,0EAA0E;IAC9E,IAAI,4EAA4E;IAChF,IAAI,0EAA0E;IAC9E,IAAI,6EAA6E;IACjF,IAAI,6EAA6E;IACjF,IAAI,6EAA6E;IACjF,IAAI,6EAA6E;IACjF,IAAI,4EAA4E;IAChF,IAAI,gEAAgE;IACpE,IAAI,yEAAyE;IAC7E,IAAI,wEAAwE;IAC5E,IAAI,qEAAqE;IACzE,IAAI,sEAAsE;IAC1E,IAAI,0EAA0E;IAC9E,IAAI,qEAAqE;IACzE,IAAI,sEAAsE;IAC1E,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,yEAAyE;IAC7E,IAAI,wEAAwE;IAC5E,IAAI,yEAAyE;IAC7E,IAAI,4EAA4E;IAChF,IAAI,0EAA0E;IAC9E,IAAI,0EAA0E;IAC9E,IAAI,6EAA6E;IACjF,IAAI,6EAA6E;IACjF,IAAI,6EAA6E;IACjF,IAAI,wEAAwE;IAC5E,IAAI,wEAAwE;IAC5E,IAAI,2EAA2E;IAC/E,IAAI,oEAAoE;IACxE,IAAI,mEAAmE;IACvE,IAAI,uEAAuE;IAC3E,IAAI,uEAAuE;IAC3E,IAAI,0EAA0E;IAC9E,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,wEAAwE;IAC5E,IAAI,2EAA2E;IAC/E,IAAI,2EAA2E;IAC/E,IAAI,2EAA2E;IAC/E,IAAI,uEAAuE;IAC3E,IAAI,0EAA0E;IAC9E,IAAI,qEAAqE;IACzE,IAAI,2EAA2E;IAC/E,IAAI,0EAA0E;IAC9E,IAAI,iFAAiF;IACrF,IAAI,sEAAsE;IAC1E,IAAI,sEAAsE;IAC1E,IAAI,0EAA0E;IAC9E,IAAI,uEAAuE;IAC3E,IAAI,kEAAkE;IACtE,IAAI,wEAAwE;IAC5E,IAAI,4EAA4E;IAChF,IAAI,+EAA+E;IACnF,IAAI,4EAA4E;IAChF,IAAI,qEAAqE;IACzE,IAAI,wEAAwE;IAC5E,IAAI,qEAAqE;IACzE,IAAI,wEAAwE;IAC5E,IAAI,0EAA0E;IAC9E,IAAI,uEAAuE;IAC3E,IAAI,uEAAuE;IAC3E,IAAI,uEAAuE;IAC3E,IAAI,0EAA0E;IAC9E,IAAI,0EAA0E;IAC9E,IAAI,6EAA6E;IACjF,IAAI,6EAA6E;IACjF,IAAI,6EAA6E;IACjF,IAAI,wEAAwE;IAC5E,IAAI,6EAA6E;IACjF,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,wEAAwE;IAC5E,IAAI,sEAAsE;IAC1E,IAAI,wEAAwE;IAC5E,IAAI,0EAA0E;IAC9E,IAAI,0EAA0E;IAC9E,IAAI,wEAAwE;IAC5E,IAAI,yEAAyE;IAC7E,IAAI,0EAA0E;IAC9E,IAAI,0EAA0E;IAC9E,IAAI,6EAA6E;IACjF,IAAI,6EAA6E;IACjF,IAAI,kEAAkE;IACtE,IAAI,4EAA4E;IAChF,IAAI,6EAA6E;IACjF,IAAI,6EAA6E;IACjF,IAAI,6EAA6E;IACjF,IAAI,6EAA6E;IACjF,IAAI,2EAA2E;IAC/E,IAAI,uEAAuE;IAC3E,IAAI,sEAAsE;IAC1E,IAAI,wEAAwE;IAC5E,IAAI,mEAAmE;IACvE,IAAI,uEAAuE;IAC3E,IAAI,qEAAqE;IACzE,IAAI,wEAAwE;IAC5E,IAAI,yEAAyE;IAC7E,IAAI,4EAA4E;IAChF,IAAI,0EAA0E;IAC9E,IAAI,0EAA0E;IAC9E,IAAI,6EAA6E;IACjF,IAAI,6EAA6E;IACjF,IAAI,6EAA6E;IACjF,IAAI,kEAAkE;IACtE,IAAI,wEAAwE;IAC5E,IAAI,0EAA0E;IAC9E,IAAI,0EAA0E;IAC9E,IAAI,sEAAsE;IAC1E,IAAI,uEAAuE;IAC3E,IAAI,qEAAqE;IACzE,IAAI,mEAAmE;IACvE,IAAI,wEAAwE;IAC5E,IAAI,6EAA6E;IACjF,IAAI,wEAAwE;IAC5E,IAAI,2EAA2E;IAC/E,IAAI,sEAAsE;IAC1E,IAAI,wEAAwE;IAC5E,IAAI,yEAAyE;IAC7E,IAAI,wEAAwE;IAC5E,IAAI,wEAAwE;IAC5E,IAAI,0EAA0E;IAC9E,IAAI,uEAAuE;IAC3E,IAAI,qEAAqE;IACzE,IAAI,wEAAwE;IAC5E,IAAI,uEAAuE;IAC3E,IAAI,0EAA0E;IAC9E,IAAI,iFAAiF;IACrF,IAAI,yEAAyE;IAC7E,IAAI,sEAAsE;IAC1E,IAAI,qEAAqE;IACzE,IAAI,wEAAwE;IAC5E,IAAI,0EAA0E;IAC9E,GAAG;IACH,EAAE;IACF,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,qDAAqD;IACzD,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,6DAA6D;IACjE,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,qDAAqD;IACzD,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,mEAAmE;IACvE,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,mEAAmE;IACvE,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,mEAAmE;IACvE,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,GAAG;IACH,EAAE;IACF,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,0DAA0D;IAC9D,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,gEAAgE;IACpE,IAAI,yDAAyD;IAC7D,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,GAAG;IACH,EAAE;IACF,IAAI,gDAAgD;IACpD,IAAI,gDAAgD;IACpD,IAAI,gDAAgD;IACpD,IAAI,gDAAgD;IACpD,IAAI,iDAAiD;IACrD,IAAI,iDAAiD;IACrD,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,qDAAqD;IACzD,IAAI,2DAA2D;IAC/D,IAAI,qDAAqD;IACzD,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,+DAA+D;IACnE,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,GAAG;IACH,EAAE;IACF,IAAI,mCAAmC;IACvC,IAAI,2CAA2C;IAC/C,IAAI,+CAA+C;IACnD,IAAI,2CAA2C;IAC/C,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,2DAA2D;IAC/D,IAAI,sDAAsD;IAC1D,IAAI,oDAAoD;IACxD,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,2DAA2D;IAC/D,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,oDAAoD;IACxD,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,mDAAmD;IACvD,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,mDAAmD;IACvD,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,wEAAwE;IAC5E,IAAI,uEAAuE;IAC3E,IAAI,0EAA0E;IAC9E,IAAI,gEAAgE;IACpE,IAAI,wDAAwD;IAC5D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,uDAAuD;IAC3D,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,4DAA4D;IAChE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,wDAAwD;IAC5D,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,mEAAmE;IACvE,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,mEAAmE;IACvE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,gEAAgE;IACpE,IAAI,sDAAsD;IAC1D,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,qEAAqE;IACzE,IAAI,sEAAsE;IAC1E,IAAI,uEAAuE;IAC3E,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,mEAAmE;IACvE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,oEAAoE;IACxE,IAAI,gEAAgE;IACpE,IAAI,wEAAwE;IAC5E,IAAI,yEAAyE;IAC7E,IAAI,0EAA0E;IAC9E,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,IAAI,wEAAwE;IAC5E,IAAI,sEAAsE;IAC1E,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,yDAAyD;IAC7D,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,GAAG;IACH,EAAE;IACF,IAAI,0CAA0C;IAC9C,IAAI,0CAA0C;IAC9C,IAAI,0CAA0C;IAC9C,IAAI,wCAAwC;IAC5C,IAAI,+CAA+C;IACnD,IAAI,+CAA+C;IACnD,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,wDAAwD;IAC5D,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,kDAAkD;IACtD,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,wDAAwD;IAC5D,IAAI,sDAAsD;IAC1D,IAAI,4DAA4D;IAChE,IAAI,uDAAuD;IAC3D,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,sDAAsD;IAC1D,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,+DAA+D;IACnE,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,mDAAmD;IACvD,IAAI,mDAAmD;IACvD,IAAI,4DAA4D;IAChE,IAAI,kDAAkD;IACtD,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,wEAAwE;IAC5E,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,sEAAsE;IAC1E,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,iEAAiE;IACrE,IAAI,0DAA0D;IAC9D,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,oEAAoE;IACxE,IAAI,sEAAsE;IAC1E,IAAI,mEAAmE;IACvE,IAAI,wEAAwE;IAC5E,IAAI,mEAAmE;IACvE,IAAI,wEAAwE;IAC5E,IAAI,mEAAmE;IACvE,IAAI,wEAAwE;IAC5E,IAAI,oEAAoE;IACxE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,oEAAoE;IACxE,IAAI,iEAAiE;IACrE,IAAI,sEAAsE;IAC1E,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,sEAAsE;IAC1E,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,wEAAwE;IAC5E,IAAI,oEAAoE;IACxE,IAAI,sEAAsE;IAC1E,IAAI,oEAAoE;IACxE,IAAI,mEAAmE;IACvE,IAAI,sEAAsE;IAC1E,IAAI,sEAAsE;IAC1E,IAAI,oEAAoE;IACxE,IAAI,wDAAwD;IAC5D,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,IAAI,oEAAoE;IACxE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,kEAAkE;IACtE,IAAI,6DAA6D;IACjE,IAAI,wDAAwD;IAC5D,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,oEAAoE;IACxE,IAAI,wEAAwE;IAC5E,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,sEAAsE;IAC1E,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,uEAAuE;IAC3E,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,GAAG;IACH,EAAE;IACF,IAAI,gDAAgD;IACpD,IAAI,gDAAgD;IACpD,IAAI,8CAA8C;IAClD,IAAI,iDAAiD;IACrD,IAAI,8CAA8C;IAClD,IAAI,8CAA8C;IAClD,IAAI,8CAA8C;IAClD,IAAI,iDAAiD;IACrD,IAAI,8CAA8C;IAClD,IAAI,8CAA8C;IAClD,IAAI,mDAAmD;IACvD,IAAI,mDAAmD;IACvD,IAAI,4CAA4C;IAChD,IAAI,8CAA8C;IAClD,IAAI,8CAA8C;IAClD,IAAI,4CAA4C;IAChD,IAAI,4CAA4C;IAChD,IAAI,8CAA8C;IAClD,IAAI,8CAA8C;IAClD,IAAI,4CAA4C;IAChD,IAAI,oDAAoD;IACxD,IAAI,uDAAuD;IAC3D,IAAI,oDAAoD;IACxD,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,mDAAmD;IACvD,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,qDAAqD;IACzD,IAAI,4DAA4D;IAChE,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,mDAAmD;IACvD,GAAG;IACH,EAAE;IACF,IAAI,iDAAiD;IACrD,IAAI,iDAAiD;IACrD,IAAI,+CAA+C;IACnD,IAAI,8CAA8C;IAClD,IAAI,+CAA+C;IACnD,IAAI,8CAA8C;IAClD,IAAI,+CAA+C;IACnD,IAAI,+CAA+C;IACnD,IAAI,+CAA+C;IACnD,IAAI,iDAAiD;IACrD,IAAI,iDAAiD;IACrD,IAAI,+CAA+C;IACnD,IAAI,+CAA+C;IACnD,IAAI,iDAAiD;IACrD,IAAI,iDAAiD;IACrD,IAAI,+CAA+C;IACnD,IAAI,gDAAgD;IACpD,IAAI,gDAAgD;IACpD,IAAI,iDAAiD;IACrD,IAAI,iDAAiD;IACrD,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,oDAAoD;IACxD,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,oDAAoD;IACxD,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,qDAAqD;IACzD,IAAI,2DAA2D;IAC/D,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,GAAG;IACH,EAAE;IACF,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,sDAAsD;IAC1D,IAAI,gDAAgD;IACpD,IAAI,kDAAkD;IACtD,IAAI,gDAAgD;IACpD,IAAI,0DAA0D;IAC9D,IAAI,iDAAiD;IACrD,IAAI,sDAAsD;IAC1D,IAAI,gDAAgD;IACpD,IAAI,gDAAgD;IACpD,IAAI,kDAAkD;IACtD,IAAI,iDAAiD;IACrD,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,8CAA8C;IAClD,IAAI,+CAA+C;IACnD,IAAI,8CAA8C;IAClD,IAAI,+CAA+C;IACnD,IAAI,2DAA2D;IAC/D,IAAI,+DAA+D;IACnE,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,sDAAsD;IAC1D,IAAI,oDAAoD;IACxD,IAAI,6DAA6D;IACjE,IAAI,oDAAoD;IACxD,IAAI,sDAAsD;IAC1D,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,GAAG;IACH,EAAE;IACF,IAAI,gDAAgD;IACpD,IAAI,iDAAiD;IACrD,IAAI,iDAAiD;IACrD,IAAI,qDAAqD;IACzD,IAAI,+CAA+C;IACnD,IAAI,mDAAmD;IACvD,IAAI,+CAA+C;IACnD,IAAI,gDAAgD;IACpD,IAAI,gDAAgD;IACpD,IAAI,oDAAoD;IACxD,IAAI,+CAA+C;IACnD,IAAI,gDAAgD;IACpD,IAAI,mDAAmD;IACvD,IAAI,qDAAqD;IACzD,IAAI,+CAA+C;IACnD,IAAI,iDAAiD;IACrD,IAAI,iDAAiD;IACrD,IAAI,oDAAoD;IACxD,IAAI,gDAAgD;IACpD,IAAI,gDAAgD;IACpD,IAAI,8CAA8C;IAClD,IAAI,iDAAiD;IACrD,IAAI,8CAA8C;IAClD,IAAI,iDAAiD;IACrD,IAAI,mDAAmD;IACvD,IAAI,+CAA+C;IACnD,IAAI,+CAA+C;IACnD,IAAI,mDAAmD;IACvD,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,+DAA+D;IACnE,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,mDAAmD;IACvD,IAAI,sDAAsD;IAC1D,IAAI,qDAAqD;IACzD,IAAI,0DAA0D;IAC9D,GAAG;IACH,EAAE;IACF,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,sDAAsD;IAC1D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,uDAAuD;IAC3D,IAAI,+DAA+D;IACnE,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,kEAAkE;IACtE,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,oEAAoE;IACxE,IAAI,kEAAkE;IACtE,IAAI,sEAAsE;IAC1E,IAAI,oEAAoE;IACxE,IAAI,2DAA2D;IAC/D,IAAI,0EAA0E;IAC9E,IAAI,iEAAiE;IACrE,IAAI,uEAAuE;IAC3E,IAAI,kEAAkE;IACtE,IAAI,2DAA2D;IAC/D,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,sEAAsE;IAC1E,IAAI,yEAAyE;IAC7E,IAAI,yEAAyE;IAC7E,IAAI,sEAAsE;IAC1E,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,yEAAyE;IAC7E,IAAI,kEAAkE;IACtE,IAAI,sEAAsE;IAC1E,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,oEAAoE;IACxE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,2DAA2D;IAC/D,IAAI,uEAAuE;IAC3E,IAAI,yEAAyE;IAC7E,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,uEAAuE;IAC3E,IAAI,qEAAqE;IACzE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,uEAAuE;IAC3E,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,6DAA6D;IACjE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,yDAAyD;IAC7D,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,yDAAyD;IAC7D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,yDAAyD;IAC7D,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,0DAA0D;IAC9D,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,IAAI,oEAAoE;IACxE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,iEAAiE;IACrE,IAAI,wEAAwE;IAC5E,IAAI,yDAAyD;IAC7D,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,wEAAwE;IAC5E,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,GAAG;IACH,EAAE;IACF,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,4DAA4D;IAChE,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,oEAAoE;IACxE,IAAI,uEAAuE;IAC3E,IAAI,0EAA0E;IAC9E,IAAI,uEAAuE;IAC3E,IAAI,6EAA6E;IACjF,IAAI,0EAA0E;IAC9E,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,sEAAsE;IAC1E,IAAI,yEAAyE;IAC7E,IAAI,mEAAmE;IACvE,IAAI,+DAA+D;IACnE,IAAI,yEAAyE;IAC7E,IAAI,4EAA4E;IAChF,IAAI,0DAA0D;IAC9D,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,sEAAsE;IAC1E,IAAI,mEAAmE;IACvE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,wDAAwD;IAC5D,IAAI,oEAAoE;IACxE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,oEAAoE;IACxE,IAAI,sEAAsE;IAC1E,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,uEAAuE;IAC3E,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,uEAAuE;IAC3E,IAAI,mEAAmE;IACvE,IAAI,yEAAyE;IAC7E,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,qEAAqE;IACzE,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,mEAAmE;IACvE,IAAI,6DAA6D;IACjE,IAAI,yEAAyE;IAC7E,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,uEAAuE;IAC3E,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,0EAA0E;IAC9E,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,0EAA0E;IAC9E,IAAI,+DAA+D;IACnE,IAAI,6EAA6E;IACjF,IAAI,4DAA4D;IAChE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,iEAAiE;IACrE,IAAI,uEAAuE;IAC3E,IAAI,0EAA0E;IAC9E,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,oEAAoE;IACxE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,qEAAqE;IACzE,IAAI,sEAAsE;IAC1E,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,0EAA0E;IAC9E,IAAI,6EAA6E;IACjF,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,sEAAsE;IAC1E,IAAI,6DAA6D;IACjE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,sEAAsE;IAC1E,IAAI,uEAAuE;IAC3E,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,GAAG;IACH,EAAE;IACF,IAAI,mDAAmD;IACvD,IAAI,iDAAiD;IACrD,IAAI,oDAAoD;IACxD,IAAI,yDAAyD;IAC7D,IAAI,oDAAoD;IACxD,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,qDAAqD;IACzD,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,oDAAoD;IACxD,IAAI,4DAA4D;IAChE,IAAI,wDAAwD;IAC5D,IAAI,oDAAoD;IACxD,IAAI,uDAAuD;IAC3D,IAAI,oDAAoD;IACxD,IAAI,oDAAoD;IACxD,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,wDAAwD;IAC5D,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,yDAAyD;IAC7D,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,yDAAyD;IAC7D,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,iEAAiE;IACrE,IAAI,0DAA0D;IAC9D,IAAI,kEAAkE;IACtE,IAAI,2DAA2D;IAC/D,IAAI,oDAAoD;IACxD,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,sDAAsD;IAC1D,IAAI,iDAAiD;IACrD,IAAI,4DAA4D;IAChE,IAAI,mDAAmD;IACvD,IAAI,oDAAoD;IACxD,IAAI,oDAAoD;IACxD,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,wDAAwD;IAC5D,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,oDAAoD;IACxD,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,yDAAyD;IAC7D,IAAI,kEAAkE;IACtE,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,kEAAkE;IACtE,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,sEAAsE;IAC1E,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,GAAG;IACH,EAAE;IACF,IAAI,4CAA4C;IAChD,IAAI,kDAAkD;IACtD,IAAI,kDAAkD;IACtD,IAAI,+CAA+C;IACnD,IAAI,kDAAkD;IACtD,IAAI,+CAA+C;IACnD,IAAI,kDAAkD;IACtD,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,wDAAwD;IAC5D,IAAI,+DAA+D;IACnE,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,yDAAyD;IAC7D,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,6DAA6D;IACjE,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,oDAAoD;IACxD,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,iEAAiE;IACrE,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,uDAAuD;IAC3D,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,mDAAmD;IACvD,IAAI,oDAAoD;IACxD,IAAI,oDAAoD;IACxD,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,+DAA+D;IACnE,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,mDAAmD;IACvD,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,iEAAiE;IACrE,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,iEAAiE;IACrE,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,oDAAoD;IACxD,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,oDAAoD;IACxD,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,kEAAkE;IACtE,IAAI,uDAAuD;IAC3D,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,sEAAsE;IAC1E,IAAI,sEAAsE;IAC1E,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,oEAAoE;IACxE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,GAAG;IACH,EAAE;IACF,IAAI,yCAAyC;IAC7C,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,oDAAoD;IACxD,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,oDAAoD;IACxD,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,sDAAsD;IAC1D,IAAI,0DAA0D;IAC9D,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,qDAAqD;IACzD,IAAI,4DAA4D;IAChE,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,8DAA8D;IAClE,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,mDAAmD;IACvD,IAAI,2DAA2D;IAC/D,IAAI,kEAAkE;IACtE,IAAI,mDAAmD;IACvD,IAAI,qDAAqD;IACzD,IAAI,0DAA0D;IAC9D,IAAI,kDAAkD;IACtD,IAAI,8DAA8D;IAClE,IAAI,kDAAkD;IACtD,IAAI,qDAAqD;IACzD,IAAI,yDAAyD;IAC7D,GAAG;IACH,EAAE;IACF,IAAI,uCAAuC;IAC3C,IAAI,uCAAuC;IAC3C,IAAI,qCAAqC;IACzC,IAAI,qCAAqC;IACzC,IAAI,uCAAuC;IAC3C,IAAI,uCAAuC;IAC3C,IAAI,uCAAuC;IAC3C,IAAI,uCAAuC;IAC3C,IAAI,qCAAqC;IACzC,IAAI,qCAAqC;IACzC,IAAI,uCAAuC;IAC3C,IAAI,uCAAuC;IAC3C,IAAI,2CAA2C;IAC/C,IAAI,2CAA2C;IAC/C,IAAI,2CAA2C;IAC/C,IAAI,8CAA8C;IAClD,IAAI,4CAA4C;IAChD,IAAI,8CAA8C;IAClD,IAAI,+CAA+C;IACnD,IAAI,4CAA4C;IAChD,IAAI,4CAA4C;IAChD,IAAI,+CAA+C;IACnD,IAAI,iDAAiD;IACrD,IAAI,6CAA6C;IACjD,IAAI,iDAAiD;IACrD,IAAI,iDAAiD;IACrD,IAAI,iDAAiD;IACrD,IAAI,8CAA8C;IAClD,IAAI,+CAA+C;IACnD,IAAI,oDAAoD;IACxD,IAAI,+CAA+C;IACnD,IAAI,iDAAiD;IACrD,IAAI,mDAAmD;IACvD,IAAI,iDAAiD;IACrD,IAAI,gDAAgD;IACpD,IAAI,kDAAkD;IACtD,IAAI,mDAAmD;IACvD,IAAI,kDAAkD;IACtD,IAAI,iDAAiD;IACrD,IAAI,iDAAiD;IACrD,IAAI,+CAA+C;IACnD,IAAI,gDAAgD;IACpD,IAAI,oDAAoD;IACxD,IAAI,mDAAmD;IACvD,IAAI,mDAAmD;IACvD,IAAI,oDAAoD;IACxD,IAAI,kDAAkD;IACtD,IAAI,gDAAgD;IACpD,IAAI,mDAAmD;IACvD,IAAI,iDAAiD;IACrD,IAAI,iDAAiD;IACrD,IAAI,gDAAgD;IACpD,IAAI,kDAAkD;IACtD,IAAI,mDAAmD;IACvD,IAAI,iDAAiD;IACrD,IAAI,iDAAiD;IACrD,IAAI,+CAA+C;IACnD,IAAI,oDAAoD;IACxD,IAAI,oDAAoD;IACxD,IAAI,gDAAgD;IACpD,IAAI,mDAAmD;IACvD,IAAI,mDAAmD;IACvD,IAAI,kDAAkD;IACtD,IAAI,kDAAkD;IACtD,IAAI,gDAAgD;IACpD,IAAI,mDAAmD;IACvD,IAAI,mDAAmD;IACvD,IAAI,oDAAoD;IACxD,IAAI,mDAAmD;IACvD,IAAI,gDAAgD;IACpD,IAAI,gDAAgD;IACpD,IAAI,oDAAoD;IACxD,IAAI,gDAAgD;IACpD,IAAI,gDAAgD;IACpD,IAAI,oDAAoD;IACxD,IAAI,mDAAmD;IACvD,IAAI,iDAAiD;IACrD,IAAI,iDAAiD;IACrD,IAAI,6CAA6C;IACjD,IAAI,8CAA8C;IAClD,IAAI,iDAAiD;IACrD,IAAI,iDAAiD;IACrD,IAAI,gDAAgD;IACpD,IAAI,gDAAgD;IACpD,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,oDAAoD;IACxD,IAAI,oDAAoD;IACxD,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,kDAAkD;IACtD,IAAI,iDAAiD;IACrD,IAAI,yDAAyD;IAC7D,IAAI,qDAAqD;IACzD,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,kDAAkD;IACtD,IAAI,iDAAiD;IACrD,IAAI,mDAAmD;IACvD,IAAI,mDAAmD;IACvD,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,mDAAmD;IACvD,IAAI,wDAAwD;IAC5D,IAAI,mDAAmD;IACvD,IAAI,wDAAwD;IAC5D,IAAI,6DAA6D;IACjE,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,mDAAmD;IACvD,IAAI,0DAA0D;IAC9D,IAAI,mDAAmD;IACvD,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,mDAAmD;IACvD,IAAI,kDAAkD;IACtD,IAAI,yDAAyD;IAC7D,IAAI,mDAAmD;IACvD,IAAI,kDAAkD;IACtD,IAAI,iDAAiD;IACrD,IAAI,wDAAwD;IAC5D,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,oDAAoD;IACxD,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,oDAAoD;IACxD,IAAI,iDAAiD;IACrD,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,mDAAmD;IACvD,IAAI,oDAAoD;IACxD,IAAI,sDAAsD;IAC1D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,6DAA6D;IACjE,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,oDAAoD;IACxD,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,iDAAiD;IACrD,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,oDAAoD;IACxD,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,iDAAiD;IACrD,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,yDAAyD;IAC7D,IAAI,mDAAmD;IACvD,IAAI,oDAAoD;IACxD,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,GAAG;IACH,EAAE;IACF,IAAI,oCAAoC;IACxC,IAAI,oCAAoC;IACxC,IAAI,sCAAsC;IAC1C,IAAI,sCAAsC;IAC1C,IAAI,sCAAsC;IAC1C,IAAI,sCAAsC;IAC1C,IAAI,oCAAoC;IACxC,IAAI,oCAAoC;IACxC,IAAI,wCAAwC;IAC5C,IAAI,wCAAwC;IAC5C,IAAI,wCAAwC;IAC5C,IAAI,wCAAwC;IAC5C,IAAI,6CAA6C;IACjD,IAAI,6CAA6C;IACjD,IAAI,6CAA6C;IACjD,IAAI,gDAAgD;IACpD,IAAI,8CAA8C;IAClD,IAAI,gDAAgD;IACpD,IAAI,wCAAwC;IAC5C,IAAI,2CAA2C;IAC/C,IAAI,2CAA2C;IAC/C,IAAI,wCAAwC;IAC5C,IAAI,kDAAkD;IACtD,IAAI,kDAAkD;IACtD,IAAI,kDAAkD;IACtD,IAAI,8CAA8C;IAClD,IAAI,kDAAkD;IACtD,IAAI,+CAA+C;IACnD,IAAI,kDAAkD;IACtD,IAAI,kDAAkD;IACtD,IAAI,+CAA+C;IACnD,IAAI,8CAA8C;IAClD,IAAI,kDAAkD;IACtD,IAAI,kDAAkD;IACtD,IAAI,8CAA8C;IAClD,IAAI,mDAAmD;IACvD,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,mDAAmD;IACvD,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,8CAA8C;IAClD,IAAI,iDAAiD;IACrD,IAAI,4CAA4C;IAChD,IAAI,4CAA4C;IAChD,IAAI,+CAA+C;IACnD,IAAI,+CAA+C;IACnD,IAAI,+CAA+C;IACnD,IAAI,4CAA4C;IAChD,IAAI,8CAA8C;IAClD,IAAI,iDAAiD;IACrD,IAAI,mDAAmD;IACvD,IAAI,iDAAiD;IACrD,IAAI,gDAAgD;IACpD,IAAI,kDAAkD;IACtD,IAAI,oDAAoD;IACxD,IAAI,oDAAoD;IACxD,IAAI,+CAA+C;IACnD,IAAI,+CAA+C;IACnD,IAAI,oDAAoD;IACxD,IAAI,kDAAkD;IACtD,IAAI,oDAAoD;IACxD,IAAI,+CAA+C;IACnD,IAAI,+CAA+C;IACnD,IAAI,iDAAiD;IACrD,IAAI,4CAA4C;IAChD,IAAI,8CAA8C;IAClD,IAAI,mDAAmD;IACvD,IAAI,iDAAiD;IACrD,IAAI,gDAAgD;IACpD,IAAI,kDAAkD;IACtD,IAAI,oDAAoD;IACxD,IAAI,+CAA+C;IACnD,IAAI,oDAAoD;IACxD,IAAI,+CAA+C;IACnD,IAAI,+CAA+C;IACnD,IAAI,oDAAoD;IACxD,IAAI,oDAAoD;IACxD,IAAI,kDAAkD;IACtD,IAAI,gDAAgD;IACpD,IAAI,iDAAiD;IACrD,IAAI,gDAAgD;IACpD,IAAI,iDAAiD;IACrD,IAAI,iDAAiD;IACrD,IAAI,oDAAoD;IACxD,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,oDAAoD;IACxD,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,oDAAoD;IACxD,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,oDAAoD;IACxD,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,GAAG;IACH,EAAE;IACF,IAAI,gDAAgD;IACpD,IAAI,gDAAgD;IACpD,IAAI,qDAAqD;IACzD,IAAI,gDAAgD;IACpD,IAAI,kDAAkD;IACtD,IAAI,kDAAkD;IACtD,IAAI,iDAAiD;IACrD,IAAI,yDAAyD;IAC7D,IAAI,mDAAmD;IACvD,IAAI,mDAAmD;IACvD,IAAI,iDAAiD;IACrD,IAAI,sDAAsD;IAC1D,IAAI,oDAAoD;IACxD,IAAI,yDAAyD;IAC7D,IAAI,oDAAoD;IACxD,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,8DAA8D;IAClE,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,qDAAqD;IACzD,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,8DAA8D;IAClE,IAAI,wDAAwD;IAC5D,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,oDAAoD;IACxD,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,GAAG;IACH,EAAE;IACF,IAAI,kDAAkD;IACtD,IAAI,iDAAiD;IACrD,IAAI,+CAA+C;IACnD,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,iDAAiD;IACrD,IAAI,8CAA8C;IAClD,IAAI,gDAAgD;IACpD,IAAI,gDAAgD;IACpD,IAAI,wDAAwD;IAC5D,IAAI,8CAA8C;IAClD,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,sDAAsD;IAC1D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,uDAAuD;IAC3D,IAAI,6DAA6D;IACjE,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,0DAA0D;IAC9D,IAAI,oDAAoD;IACxD,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,qDAAqD;IACzD,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,qDAAqD;IACzD,IAAI,iEAAiE;IACrE,IAAI,uDAAuD;IAC3D,IAAI,gEAAgE;IACpE,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,GAAG;IACH,EAAE;IACF,IAAI,iDAAiD;IACrD,IAAI,kDAAkD;IACtD,IAAI,8CAA8C;IAClD,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,sDAAsD;IAC1D,IAAI,mDAAmD;IACvD,IAAI,gDAAgD;IACpD,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,6CAA6C;IACjD,IAAI,8CAA8C;IAClD,IAAI,+CAA+C;IACnD,IAAI,uDAAuD;IAC3D,IAAI,8CAA8C;IAClD,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,oDAAoD;IACxD,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,qDAAqD;IACzD,IAAI,yDAAyD;IAC7D,IAAI,mDAAmD;IACvD,IAAI,yDAAyD;IAC7D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,sDAAsD;IAC1D,IAAI,6DAA6D;IACjE,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,mDAAmD;IACvD,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,sDAAsD;IAC1D,IAAI,2DAA2D;IAC/D,IAAI,sDAAsD;IAC1D,GAAG;IACH,EAAE;IACF,IAAI,8CAA8C;IAClD,IAAI,oDAAoD;IACxD,IAAI,+CAA+C;IACnD,IAAI,gDAAgD;IACpD,IAAI,kDAAkD;IACtD,IAAI,kDAAkD;IACtD,IAAI,gDAAgD;IACpD,IAAI,uDAAuD;IAC3D,IAAI,iDAAiD;IACrD,IAAI,kDAAkD;IACtD,IAAI,iDAAiD;IACrD,IAAI,wDAAwD;IAC5D,IAAI,sDAAsD;IAC1D,IAAI,oDAAoD;IACxD,IAAI,oDAAoD;IACxD,IAAI,mDAAmD;IACvD,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,mDAAmD;IACvD,IAAI,uDAAuD;IAC3D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,qDAAqD;IACzD,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,oDAAoD;IACxD,IAAI,sDAAsD;IAC1D,IAAI,qDAAqD;IACzD,IAAI,yDAAyD;IAC7D,GAAG;IACH,EAAE;IACF,IAAI,uDAAuD;IAC3D,IAAI,mDAAmD;IACvD,IAAI,uDAAuD;IAC3D,IAAI,mDAAmD;IACvD,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,6DAA6D;IACjE,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,sDAAsD;IAC1D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,8DAA8D;IAClE,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,6DAA6D;IACjE,IAAI,sDAAsD;IAC1D,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,oDAAoD;IACxD,IAAI,qDAAqD;IACzD,IAAI,kDAAkD;IACtD,IAAI,uDAAuD;IAC3D,IAAI,oDAAoD;IACxD,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,8DAA8D;IAClE,IAAI,wDAAwD;IAC5D,IAAI,sDAAsD;IAC1D,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,mEAAmE;IACvE,IAAI,6DAA6D;IACjE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,gEAAgE;IACpE,IAAI,uDAAuD;IAC3D,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,mEAAmE;IACvE,IAAI,oEAAoE;IACxE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,qEAAqE;IACzE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,mEAAmE;IACvE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,qEAAqE;IACzE,IAAI,iEAAiE;IACrE,IAAI,sEAAsE;IAC1E,IAAI,6DAA6D;IACjE,IAAI,oEAAoE;IACxE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,sEAAsE;IAC1E,IAAI,sEAAsE;IAC1E,IAAI,+DAA+D;IACnE,IAAI,sEAAsE;IAC1E,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,oEAAoE;IACxE,IAAI,mEAAmE;IACvE,IAAI,2DAA2D;IAC/D,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,2DAA2D;IAC/D,IAAI,iEAAiE;IACrE,IAAI,wEAAwE;IAC5E,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,2DAA2D;IAC/D,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,2DAA2D;IAC/D,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,oEAAoE;IACxE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,kEAAkE;IACtE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,yDAAyD;IAC7D,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,oDAAoD;IACxD,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,0DAA0D;IAC9D,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,6DAA6D;IACjE,IAAI,oEAAoE;IACxE,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,IAAI,sEAAsE;IAC1E,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,sEAAsE;IAC1E,IAAI,mEAAmE;IACvE,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,qEAAqE;IACzE,IAAI,+DAA+D;IACnE,IAAI,qEAAqE;IACzE,IAAI,sEAAsE;IAC1E,IAAI,mEAAmE;IACvE,IAAI,oEAAoE;IACxE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,mEAAmE;IACvE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,sEAAsE;IAC1E,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,GAAG;IACH,EAAE;IACF,IAAI,mDAAmD;IACvD,IAAI,iDAAiD;IACrD,IAAI,qDAAqD;IACzD,IAAI,mDAAmD;IACvD,IAAI,2DAA2D;IAC/D,IAAI,oDAAoD;IACxD,IAAI,qDAAqD;IACzD,IAAI,mDAAmD;IACvD,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,mDAAmD;IACvD,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,sDAAsD;IAC1D,IAAI,4DAA4D;IAChE,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,qDAAqD;IACzD,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,kDAAkD;IACtD,IAAI,oDAAoD;IACxD,IAAI,+DAA+D;IACnE,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,oDAAoD;IACxD,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,kEAAkE;IACtE,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,0DAA0D;IAC9D,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,sEAAsE;IAC1E,IAAI,0DAA0D;IAC9D,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,gEAAgE;IACpE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,mEAAmE;IACvE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,qEAAqE;IACzE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,oEAAoE;IACxE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,uDAAuD;IAC3D,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,yDAAyD;IAC7D,IAAI,+DAA+D;IACnE,IAAI,2DAA2D;IAC/D,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,yDAAyD;IAC7D,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,mEAAmE;IACvE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,qEAAqE;IACzE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,uDAAuD;IAC3D,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,yDAAyD;IAC7D,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,yDAAyD;IAC7D,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,iEAAiE;IACrE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,+DAA+D;IACnE,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,GAAG;IACH,EAAE;IACF,IAAI,oDAAoD;IACxD,IAAI,kDAAkD;IACtD,IAAI,kDAAkD;IACtD,IAAI,gDAAgD;IACpD,IAAI,sDAAsD;IAC1D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,kDAAkD;IACtD,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,mDAAmD;IACvD,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,iEAAiE;IACrE,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,iEAAiE;IACrE,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,mDAAmD;IACvD,IAAI,mDAAmD;IACvD,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,iDAAiD;IACrD,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,+DAA+D;IACnE,IAAI,wDAAwD;IAC5D,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,kEAAkE;IACtE,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,qEAAqE;IACzE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,sEAAsE;IAC1E,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,qEAAqE;IACzE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,0DAA0D;IAC9D,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,wDAAwD;IAC5D,IAAI,+DAA+D;IACnE,IAAI,0DAA0D;IAC9D,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,0DAA0D;IAC9D,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,sDAAsD;IAC1D,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,oEAAoE;IACxE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,oEAAoE;IACxE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,mEAAmE;IACvE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,0DAA0D;IAC9D,IAAI,oEAAoE;IACxE,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,oEAAoE;IACxE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,oEAAoE;IACxE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,6DAA6D;IACjE,IAAI,kEAAkE;IACtE,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,mEAAmE;IACvE,IAAI,oEAAoE;IACxE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,mEAAmE;IACvE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,GAAG;IACH,EAAE;IACF,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,oDAAoD;IACxD,IAAI,oDAAoD;IACxD,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,sDAAsD;IAC1D,IAAI,6DAA6D;IACjE,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,+DAA+D;IACnE,IAAI,uDAAuD;IAC3D,IAAI,6DAA6D;IACjE,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,uDAAuD;IAC3D,IAAI,mDAAmD;IACvD,IAAI,8DAA8D;IAClE,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,mEAAmE;IACvE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,uEAAuE;IAC3E,IAAI,sEAAsE;IAC1E,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,qEAAqE;IACzE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,wDAAwD;IAC5D,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,0DAA0D;IAC9D,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,wDAAwD;IAC5D,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,oEAAoE;IACxE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,oEAAoE;IACxE,IAAI,0DAA0D;IAC9D,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,uEAAuE;IAC3E,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,iEAAiE;IACrE,IAAI,sEAAsE;IAC1E,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,GAAG;IACH,EAAE;IACF,IAAI,sCAAsC;IAC1C,IAAI,mCAAmC;IACvC,IAAI,4CAA4C;IAChD,IAAI,4CAA4C;IAChD,IAAI,2CAA2C;IAC/C,IAAI,8CAA8C;IAClD,IAAI,2CAA2C;IAC/C,IAAI,2CAA2C;IAC/C,IAAI,2CAA2C;IAC/C,IAAI,2CAA2C;IAC/C,IAAI,4CAA4C;IAChD,IAAI,0CAA0C;IAC9C,IAAI,2CAA2C;IAC/C,IAAI,8CAA8C;IAClD,IAAI,2CAA2C;IAC/C,IAAI,0CAA0C;IAC9C,IAAI,2CAA2C;IAC/C,IAAI,8CAA8C;IAClD,IAAI,6CAA6C;IACjD,IAAI,4CAA4C;IAChD,IAAI,2CAA2C;IAC/C,IAAI,8CAA8C;IAClD,IAAI,0CAA0C;IAC9C,IAAI,2CAA2C;IAC/C,IAAI,4CAA4C;IAChD,IAAI,6CAA6C;IACjD,IAAI,uDAAuD;IAC3D,IAAI,+CAA+C;IACnD,IAAI,kDAAkD;IACtD,IAAI,iDAAiD;IACrD,IAAI,gDAAgD;IACpD,IAAI,8CAA8C;IAClD,IAAI,kDAAkD;IACtD,IAAI,mDAAmD;IACvD,IAAI,oDAAoD;IACxD,IAAI,oDAAoD;IACxD,IAAI,oDAAoD;IACxD,IAAI,mDAAmD;IACvD,IAAI,sDAAsD;IAC1D,IAAI,qDAAqD;IACzD,IAAI,8CAA8C;IAClD,IAAI,uDAAuD;IAC3D,IAAI,mDAAmD;IACvD,IAAI,gDAAgD;IACpD,IAAI,6CAA6C;IACjD,IAAI,+CAA+C;IACnD,IAAI,+CAA+C;IACnD,IAAI,kDAAkD;IACtD,IAAI,qDAAqD;IACzD,IAAI,iDAAiD;IACrD,IAAI,gDAAgD;IACpD,IAAI,8CAA8C;IAClD,IAAI,gDAAgD;IACpD,IAAI,8CAA8C;IAClD,IAAI,gDAAgD;IACpD,IAAI,mDAAmD;IACvD,IAAI,iDAAiD;IACrD,IAAI,oDAAoD;IACxD,IAAI,gDAAgD;IACpD,IAAI,iDAAiD;IACrD,IAAI,kDAAkD;IACtD,IAAI,mDAAmD;IACvD,IAAI,mDAAmD;IACvD,IAAI,kDAAkD;IACtD,IAAI,sDAAsD;IAC1D,IAAI,iDAAiD;IACrD,IAAI,+CAA+C;IACnD,IAAI,iDAAiD;IACrD,IAAI,kDAAkD;IACtD,IAAI,qDAAqD;IACzD,IAAI,iDAAiD;IACrD,IAAI,kDAAkD;IACtD,IAAI,mDAAmD;IACvD,IAAI,oDAAoD;IACxD,IAAI,mDAAmD;IACvD,IAAI,kDAAkD;IACtD,IAAI,8CAA8C;IAClD,IAAI,iDAAiD;IACrD,IAAI,oDAAoD;IACxD,IAAI,iDAAiD;IACrD,IAAI,kDAAkD;IACtD,IAAI,kDAAkD;IACtD,IAAI,iDAAiD;IACrD,IAAI,4CAA4C;IAChD,IAAI,+CAA+C;IACnD,IAAI,mDAAmD;IACvD,IAAI,kDAAkD;IACtD,IAAI,qDAAqD;IACzD,IAAI,oDAAoD;IACxD,IAAI,qDAAqD;IACzD,IAAI,+CAA+C;IACnD,IAAI,8CAA8C;IAClD,IAAI,iDAAiD;IACrD,IAAI,gDAAgD;IACpD,IAAI,8CAA8C;IAClD,IAAI,mDAAmD;IACvD,IAAI,iDAAiD;IACrD,IAAI,oDAAoD;IACxD,IAAI,gDAAgD;IACpD,IAAI,+CAA+C;IACnD,IAAI,gDAAgD;IACpD,IAAI,gDAAgD;IACpD,IAAI,gDAAgD;IACpD,IAAI,iDAAiD;IACrD,IAAI,8CAA8C;IAClD,IAAI,mDAAmD;IACvD,IAAI,iDAAiD;IACrD,IAAI,iDAAiD;IACrD,IAAI,kDAAkD;IACtD,IAAI,mDAAmD;IACvD,IAAI,iDAAiD;IACrD,IAAI,kDAAkD;IACtD,IAAI,qDAAqD;IACzD,IAAI,kDAAkD;IACtD,IAAI,+CAA+C;IACnD,IAAI,oDAAoD;IACxD,IAAI,+CAA+C;IACnD,IAAI,kDAAkD;IACtD,IAAI,kDAAkD;IACtD,IAAI,kDAAkD;IACtD,IAAI,sDAAsD;IAC1D,IAAI,kDAAkD;IACtD,IAAI,mDAAmD;IACvD,IAAI,oDAAoD;IACxD,IAAI,kDAAkD;IACtD,IAAI,mDAAmD;IACvD,IAAI,sDAAsD;IAC1D,IAAI,mDAAmD;IACvD,IAAI,gDAAgD;IACpD,IAAI,qDAAqD;IACzD,IAAI,gDAAgD;IACpD,IAAI,iDAAiD;IACrD,IAAI,kDAAkD;IACtD,IAAI,mDAAmD;IACvD,IAAI,kDAAkD;IACtD,IAAI,qDAAqD;IACzD,IAAI,+CAA+C;IACnD,IAAI,+CAA+C;IACnD,IAAI,sDAAsD;IAC1D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,uDAAuD;IAC3D,GAAG;IACH,EAAE;IACF,IAAI,qCAAqC;IACzC,IAAI,oCAAoC;IACxC,IAAI,+CAA+C;IACnD,IAAI,4CAA4C;IAChD,IAAI,4CAA4C;IAChD,IAAI,6CAA6C;IACjD,IAAI,2CAA2C;IAC/C,IAAI,0CAA0C;IAC9C,IAAI,6CAA6C;IACjD,IAAI,4CAA4C;IAChD,IAAI,0CAA0C;IAC9C,IAAI,2CAA2C;IAC/C,IAAI,4CAA4C;IAChD,IAAI,+CAA+C;IACnD,IAAI,6CAA6C;IACjD,IAAI,6CAA6C;IACjD,IAAI,8CAA8C;IAClD,IAAI,2CAA2C;IAC/C,IAAI,2CAA2C;IAC/C,IAAI,0CAA0C;IAC9C,IAAI,2CAA2C;IAC/C,IAAI,8CAA8C;IAClD,IAAI,0CAA0C;IAC9C,IAAI,6CAA6C;IACjD,IAAI,4CAA4C;IAChD,IAAI,4CAA4C;IAChD,IAAI,qDAAqD;IACzD,IAAI,kDAAkD;IACtD,IAAI,qDAAqD;IACzD,IAAI,kDAAkD;IACtD,IAAI,+CAA+C;IACnD,IAAI,6CAA6C;IACjD,IAAI,mDAAmD;IACvD,IAAI,gDAAgD;IACpD,IAAI,mDAAmD;IACvD,IAAI,uDAAuD;IAC3D,IAAI,iDAAiD;IACrD,IAAI,oDAAoD;IACxD,IAAI,oDAAoD;IACxD,IAAI,sDAAsD;IAC1D,IAAI,mDAAmD;IACvD,IAAI,kDAAkD;IACtD,IAAI,kDAAkD;IACtD,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,8CAA8C;IAClD,IAAI,iDAAiD;IACrD,IAAI,kDAAkD;IACtD,IAAI,mDAAmD;IACvD,IAAI,sDAAsD;IAC1D,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,GAAG;IACH,EAAE;IACF,IAAI,oDAAoD;IACxD,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,qDAAqD;IACzD,IAAI,kDAAkD;IACtD,IAAI,sDAAsD;IAC1D,IAAI,2DAA2D;IAC/D,IAAI,oDAAoD;IACxD,IAAI,oDAAoD;IACxD,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,gDAAgD;IACpD,IAAI,oDAAoD;IACxD,IAAI,+CAA+C;IACnD,IAAI,kDAAkD;IACtD,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,oDAAoD;IACxD,IAAI,gDAAgD;IACpD,IAAI,yDAAyD;IAC7D,IAAI,mDAAmD;IACvD,IAAI,iDAAiD;IACrD,IAAI,qDAAqD;IACzD,IAAI,mDAAmD;IACvD,IAAI,mDAAmD;IACvD,IAAI,kDAAkD;IACtD,IAAI,qDAAqD;IACzD,IAAI,oDAAoD;IACxD,IAAI,sDAAsD;IAC1D,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,gEAAgE;IACpE,IAAI,yDAAyD;IAC7D,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,sDAAsD;IAC1D,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,4DAA4D;IAChE,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,qDAAqD;IACzD,IAAI,4DAA4D;IAChE,IAAI,uDAAuD;IAC3D,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,qDAAqD;IACzD,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,sDAAsD;IAC1D,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,4DAA4D;IAChE,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,oEAAoE;IACxE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,sEAAsE;IAC1E,IAAI,qEAAqE;IACzE,IAAI,sEAAsE;IAC1E,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,sEAAsE;IAC1E,IAAI,sEAAsE;IAC1E,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,oEAAoE;IACxE,IAAI,kEAAkE;IACtE,IAAI,uEAAuE;IAC3E,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,wEAAwE;IAC5E,IAAI,wEAAwE;IAC5E,IAAI,wEAAwE;IAC5E,IAAI,uEAAuE;IAC3E,IAAI,wEAAwE;IAC5E,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,sEAAsE;IAC1E,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,IAAI,oEAAoE;IACxE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,oEAAoE;IACxE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,sEAAsE;IAC1E,IAAI,mEAAmE;IACvE,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,sEAAsE;IAC1E,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,IAAI,uEAAuE;IAC3E,IAAI,yEAAyE;IAC7E,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,qEAAqE;IACzE,IAAI,sEAAsE;IAC1E,IAAI,sEAAsE;IAC1E,IAAI,sEAAsE;IAC1E,IAAI,sEAAsE;IAC1E,IAAI,mEAAmE;IACvE,IAAI,uEAAuE;IAC3E,IAAI,uEAAuE;IAC3E,IAAI,+DAA+D;IACnE,IAAI,wEAAwE;IAC5E,IAAI,wEAAwE;IAC5E,IAAI,uEAAuE;IAC3E,IAAI,yEAAyE;IAC7E,IAAI,mEAAmE;IACvE,IAAI,yEAAyE;IAC7E,IAAI,wEAAwE;IAC5E,IAAI,mEAAmE;IACvE,IAAI,oEAAoE;IACxE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,4DAA4D;IAChE,IAAI,wDAAwD;IAC5D,IAAI,+DAA+D;IACnE,IAAI,wEAAwE;IAC5E,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,oEAAoE;IACxE,IAAI,+DAA+D;IACnE,IAAI,uEAAuE;IAC3E,IAAI,uEAAuE;IAC3E,IAAI,kEAAkE;IACtE,IAAI,0EAA0E;IAC9E,IAAI,wEAAwE;IAC5E,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,sEAAsE;IAC1E,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,yDAAyD;IAC7D,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,oEAAoE;IACxE,IAAI,sEAAsE;IAC1E,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,2DAA2D;IAC/D,IAAI,mEAAmE;IACvE,IAAI,6DAA6D;IACjE,IAAI,uEAAuE;IAC3E,IAAI,8DAA8D;IAClE,IAAI,qEAAqE;IACzE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,uEAAuE;IAC3E,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,kEAAkE;IACtE,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,qDAAqD;IACzD,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,oEAAoE;IACxE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,sEAAsE;IAC1E,IAAI,sEAAsE;IAC1E,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,6DAA6D;IACjE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,uEAAuE;IAC3E,IAAI,sEAAsE;IAC1E,IAAI,6DAA6D;IACjE,IAAI,uEAAuE;IAC3E,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,IAAI,sEAAsE;IAC1E,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,qEAAqE;IACzE,IAAI,sEAAsE;IAC1E,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,uEAAuE;IAC3E,IAAI,iEAAiE;IACrE,IAAI,yEAAyE;IAC7E,IAAI,yEAAyE;IAC7E,IAAI,sEAAsE;IAC1E,IAAI,qEAAqE;IACzE,IAAI,uEAAuE;IAC3E,IAAI,uEAAuE;IAC3E,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,+DAA+D;IACnE,IAAI,oEAAoE;IACxE,IAAI,sEAAsE;IAC1E,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,uEAAuE;IAC3E,IAAI,uEAAuE;IAC3E,IAAI,uEAAuE;IAC3E,IAAI,uEAAuE;IAC3E,IAAI,0EAA0E;IAC9E,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,GAAG;IACH,EAAE;IACF,IAAI,8CAA8C;IAClD,IAAI,mDAAmD;IACvD,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,oDAAoD;IACxD,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,sDAAsD;IAC1D,IAAI,mDAAmD;IACvD,IAAI,4DAA4D;IAChE,IAAI,qDAAqD;IACzD,IAAI,kDAAkD;IACtD,IAAI,oDAAoD;IACxD,IAAI,sDAAsD;IAC1D,IAAI,oDAAoD;IACxD,IAAI,sDAAsD;IAC1D,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,iDAAiD;IACrD,IAAI,wDAAwD;IAC5D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,kDAAkD;IACtD,IAAI,8DAA8D;IAClE,IAAI,yDAAyD;IAC7D,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,4DAA4D;IAChE,IAAI,uDAAuD;IAC3D,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,qEAAqE;IACzE,IAAI,mEAAmE;IACvE,IAAI,6DAA6D;IACjE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,oEAAoE;IACxE,IAAI,+DAA+D;IACnE,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,+DAA+D;IACnE,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,qDAAqD;IACzD,IAAI,6DAA6D;IACjE,IAAI,kDAAkD;IACtD,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,4DAA4D;IAChE,IAAI,sDAAsD;IAC1D,IAAI,qDAAqD;IACzD,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,sDAAsD;IAC1D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,uDAAuD;IAC3D,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,qDAAqD;IACzD,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,mEAAmE;IACvE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,wDAAwD;IAC5D,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,uEAAuE;IAC3E,IAAI,uEAAuE;IAC3E,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,yEAAyE;IAC7E,IAAI,yEAAyE;IAC7E,IAAI,4DAA4D;IAChE,IAAI,sEAAsE;IAC1E,IAAI,yEAAyE;IAC7E,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,sEAAsE;IAC1E,IAAI,oEAAoE;IACxE,IAAI,6DAA6D;IACjE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,uEAAuE;IAC3E,IAAI,sEAAsE;IAC1E,IAAI,sEAAsE;IAC1E,IAAI,sEAAsE;IAC1E,IAAI,sEAAsE;IAC1E,IAAI,yEAAyE;IAC7E,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,oEAAoE;IACxE,IAAI,sEAAsE;IAC1E,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,yDAAyD;IAC7D,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,qEAAqE;IACzE,IAAI,+DAA+D;IACnE,IAAI,oEAAoE;IACxE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,uEAAuE;IAC3E,IAAI,uEAAuE;IAC3E,IAAI,6DAA6D;IACjE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,IAAI,uEAAuE;IAC3E,IAAI,sEAAsE;IAC1E,IAAI,qEAAqE;IACzE,IAAI,sEAAsE;IAC1E,IAAI,uEAAuE;IAC3E,IAAI,uEAAuE;IAC3E,IAAI,oEAAoE;IACxE,IAAI,0EAA0E;IAC9E,IAAI,0EAA0E;IAC9E,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,uEAAuE;IAC3E,IAAI,uEAAuE;IAC3E,IAAI,wEAAwE;IAC5E,IAAI,oEAAoE;IACxE,IAAI,uEAAuE;IAC3E,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,oEAAoE;IACxE,IAAI,mEAAmE;IACvE,IAAI,uEAAuE;IAC3E,IAAI,wEAAwE;IAC5E,IAAI,0EAA0E;IAC9E,IAAI,qEAAqE;IACzE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,oEAAoE;IACxE,IAAI,sEAAsE;IAC1E,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,0DAA0D;IAC9D,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,2DAA2D;IAC/D,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,sEAAsE;IAC1E,IAAI,qEAAqE;IACzE,IAAI,wEAAwE;IAC5E,IAAI,sEAAsE;IAC1E,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,wEAAwE;IAC5E,IAAI,wEAAwE;IAC5E,IAAI,sEAAsE;IAC1E,IAAI,qEAAqE;IACzE,IAAI,wEAAwE;IAC5E,IAAI,yEAAyE;IAC7E,IAAI,qEAAqE;IACzE,IAAI,0EAA0E;IAC9E,IAAI,gEAAgE;IACpE,IAAI,yEAAyE;IAC7E,IAAI,yEAAyE;IAC7E,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,oEAAoE;IACxE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,IAAI,sEAAsE;IAC1E,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,uEAAuE;IAC3E,IAAI,qEAAqE;IACzE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,wDAAwD;IAC5D,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,qEAAqE;IACzE,IAAI,oEAAoE;IACxE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,sEAAsE;IAC1E,IAAI,kEAAkE;IACtE,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,sEAAsE;IAC1E,IAAI,oEAAoE;IACxE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,uEAAuE;IAC3E,IAAI,6DAA6D;IACjE,IAAI,iEAAiE;IACrE,IAAI,qEAAqE;IACzE,IAAI,uEAAuE;IAC3E,IAAI,qEAAqE;IACzE,IAAI,oEAAoE;IACxE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,mEAAmE;IACvE,IAAI,4DAA4D;IAChE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,yDAAyD;IAC7D,IAAI,mEAAmE;IACvE,IAAI,sEAAsE;IAC1E,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,sEAAsE;IAC1E,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,qEAAqE;IACzE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,+DAA+D;IACnE,IAAI,oEAAoE;IACxE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,sEAAsE;IAC1E,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,yEAAyE;IAC7E,IAAI,qEAAqE;IACzE,IAAI,2DAA2D;IAC/D,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,sEAAsE;IAC1E,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,oEAAoE;IACxE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,0DAA0D;IAC9D,IAAI,mEAAmE;IACvE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,mEAAmE;IACvE,IAAI,sEAAsE;IAC1E,IAAI,uEAAuE;IAC3E,IAAI,uEAAuE;IAC3E,IAAI,uEAAuE;IAC3E,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,sEAAsE;IAC1E,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,sEAAsE;IAC1E,IAAI,oEAAoE;IACxE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,0DAA0D;IAC9D,IAAI,mEAAmE;IACvE,IAAI,+DAA+D;IACnE,IAAI,oEAAoE;IACxE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,oEAAoE;IACxE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,mEAAmE;IACvE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,iEAAiE;IACrE,GAAG;IACH,EAAE;IACF,IAAI,oDAAoD;IACxD,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,kDAAkD;IACtD,IAAI,mDAAmD;IACvD,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,sDAAsD;IAC1D,IAAI,6DAA6D;IACjE,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,oDAAoD;IACxD,IAAI,uDAAuD;IAC3D,IAAI,+CAA+C;IACnD,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,kDAAkD;IACtD,IAAI,qDAAqD;IACzD,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,oDAAoD;IACxD,IAAI,qDAAqD;IACzD,IAAI,mDAAmD;IACvD,IAAI,oDAAoD;IACxD,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,sDAAsD;IAC1D,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,iDAAiD;IACrD,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,+DAA+D;IACnE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,kDAAkD;IACtD,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,yDAAyD;IAC7D,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,yDAAyD;IAC7D,IAAI,6DAA6D;IACjE,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,oDAAoD;IACxD,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,oDAAoD;IACxD,IAAI,wDAAwD;IAC5D,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,0DAA0D;IAC9D,IAAI,sDAAsD;IAC1D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,sDAAsD;IAC1D,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,iEAAiE;IACrE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,qEAAqE;IACzE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,oEAAoE;IACxE,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,oEAAoE;IACxE,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,oEAAoE;IACxE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,mEAAmE;IACvE,IAAI,sEAAsE;IAC1E,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,oEAAoE;IACxE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,qEAAqE;IACzE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,sEAAsE;IAC1E,IAAI,sEAAsE;IAC1E,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,uEAAuE;IAC3E,IAAI,qEAAqE;IACzE,IAAI,sEAAsE;IAC1E,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,qEAAqE;IACzE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,sEAAsE;IAC1E,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,yDAAyD;IAC7D,IAAI,kEAAkE;IACtE,IAAI,yDAAyD;IAC7D,IAAI,6DAA6D;IACjE,IAAI,wDAAwD;IAC5D,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,mEAAmE;IACvE,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,oEAAoE;IACxE,IAAI,+DAA+D;IACnE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,qEAAqE;IACzE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,oEAAoE;IACxE,IAAI,sEAAsE;IAC1E,IAAI,sEAAsE;IAC1E,IAAI,yEAAyE;IAC7E,IAAI,uEAAuE;IAC3E,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,uEAAuE;IAC3E,IAAI,uEAAuE;IAC3E,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,oEAAoE;IACxE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,uEAAuE;IAC3E,IAAI,yEAAyE;IAC7E,IAAI,qEAAqE;IACzE,IAAI,sEAAsE;IAC1E,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,oEAAoE;IACxE,IAAI,sEAAsE;IAC1E,IAAI,sEAAsE;IAC1E,IAAI,wEAAwE;IAC5E,IAAI,wEAAwE;IAC5E,IAAI,uEAAuE;IAC3E,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,oEAAoE;IACxE,IAAI,mEAAmE;IACvE,IAAI,sEAAsE;IAC1E,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,wEAAwE;IAC5E,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,sEAAsE;IAC1E,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,wEAAwE;IAC5E,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,mEAAmE;IACvE,IAAI,6DAA6D;IACjE,IAAI,qEAAqE;IACzE,IAAI,wEAAwE;IAC5E,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,uEAAuE;IAC3E,IAAI,uEAAuE;IAC3E,IAAI,wEAAwE;IAC5E,IAAI,uEAAuE;IAC3E,IAAI,uEAAuE;IAC3E,IAAI,uEAAuE;IAC3E,IAAI,qEAAqE;IACzE,IAAI,uEAAuE;IAC3E,IAAI,sEAAsE;IAC1E,IAAI,sEAAsE;IAC1E,IAAI,2EAA2E;IAC/E,IAAI,wEAAwE;IAC5E,IAAI,0EAA0E;IAC9E,IAAI,0EAA0E;IAC9E,IAAI,uEAAuE;IAC3E,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,sEAAsE;IAC1E,IAAI,qEAAqE;IACzE,IAAI,wEAAwE;IAC5E,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,uEAAuE;IAC3E,IAAI,sEAAsE;IAC1E,IAAI,wEAAwE;IAC5E,IAAI,iEAAiE;IACrE,IAAI,2EAA2E;IAC/E,IAAI,wEAAwE;IAC5E,IAAI,wEAAwE;IAC5E,IAAI,mEAAmE;IACvE,IAAI,sEAAsE;IAC1E,IAAI,6DAA6D;IACjE,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,yDAAyD;IAC7D,IAAI,8DAA8D;IAClE,IAAI,qEAAqE;IACzE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,6DAA6D;IACjE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,2DAA2D;IAC/D,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,yDAAyD;IAC7D,IAAI,+DAA+D;IACnE,IAAI,oEAAoE;IACxE,IAAI,sEAAsE;IAC1E,IAAI,0EAA0E;IAC9E,IAAI,wEAAwE;IAC5E,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,0EAA0E;IAC9E,IAAI,wEAAwE;IAC5E,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,0DAA0D;IAC9D,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,mEAAmE;IACvE,IAAI,sEAAsE;IAC1E,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,uEAAuE;IAC3E,IAAI,0EAA0E;IAC9E,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,sEAAsE;IAC1E,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,qEAAqE;IACzE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,kEAAkE;IACtE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,qEAAqE;IACzE,IAAI,wEAAwE;IAC5E,IAAI,+DAA+D;IACnE,IAAI,0DAA0D;IAC9D,IAAI,mEAAmE;IACvE,IAAI,sEAAsE;IAC1E,IAAI,yDAAyD;IAC7D,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,oEAAoE;IACxE,IAAI,gEAAgE;IACpE,IAAI,wEAAwE;IAC5E,IAAI,sEAAsE;IAC1E,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,qEAAqE;IACzE,IAAI,wEAAwE;IAC5E,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,sEAAsE;IAC1E,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,oEAAoE;IACxE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,wEAAwE;IAC5E,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,sEAAsE;IAC1E,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,oEAAoE;IACxE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,uEAAuE;IAC3E,IAAI,wEAAwE;IAC5E,IAAI,uEAAuE;IAC3E,IAAI,0EAA0E;IAC9E,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,wDAAwD;IAC5D,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,wDAAwD;IAC5D,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,wDAAwD;IAC5D,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,wEAAwE;IAC5E,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,mEAAmE;IACvE,IAAI,oEAAoE;IACxE,IAAI,iEAAiE;IACrE,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,kEAAkE;IACtE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,sEAAsE;IAC1E,IAAI,oEAAoE;IACxE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,0DAA0D;IAC9D,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,yDAAyD;IAC7D,IAAI,gEAAgE;IACpE,IAAI,0DAA0D;IAC9D,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,GAAG;IACH,EAAE;IACF,IAAI,+CAA+C;IACnD,IAAI,gDAAgD;IACpD,IAAI,gDAAgD;IACpD,IAAI,iDAAiD;IACrD,IAAI,+CAA+C;IACnD,IAAI,mDAAmD;IACvD,IAAI,oDAAoD;IACxD,IAAI,mDAAmD;IACvD,IAAI,oDAAoD;IACxD,IAAI,iDAAiD;IACrD,IAAI,0DAA0D;IAC9D,IAAI,oDAAoD;IACxD,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,gDAAgD;IACpD,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,mDAAmD;IACvD,IAAI,gDAAgD;IACpD,IAAI,qDAAqD;IACzD,IAAI,mDAAmD;IACvD,IAAI,qDAAqD;IACzD,IAAI,mDAAmD;IACvD,IAAI,iDAAiD;IACrD,IAAI,oDAAoD;IACxD,IAAI,mDAAmD;IACvD,IAAI,mDAAmD;IACvD,IAAI,kDAAkD;IACtD,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,yDAAyD;IAC7D,IAAI,+DAA+D;IACnE,IAAI,uDAAuD;IAC3D,IAAI,8DAA8D;IAClE,IAAI,uDAAuD;IAC3D,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,4DAA4D;IAChE,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,0DAA0D;IAC9D,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,qDAAqD;IACzD,IAAI,oDAAoD;IACxD,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,sDAAsD;IAC1D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,GAAG;IACH,EAAE;IACF,IAAI,6CAA6C;IACjD,IAAI,2CAA2C;IAC/C,IAAI,6CAA6C;IACjD,IAAI,+CAA+C;IACnD,IAAI,0CAA0C;IAC9C,IAAI,+CAA+C;IACnD,IAAI,gDAAgD;IACpD,IAAI,gDAAgD;IACpD,IAAI,iDAAiD;IACrD,IAAI,iDAAiD;IACrD,IAAI,iDAAiD;IACrD,IAAI,iDAAiD;IACrD,IAAI,mDAAmD;IACvD,IAAI,mDAAmD;IACvD,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,oDAAoD;IACxD,IAAI,oDAAoD;IACxD,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,GAAG;IACH,EAAE;IACF,IAAI,iDAAiD;IACrD,IAAI,qDAAqD;IACzD,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,wDAAwD;IAC5D,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,oDAAoD;IACxD,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,0DAA0D;IAC9D,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,mDAAmD;IACvD,IAAI,kDAAkD;IACtD,IAAI,uDAAuD;IAC3D,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,gDAAgD;IACpD,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,gDAAgD;IACpD,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,yDAAyD;IAC7D,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,GAAG;IACH,EAAE;IACF,IAAI,kDAAkD;IACtD,IAAI,gDAAgD;IACpD,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,yDAAyD;IAC7D,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,sDAAsD;IAC1D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,GAAG;IACH,EAAE;IACF,IAAI,gDAAgD;IACpD,IAAI,oDAAoD;IACxD,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,uDAAuD;IAC3D,IAAI,oDAAoD;IACxD,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,sDAAsD;IAC1D,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,4DAA4D;IAChE,IAAI,uDAAuD;IAC3D,IAAI,oDAAoD;IACxD,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,6DAA6D;IACjE,GAAG;IACH,EAAE;IACF,IAAI,6CAA6C;IACjD,IAAI,iDAAiD;IACrD,IAAI,gDAAgD;IACpD,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,0DAA0D;IAC9D,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,+DAA+D;IACnE,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,gDAAgD;IACpD,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,gEAAgE;IACpE,IAAI,mDAAmD;IACvD,IAAI,kDAAkD;IACtD,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,GAAG;IACH,EAAE;IACF,IAAI,iDAAiD;IACrD,IAAI,mDAAmD;IACvD,IAAI,mDAAmD;IACvD,IAAI,oDAAoD;IACxD,IAAI,gDAAgD;IACpD,IAAI,iDAAiD;IACrD,IAAI,gDAAgD;IACpD,IAAI,+CAA+C;IACnD,IAAI,oDAAoD;IACxD,IAAI,kDAAkD;IACtD,IAAI,6CAA6C;IACjD,IAAI,qDAAqD;IACzD,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,sDAAsD;IAC1D,IAAI,6DAA6D;IACjE,IAAI,yDAAyD;IAC7D,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,mDAAmD;IACvD,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,sDAAsD;IAC1D,IAAI,4DAA4D;IAChE,IAAI,uDAAuD;IAC3D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,sDAAsD;IAC1D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,qDAAqD;IACzD,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,oDAAoD;IACxD,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,qDAAqD;IACzD,IAAI,oDAAoD;IACxD,IAAI,6DAA6D;IACjE,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,mDAAmD;IACvD,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,0DAA0D;IAC9D,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,sDAAsD;IAC1D,IAAI,oDAAoD;IACxD,IAAI,wDAAwD;IAC5D,IAAI,oDAAoD;IACxD,IAAI,qDAAqD;IACzD,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,sDAAsD;IAC1D,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,0DAA0D;IAC9D,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,+DAA+D;IACnE,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,uDAAuD;IAC3D,IAAI,oDAAoD;IACxD,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,qEAAqE;IACzE,IAAI,+DAA+D;IACnE,IAAI,sEAAsE;IAC1E,IAAI,wEAAwE;IAC5E,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,sEAAsE;IAC1E,IAAI,sEAAsE;IAC1E,IAAI,oEAAoE;IACxE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,sEAAsE;IAC1E,IAAI,wEAAwE;IAC5E,IAAI,wEAAwE;IAC5E,IAAI,wEAAwE;IAC5E,IAAI,sEAAsE;IAC1E,IAAI,sEAAsE;IAC1E,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,uDAAuD;IAC3D,IAAI,gEAAgE;IACpE,GAAG;IACH,EAAE;IACF,IAAI,sDAAsD;IAC1D,IAAI,iDAAiD;IACrD,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,kDAAkD;IACtD,IAAI,uDAAuD;IAC3D,IAAI,+CAA+C;IACnD,IAAI,kDAAkD;IACtD,IAAI,kDAAkD;IACtD,IAAI,iDAAiD;IACrD,IAAI,8CAA8C;IAClD,IAAI,qDAAqD;IACzD,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,wDAAwD;IAC5D,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,qDAAqD;IACzD,IAAI,6DAA6D;IACjE,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,sDAAsD;IAC1D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,uDAAuD;IAC3D,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,qDAAqD;IACzD,IAAI,iDAAiD;IACrD,IAAI,4DAA4D;IAChE,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,sDAAsD;IAC1D,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,qDAAqD;IACzD,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,sDAAsD;IAC1D,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,4DAA4D;IAChE,IAAI,oDAAoD;IACxD,IAAI,6DAA6D;IACjE,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,+DAA+D;IACnE,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,0DAA0D;IAC9D,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,oDAAoD;IACxD,IAAI,4DAA4D;IAChE,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,kEAAkE;IACtE,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,qDAAqD;IACzD,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,4DAA4D;IAChE,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,kDAAkD;IACtD,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,8DAA8D;IAClE,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,oEAAoE;IACxE,IAAI,wDAAwD;IAC5D,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,0DAA0D;IAC9D,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,uEAAuE;IAC3E,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,wEAAwE;IAC5E,IAAI,wEAAwE;IAC5E,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,2DAA2D;IAC/D,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,GAAG;IACH,EAAE;IACF,IAAI,iDAAiD;IACrD,IAAI,oDAAoD;IACxD,IAAI,sDAAsD;IAC1D,IAAI,kDAAkD;IACtD,IAAI,uDAAuD;IAC3D,IAAI,8CAA8C;IAClD,IAAI,oDAAoD;IACxD,IAAI,gDAAgD;IACpD,IAAI,kDAAkD;IACtD,IAAI,oDAAoD;IACxD,IAAI,+CAA+C;IACnD,IAAI,wDAAwD;IAC5D,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,wDAAwD;IAC5D,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,0DAA0D;IAC9D,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,iEAAiE;IACrE,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,kDAAkD;IACtD,IAAI,2DAA2D;IAC/D,IAAI,sDAAsD;IAC1D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,4DAA4D;IAChE,IAAI,uDAAuD;IAC3D,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,iDAAiD;IACrD,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,6DAA6D;IACjE,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,oDAAoD;IACxD,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,mDAAmD;IACvD,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,wDAAwD;IAC5D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,sDAAsD;IAC1D,IAAI,oDAAoD;IACxD,IAAI,0DAA0D;IAC9D,IAAI,sDAAsD;IAC1D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,0DAA0D;IAC9D,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,sEAAsE;IAC1E,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,uEAAuE;IAC3E,IAAI,qEAAqE;IACzE,IAAI,uEAAuE;IAC3E,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,4DAA4D;IAChE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,oEAAoE;IACxE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,GAAG;IACH,EAAE;IACF,IAAI,iDAAiD;IACrD,IAAI,mDAAmD;IACvD,IAAI,kDAAkD;IACtD,IAAI,oDAAoD;IACxD,IAAI,kDAAkD;IACtD,IAAI,oDAAoD;IACxD,IAAI,6CAA6C;IACjD,IAAI,kDAAkD;IACtD,IAAI,kDAAkD;IACtD,IAAI,8CAA8C;IAClD,IAAI,kDAAkD;IACtD,IAAI,kDAAkD;IACtD,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,mDAAmD;IACvD,IAAI,yDAAyD;IAC7D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,wDAAwD;IAC5D,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,qDAAqD;IACzD,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,wDAAwD;IAC5D,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,sDAAsD;IAC1D,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,yDAAyD;IAC7D,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,mDAAmD;IACvD,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,2DAA2D;IAC/D,IAAI,mDAAmD;IACvD,IAAI,2DAA2D;IAC/D,IAAI,sDAAsD;IAC1D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,0DAA0D;IAC9D,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,mDAAmD;IACvD,IAAI,qDAAqD;IACzD,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,wDAAwD;IAC5D,IAAI,iEAAiE;IACrE,IAAI,qDAAqD;IACzD,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,oDAAoD;IACxD,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,sDAAsD;IAC1D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,oDAAoD;IACxD,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,mDAAmD;IACvD,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,+DAA+D;IACnE,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,sEAAsE;IAC1E,IAAI,sEAAsE;IAC1E,IAAI,qEAAqE;IACzE,IAAI,sEAAsE;IAC1E,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,qEAAqE;IACzE,IAAI,mEAAmE;IACvE,IAAI,+DAA+D;IACnE,IAAI,mEAAmE;IACvE,IAAI,wEAAwE;IAC5E,IAAI,wEAAwE;IAC5E,IAAI,wEAAwE;IAC5E,IAAI,yEAAyE;IAC7E,IAAI,gEAAgE;IACpE,IAAI,sEAAsE;IAC1E,IAAI,8DAA8D;IAClE,IAAI,uDAAuD;IAC3D,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,GAAG;IACH,EAAE;IACF,IAAI,iDAAiD;IACrD,IAAI,kDAAkD;IACtD,IAAI,gDAAgD;IACpD,IAAI,iDAAiD;IACrD,IAAI,+CAA+C;IACnD,IAAI,2CAA2C;IAC/C,IAAI,iDAAiD;IACrD,IAAI,kDAAkD;IACtD,IAAI,8CAA8C;IAClD,IAAI,gDAAgD;IACpD,IAAI,kDAAkD;IACtD,IAAI,iDAAiD;IACrD,IAAI,mDAAmD;IACvD,IAAI,kDAAkD;IACtD,IAAI,iDAAiD;IACrD,IAAI,mDAAmD;IACvD,IAAI,kDAAkD;IACtD,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,2DAA2D;IAC/D,IAAI,kDAAkD;IACtD,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,qDAAqD;IACzD,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,mDAAmD;IACvD,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,GAAG;IACH,EAAE;IACF,IAAI,mDAAmD;IACvD,IAAI,kDAAkD;IACtD,IAAI,+CAA+C;IACnD,IAAI,iDAAiD;IACrD,IAAI,oDAAoD;IACxD,IAAI,iDAAiD;IACrD,IAAI,oDAAoD;IACxD,IAAI,qDAAqD;IACzD,IAAI,iDAAiD;IACrD,IAAI,oDAAoD;IACxD,IAAI,gDAAgD;IACpD,IAAI,qDAAqD;IACzD,IAAI,mDAAmD;IACvD,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,oDAAoD;IACxD,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,sDAAsD;IAC1D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,qDAAqD;IACzD,IAAI,4DAA4D;IAChE,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,oDAAoD;IACxD,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,sDAAsD;IAC1D,IAAI,oDAAoD;IACxD,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,oDAAoD;IACxD,IAAI,oDAAoD;IACxD,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,qDAAqD;IACzD,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,6DAA6D;IACjE,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,qDAAqD;IACzD,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,qDAAqD;IACzD,IAAI,mDAAmD;IACvD,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,sDAAsD;IAC1D,IAAI,oDAAoD;IACxD,IAAI,oDAAoD;IACxD,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,mDAAmD;IACvD,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,oDAAoD;IACxD,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,oDAAoD;IACxD,IAAI,oDAAoD;IACxD,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,oEAAoE;IACxE,IAAI,sEAAsE;IAC1E,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,oEAAoE;IACxE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,sEAAsE;IAC1E,IAAI,oEAAoE;IACxE,IAAI,sEAAsE;IAC1E,IAAI,uEAAuE;IAC3E,IAAI,qEAAqE;IACzE,IAAI,uEAAuE;IAC3E,IAAI,uEAAuE;IAC3E,IAAI,uEAAuE;IAC3E,IAAI,yEAAyE;IAC7E,IAAI,uEAAuE;IAC3E,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,gEAAgE;IACpE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,oEAAoE;IACxE,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,oEAAoE;IACxE,IAAI,sEAAsE;IAC1E,IAAI,qEAAqE;IACzE,IAAI,mEAAmE;IACvE,IAAI,gEAAgE;IACpE,IAAI,gEAAgE;IACpE,IAAI,uEAAuE;IAC3E,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,qEAAqE;IACzE,IAAI,sEAAsE;IAC1E,IAAI,sEAAsE;IAC1E,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,oEAAoE;IACxE,IAAI,kEAAkE;IACtE,IAAI,qEAAqE;IACzE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,gEAAgE;IACpE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,uEAAuE;IAC3E,IAAI,gEAAgE;IACpE,IAAI,+DAA+D;IACnE,IAAI,2DAA2D;IAC/D,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,GAAG;IACH,EAAE;IACF,IAAI,sDAAsD;IAC1D,IAAI,mDAAmD;IACvD,IAAI,gDAAgD;IACpD,IAAI,mDAAmD;IACvD,IAAI,qDAAqD;IACzD,IAAI,oDAAoD;IACxD,IAAI,kDAAkD;IACtD,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,oDAAoD;IACxD,IAAI,qDAAqD;IACzD,IAAI,qDAAqD;IACzD,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,6DAA6D;IACjE,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,kDAAkD;IACtD,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,sDAAsD;IAC1D,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,yDAAyD;IAC7D,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,sDAAsD;IAC1D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,uDAAuD;IAC3D,IAAI,oDAAoD;IACxD,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,mDAAmD;IACvD,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,0DAA0D;IAC9D,IAAI,iEAAiE;IACrE,IAAI,oDAAoD;IACxD,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,mDAAmD;IACvD,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,qDAAqD;IACzD,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,gEAAgE;IACpE,IAAI,4DAA4D;IAChE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,2DAA2D;IAC/D,IAAI,0DAA0D;IAC9D,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,oEAAoE;IACxE,IAAI,qEAAqE;IACzE,IAAI,qEAAqE;IACzE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,4DAA4D;IAChE,IAAI,iEAAiE;IACrE,IAAI,kEAAkE;IACtE,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,kEAAkE;IACtE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,iEAAiE;IACrE,IAAI,mEAAmE;IACvE,IAAI,mEAAmE;IACvE,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,kEAAkE;IACtE,IAAI,8DAA8D;IAClE,IAAI,oEAAoE;IACxE,GAAG;IACH,EAAE;IACF,IAAI,sCAAsC;IAC1C,IAAI,qCAAqC;IACzC,IAAI,0CAA0C;IAC9C,IAAI,2CAA2C;IAC/C,IAAI,0CAA0C;IAC9C,IAAI,2CAA2C;IAC/C,IAAI,yCAAyC;IAC7C,IAAI,2CAA2C;IAC/C,IAAI,6CAA6C;IACjD,IAAI,iCAAiC;IACrC,IAAI,2CAA2C;IAC/C,IAAI,kDAAkD;IACtD,IAAI,gDAAgD;IACpD,IAAI,8CAA8C;IAClD,IAAI,4CAA4C;IAChD,IAAI,2CAA2C;IAC/C,GAAG;IACH,EAAE;IACF,IAAI,oCAAoC;IACxC,IAAI,qCAAqC;IACzC,IAAI,oCAAoC;IACxC,IAAI,qCAAqC;IACzC,IAAI,sCAAsC;IAC1C,IAAI,uCAAuC;IAC3C,IAAI,qCAAqC;IACzC,IAAI,yCAAyC;IAC7C,IAAI,uCAAuC;IAC3C,IAAI,sCAAsC;IAC1C,IAAI,0CAA0C;IAC9C,IAAI,sCAAsC;IAC1C,IAAI,yCAAyC;IAC7C,IAAI,0CAA0C;IAC9C,IAAI,kDAAkD;IACtD,IAAI,mDAAmD;IACvD,GAAG;IACH,EAAE;IACF,IAAI,8CAA8C;IAClD,IAAI,iDAAiD;IACrD,IAAI,gDAAgD;IACpD,IAAI,iDAAiD;IACrD,IAAI,+CAA+C;IACnD,IAAI,kDAAkD;IACtD,IAAI,iDAAiD;IACrD,IAAI,kDAAkD;IACtD,IAAI,4CAA4C;IAChD,IAAI,kDAAkD;IACtD,IAAI,iDAAiD;IACrD,IAAI,kDAAkD;IACtD,IAAI,iDAAiD;IACrD,IAAI,oDAAoD;IACxD,IAAI,mDAAmD;IACvD,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,6CAA6C;IACjD,IAAI,mDAAmD;IACvD,IAAI,iDAAiD;IACrD,IAAI,sDAAsD;IAC1D,IAAI,kDAAkD;IACtD,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,+CAA+C;IACnD,IAAI,iDAAiD;IACrD,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,uDAAuD;IAC3D,IAAI,4DAA4D;IAChE,IAAI,4DAA4D;IAChE,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,oDAAoD;IACxD,IAAI,uDAAuD;IAC3D,IAAI,qDAAqD;IACzD,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,sDAAsD;IAC1D,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,uDAAuD;IAC3D,IAAI,0DAA0D;IAC9D,IAAI,2DAA2D;IAC/D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,wDAAwD;IAC5D,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,wDAAwD;IAC5D,IAAI,6DAA6D;IACjE,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,iEAAiE;IACrE,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,+DAA+D;IACnE,IAAI,6DAA6D;IACjE,IAAI,gEAAgE;IACpE,IAAI,wDAAwD;IAC5D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,yDAAyD;IAC7D,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,yDAAyD;IAC7D,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,+DAA+D;IACnE,IAAI,+DAA+D;IACnE,IAAI,2DAA2D;IAC/D,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,0DAA0D;IAC9D,IAAI,4DAA4D;IAChE,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,uDAAuD;IAC3D,IAAI,iEAAiE;IACrE,IAAI,iEAAiE;IACrE,IAAI,yDAAyD;IAC7D,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,gEAAgE;IACpE,IAAI,qDAAqD;IACzD,GAAG;IACH,EAAE;IACF,IAAI,8CAA8C;IAClD,IAAI,iDAAiD;IACrD,IAAI,gDAAgD;IACpD,IAAI,iDAAiD;IACrD,IAAI,+CAA+C;IACnD,IAAI,kDAAkD;IACtD,IAAI,iDAAiD;IACrD,IAAI,kDAAkD;IACtD,IAAI,4CAA4C;IAChD,IAAI,6CAA6C;IACjD,IAAI,sDAAsD;IAC1D,IAAI,qDAAqD;IACzD,IAAI,oDAAoD;IACxD,IAAI,yDAAyD;IAC7D,IAAI,kDAAkD;IACtD,IAAI,mDAAmD;IACvD,IAAI,kDAAkD;IACtD,IAAI,qDAAqD;IACzD,IAAI,mDAAmD;IACvD,IAAI,6CAA6C;IACjD,IAAI,mDAAmD;IACvD,IAAI,iDAAiD;IACrD,IAAI,+CAA+C;IACnD,IAAI,sDAAsD;IAC1D,IAAI,mDAAmD;IACvD,IAAI,0DAA0D;IAC9D,IAAI,kDAAkD;IACtD,IAAI,uDAAuD;IAC3D,IAAI,sDAAsD;IAC1D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,6DAA6D;IACjE,IAAI,yDAAyD;IAC7D,IAAI,2DAA2D;IAC/D,IAAI,wDAAwD;IAC5D,IAAI,gEAAgE;IACpE,IAAI,2DAA2D;IAC/D,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,gEAAgE;IACpE,IAAI,6DAA6D;IACjE,IAAI,6DAA6D;IACjE,IAAI,8DAA8D;IAClE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,6DAA6D;IACjE,IAAI,4DAA4D;IAChE,IAAI,yDAAyD;IAC7D,IAAI,yDAAyD;IAC7D,IAAI,8DAA8D;IAClE,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,iEAAiE;IACrE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,8DAA8D;IAClE,IAAI,4DAA4D;IAChE,IAAI,2DAA2D;IAC/D,IAAI,+DAA+D;IACnE,IAAI,8DAA8D;IAClE,IAAI,+DAA+D;IACnE,IAAI,4DAA4D;IAChE,IAAI,6DAA6D;IACjE,IAAI,2DAA2D;IAC/D,IAAI,8DAA8D;IAClE,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,uDAAuD;IAC3D,IAAI,wDAAwD;IAC5D,IAAI,yDAAyD;IAC7D,IAAI,0DAA0D;IAC9D,IAAI,yDAAyD;IAC7D,IAAI,wDAAwD;IAC5D,IAAI,wDAAwD;IAC5D,IAAI,0DAA0D;IAC9D,IAAI,gEAAgE;IACpE,IAAI,uDAAuD;IAC3D,GAAG;IACH,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;wBCnmTMC,IAAM,CAAC,KAAC,SAAS,EAAE,MAAM,CAAC,EAAE,OAAO,CAAC;;;;;;;;;;;;;;;6DAApCA,IAAM,CAAC,KAAC,SAAS,EAAE,MAAM,CAAC,EAAE,OAAO,CAAC;;;;;;;;;;;;;;;6BAIjBA,IAAM,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,MAAE,KAAK,CAAC;;;;;;;;;0CADxC,UAAU;;;;;;;;;;;uDACAA,IAAM,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,MAAE,KAAK,CAAC;;;;;;;;;;;;;;;;;yBAKhDA,IAAM,CAAC,CAAC,MAAM,CAAC,MAAE,IAAI,CAAC,0BACtBA,IAAM,CAAC,CAAC,UAAU,CAAC,MAAE,IAAI,CAAC,0BAC1BA,IAAM,CAAC,CAAC,UAAU,CAAC,MAAE,IAAI,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uDAF1BA,IAAM,CAAC,CAAC,MAAM,CAAC,MAAE,IAAI,CAAC;;;;uDACtBA,IAAM,CAAC,CAAC,UAAU,CAAC,MAAE,IAAI,CAAC;;;;uDAC1BA,IAAM,CAAC,CAAC,UAAU,CAAC,MAAE,IAAI,CAAC;;;;;;;;;;;;;;;;;;;;oGAbZC,MAAQ,KAAC,aAAa,CAAC;;;;;;;;;aAZ/B,KAAK;iBAAa,IAAI;;aAAkC,KAAK;+BAAL,KAAK;;;;;kCAAtB,UAAU;;;;;;;;;aAUzD,KAAK;8BAAL,KAAK;;;;;0BAJE;;4BAOP,aAAa;;;;sCAAlB;;;;qBAGGA,MAAQ,KAAC,KAAK,CAAC;;0BAMX,KAAK;;;;oCAAV;;;;;;;;;qBApBsD,QAAQ;;;qBAC5D,QAAQ;;;;;;;;;yCAUZ;;;;;;;;;uCASE;;;;6CApBoC,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;yCAWlD;;;;;;;;;uCASE;;;;;;;;;;mCAtBmE,KAAK;;;;;yBAElB,QAAQ;;;;8CAA1B,YAAY;;;;yBAC9C,QAAQ;;;;;kCAOP,KAAK;;;;2EAEWA,MAAQ,KAAC,aAAa,CAAC;;;;;2BACvC,aAAa;;yCAAlB;;;;;;;;;;;;iCAAA;;;sBAAA,sBAAA;;;WAGGA,MAAQ,KAAC,KAAK,CAAC;;;;;;;;;;;;;;yBAMX,KAAK;;uCAAV;;;;;;;;;;;;+BAAA;;;oBAAA,oBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAnGF,MAAM,QAAQ,GAAG,qBAAqB,EAAE,CAAC;MACzC,MAAM,UAAU,GAAG,KAAK;QACtB,QAAQ,CAAC,YAAY,EAAE;UACrB,IAAI,EAAED,IAAM,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAE,KAAK,CAAC;UACvC,aAAa,EAAE,aAAa,IAAI,EAAE;SACnC,CAAC,CAAC;;MAEE,MAAI,aAAa,EACb,iBAAK,CAAC;;MAIjB,IAAI,WAAW,CAAC;MAChB,IAAI,KAAK,GAAG,EAAE,CAAC;MACf,MAAM,GAAG,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;MACzC,MAAM,UAAU,GAAG,KAAK;QACtBA,IAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;;MAE5D,MAAM,gBAAgB,GAAG,IAAI;QAC3BE,OAAS;UACP;YACE,IAAI;YACJ,QAAQ;YACR,QAAQ;YACR,SAAS,EAAE,WAAW;WACvB;UACD,KAAK;SACN,CAAC;;MAEJ,MAAM,eAAe,GAAG,yBAAM;QAC5BC,IAAM,CAAC,GAAG,EAAE;UACV,UAAU,CAAC,GAAG,CAAC;UACf,UAAU;YACRH,IAAM,CAAC,EAAE,WAAW,GAAG,UAAU,CAAC,aAAa,CAAC,EAAE,EAAE,UAAU,CAAC;WAChE;UACD,UAAU,CAAC,GAAG,CAAC;SAChB,CAAC;QACFA,IAAM,CAAC,CAAC,WAAW,EAAE,MAAM,CAAC,EAAE,OAAO,CAAC;2BACvC,CAAC;;MAEF,MAAM,UAAU,GAAG,MAAM;sCACvB,aAAa,GAAGI,OAAS,CAAC,CAACJ,IAAM,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,aAAa,EAAC,CAAC;QAC5E,IAAIK,MAAQ,CAAC,CAAC,EAAEJ,MAAQ,CAAC,aAAa,CAAC,CAAC,EAAE;UACxC,UAAU,CAAC,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;SACrC,MAAM;UACL,CAAC,QAAQ,EAAE,QAAQ,CAAC,GAAG,eAAe,EAAE,yEAAC;SAC1C;OACF,CAAC;;MAEF,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,GAAG,eAAe,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wDAvC1C,YAAY,GAAGF,GAAK,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,GAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IChB1C,MAAM,cAAc,GAAG,CAAC,WAAW,EAAE,KAAK,KAAK;IAC/C,EAAE,MAAM,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC;IACtC,EAAE,MAAM,YAAY,GAAGO,GAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;;IAE3C,EAAE,OAAO,YAAY,CAAC,YAAY,CAAC,CAAC;IACpC,CAAC,CAAC;;IAEF,MAAM,QAAQ,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;IAC/C,EAAEC,IAAM,CAAC;IACT,IAAI,CAACF,MAAQ,CAAC,CAAC,CAAC,EAAEG,MAAQ,CAAC,CAAC,CAAC,CAAC;IAC9B,IAAI,CAACH,MAAQ,CAAC,CAAC,CAAC,EAAEG,MAAQ,CAAC,CAAC,CAAC,CAAC;IAC9B,IAAI,CAACH,MAAQ,CAAC,CAAC,CAAC,EAAEG,MAAQ,CAAC,KAAK,CAAC,CAAC;IAClC,IAAI,CAACH,MAAQ,CAAC,CAAC,CAAC,EAAEG,MAAQ,CAAC,EAAE,CAAC,CAAC;IAC/B,IAAI,CAACH,MAAQ,CAAC,CAAC,CAAC,EAAEG,MAAQ,CAAC,EAAE,CAAC,CAAC;IAC/B,IAAI,CAACC,CAAG,EAAED,MAAQ,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,CAAC;;IAEL,MAAM,YAAY,GAAG,IAAI;IACzB,EAAEE,MAAQ;IACV,IAAIC,IAAM,CAACC,OAAS,CAAC,IAAI,CAAC,CAAC;IAC3B,IAAI,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAiKC,CAAC;IACP,IAAI,IAAI;IACR,GAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iCC1CW,QAAQ,KAAC,KAAK,MAAE,WAAW,CAAC,oCAEjCZ,IAAM,CAAC,KAAC,KAAK,EAAE,MAAM,CAAC,EAAE,OAAO,CAAC;;qBAR/Ba,QAAU,KAAC,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;;;;;;;;;;;;;;;;;;6CAIlCA,QAAU,KAAC,KAAK,MAAE,aAAa,CAAC,GAAG,UAAU,GAAG,aAAa;;qCAC1D;;;;;;;;;;;;;;;;;;WALPA,QAAU,KAAC,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;;;;;;;;;;;mEAMlC,QAAQ,KAAC,KAAK,MAAE,WAAW,CAAC;;;;;iFAF5BA,QAAU,KAAC,KAAK,MAAE,aAAa,CAAC,GAAG,UAAU,GAAG,aAAa;;;;;;;;;;;;;;;;;;;;qCAPvB,IAAI;;;;;;4BAE9C,KAAK;;;;0CAAV;;;;;;;;;;;;;;2CAAA;;;;;;;;;;qCAFwB;;;;;;;;;;;;2CAExB;;;;;;;;;;2BAAK,KAAK;;6CAAV;;;;;;;;;;;;iCAAA;;;oBAAA,sBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;uDAPUZ,MAAQ,CAAC,OAAO,CAAC,qBAAcA,MAAQ,KAAC,aAAa,CAAC;;;;;;;;;aAP7DA,MAAQ,KAAC,aAAa,CAAC;iBACnB,KAAK;;aAEX,KAAK;+BAAL,KAAK;;;;;kCADK,UAAU;;sBAQlB,QAAQ;;;;oCAAb;;;;;;;;;;;;;;;;uCAAA;;;;;;;;yCAJwB,aAAa;;;;;;;;;;;;;;;;;;uCAIrC;;;;;;;;;sEAVKA,MAAQ,KAAC,aAAa,CAAC;;mCAGzB,KAAK;;;;2EAImCA,MAAQ,KAAC,aAAa,CAAC;;;;;qBAG7D,QAAQ;;uCAAb;;;;;;;;;;;;+BAAA;;;oBAAA,oBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA5HF,MAAM,QAAQ,GAAG,qBAAqB,EAAE,CAAC;;MAElC,MAAI,aAAa,EACb,iBAAK,CAAC;;MAWjB,MAAM,UAAU,GAAG,KAAK;QACtB,QAAQ,CAAC,YAAY,EAAE;UACrB,IAAI,EAAED,IAAM,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAE,KAAK,CAAC;UACvC,aAAa;SACd,CAAC,CAAC;;MAEL,MAAM,QAAQ,GAAG,CAAC,CAAC,EAAE,EAAE;QACrB,cAAc,CAAC,EAAE,EAAE;UACjB,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;UACD,CAAC;SACF,CAAC,CAAC;;MAEL,MAAM,aAAa,GAAG;2BACpBK,MAAQ,CAAC,CAAC,EAAEJ,MAAQ,CAAC,aAAa,CAAC,CAAC;aAC/B,aAAa,GAAGa,KAAO,CAAC,CAAC,EAAEb,MAAQ,CAAC,OAAO,CAAC,CAAC;aAC7C,aAAa,GAAG,EAAE,mEAAC,CAAC;;MAE3B,MAAM,WAAW,GAAG,CAAC;2BACnBI,MAAQ,CAACU,UAAY,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,aAAa,CAAC;aAClE,aAAa,GAAGC,MAAQ;cACvBhB,IAAM,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,EAAE,QAAQ,CAAC;cAC9B,aAAa;aACd;aACA,aAAa,GAAGI,OAAS;cACxBJ,IAAM,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,EAAE,QAAQ,CAAC;cAC9B,aAAa;aACd,mEAAC,CAAC;;MAET,MAAM,MAAM,GAAG,CAAC;2BACda,QAAU,CAAC,CAAC,EAAE,aAAa,CAAC;aACvB,aAAa,GAAGT,OAAS,CAAC,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC;aAC7C,aAAa,GAAGa,QAAQ,CAAC,CAAC,EAAE,aAAa,CAAC,mEAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;uDAhEhD,WAAW,GAAGlB,GAAK,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI;YAClC,CAAC,EAAE,OAAO;YACV,CAAC,EAAE,MAAM;YACT,CAAC,EAAE,QAAQ;YACX,CAAC,EAAE,QAAQ;YACX,EAAE,EAAE,WAAW;YACf,EAAE,EAAE,OAAO;YACZ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4BCUI,IAAI,KAAC,QAAQ,CAAC;;;uDAEnB,aAAa;cACT,KAAK;yCAAL,KAAK;;;;;;;;;;;;4CAFK,UAAU;;;;;;;;;;;;;;;;;;;;;;;;8EACxB,aAAa;;4CACT,KAAK;;;gDAHJ,IAAI,KAAC,QAAQ,CAAC;;;;;;;;;;;;;;;+CACL,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA1BzB,QAAQ,CAAC,KAAK,GAAG,sBAAsB,CAAC;MACxC,IAAI,aAAa,GAAG,EAAE,CAAC;MACvB,MAAM,UAAU,GAAG,KAAK,IAAI;iCAC1B,QAAQ,GAAGC,IAAM,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAE,KAAK,EAAC,CAAC;sCAC7C,aAAa,GAAGA,IAAM,CAAC,CAAC,QAAQ,EAAE,eAAe,CAAC,EAAE,KAAK,EAAC,CAAC;OAC5D,CAAC;;MAEF,IAAI,QAAQ,GAAG,CAAC,CAAC;MACjB,MAAM,IAAI,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;;MAEhC,IAAI,KAAK,GAAG;QACV,EAAE;QACF,EAAE;QACF;UACE,CAAC,EAAE,OAAO;UACV,CAAC,EAAE,MAAM;UACT,CAAC,EAAE,QAAQ;UACX,CAAC,EAAE,QAAQ;UACX,EAAE,EAAE,WAAW;UACf,EAAE,EAAE,OAAO;SACZ;OACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ICxBJ,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC;IACpB,EAAE,MAAM,EAAE,QAAQ,CAAC,IAAI;IACvB,CAAC,CAAC,CAAC;;;;;;;;"}